      
                              
        %s = %s;
        %s = %s[%d];
        %s = asm {
        %s = NULL;
        // No embedded %s
     NO
    {
    }
    },
    asm {
    N/A
    NULL,
    pass 
    YES
   %c%c%c%c
   oDepth
   primID
  ''$$$$$)))))))))**++,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,%%
  PPPj
  t#=
  t_=
  t-=
  tU=
 !"#$%
 !"#$%&'()*+
 !A"#$
 !t:=
 ??? 
 [unused]
 + %d]
 2c2z2
 bt/=
 constant 
 ct$=
 ct~=
 ctw=
 dtp=
 et4=
 etb=
 float
 fti=
 htF=
 K J  #
 line 
 lineadj 
 linear 
 linear centroid 
 linear noperspective 
 linear noperspective centroid 
 linestrip 
 Microsoft Corporation. All rights reserved.
 mixed
 Operating System
 point 
 pointlist 
 PPPj
 PPPP
 Pt!=
 Pt^=
 pt-=
 QPQh
 qt*=
 RPVV
 sint
 snorm
 triangestrip 
 triangle 
 triangleadj 
 tt4=
 ttP=
 u=WWWS
 uint
 undefined 
 unorm
 Windows
 x%i[%i], %d
! !(!!"#")""
!!!!!!""""""
!9D$8
!B$_]
!B0!B$!B(!B,
!NL!NPB;S
!This program cannot be run in DOS mode.
""/1102224455
"000<0S0a0m0
"9X(t
#$%&'()))*++*++,-./0123456789:;<=>?@A
#\$`#\$h#|$p
#\$`#t$t#\$h
#|$l;
#3N3c7s;};
#D$`!T$
#D$`!T$ ;D$P
#D$`!T$8;D$@
#E #U$
#L$0#
#L$0#D$
#L$4#
#L$H#D$
#L$P#D$D
#L$PGX
#M #E$
#pragma def (%s, %s, %g, %g, %g, %g)
#pragma pack_matrix()
#pragma pack_matrix(column_major)
#pragma pack_matrix(row_major)
#pragma ruledisable 0x%08x
#pragma warning (disable:%d)
#pragma warning (error:%d)
#pragma warning (once:%d)
#QQQQW
#t$d;
#t$t#\$`
#u #M$
$$$$&&
$0< u!
$Anonymous
$Globals
$Invalid
$Params
$PPPP
$PPPPP
$PPPPR
$PPPQ
$QQQQ
$QQRQ
$QQWQ
$RRRR
$SS9]
$SSRQP
$SSSS
$SSSSP
$SSSSS
$VVVV
$WWWW
%+7DP\
%cnorm can not be used with type %s
%s %s = 
%s %s[%d] = 
'%s' : macro redefinition
'%s' already has a body
%s array signature parameter %s must be indexed literally.
%s method of object %s does not take these arguments
'%s' must have a max vertex count
'%s' must have a max vertex count greater then 0
%s object does not have method '%s'
%s object does not have methods
%s semantic '%s'
%s semantic '%s' cannot be centroid
%s semantic '%s' has been deprecated; use '%s%d' instead
%s signature parameter %s (1-based Entry %d) has an unrecognized system name. 
%s signature parameter %s (1-based Entry %d) specifies invalid interpolation mode for integer component type. 
%s signature parameter %s (1-based Entry %d) specifies unrecognized or invalid component type. 
%s signature parameter %s (1-based Entry %d) type must be a scalar uint. 
%s signature parameter %s (1-based Entry %d) type must be float32 and mask must be xyzw. 
%s signature parameter %s (1-based Entry %d) type must be float32. 
%s target does not support texture lookups
%s X%u: 
%s%s%u
%s%s%ux%u
%s%ux%u
'%s': %s cannot be declared 'const'
'%s': %s cannot be declared 'extern'
'%s': %s cannot be declared 'inline'
'%s': %s cannot be declared 'shared'
'%s': %s cannot be declared 'static'
'%s': %s cannot be declared 'uniform'
'%s': %s cannot be declared 'uniform out'
'%s': %s cannot be declared 'volatile'
'%s': %s cannot be target specific
'%s': %s cannot have %ss
'%s': %s cannot have annotations
'%s': %s cannot have semantics
'%s': %s must be a literal expression
'%s': %s must be numeric
'%s': ambiguous function call
'%s': array dimension must be between 1 and 65536
'%s': array dimensions must be literal scalar expressions
'%s': array dimensions of %s must be explicit
'%s': array dimensions of type must be explicit
'%s': cannot %sconvert from '%s' to '%s'
'%s': entrypoint not found
%s: ERROR: No valid GeometryShader-PixelShader combination could be found in Technique %s, Pass %s.
%s: ERROR: No valid VertexShader-GeometryShader combination could be found in Technique %s, Pass %s.
%s: ERROR: No valid VertexShader-GeometryShader-PixelShader combination could be found in Technique %s, Pass %s.
%s: ERROR: No valid VertexShader-PixelShader combination could be found in Technique %s, Pass %s (this is an issue because the GeometryShader is always NULL).
'%s': extern %s cannot be declared 'static'
'%s': function does not take %u parameter%s
'%s': function must return a value
'%s': function return value differs from prototype
'%s': function return value missing semantics
'%s': function return value must be numeric
'%s': functions cannot be declared 'extern'
'%s': functions cannot be declared 'uniform'
'%s': Geometry shaders can't return values
'%s': identifier represents a %s, not a %s
'%s': implicit array missing %s
'%s': implicit array type does not match %s
'%s': input parameter '%s' cannot have a geometry specifier
'%s': input parameter '%s' conflicts with geometry specifier of previous input parameters
'%s': input parameter '%s' missing semantics
'%s': input parameter '%s' must have a geometry specifier
'%s': intrinsic function does not take %u parameter%s
'%s': invalid shader target/usage
'%s': loop control variable used outside for-loop scope conflicts with a previous declaration in the outer scope; most recent definition used
'%s': method  does not take %u parameter%s
'%s': missing %s
'%s': missing default value for parameter '%s'
'%s': non-numeric uniform %s cannot have %ss
'%s': Not all control paths return
'%s': output only %s cannot have %ss
'%s': output paramaters cannot be declared 'const'
'%s': output parameter '%s' missing semantics
'%s': output parameter '%s' not completely initialized
'%s': recursive functions not yet implemented
'%s': secondary array dimensions must be explicit
'%s': stream input parameter '%s' can only be used in geometry shaders
'%s': stream input parameter '%s' must be an inout parameter 
'%s': stream output parameter '%s' can only be used in geometry shaders
'%s': stream output parameter '%s' must be an inout parameter 
'%s': undefined variable
'%s': uniform %s cannot be declared 'static'
'%s': void function cannot have a semantic
'%s': void functions cannot return a value
%s: WARNING: There exist invalid GeometryShader-PixelShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen.
%s: WARNING: There exist invalid VertexShader-GeometryShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen.
%s: WARNING: There exist invalid VertexShader-GeometryShader-PixelShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen.
%s: WARNING: There exist invalid VertexShader-PixelShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen (this is an issue because the GeometryShader is always NULL).
%s\%s
%sMS%d
%sstruct{%u}
&^vwx
(%f, %f, %f, %f)
(%u): 
(&?+)-
(({{((
()*+,-./012
()*+,-./012@
()[>,
'()Co
(?.,)
(0x%08x)
(stuvwxyz{
(unknown)
(unnamed)
))),,,.'()
))=:;
)*+,-
)*+,-./
),(])
),=])
),O}C}S}UC<,>}C
)?{))
)20*u}P$OoN&M(
*+,-./
*+,-./012
, dynamicIndexed
, immediateIndexed
, mode_comparison
, mode_default
, mode_mono
,;<=;
,;w(r
,;y(r
,;Z(r
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$sxdata
.rdata$zzzdbg
.rrrr swizzle expected for operand #%d of opcode #%d (counts are 1-based). 
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata$x
//   
// ---------------- ---------- ------- ----------- ---- --------
// ---------------- ----- ------ -------- -------- ------ ------
// %-16s %10s %7s %11s %4u %8u
// %-16s %5u
// %s signature:
// Approximately %i instruction slots used
// Buffer Definitions: 
// cbuffer %s
// Generated by 
// Name                   Type  Format         Dim Slot Elements
// Name             Index   Mask Register SysValue Format   Used
// no %s
// Offset: %4u
// Offset: %4u Size: %5u%s
// Resource Bindings:
// tbuffer %s
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
: :(:0:8:@:P:X:`:h:p:
: :(:8:\:d:l:t:|:
: :X:
: ;(;0;<;D;x;
:":&:*:.:>:q<w<}<
:$:0:8:
:%;b;l;
:&:F:h:
:&:Y:o;
:)(},)[)
:):O:u:
:);9;E;
:*:P:v:
:,;8;@;L;X;`;l;x;
:/:P:x:
:':Y:,;b;
:-:Z:
:;,.(?
:;<=>?
:-;R<q<5=
:^;e;l;w;{;
:<;H;P;\;h;p;|;
:0:<:D:P:\:d:
:0:A:^:t:
:1;A;Q;
:1;d;
:4;@;H;T;`;h;
:4;B;
:5:V:
:6;d;{;
:7:A:K:U:_:w:
:8:D:L:X:d:l:x:
:8;A;P;Y;h;q;|;
:B:e:
:B:u:
:b:v:
:E;n;L<
:H;-=
:J;s;
:W:a:w:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;(;4;@;H;
; ;,;8;@;L;X;`;l;x;
; ;';.;5;<;n;
; ;@;`;
; <,<4<@<L<T<`<l<t<
;!;%;);-;1;5;9;=;A;E;I;M;Q;U;Y;];a;e;
;!;-;L;n;u;
;!<4<]<p<
;";B;];};
;#;';+;/;3;7;;;?;C;G;K;
;$;0;8;D;P;X;d;p;x;
;$;V=u=
;&<0<=<P<`<
;()<),[,{
;(;0;<;H;P;\;h;p;
;(;0;<;H;P;\;h;p;|;
;,;:;B;O;Y;a;o;
;,;8;@;L;X;`;l;x;
;/;>;F;Q;Y;v;
;/<L<X<r<
;:;`;
;:;<=;
;\$$r
;\$0r
;\;a;u;z;
;_<i<
;|$(u
;|$,r
;|$Pr
;|$Pw
;-<<<K<
;<=>?
;0<c<
;3;~;
;3;c;
;3;Y;
;4;t;
;4;Z;
;6;G;y;
;8;H;i;s;};
;8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
;A;t;
;A\u]
;A<e<
;a<k<K=W?
;A>C[>C
;A4u(
;B\tJ
;B4tO
;C<uQ
;CDut
;D$ r
;D$ w
;D$,w
;D$@u
;D$Pu
;D$PuH
;D18t;
;E,r<
;e<u<
;F<s$
;FLr.
;FLv8;NPw
;G [t
;G r.
;G sU
;k;~;
;k<7=W>w?
;K<P<
;L$ r
;L$(r
;L$`uQ;D$duK;
;M;w;
;O<r#h
;P@wH
;P\u7
;Q4r#
;T$,r
;t$8w
;t$Hw
;T;v;
;w(s2
;W<r#h
;Y@vU
;z<\=
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?(?
? ?(?0?8?@?H?P?X?`?p?x?
? ?(?x?
? ?4?@?T?`?t?
? ?p?
?"?G?[?u?
?&?l?
?(?0?5?;?F?N?W?]?h?p?y?
?)?I?d?
?.?Q?
?/?U?{?
??(\\
????-
??1type_info@@UAE@XZ
?'?9???V?Z?^?b?f?j?n?r?v?z?~?
?'?K?g?
?-?S?y?
?=?p?
?0o0v2
?0u]S3
?1?D?W?
?2?@?n?
?A?v?
?DXBC
?I?s?
?L?m?
?terminate@@YAXXZ
?U?c?r?
?Y?k?
@ t.=
@!t =
@!t.=
@#t.=
@$9C$
@$t?=
@, t{
@,;A,u&j
@.reloc
@.rsrc
@;D$Pv
@@;B@
@@;C@u,
@@;F@
@@;F@u
@@;G@u
@_^[]
@4;B4u
@9A0t
@9G s
@bt>=
@ft4=
@ftw=
@Pt/=
@Pt]=
@PtL=
@t(Qjvj
@TA;O
@tt&=
@wEt9
[)*+,-
[0_0c0g0k0o0s0w0{0
[SSVj
[t,h0x
[u"8]
\$ ;w
\$(9\$$
\$,Zt
\$\t'
\$\t-
\$\tD
\$`#\$h
\$`VS
\$<SW
\$0;L$H
\$4;T$$r
\$49\$P
\$8F;s
\$X#\$`
\$X9\$4t&
]^:;<=>?
]1U6\6
^:;<=>?
^;W(r
^^[\^
^bc=<d>
_%d_%d.
_(udB
_^[Y]
__CxxFrameHandler3
__FILE__
__LINE__
_amsg_exit
_buffer
_callnewh
_centroid
_CIacos
_CIasin
_CIatan
_CIatan2
_CIcos
_CIcosh
_CIexp
_CIfmod
_CIlog
_CIpow
_CIsin
_CIsinh
_CIsqrt
_CItan
_CItanh
_clearfp
_controlfp
_CxxThrowException
_except_handler4_common
_finite
_fpclass
_ftol2
_ftol2_sse
_initterm
_isnan
_j Zj
_j@Zj
_O(%i,%i,%i)
_purecall
_rcpfloat 
_strdup
_stricmp
_strnicmp
_texture1d
_texture1darray
_texture2d
_texture2darray
_texture2dms
_texture2dmsarray
_texture3d
_texturecube
_uint 
_vsnprintf
_WPPP
_XcptFilter
` RRRRPQ
` t:=
` t'=
` tB=
`!t&=
`!tB=
`#tB=
`$tkB;
`.data
`<`u$
`duwj
`ft&=
`fto=
`ftp=
`iuzj
`Pu?3
`SetPixelShader
`st,=
`UUe?
{)<A,
{@;y@r
{05YYu
|$ )T$ 
|$ ;J
|$ vU
|$0C;\$$
|$4;_
|$H;{
|$H9{
}O'()
+)-))
+)-+,-
+pdj8Y
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<"=
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <,<4<
< <,<4<@<L<T<`<l<t<
< <@<`<t<
< <@<H<P<X<`<p<
< <{<
<!<2<F<K<R<Y<`<g<n<u<|<
<"<.<4<:<H<U<_<q<
<"=L=~=
<#<)</<5<;<A<G<
<#<.<3<J<\<b<j<p<}<
<#<'<+</<3<7<;<?<C<G<K<O<S<W<[<
<#<'<+</<3<7<;<?<C<G<K<O<S<W<[<_<o<
<#=x=
<$<,<8<D<L<
<$<0<<<D<P<\<d<
<$<0<<<D<P<\<d<p<|<
<(<4<<<H<T<\<
<(<4<<<H<T<\<h<t<|<
<(>/+
<(ui9
<)=d=
<*<2<7<=<H<P<U<[<f<n<s<y<
<,=^=
</?X?
</<3=
</<Q<X<
</=b=
</font>
</pre>
<:<]<
<:<`<
<@<s<
<_tJ<`
<+<0<S<X<w<~<
<'<8<?<N<
<=>HIJK
<><d<
<1=Z=i=
<2<C<`<q<
<3<S<n<
<9=2>
<9=B=X=a=
<b~&<gt"<rt
<body bgcolor="#000000">
<c<q<
<E=Q=
<etZ<i
<font color = "#%s">
<H=M=c=
<iuFh@
<j<w=
<L<P<T<X<\<`<d<h<l<W=*>c>
<M=V=
<P?^?
<pre>
<unknown>
<X=w=
<Z=i=
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=,=0=8=<=D=H=P=T=\=`=h=l=t=x=
= =(=
= =,=8=@=
= =-=4=?=L=S=^=
= =4=@=T=`=t=
= >p>
=!>I>l>
="><>
=#=/=6=>=D=R=[=g=l=t=
=#>I>o>
=$=0=8=
=$=0=8=D=P=X=
=$=7=J=]=p=
=%=*=0=<=D=I=O=Z=b=g=m=x=
=%>f>
=(=0=
=(=0=<=H=P=
=(=0=5===E=L=T=Y=a=h=p=u=}=
=)=3===G=Q=[=e=o=y=
=)=Q=\=f=
=*=P=~=
=.=X=b=
=.>a>
=;=K=_=~=
=?=r=
=@=G=[=
=`=h=x=
=`=z=
='=2=
='=4=
=-=V=
=0>I>p>w>
=1>P>a>
=2=l=s=
=2>e>r>
=4>V>
=9=W=|=
=9>M>
=D=j=
=ISGNu
=K=j=
=OSGNu&;{8v<
=P>9?
=r>v>z>~>
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
> >(>0>8>@>H>P>X>`>h>p>x>
> >,>4>
> >,>4>@>L>T>`>l>t>
> >,>6><>C>O>U>a>r>x>
> >@>`>t>
>">.>6>;>A>M>U>Z>`>l>t>y>
>#>->
>$>0><>D>
>$>4>G>R>Y>b>j>x>
>$>4>Z>d>n>{>
>%?s?
>&?;?V?c?
>(>4><>
>(>4><>H>T>\>h>t>|>
>(>O>
>.>Q>
>/?j?
>/>J>e>
>/>Z>z>
>?:)<
>?:)<)>?:<<;>?:
>?:)<:>?:)<
>??M?
>-?`?
>?>v>
>?ua??
>@?Y?
>`>P?
>+>s>
>>?b?
>>>>>:;
>>>>>>>>>>>>
>>>q>
>3?o?
>3>8>?>F>M>T>[>b>i>p>w>~>
>3>w>
>6?~?
>6>_>
>B?H?N?Z?u?
>B>Q>z>
>D>U>g>m>v>|>
>DXBC
>E>W>k>
>hta>?
>K?^?s?
>O?v?
>T?X?\?`?d?h?l?p?t?x?|?
>Y[YSYg
0 0$0(0,000@0
0 0$0(0,0004080`0d0t0x0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0l0
0 0$0(080v0
0 0@0`0
0 040@0T0`0
0 1A1O1u1
0 1p1
0 PPPj
0!0(020:0C0I0T0\0e0k0v0~0
0!0)0
0!tC=
0!tP=
0"0]0
0#tJ=
0#u}jW
0$000<0D0
0$080Y0k0
0$t&=
0$tk=
0%1E1e1
0(020q0
0(040<0
0(0X081D1!2
0(1H1T1\1h1t1|1
0)2p2
0*0I0t0z0
'0:0M0]0
0:0Q0t0
0;0]0
0@1`1l1t1
0\0|0
0\1B2
0`1l1t1
0}1g3
0+0K0k0
0+1^1
0<0o0
0>1R1
001P1\1d1p1|1
00ffff
0'1?1\1
040904B0
050W0
061P1
070]0
081X1d1l1x1
092N2
0b0h0n0y0
0btZ=
0C0y0
0ctp=
0ctw=
0dt[=
0dti=
0dtL=
0E1[1
0et[=
0et-=
0eu6j
0ft&=
0ft*=
0ft;=
0ftM=
0gt =
0gt$=
0H1h1t1|1
0h1t1|1
0L0l0x0
0L1_1s1
0P0n0x0
0P1\1d1p1|1
0p1|1
0Pt;=
0R0+3U3
0T0t0
0tt-=
0x%08x
0X1d1l1x1
1 / resinfo with float parameters to rcpfloat modifier match
1 / sqrt(x) -> rsq(x)
1 / x -> rcp(x)
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1@1`1
1 1@1T1`1
1 1A1H1O1V1
1!1%1)1-1
1!1'171H1
1#1(1.1:1B1G1M1X1`1i1o1{1
1#1'1+1/13171;1?1C1G1]2
1$2<2
1$2D2P2X2
1$2F2l2
1(1,1<1@1P1T1d1h1x1|1
1)101
1)1F1c1
1*2]2
1*9L9
1,1:1K1e1l1s1z1
1,2L2X2`2l2x2
1/1h1!2Z2~2
1;1n1
1;2i2
1@1c1
1@1f1
1@2[2
1\2h2p2|2
1~2C4V4f4
1<2H2P2\2h2p2 3,343@3L3T3
1=1a1h1v1
1=1Z1
1>2E2R2[2
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
101R1
1'2:2M2^2V5
141l1
142@2H2T2`2h2
142}2
173~5q7
192P4
1C1d1n1n2
1D2P2X2d2p2x2
1darray
1F2i2
1K1~1
1L2X2`2l2x2
1M1k1
1q1u1y1}1
1R5v5
1T2`2h2t2
1T2}2
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2,282D2P2\2h2t2
2 2@2T2`2t2
2 3p3
2!2'272
2!2y2S3
2"2*222:2A3Q3y3
2"2=2F2
2#2)252=2B2H2T2\2a2g2r2z2
2#3]3
2#3S3_3}3
2&2=2
2(2-2X2r2
2(343<3H3T3\3h3t3|3
2(3T3
2)3\3
2*2.22262:2>2B2F2J2N2n2t2
2*2F2b2f3
2*3A3[3n3s3y3
2,202P2h2
2,282@2L2X2`2l2x2
2,2H2e2
2,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
2.2[2
2.3M3~3
2/2M2k2
2/2Y6g8q8
2:2m2
2@304
2@3L3T3`3l3t3 4
2+222E2
2+3p3
2<2H2P2
2=2`2
2>2|2
203<3D3P3\3d3
203p4
212B2_2
242@2H2T2`2h2t2
252P2w2
2'7&8
272^2
282]2
282B2
283D3L3X3d3l3x3
283h3o3
2b2s2
2darray
2H3q3
2J2}2
2N233.4
2P2"4)4.6m6
2Q4A6
2u3}3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3,343@3L3T3
3 343@3`3
3"7r7
3$3,383D3L3
3$3,383D3L3X3d3l3x3
3$303<3D3P3\3d3p3|3
3$30383D3P3X3d3p3x3
3$3-333?3G3L3R3^3f3k3q3}3
3$5C5P5
3&3A3V3n3A4J5
3(343@3L3X3d3p3|3
3(343<3H3T3\3
3(4[4
3)4?4
3)4G4S4u4
3*4h4
3.3D3\3x3
3.595D5O5Z5~5
3/3J3q3
3:3v3
3?4X4v4
3\$p#\$`#\$h
3<3j3
3=3e3
3=3J3U3t3
303<3D3P3\3d3p3|3
303A3h3|3
324T4
3-32393@3G3N3U3\3c3j3q3
333366
33c3#8h9
344l7-9F9
374r4
393l3
393T3o3
3A3d3
3A4H4O4
3A4I4i4q4
3C6G6K6O6S6W6[6_6c6g6k6o6s6w6{6
3D$L%
3D$LRP
3F4M4T4[4l4}4
3I3|3
3l6'8'9
3W3p3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4&41494>4D4N4V4[4a4n4v4{4
4 4(444@4H4
4 4(444@4H4T4`4h4
4 4,484@4
4 4,484@4L4X4`4
4 444@4T4`4t4
4 4H4Y4
4 component with no swizzle expected for operand #%d of opcode #%d (counts are 1-based). 
4!4,40484<4C4S4a4i4v4
4!5k5
4$40484
4$40484D4P4X4d4p4x4
4$4l4p4x4
4%505D5V5|5
4&4H4O4V4]4d4z4
4(404
4(404<4H4P4
4(404<4H4P4\4h4p4
4(444<4H4T4\4
4(4A5
4)5N5w5
4,464;4A4Y4n4v4
4:5S5g5
4;4Z4y4
4;5m5
4;x@r
4[4~4
4`536
4<4\4^5
4<4i4
4<5`5
4<5c5
4>:{{
414Y4|4
444[4{4
444`4
444H4g4
4567+
456789:;<=
4'5Z5
474J4W4r4
484k4
4H4{4
4h5~5
4I4a4
4I5h5
4M4}4
4O6Y6I8
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5,545
5 5,545@5L5T5`5l5t5
5 545@5T5`5t5
5 575>5m5~5
5 6=6s6
5 6p6
5!6C7]7
5"5$7
5"6U7{7
5#5L5T5p5
5$5,5
5$5,585D5L5X5d5l5
5$505<5D5
5%6]6
5%6O6k6
5&5N5
5&6Y6
5(545<5
5(5H5U5m5
5(6T6
5,5:5@5T5[5i5t5}5
5.5T5z5
5.6\6!7
5;6?6C6G6K6O6S6W6+:2:9:
5;7_7
5@6$7`8
5<5h5
51676=6C6I6O6
535R5m5
5'5/545:5E5M5R5X5c5k5p5v5
5-5<5G5L5^5q5w5
555@5K5^5o5
5'5G5g5
565Q5l5
566f6
56789:;<=
575j5
585X5s5
596p6
5G5z5
5H5`536K6c6
5J6v6
5L5j5
5L6V6q6
5N6{6
5X6r6
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6(6
6 6@6`6t6
6 6-636@6H6M6S6^6d6m6s6
6!6&6/6<6I6
6#686_6
6#7L7f7
6$;;;!=1=8=
6$60686
6$696F6c6n6
6%7X7
6&686J6`6n6
6(:X:
6(606
6(606<6H6P6
6(656K6
6)7a7
6.6C6
6.7J7Y7z7
6:6\6n6
6';7;;;?;C;G;K;O;S;W;[;_;c;g;k;o;s;w;{;
6;7u7{7
6[7|7
6^6|6
6_7g9
6>6E6X6n6
617A7Q7a7q7
617W7}7
6'616
666i6
6'686@6d6l6t6|6
6'6G6s6
6789:;
6789:;<
6'7O7
696c6
6B6h6
6C7B8
6d:w:
6D6p6
6F6{6
6F6y6
6G7K7O7S7W7[7_7c7g7k7o7s7w7{7
6G7P7X7b7k7v7
6n?x?
6Ph@;
6PhH<
6Phh=
6PQhp
6X7x7
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7,747
7 7,747d7
7 8_8
7 8p8
7!8I8y8
7"7-747F7L7R7X7^7d7k7r7y7
7"8s8':s:
7#7*71787X7~7
7#7-7Y7
7$7,7|7
7$7,747<7H7h7p7
7$7/777<7B7M7U7Z7`7k7q7z7
7$7t7
7$8P8
7$8W8
7%7*7f7
7%7*7L7
7&7R7x7
7.7F7j7
7/7X7k7}7
7/8C8
7[8*9b:
7_7x7
7<7p7t7x7|7
7<8\8h8p8|8
7<8`8
7>7l7
707P7k7
708\8
708S8
708Y8{8
718d8
737b7
74<S<w<
748y8
757h7
758`8
787V7
7998:<<=====@@
79V8u 
7E7x7
7G8`8
7h8+<O<
7H8h8t8|8
7P7y7
7P8p8|8
7P8x8
7Q7}7
7S7w7
7S8U9=:-<
7X8x8
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(8,8084888<8@8H8X8`8h8x8
8 9@9L9T9`9l9t9
8 9D9
8 9p9
8!9P9s9
8#8'8+8/83878;8?8C8G8K8O8S8W8[8_8c8g8k8o8s8w8{8
8#9V9
8$8)8/8:8B8G8M8[8m8
8$8,8`8h8p8|8
8$80878I8_8k8u8{8
8$848=8P8V8\8b8h8n8u8|8
8%929q9
8(:.:
8,9L9X9`9
8/8_8
8:8]8}8
8:8I8j8y8
8:8n8
8;8a8
8;Qhr
8;qXr
8;yhr
8;Zhr
8\9h9p9|9
8]8i8w8
8`=S>
8+9O9
8<8d8
8<9\9h9p9|9
808=8d8
818[8b8n8
818B8
838b8
839>9S9t9
848g8
849T9`9h9t9
868\8s8
868G8W8
8'818X8l8
8A8Z8{8
8boolu
8c9t9
8D8w8
8d9p9x9
8doub
8floau
8halfu
8l9x9
8O8x8
8P8p8
8s9B:
8t8/9U9
8T9`9h9t9
9 :@:L:T:`:l:t:
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9 9$9(9,9094989<9@9D9H9X9l9
9 9(90989@9H9P9X9`9h9p9
9 9,949h9p9x9
9!999V9n9
9":m:
9#:D:N:q:
9#;9;
9#9'9+9/93979;9?9C9G9K9O9S9W9[9_9c9g9k9o9s9w9{9
9$:D:d:(<G<
9$:u:
9$9t9
9%959H9Q9
9&9-949;9B9I9j9x9
9(:H:T:\:h:t:|:
9*:C:X:_:f:m:t:
9*:W<
9*999Z9i9
9*9D9R9X9^9d9
9*9G9g9
9,9]98:e:
9.9A9S9o9
9.9L9
9:9]9
9?9w9
9@:L:T:`:l:t:$;0;8;D;P;X;
9\$<u
9^$t*W3
9^@vzj
9^\t_
9^8v<
9_@v4
9_`v4
9_8v$
9_8v:
9_8v~
9_D3D10EffectLoader
9_Hv4
9_hvZ
9_Pv4
9_Xv4
9{ttV
9|$@t
9|$\|%
9|$<t
9|$<w(9|$8w"
9|$4v;
9|$4v@
9|$Ds
9|$Dw
9|$Xr
9~@t?
9~8t2
9>u9j
90:P:\:d:p:|:
90:Y:
91:N:]:z:
919Y9f9
92:a:
92:e:
939f9
939Q9
949b9z9
949r:
979D9K9R9Y9`9i9
979t9
98:*;
98:D:L:X:d:l:
98t'C
99;/>
9'9G9n9
9A:R:z:
9A9t9
9B4u!
9B4u6
9B9H9N9Y9n9
9C0t3
9C0uJ
9C9v9
9D9d9p9x9
9D9x9
9E:N:]:f:y:
9E9k9
9Fht0
9floa
9G(t&
9H$t"
9H(u|
9H:T:\:h:t:|:
9H@t_
9H@tP
9KHv]
9L$(r
9L9l9x9
9P:\:d:p:|:
9p8t!h
9P8tD
9pHvH
9pTt 
9Ptu"9Ppt
9Q vO
9Q,v)
9q`v.
9qHv.
9Qhv=
9Qpt39U
9qPv.
9qXv.
9r$v0W
9S;^;d;o;w;|;
9s<(=
9S4u%
9sLud
9sXt5
9t$$v
9T$,v!
9T$Tu
9w(vA
9W8ve
9wdu(
9whv(
9wLu5h
9X:d:l:x:
9x@v13
9X0v'
9X9\9`9d9h9l9p9t9x9|9
9Y(t<
9y(v?
9Y(vX
9y8vu
9Yhv:
9yhvC
9YhvJ
9ypv$
9Z(v*3
9z@v53
9Z`v7
9Z8vy3
9Zhv*3
A * B for boolean A & B -> AND A, B
A * B/A with negative variations on A
A ;B u
A ;B u 
A ;B uh
A ;F 
A + B for boolean A & B -> OR A, B
A 9B r7wI
A$;B$u
A$;B$u`
A$;F$
A$9B$|-
A(;A u
A(;B(t
A(G;{
A,;G,u
A;KHr
A;O@r
A@;G@u
A@;yPs
A`C;_
A{#h4g
A<;t8
A0@tC
A09B0
a0a0a0
A4;B4u#
A49B4
A8;A$t
aaaqqqqrr
AAB###CCDDEEE
AB_BLENDFACTOR
AB_SAMPLEMASK
abcdef
abs instruction to abs modifier match
Abs modifier not allowed for operand #%d of opcode #%d (counts are 1-based). 
ABS(a), a negative -> NEG(a)
ABS(a), a positive -> a
add of negative of itself identity
add of zero identity
Addition of same argument is same as multiply by 2
ADDRESSU
ADDRESSV
ADDRESSW
ALF;w
All GS input v[][] registers must have vertex count (first dimension) declared with size equal to the number of vertices in the declared input primitive (%d vertices in this case). Input %d has %d vertices declared. 
ALPHATOCOVERAGEENABLE
alternate cases for 'asm' are deprecated in strict mode
alternate cases for 'decl' are deprecated in strict mode
alternate cases for 'pass' are deprecated in strict mode
alternate cases for 'technique' are deprecated in strict mode
alternate cases for 'Texture1D' are deprecated in strict mode
alternate cases for 'Texture2D' are deprecated in strict mode
alternate cases for 'Texture3D' are deprecated in strict mode
alternate cases for 'TextureCube' are deprecated in strict mode
ALWAYS
ANISOTROPIC
annotation members
ANTIALIASEDLINEENABLE
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
Append
Arguments
array dimension for %s must be %i
array dimensions must be literal scalar expressions
array expected
array index out of bounds
array reference cannot be used as an l-value; not natively addressable
array reference cannot be used as an l-value; not natively addressable, forcing loop to unroll
asfloat
asint
asm {
asm blocks have not yet been implemented
asm_fragment
Assignment %s: Attempting to assign an incompatible inline shader
Assignment %s: Dimensionality mismatch (LHS expects %d, RHS has %d)
Assignment %s: Expressions cannot be evaluated to produce objects, though they may be used to index into arrays of objects
Assignment %s: Left-hand side type does not match right-hand side type
Assignment %s: Non-array right-hand type expected
Assignment %s: Objects left-hand sides cannot be assigned to expressions
Assignment %s: Only 0 and NULL are valid constants for an object assignment
Assignment %s: Only literal right-hand side values are allowed in state blocks in Effects performance mode
Assignment %s: Reference to shader variable '%s' not valid for D3D10 techniques because it contains deprecated shader models
asuint
atan of knwn 0 or 1 identity
atan2
Attributes
AttrParams
AX;AT
B ;A 
B ;A u
B ;C u*
B$;A$
B$;A$u
B$;C$u"
B;Q(r
B;W@r
B;Whr
B@;AD
B@;G@u8
B\;A\t
B\;A\u
B\;F\u.
B`;A`u
B`;A8
B<;L8
B<Bu$
B0;AH
B4;A4u
B4;A4u3
BACKFACESTENCILDEPTHFAIL
BACKFACESTENCILFAIL
BACKFACESTENCILFUNC
BACKFACESTENCILPASS
BH;A,
Bh;Ahu)
Bh;AhuZ
bias amount for sample_b must be in the range [%f,%f], but %f was specified as an immediate. Opcode #%d, operand #%d (counts are 1-based). 
binary expression with negative symmetry reduction
Bitwise operations not supported on legacy targets.
Blend
BLEND_FACTOR
BLENDENABLE
BLENDOP
BLENDOPALPHA
BLENDSTATE
BlendState
bool multiply chain reduction
bool1
bool1x1
bool1x2
bool1x3
bool1x4
bool2
bool2x1
bool2x2
bool2x3
bool2x4
bool3
bool3x1
bool3x2
bool3x3
bool3x4
bool4
bool4x1
bool4x2
bool4x3
bool4x4
BORDER
BORDERCOLOR
Bp;A$
BP;A0
Bp;Apu
Bp;ApuB
BP;APw
branch
break
break must be inside loop
break never match (to NOP)
break/breakc statement not inside loop or switch.  Opcode #%d (count 1-based).
break/continue can only be followed by case/default/endswitch/endloop/else/endif. Opcode #%d (count 1-based). Aborting validation.
breaka match
breakc
breakge match
breaklt match
breakn match
Bt9Atr
Buffer
Bx;A(
BX;A4
Bytecode appears corrupt - integrity check failed.
C ;A 
C ;G u
C$;A$
C$;G$t
C;_<r
C;_8r
C;_xr
C@h(_
C\;F\u
C`B;W
C+L$@
C0;C8u
C4;C<u
C43G4=
C8;A8
C9_<v
callc
cannot %sconvert from '%s' to '%s'
cannot bind the same variable to multiple constants in the same constant bank
cannot convert from 'object type' to 'numeric type'
Cannot declare streams as an input for geometry shader primitives, it must be its own parameter.
cannot have divergent gradient operations inside flow control
cannot have divergent gradient operations inside loops
cannot map expression to geometry shader instruction set
cannot map expression to pixel shader instruction set
cannot map expression to vertex shader instruction set
Cannot map loop to shader target, forcing loop to unroll
Cannot map loop to shader target, target does not support breaks
cannot mix packoffset elements with nonpackoffset elements in a cbuffer
Can't continue validation - aborting.
Can't create/set an invalid shader. Make sure your shader is valid, and make sure you're not using asm shaders in SM4.0
can't emit if statement with both gradients and program flow control
can't flatten if statements that contain out of bounds array accesses
can't flatten if statements that contain out of bounds array accesses, forcing loop to unroll
can't flatten if statements that contain side effects
can't flatten with flow control when variable is bound to b register
can't force branch with gradients
Can't unroll loops marked with loop attribute
can't use branch and flatten attributes together
can't use branch, flatten, call  or case attributes together
cant use flow control on this profile
Can't use gradient instructions in loops with break
Can't use gradient instructions in loops with break, forcing loop to unroll
can't use loop and unroll attributes together
case %d (or if bits to be interpreted as float: %f) already seen. Opcode #%d (count 1-based).
case ordinal too large for floating poing representation
case statement doesn't match to the scope of a switch statement. Opcode #%d (count 1-based). Aborting validation.
CaseConditions
CaseStmts
catch
cb%d[%d]
CB[%d] already declared, repeated declaration on opcode #%d (count is 1-based). 
CBUFFER
cbuffer
CBuffer
CDEF3!289AB"GH
ceil -> integer
centroid
CH9sXu79sP
character continues past end of file
Cl;Fl
Cl3Fl
clamp
CLAMP
class
CLI4tH
clip not supported in texture shaders
clip_distance
CLIPDST
CloseHandle
cmp diff to basic logic identity
cmp of known negative identity
cmp of known positive identity
cmp of negated bool identity
cmp(X,int,int) -> int
color
Color
column_major
combine of communitive literals
comma expression used where an initializer list may have been intended
comment continues past end of file
Compact Registers - Compress
Compact Registers - Paint 
Compact Registers - Press Loop Ins
Compact Registers - Press Moves
CompanyName
COMPARISON_ANISOTROPIC
COMPARISON_MIN_LINEAR_MAG_MIP_POINT
COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_MAG_MIP_LINEAR
COMPARISON_MIN_MAG_MIP_POINT
COMPARISON_MIN_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_POINT_MAG_MIP_LINEAR
COMPARISONFUNC
compile
compile_fragment
CompileShader
Components of input declaration for register %d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
Components of input declaration for register v%d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
Components of output declaration for register %d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
Components of output declaration for register o%d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
conditional must be numeric
conflicting geometry types
const
const 
const_cast
constant
Constant buffers, functions, and techniques cannot be nested inside of constant buffers
constant table info exceeds maximum comment size
Constant variable '%s' bound to register greater than 8191 (%d requested)
constinterp usage cannot be used with linear, noperspective, or centroid usage
ConstructGSWithSO
ConstructGSWithSO can't operate on array references
constructors only defined for numeric base types
continue
continue must be inside loop
continue never match (to NOP
continue/continuec statement not inside loop.  Opcode #%d (count 1-based).
continuea match
continuec
continuen match
could not cast condition to boolean
could not cast condition to uint
Couldn't cast expression to boolean for logical not operator
Couldn't cast expression to boolean for logical operator
CreateFileA
cross
CT;CL
CTABt@
cull_distance
CULLDST
CULLMODE
CX;sTs
D$ ;D$8
D$ ;D$8u
D$ 94
D$ A;
D$ Aj
D$ B;
D$ QPW
D$ QQ
D$ VP
D$ WWWj
D$$;D$<w
D$$@Z
D$$_^[3
D$()T$(
D$(;\$
D$(`G
D$(BP
D$(hG
D$(LG
D$(pG
D$(PPt
D$(QQ
D$(xG
D$(XG
D$(YY
D$,;L$
D$,Fj
D$,Ph
D$,QP
D$,WP
D$@;T$p
D$@PQQ
D$@W;H
D$\;D$l
D$\3D$t
D$\u/h
D$`#D$d;
D$`;D$P
D$<;D$$
D$<;D$Tu
D$<;H
D$<+D
D$<Ph
D$<PPh
D$<xG
D$0;D$
D$0;D$H
D$0;T$
D$09D$
D$09E
D$0G+
D$0PPh
D$0PQ
D$0uw
D$0WWWj
D$0Yj
D$0YY
D$4;D$Lr
D$4G;~
D$4j?Y3
D$4Ph
D$4SV
D$4WP
D$8#D$D
D$8;A
D$8;D$ 
D$8;D$Pu#
D$89BPs
D$8Ph
D$8PQQ
D$8WP
D$d;D$T
D$D9|$@u
D$D9A
D$D9D$
D$DPt
D$Duw
D$H;D$0
D$h;D$XrS
D$H;p
D$HhG
D$HPh
D$hPjthSTAT
D$hPQ
D$hQPW
D$hQQ
D$L;CXv
D$l;D$\
D$l;D$\|_
D$L;D$4
D$LhG
D$LPh
D$lPSW
D$lWWWWWW
D$LY3
D$P;D$`v
D$PPh
D$T;D$d|
D$TPW
D$tWj
D$X;D$h
D$X`G
D$XpG
D$Xt)RRj
D$Xt,RRj
D;qHr
D0d0p0x0
d1`6r9
D3D10
D3D10 Assembler Error: Invalid Bytecode: %s
D3D10 Internal Compiler Error: Invalid Bytecode: %s
D3D10.1 ERROR: D3D10.1 header version mismatch.
d3d10.dll
D3D10.dll
d3d10.pdb
D3D10_COMPILER
D3D10_SHADER_AVOID_FLOW_CONTROL
D3D10_SHADER_PREFER_FLOW_CONTROL
D3D10_SHADER_SKIP_OPTIMIZATION
D3D10CompileEffectFromMemory
D3D10CompileShader
d3d10core.dll
D3D10CoreGetVersion
D3D10CoreRegisterLayers
D3D10CreateBlob
D3D10CreateDevice
D3D10CreateDeviceAndSwapChain
D3D10CreateDeviceAndSwapChainGenerated
D3D10CreateDeviceGenerated
D3D10CreateEffectFromMemory
D3D10CreateEffectPoolFromMemory
D3D10CreateStateBlock
d3d10d.dll
D3D10DisassembleEffect
D3D10DisassembleShader
D3D10EffectCompiler
D3D10GetGeometryShaderProfile
D3D10GetInputAndOutputSignatureBlob
D3D10GetInputSignatureBlob
D3D10GetOutputSignatureBlob
D3D10GetPixelShaderProfile
D3D10GetShaderDebugInfo
D3D10GetVersion
D3D10GetVertexShaderProfile
D3D10LoadDebugRuntime
D3D10PreprocessShader
D3D10ReflectShader
D3D10RegisterLayers
D3D10StateBlockMaskDifference
D3D10StateBlockMaskDisableAll
D3D10StateBlockMaskDisableCapture
D3D10StateBlockMaskEnableAll
D3D10StateBlockMaskEnableCapture
D3D10StateBlockMaskGetSetting
D3D10StateBlockMaskIntersect
D3D10StateBlockMaskUnion
d3d11.dll
D3D11CreateDeviceAndSwapChain
D3DCOLORtoUBYTE4
D3DX_VERSION
D3DX10: (WARN) An allocation of zero bytes should return a unique non-null pointer to at
D3DX10: (WARN) D3DX10 relies upon this behavior.
D3DX10: (WARN) least zero bytes. Deletion of a null pointer should quietly do nothing.
D3DX10: (WARN) Overloaded ::new and ::delete operators do not conform to C++ standards:
DBUGY3
dcl_constantbuffer
dcl_globalFlags
dcl_immediateConstantBuffer
dcl_indexableTemp
dcl_indexrange
dcl_input
dcl_input_sgv
dcl_input_siv
dcl_inputprimitive
dcl_maxout
dcl_output
dcl_output_sgv
dcl_output_siv
dcl_outputtopology
dcl_resource
dcl_sampler
dcl_temps
debug info exceeds maximum comment size; no debug info emitted
decimal value truncated to 32bits
Declaration statements must appear before other instructions.
Declared output vertex count (%d) multiplied by the total number of declared scalar components of output data (%d) equals %d.  This value cannot be greater than %d.
Decls
DeclStmts
DECR_SAT
default
default statement doesn't match to the scope of a switch statement. Opcode #%d (count 1-based). Aborting validation.
default statement seen already.  Opcode #%d (count 1-based).
default value
define
defined
degrees
delete
DeleteCriticalSection
DeleteObject
depth
DEPTH
DEPTHBIAS
DEPTHBIASCLAMP
DEPTHCLIPENABLE
DEPTHENABLE
DEPTHFUNC
DepthStencil
DEPTHSTENCILSTATE
DepthStencilState
DepthStencilView
DEPTHSTENCILVIEW
DEPTHWRITEMASK
Dest register relative index indexable-temp register component %d in x[%d][%d] uninitialized. Opcode #%d (count is 1-based)
Dest register relative index temp register component %d in r%d uninitialized. Opcode #%d (count is 1-based)
DEST_ALPHA
DEST_COLOR
DESTBLEND
DESTBLENDALPHA
determinant
dimension of conditional does not match value
DIRECT3D
Direct3D 10 Runtime
DIRECT3D_VERSION
disable
DisableThreadLibraryCalls
discard
distance
division by zero in preprocessor expression
dot of partial nullity reduction
double
double negative to original
double rcp identity
DS_STENCILREF
duplicate attribute %s
duplicate macro parameter '%s'
Duplicate non-system value semantic definition: %s and %s
Duplicate system value semantic definition: %s and %s
duplicate usages specified
Duplicated input semantics can't change type, size, or layout ('%s').
dword
DwordExpr
DX9-style '= sampler_state' syntax is deprecated in strict mode
DX9-style assignment syntax is deprecated in technique10 pass blocks in favor of new function call syntax
DX9-style 'compile' syntax is deprecated in strict mode
DX9-style intrinsics are disabled when not in dx9 compatibility mode.
DX9-style 'LHS = <RHS>' syntax is deprecated in strict mode
DXBCPQ
DXCaptureReplay.dll
DXEnableCapture
dynamic_cast
DzfQQ
e0e0e0
E1Z1N<Z<b<
elements
else statement doesn't match to an if statement. Opcode #%d (count 1-based). Aborting validation.
else statement seen already.  Opcode #%d (count 1-based). Aborting validation.
Emit output arrays
Emit return instructions
emit_then_cut
end of file
end of line
End of program reached with incomplete flow control structure.
endif
endif int, int -> int
endif statement doesn't match to an if statement. Opcode #%d (count 1-based). Aborting validation.
endloop
endloop statement doesn't match to a loop statement. Opcode #%d (count 1-based). Aborting validation.
endswitch
endswitch statement doesn't match to a switch statement. Opcode #%d (count 1-based). Aborting validation.
EnterCriticalSection
EQUAL
error
Error creating error string
error X%u: 
error, duplicate case %u
error, duplicate default in switch statement
error: %s
Error: constant buffer %s has both user-defined offset and compiler-assigned offsets
eval acos
eval add
eval and with some bits known
eval asin
eval atan
eval atan2
eval bieq with known range
eval bieq with some bits known
eval bige with known range
eval bige with some bits known
eval bilt with known range
eval bilt with some bits known
eval bine with known range
eval bine with some bits known
eval btof with some bits known
eval btoi with some bits known
eval buge with known range
eval buge with some bits known
eval bult with known range
eval bult with some bits known
eval cmp
eval cos
eval dsx
eval dsy
eval ENDIF with known range
eval ENDIF with some bits known
eval exp
eval frc
eval ge
eval iadd with known range
eval iadd with some bits known
eval idiv with known range
eval idiv with some bits known
eval imax with known range
eval imax with some bits known
eval imin with known range
eval imin with some bits known
eval imod with known range
eval imod with some bits known
eval imul with known range
eval imul with some bits known
eval ineg with known range
eval ineg with some bits known
eval ishl with some bits known
eval ishr with some bits known
eval itob with some bits known
eval itof with known range
eval itof with some bits known
eval literal and
eval literal bieq
eval literal bige
eval literal bilt
eval literal bine
eval literal btof
eval literal btoi
eval literal buge
eval literal bult
eval literal iadd
eval literal idiv
eval literal imax
eval literal imin
eval literal imod
eval literal imul
eval literal ineg
eval literal ishl
eval literal ishr
eval literal itob
eval literal itof
eval literal not
eval literal or
eval literal udiv
eval literal umax
eval literal umin
eval literal umod
eval literal umul
eval literal ushr
eval literal utof
eval literal xor
eval log
eval lt
eval mov
eval movc with known range
eval movc with some bits known
eval mul
eval neg
eval not with some bits known
eval or with some bits known
Eval range add inf flag if range not bound
Eval range add neg flag if range bound negative
Eval range add pos flag if range bound positive
Eval range add unit flag if range bound unit
eval rcp
eval rsq
eval sin
eval udiv with known range
eval udiv with some bits known
eval umax with known range
eval umax with some bits known
eval umin with known range
eval umin with some bits known
eval umod with known range
eval umod with some bits known
eval umul with known range
eval umul with some bits known
eval ushr with some bits known
eval utof with known range
eval utof with some bits known
eval xor with some bits known
evaluate literal acos
evaluate literal add
evaluate literal asin
evaluate literal atan
evaluate literal atan2
evaluate literal beq
evaluate literal bge
evaluate literal blt
evaluate literal bne
evaluate literal ceil
evaluate literal cmp
evaluate literal cos
evaluate literal div
evaluate literal dsx/y
evaluate literal exp
evaluate literal floor
evaluate literal frc
evaluate literal ftob
evaluate literal ftoi
evaluate literal ftou
evaluate literal ge
evaluate literal log
evaluate literal lt
evaluate literal max
evaluate literal min
evaluate literal movc
evaluate literal mul
evaluate literal neg
evaluate literal rcp
evaluate literal round
evaluate literal rsq
evaluate literal sin
evaluate literal sqrt
evaluate literal trunc
evaluate range acos
evaluate range add
evaluate range asin
evaluate range atan
evaluate range atan2
evaluate range beq
evaluate range bge
evaluate range blt
evaluate range bne
evaluate range ceil
evaluate range cmp
evaluate range cos
evaluate range div
evaluate range dsx/y
evaluate range endif
evaluate range exp
evaluate range floor
evaluate range frc
evaluate range ftob
evaluate range ftoi
evaluate range ftou
evaluate range ge
evaluate range log
evaluate range lt
evaluate range max
evaluate range min
evaluate range movc
evaluate range mul
evaluate range neg
evaluate range rcp
evaluate range round
evaluate range rsq
evaluate range sin
evaluate range sqrt
evaluate range trunc
exp(a*log(0)) = 0 identity
exp(log(x)) identity
Expected component count of 0 for operand #%d of opcode #%d (counts are 1-based). 
Expected component count of 1 (or 4 component with select-1 mode) for operand #%d of opcode #%d (counts are 1-based). 
Expected component count of 4 (or 1 component immediate32, or in certain cases NULL or scalar operand allowed) for operand #%d of opcode #%d (counts are 1-based). 
Expected nonzero component mask (or in certain cases also NULL or oDepth operand allowed) for operand #%d of opcode #%d (counts are 1-based). 
Expected sample count > 0 but encountered %d for resource t%d.  Opcode #%d (count is 1-based). 
Expected sample count of 0 but encountered %d for resource t%d.  Opcode #%d (count is 1-based). 
explicit
expressions returning objects in an array or struct not yet implemented
extern
F ;G 
F ;G u
F ;G u#
F _^3
F h``
F$;G$u
F$;G$u|
F$;G$uY
F(;G(
F(;G(uI
F(;G(uQ
F,;G,
F,;G,uA
F,;G,uI
F,@te
F,@ua
F;sHr
F;w8r
f=fou
F0;G0uA
F0;G0un
f9<E@T
faceforward
Failed to extract driver shader code.
Failed to extract input signature.
Failed to extract output signature.
Failed to log error, redirecting to debug output:
failed to open source file: '%s'
Failed to parse shader using reference shader parser: 0x%x
Fall-throughs in switch statements are not allowed.
false
FALSE
FD_^]
FDXPPj
FFACE
ffff40
FFHHHIJKKLMMNNOOOOOOOOOOOOOO
FH;FDw
FH;GH
FH9A(u
FHXPh
FileDescription
FileVersion
FILLMODE
FILTER
FL;GL
flatten
float
float '%g'
float '%gf'
float '%gh'
float '%gl'
float constant
float1
float1x1
float1x2
float1x3
float1x4
float2
float2x1
float2x2
float2x3
float2x4
float3
float3x1
float3x2
float3x3
float3x4
float4
float4x1
float4x2
float4x3
float4x4
floating point division by zero
Floating-point Value out of integer range for conversion: %f
Floating-point Value out of unsigned range for conversion: %f
floor
floor -> integer
FlXPh
forcecase
Forced to unroll loop, but unrolling failed.
Fp;Cpu
Fp;Gp
FPXPh
FRC of add with integer can bypass add
frc of bool to zero
frc of int to zero
frc(integer) -> 0
FreeLibrary
frexp
friend
FRONT
FRONTCOUNTERCLOCKWISE
FRONTFACESTENCILDEPTHFAIL
FRONTFACESTENCILFAIL
FRONTFACESTENCILFUNC
FRONTFACESTENCILPASS
function
function '%s' missing implementation
function parameters
functional defines in preprocessor expressions not yet implemented
fwidth
fx_4_0
FX10tP
fxl_4_0
FXLCt8
G ;A 
G ;A u
G ;C u
G ;F 
G$;A$
G$;A$u
G$;C$t
G(;G0u
G,;G4t
G;~(r
G;~8r
G\;B\u=
G`9Odu
G0;G8u
G0c0p0~0
G4;G<tb
G4;G<u
G4j`SP
g97u<j
G9z r_
GB;T$,r
gc]Oad
GDI32.dll
ge -> bool
ge of known range reduction
generate floating point special flags from acos
generate floating point special flags from add
generate floating point special flags from asin
generate floating point special flags from atan
generate floating point special flags from atan2
generate floating point special flags from ceil
generate floating point special flags from cmp
generate floating point special flags from cos
generate floating point special flags from div
generate floating point special flags from dsx/y
generate floating point special flags from endif
generate floating point special flags from exp
generate floating point special flags from floor
generate floating point special flags from frc
generate floating point special flags from log
generate floating point special flags from max
generate floating point special flags from min
generate floating point special flags from mov
generate floating point special flags from movc
generate floating point special flags from mul
generate floating point special flags from neg
generate floating point special flags from rcp
generate floating point special flags from round
generate floating point special flags from rsq
generate floating point special flags from sin
generate floating point special flags from sqrt
generate floating point special flags from trunc
generate unit flag for non special input to cos
generate unit flag for non special input to sin
GENERATEMIPS
geometry shader can only emit to 1 stream
Geometry shader didn't emit anything
geometry shader fragments are not supported
geometryshader
GEOMETRYSHADER
GeometryShader
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDimensions
GetFileSize
GetFullPathNameA
GetModuleFileNameA
GetModuleHandleExW
GetProcAddress
GetRealPtrPtrD3D10CreateDevice
GetRealPtrPtrD3D10CreateDeviceAndSwapChain
GetSystemInfo
GetSystemTimeAsFileTime
GetTickCount
Gh;Bh
Gj?Y+
Global flags already declared once.  Opcode #%d (count is 1-based). 
global variables
GREATER
GREATER_EQUAL
GS has no input primitive, so no input regisers may be declared.  Input v[][%d] was declared.
GS Input
GS input primID already declared.  Opcode #%d (count is 1-based). 
GS input primitive already declared.  Opcode #%d (count is 1-based). 
GS input primitive not declared. 
GS input primitive unrecognized.  Opcode #%d (count is 1-based). 
GS output primitive topology unrecognized.  Opcode #%d (count is 1-based). 
GS output topology already declared.  Opcode #%d (count is 1-based). 
GS output topology not declared. 
GS output vertex count declaration can't be more than %d vertices (%d specified).  Opcode #%d (count is 1-based). 
gs_%d_%d
gs_4_0
gy3D3D10CompileShader
H$;P r
H;CXv
H;q`r
H@9L$$v
H9](t
hCTAB
height
hex value truncated to 32bits
Hh9Nhr%w
HIJKLMe
hISGN
HLSL_VERSION
hOSGN
Hp9Npr
hRDEF
iadd zero reduces to no-op mov
Identifier invalid or not found (were you attempting a forward reference?)
idiv currently not supported (instruction deprecated). For now, try using unsigned int types for div instead
if statement conditional expressions must evaluate to a scalar
ifdef
ifndef
IGE a,a -> true
Illegal initializer
Illegal initializer for a numeric variable
ILT a,a -> false
imad match 1 (a + b*c)
imad match 2 (a + (b+b)
imaginary square root
Immediate constant buffer already declared, repeated declaration on opcode #%d (count is 1-based). 
Immediate constant buffer size must be a multiple (not incl. 0) of 32bit*4-tuples in size, but no larger than %d 32bit*4-tuples (%d bytes declared).  Opcode #%d (count is 1-based). 
Immediate32 indexing only permitted for operand #%d of opcode #%d (counts are 1-based). Aborting.
implicitly 
imul one reduces to no-op mov
imul zero reduces to literal zero
include
include interface required to support #include from resource or memory
Inconsistent semantic definition: %s and %s
incorrect number of arguments to numeric-type constructor
Incorrect number of operands for opcode #%d (count is 1-based).  Expecting %d, encountered %d.
Incorrect number of rows or columns
INCR_SAT
indefinite arccosine
indefinite arcsine
indefinite derivative calculation
indefinite logarithm
Index Dimension %d out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Index Dimension %d's relative address indexable temp is out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Index Dimension %d's relative address indexable temp's dimension %d index is out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Index Dimension %d's relative address temp is out of range (%d specified, max allowed based on temp declaration is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Index Dimension %d's relative address temp is out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Index is required for state '%s'
Indexable temp register index, [%d], too high.  Opcode #%d (count is 1-based). Aborting.
Indexable temp x%d already declared.  Opcode #%d (count is 1-based). 
Infinite loop detected
initial value
InitializeCriticalSection
initializer
inline
inout
input
Input
Input index range declaration out of range.  Opcode #%d (count is 1-based). 
Input index range defined from %d to %d includes input register %s[%d] that was not declared. 
Input signature does not specify component %d of register %d which is declared in the shader code. 
Input signature name mismatch with declaration in shader code for component %d in register %d. 
Input signature parameter #%d (1-based) specifies out of range register %d. 
Input signature parameter #%d (1-based) specifies register %d (or components in the register) that have already been defined. 
input types for geometry shader must be arrays
Inputs
instance_id
instanceID already declared for input.  Opcode #%d (count is 1-based). 
INSTID
Instructions calculating derivatives across pixels, and using temp storage or indexed values for input coordinates, are not permitted within flow control that has a branch condition that could vary across pixels. Opcode %d (count is 1-based).
int * int -> int
int + int -> int
int, or unsigned int type required for bitwise operators
int1x1
int1x2
int1x3
int1x4
int2x1
int2x2
int2x3
int2x4
int3x1
int3x2
int3x3
int3x4
int4x1
int4x2
int4x3
int4x4
integer '%dl'
integer '%u'
integer '%uul'
Integer addition negative identities
integer constant
Integer divide by zero
Integer divides may be much slower, try using uints if possible.
Integer modulus may be much slower, try using uints if possible.
integer movc((a<b),a,b) -> min(a,b)
integer movc((a<b),b,a) -> max(a,b)
integer movc((a>=b),a,b) -> max(a,b)
integer movc((a>=b),b,a) -> min(a,b)
integer negate modifier match
internal error: addressing inconsistent pool
internal error: AND operater inputs not bool
internal error: argument missing context (A%u)
internal error: argument pulled into unrelated predicate
internal error: argument used without having been initialized (A%u, I%u)
internal error: argument was never used (A%u)
internal error: argument was never used (A%u, I%u)
internal error: binary instruction expected
internal error: cannot read from argument pool (A%u)
internal error: cannot write to argument pool (A%u, I%u)
internal error: chain register invalid
internal error: component out of range
Internal error: conflicting range data
internal error: Constant buffer used as address
internal error: consume instruction does not have unique input
internal error: consume instruction expects input from mov not have unique input
internal error: consume move read by multiple instructions
internal error: debug info append failed, byte count (%d) too large?
internal error: expected binary instruction for scalar RHS
internal error: expected scalar RHS for instruction
internal error: expression expected
internal error: failed to emit instruction
internal error: flattened side effect
internal error: IF with size greater then 1 found
internal error: inconsitent addressing
internal error: input register missing semantic
internal error: instruction missing outputs
internal error: invalid range data on switch output
Internal error: invalid read of more specific predicate
internal error: invalid register
internal error: invalid sequence/cast expression
internal error: Invalid source modifier
internal error: legacy preshader support not in this version of the compiler
internal error: l-value expected
internal error: memory argument used without address (I%u, A%u)
internal error: modifier used on address
internal error: no semantic found on i/o argument
internal error: no storage type for switch output
internal error: non ordinal input/output found
internal error: non-vectorized pool violated port constraints
internal error: not all rules initialized
internal error: operand type mismatch
internal error: OR operater inputs not bool
internal error: out of memory
internal error: output argument was never initialized (A%u)
internal error: output found with no semantic
internal error: output register missing semantic
internal error: overlapping output writes
internal error: production failed
internal error: production failed!
internal error: result register invalid
internal error: result violated port constraints
internal error: Rule class id invalid
internal error: scalar instruction with too many inputs
internal error: scope missing
internal error: scope underflow
internal error: stack underflow
internal error: statistics append failed, byte count (%d) too large?
internal error: unable to emit attribute parameters
internal error: unassociated return
internal error: unexpected input register type
internal error: unexpected output register type
internal error: unhandled production
internal error: unknown node
Internal error: unpredicated endif input
internal error: unpredicated incomplete
internal error: unpredicated loop_in
Internal error: unread predicate
Internal error: unrecognized assignment type
internal error: unrecognized expression
Internal error: unrecognized SB API Call
internal error: unrecognized statement
internal error: unrecognized value
internal error: vectorized instruction too large
internal warning: optimization did not converge
InternalName
Interpolation mode cannot vary for different components of a single input register (v%d).  Opcode #%d (count is 1-based). 
Interpolation mode for PS clip or cull distance must be linear or linear centroid (register v%d).  Opcode #%d (count is 1-based). 
Interpolation mode for PS renderTargetArrayIndex or viewportArrayIndex must be constant (register v%d).  Opcode #%d (count is 1-based). 
Interpolation mode for PS SGV must be constant (register v%d).  Opcode #%d (count is 1-based). 
intrinsic function '%s' is not yet implemented
INV_BLEND_FACTOR
INV_DEST_ALPHA
INV_DEST_COLOR
INV_SRC_ALPHA
INV_SRC_COLOR
INV_SRC1_ALPHA
INV_SRC1_COLOR
invalid %s %s
invalid %s semantic '%s': Legal indices are in [%d,%d]
Invalid %s semantics - POSITIONT0
Invalid assignment index (%u). Maximum allowed is %u.
invalid compiler flag %s
Invalid component mask in indexable temp decl: 0x%x.  Opcode #%d (count is 1-based). Aborting. 
invalid function call
Invalid index dimension %d for relative address temp register within dimension 1 of operand.  Opcode #%d, operand #%d (counts are 1-based). 
Invalid index dimension for relative address indexable temp register within dimension %d of operand.  Opcode #%d, operand #%d (counts are 1-based). 
Invalid indexing mode for first dimension.  Opcode #%d, operand #%d (counts are 1-based). 
Invalid interpolation mode for register v%d.  Opcode #%d (count is 1-based). 
invalid mask declaration '%s'
Invalid name or shader for SGV dcl.  Opcode #%d (count is 1-based). 
Invalid name or shader for SIV dcl.  Opcode #%d (count is 1-based). 
Invalid operand type for operand #%d of opcode #%d (counts are 1-based). 
invalid or unsupported integer constant expression
invalid preprocessor command '%s'
invalid reference to input semantic '%s%d'
invalid reference to output semantic '%s%d'
invalid register semantic '%s', or variable must be bound to multiple register banks (%c register binding required)
invalid register specification, expected '%c' binding
Invalid relative indexing register type for dimension %d.  Operand #%d of opcode #%d (counts are 1-based). Aborting.
Invalid representation for index dimension %d.  Opcode #%d, operand #%d (counts are 1-based). 
Invalid resource dimension on resource t%d.  Opcode #%d (count is 1-based). 
Invalid resource return type on component %d of resource t%d.  Opcode #%d (count is 1-based). 
Invalid sampler mode on sampler s%d.  Opcode #%d (count is 1-based). 
invalid semantic '%s' on pixel shader output
Invalid StreamOut decl
Invalid StreamOut decl: %s
invalid subscript '%s'
invalid type used for '%s' %s semantics
invalid usage modifier applied to cbuffer
invalid usage modifier applied to tbuffer
invalid use of '%s'
INVERT
is_front_face
isalnum
isalpha
isdigit
isfinite
isFrontFace already declared for input.  Opcode #%d (count is 1-based). 
isFrontFace already declared for output.  Opcode #%d (count is 1-based). 
-ISGNt
ISGNu
isinf
isnan
isxdigit
itof -> INT
j#X:G
j$X_^[
j$X_^]
j(X_^[
j(X_^]
j,^9}
j,+AP
J,C;_
j+Xj-Y
j4Yj4
j8+Ad
jH+Ah
jjjjj
jtXPh
Known literals reduced to mov
KpWWW
KxWWW
kY(,kq@4
L$ ;L$,r
L$ Fj
L$ QS
L$ WWV
l$ YY
L$$;L$p
L$(;L$<
L$(9L$<
L$(QVP
L$,;L$T
L$,QPh
L$<;H
L$<9\$Tt
L$<PS
L$<QP
L$<RVSW
L$0;K
L$0;L$ 
L$0;L$,
L$09HPs
L$0SS
L$4;L$\
L$4G;{
L$4RW
L$4SQ
L$8;H
L$89X
L$8QW
L$D;D$
L$DQW
L$hQP
L$LQ3
L$P;|$4r
L$P;K
L$P9K
L$PFj
L$PQPh
L$pRRj
L$pSP
L$T9L$,
L$X3L$p
L0 Qu
label
label (%d) already defined. Opcode #%d (count 1-based). 
label (%d) called but not defined.
label (%d) defined but never called.
label (%d) must be preceded by a ret. Opcode #%d (count 1-based). Aborting validation.
label (%d) must not be nested inside flow control. Opcode #%d (count 1-based). Aborting validation.
LazyAttachToMonitor
ld requires resource declared as texture1D/2D/3D/1DArray/2DArray.  Opcode #%d, operand #%d (counts are 1-based). 
ld2dms requires resource declared as texture2DMS/texture2DMSArray.  Opcode #%d, operand #%d (counts are 1-based). 
ldexp
LeaveCriticalSection
LegalCopyright
length
LESS_EQUAL
levels
lineadj
linear
LineStream
Literal float out of integer range for conversion: %f
Literal float out of unsigned range for conversion: %f
Literal in Log * Mul * Exp pattern
LoadFromAnywhere
LoadLibraryExW
local variables
log(exp(x)) identity
log10
loop control variables
Loop doesn't seem to do anything, forcing loop to unroll
Loop only executes for %d iteration(s), forcing loop to unroll
lt -> bool
lt of known range reduction
l-value specifies const object
mad match 1 (a + b*c)
mad match 2 (a - b*c)
mad match 3 (a + (b+b)
mad match 4 (a - (b+b)
malloc
Masks (and if pixel shader, also interpolation mode) on all input registers in an index range must be identical. Input register %s[%d] does not match with others in the index range from %d to %d. 
Masks on all output registers in an ndex range must be identical. Output register o%d does not match with others in the index range from o%d to o%d. 
matrix
matrix dimensions must be between 1 and %u
matrix dimensions must be literal scalar expressions
Max index for effect state '%s' is %d
max of known positive identity
max of neg idenity to abs instruction match
max(int,int) -> integer
MAXANISOTROPY
maximum address register index exceeded
maximum bool register index exceeded
maximum boolean register index exceeded - Try reducing number of constant branches
maximum boolean register index exceeded - Try reducing number of constant branches, take bools out of structs/arrays or move them to the start of the struct
maximum cbuffer exceeded. target has %u slots
maximum cbuffer exceeded. target has %u slots, manual bind to slot %u failed
maximum constant register index exceeded - Try reducing number of constants referenced
maximum input register index exceeded
maximum iterator register index exceeded - Try reducing number of loops
maximum iterator register index exceeded - Try reducing number of loops and depth of loops
maximum iterator register index exceeded - Try reducing number of loops, take loop counters out of structs/arrays or move them to the start of the struct
maximum loop register index exceeded
Maximum number of inputs (%d) exceeded.
maximum number of inputs exceeded
Maximum number of outputs (%d) exceeded.
maximum number of samplers exceeded. %s target can have a maximum of %i samplers
maximum predicate register index exceeded
maximum sampler register index exceeded
maximum temp register index exceeded
maximum texture register index exceeded
MAXLOD
MaxVertexCount
maxvertexcount
memcmp
memcpy
memmove
memset
Method and Parameters
Microsoft
Microsoft (R) D3D Shader Compiler
Microsoft (R) D3D10 Shader Disassembler
Microsoft (R) HLSL Shader Compiler
Microsoft Corporation
min max to saturate modifier match
min of known positive identity
min of positive value to saturate modifier match
min(int,int) -> integer
MIN_LINEAR_MAG_MIP_POINT
MIN_LINEAR_MAG_POINT_MIP_LINEAR
MIN_MAG_LINEAR_MIP_POINT
MIN_MAG_MIP_LINEAR
MIN_MAG_MIP_POINT
MIN_MAG_POINT_MIP_LINEAR
MIN_POINT_MAG_LINEAR_MIP_POINT
MIN_POINT_MAG_MIP_LINEAR
MINLOD
MIPMAPLODBIAS
MIRROR
MIRROR_ONCE
mixed
MostRecentApplication
mov of sampler register reduction
movc and comparitor sequence reductions
movc(!a,b,c) -> movc(a,c,b)
movc((a<b),a,b) -> min(a,b)
movc((a<b),b,a) -> max(a,b)
movc((a>=b),a,b) -> max(a,b)
movc((a>=b),b,a) -> min(a,b)
MOVC(a,b,b) -> MOV(b)
movc(bool b, bool b, false) -> mov b
movc(bool b, FALSE, TRUE) -> not b
movc(bool b, TRUE, bool c) -> or(b,c)
movc(bool b, TRUE, FALSE) -> mov b
movc(FALSE,b,c) -> mov(c)
movc(movc(a,TRUE,FALSE),b,c) -> movc(a,b,c)
movc(TRUE,b,c) -> mov(b)
movc(X,int float,int float) -> int float
MSAA Sample Index must resolve to an integer literal in the range 0 to 127
msvcrt.dll
mul of a half times add of same value identity
mul of a number times its inverse identity
mul of one identity
mul of zero identity
Mulitply by 1 reduces to no-op move
Multiply by 0 reduces to literal 0
Multiply by -1 reduces to NEG operation
Multiply by 2, 4, or 8
MULTISAMPLEENABLE
mutable
N ;O 
N@QRW
n021W1[1_1c1g1k1o1s1w1{1
Named register components cannot appear to the left (xyzw order) of components that are not named in a given register. Affected register is input %d. 
Named register components cannot appear to the left (xyzw order) of components that are not named in a given register. Affected register is output %d. 
namespace
NameSpace
Needs to be replaced with a real rule
negate modifier match
Negate modifier not allowed for operand #%d of opcode #%d (counts are 1-based). 
negative bool less then another bool identity
Negative value compared with zero
Negative values for cmp and clip can be rordered
NEVER
No include handler specified, can't perform a #include. Use D3DX APIs or provide your own include handler.
nointerpolation
noise
Non system-generated input signature parameter (%s) cannot appear after a system generated value.
non-constant attribute parameter
non-empty case statements must have break or return
non-matrix types cannot be declared 'row_major' or 'column_major'
non-numeric case expression
non-numeric sample count
non-scalar case expression
non-trivial object expressions not yet implemented
noperspective
normalize
Not all elements of SV_Position were written
NOT BEQ => BNE
NOT BGE => BLT
NOT BIEQ => BINE
NOT BIGE => BILT
NOT BILT => BIGE
NOT BINE => BIEQ
NOT BLT => BGE
NOT BNE => BEQ
NOT BUGE => BULT
NOT BULT => BUGE
not enough actual parameters for macro '%s'
NOT_EQUAL
nullify clip ops on known positive values
Numeric variables ('%s') can't be shared; share the containing cbuffer instead
O ;N 
O ;N u
O(;O(s
O0HPV
o3:4>4B4F4J4N4R4V4Z4^4b4
object assignments are not allowed inside functions
object literals are not allowed inside functions
Objects not allowed in structures
octal value truncated to 32bits
oDepth
offset texture instructions must take offset which can resolve to integer literal in the range -8 to 7
Only numeric types and strings are allowed as annotations
Only numeric variables ('%s') can be added to a cbuffer
Only passes are allowed within a technique
Only shader model 4.0 is allowed in D3D10 techniques
Only single-dimensional object arrays are allowed
OpenSemaphoreW
operator
optimizations not converging
OriginalFilename
OSGNP
OSGNu
output
Output
Output index range declaration out of range.  Opcode #%d (count is 1-based). 
Output index range defined from %d to %d includes output register %d that was not declared. 
Output signature does not specify component %d of register %d which is declared in the shader code. 
Output signature name mismatch with declaration in shader code for component %d in register %d. 
Output signature parameter #%d (1-based) specifies out of range register %d. 
Output signature parameter #%d (1-based) specifies register %d (or components in the register) that have already been defined. 
output slot must be less than 256
OutputDebugStringA
Outputs
Overlapping input index range decl encountered.  Opcode #%d (count is 1-based). 
Overlapping output index range decl encountered.  Opcode #%d (count is 1-based). 
overlapping output semantics
overlapping register semantics not yet implemented '%c%u'
overloaded function not found
P PPPP
P SSSj
P t =
p t*=
P t.=
p t9=
p tB=
P tP=
P uB9~
p!t;=
P!t'=
p!tq=
P#t{=
P#tP=
P$t$=
P$t-=
P$uR3
P(9p4u6
P(B;Q
p@;qD
p@;xPs
P<B;S
P0;QH
P89NXt
pack_matrix
packoffset
parameter count mismatch (%s)
Parameters
Passes
pbtH=
PdtB=
Pft[=
Pft-=
pftT=
PhCLI4
PhCTAB
PhFXLC
PhRDEF
PhSHDR
Pit"=
Pixel Shader allows output semantics to be SV_Target or SV_Depth only.  Output signature parameter #%d (1-based) specifies semantic %s. 
pixelfragment
pixelshader
PixelShader
PIXELSHADER
PjThSDBG
point
PointStream
Position
position
position already declared for input.  Opcode #%d (count is 1-based). 
position already declared for output.  Opcode #%d (count is 1-based). 
position declaration must have xyzw mask.  Opcode #%d (count is 1-based). 
positive sqrt(x*x) identity
Possible integer divide by zero
PPPPP
PPPPPR
PPPPPS
PPPPPW
PPPPR
PPPPS
PPPWQR
PPRRh
pPt!3
PPt&=
Ppt&=
PPt6=
PPtd=
pPtO=
PPtS=
PQSVW
PQWWRS
pragma
preshader
PRESV3
PRIMID
primID
primitive_id
primitiveID already declared for input.  Opcode #%d (count is 1-based). 
primitiveID already declared for output.  Opcode #%d (count is 1-based). 
private
ProductName
ProductVersion
propagate floating point integer flag through dsx/y
propagate floating point integer flag through exp
propagate floating point integer flag through neg
propagate floating point range through mov
propagate floating point value flags through mov
propagate integer range through mov
propagate known bits through mov
propagate literal value through mov
propogate swizzles
protected
PRQhx
PRVPP
PRVWj
PS output depth already declared.  Opcode #%d (count is 1-based). 
ps.1.0
ps.1.1
ps.1.2
ps.1.3
ps.1.4
ps.2.0
ps.2.a
ps.2.b
ps.2.sw
ps.2.x
ps.3.0
ps.3.sw
ps_%d_%d
ps_1_0
ps_1_1
ps_1_2
ps_1_3
ps_1_4
ps_2_0
ps_2_a
ps_2_b
ps_2_sw
ps_2_x
ps_3_0
ps_3_sw
ps_4_0
psize
Pst@=
Pu$9U
public
PVVVV
PWPPQ
PWPPV
PWVWjbh
QhCLI4
QhFX10
QhFXLC
QhISGN
QhOSGN
QhRDEF
QhSHDR
QhSTAT
QjBXP
QjcWh
QjsVVVh
QjtVVVh
QPSPP
QQj!Q
QQj"Q
QQPPh
QQPQQS
QQQQj
QQQQP
QQQQPPRV
QQQQPPRW
QQQQPR
QQQQQ
QQQQQ%
QQQQQPP
QQQQQPRVS
QQQQQQ
QQQQQRW
QQQQS
QQQQW%
QQRRh
QQRSTTU;;VWXXYYYZZ[]GGbcddfffffffffffffggggggeeeeeeeeeeeemmnnollhiiijjkkpppppppsssssuuuttttttttttyyzzzzzz{{{{{{{||}}}}---...`````~~~
QQSV3
QQSVW
QQSVW3
QQVWQ3
QSVW3
QSVWj
QueryPerformanceCounter
QWPh@
r,PVh
radians
range sequence reduction
Rasterizer
RASTERIZERSTATE
RasterizerState
rcp( mul ( x, rsq(x)) = rsq(x) identity
Reading uninitialized value
Recompile the application against the appropriate SDK for the installed runtime.
redefinition of '%s'
redefinition of formal parameter '%s'
Redefinition of pass "%s"
reduce literal lit instruction
reduce mov instruction
refactoringAllowed
Reference of undeclared components of indexable temp x%d[] within relative index of an operand.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared components of indexable temp x%d[].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared constant buffer cb%d[].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared immediate constant buffer.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared indexable temp x%d[].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared input or undeclared components of index range input starting at base v%s[%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared input or undeclared components of input v%s[%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared output or undeclared components of index range output starting at base o[%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared output or undeclared components of output o%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared register oDepth.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared register vPrimID.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared resource t%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared sampler s%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared temp r%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of bounds, [%d], on cb%d[size==%d] (if size is listed as 0, it means default size is used, which is %d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of bounds, [%d], on immediate constant buffer [size==%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of bounds, [%d], on x%d[size==%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of range of indexable temp x%d[] within relative index of an operand.  Index [%d] specified, but based on the indexable temp declaration, the max index allowed is [%d].  Operand #%d of opcode #%d (counts are 1-based). Aborting.
Reference out of range on vertex axis for input v[%d][].  Input primitive type has %d vertices.  Opcode #%d, operand #%d (counts are 1-based). 
reflect
refract
RegCloseKey
RegEnumKeyExA
RegGetValueW
register
register or offset bind %s not valid
register or offset bind %s.%s not valid
Registers in an input index range cannot have system names associated with them.  Input register %s[%d] has a name and is in an index range from %d to %d. 
Registers in an input index range cannot have system names associated with them.  Output register o%d has a name and is in an index range from o%d to o%d. 
RegOpenKeyExA
RegOpenKeyExW
RegQueryValueExA
reinterpret_cast
relative address refrences too deep
Relative indexing input register from base %s[%d] not allowed when register %d has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing input register from base %s[0] not allowed when register 0 has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing not allowed for cb%d since it was not decalred for dynamic indexing..  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing output register from base o[%d] not allowed when register %d has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing output register from base o[0] not allowed when register 0 has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Remove temp array stores that are immediately overwritten
rendertarget_array_index
renderTargetArrayIndex already declared for input.  Opcode #%d (count is 1-based). 
renderTargetArrayIndex already declared for output.  Opcode #%d (count is 1-based). 
renderTargetArrayIndex or viewportArrayIndex must have scalar mask in declaration.  Opcode #%d (count is 1-based). 
RENDERTARGETVIEW
RenderTargetView
RENDERTARGETWRITEMASK
reorder instructions to minimize register load
REPLACE
resinfo
Resource t%d already declared.  Opcode #%d (count is 1-based). 
RestartStrip
ret can only be followed by case/default/endswitch/endloop/else/endif/label. Opcode #%d (count 1-based). Aborting validation.
return
return type of texture too large. Cannot exceed 4 components
REV_SUBTRACT
rew^;
rlwe;
round
round -> integer
round_ne
round_ni
round_pi
round_z
row_major
row_major %s%ux%u
RPQQh
RPQVS
RQQQh
RRQQh
RRRRR
RRRRRP
RRRRRS
RRRRRW
RSDSN
rsq(x) * rsq(x) -> rcp(x)
rsq(x) * rsq(x) -> rcp(x) for positive x
rsqrt
RTINDEX
ruledisable
RVQPW
s 9|$d|
s 9|$l|
s@9s8s
S@Phh?
s<90t
s49s8s
Sample
sample
sample/_l/_d instructions require sampler declared in default mode.  Opcode #%d, operand #%d (counts are 1-based). 
sample/_l/_d requires resource declared as texture1D/2D/3D/Cube/1DArray/2DArray.  Opcode #%d, operand #%d (counts are 1-based). 
sample_b
sample_b requires resource declared as texture1D/2D/3D/Cube/1DArray/2DArray.  Opcode #%d, operand #%d (counts are 1-based). 
sample_b requires sampler declared in default mode.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c
sample_c/_c_lz instructions require resource to be declared to return UNORM, SNORM or FLOAT.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c_* instructions require resource declared as texture1D/2D/Cube, but arrays not allowed.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c_* instructions require sampler declared in comparison mode.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c_lz
sample_d
sample_l
SampleBias
SampleCmp
SampleCmpLevelZero
SampleGrad
SampleLevel
sampler
Sampler
sampler array index must be a literal expression
sampler array index must be a literal expression, forcing loop to unroll
sampler mismatch: sampler used inconsistently
Sampler parameter must come from a literal expression.
Sampler s%d already declared.  Opcode #%d (count is 1-based). 
sampler_c
sampler_state
sampler1D
sampler2D
sampler3D
SamplerComparisonState
samplerCUBE
SamplerState
samples
saturate
Saturate modifier not permitted for opcode #%d (counts are 1-based). 
scalar expected
scalar value expected
scalar, vector, or matrix expected
SCISSORENABLE
SDBG;
SDTLt 
Semantic length is limited to %d characters
Semantics
Sequence of compares
SetBlendState
SetDepthStencilState
SetGeometryShader
setlocale
SetRasterizerState
SetRenderTargets
SetUnhandledExceptionFilter
SetVertexShader
SGt =
SGtN=
SGV must have scalar mask in declaration.  Opcode #%d (count is 1-based). 
Shader@0x%p
shared
shift of communitive literals
shift of communtiive inputs
short
signed
sincos
sizeof
Sleep
SLOPESCALEDDEPTHBIAS
SMIDt0
smoothstep
snorm
snorm double
snorm float
snorm half
Software\Microsoft\Direct3D
Software\Microsoft\DXTools
SOLID
source component %d in temp r%d not initialized. Opcode #%d (count is 1-based)
source indexable temp register component %d in x%d[%d] not initialized. Opcode #%d (count is 1-based)
source indexable temp register component %d in x%d[*] never initialized anywhere.Opcode #%d (count is 1-based)
source register relative index indexable-temp register component %d in x[%d][%d] uninitialized. Opcode #%d (count is 1-based)
source register relative index temp register component %d in r%d uninitialized. Opcode #%d (count is 1-based)
SPh@A
SPh`9
sqrt times sqrt of positive value equals the original value identity
sqrt(bool) -> bool
SRC_ALPHA
SRC_ALPHA_SAT
SRC_COLOR
SRC1_ALPHA
SRC1_COLOR
SRCBLEND
SRCBLENDALPHA
ss``g
SSSPSS
SSSSj
SSSSP
SSSSQ
SSSSS
SSSSSP
SSSSSSSS
SSSSSV
Stack
Stage linkeage warning: Semantic %s has been inconsistently defined in the two stages.
Stage linkeage warning: Semantic %s has been placed in different registers in the two stages.
Stage linkeage warning: Semantic %s is read from, but it's never written to.
State '%s' belongs in %s blocks, not %s blocks
State '%s' is not indexed
stateblock
stateblock_state
States
static
static_cast
STENCILENABLE
STENCILREADMASK
STENCILWRITEMASK
Stmts
strchr
stream object '%s' cannot be declared on the global scope
Stream output geometry shaders can only be created from non-NULL shaders
Stream output geometry shaders can only be created from valid 4.0 vertex and geometry shaders
StreamOut declarations must be a literal string
String
string
string constant
string continues past end of file
string continues past end of line
StringFileInfo
strstr
struct
Structure being emitted has elements with no semantic defined
structure members
stuvwxyz{
stuvwxyz{,}<[
SUBTRACT
Sum of temp registers and indexable temp registers exceeds limit of %d..  Opcode #%d (count is 1-based). 
Sum of temp registers and indexable temp registers exceeds limit of %d..  Opcode #%d (count is 1-based). Aborting. 
SV_ClipDistance
SV_CullDistance
SV_DEPTH
SV_Depth
SV_InstanceID
SV_IsFrontFace
SV_Position
SV_Position cannot be constinterp
SV_PrimitiveId
SV_PrimitiveID
SV_PrimitiveId is an invalid input semantic for geometry shader primitives, it must be its own parameter.
SV_RenderTargetArrayIndex
SV_TARGET
SV_Target
SV_VertexID
SV_ViewportArrayIndex
SVWj`3
SVWj43
SVWk}
SVWPh
SVWQQ
SWh@\
SWh8@
SWhhA
switch
Swizzle
symmetric cmp
symmetric min or max on value
syntax error
syntax error : unexpected %s
syntax error: unexpected %s
t SWh
t W^3
t!9s4v
t"h@O
t"hxS
t#B;Q r
t#hISGN
T$ ;|$0
t$ 9t$0
t$$PQ
t$$QRRRPR
T$(;T$
T$(;T$4
t$(9p
T$(9T$
t$(j4Y
t$,;t$T
t$,;t$T|
T$,9t$D|
t$,RV
t$,WWWWW
t$\3|$p3t$t
t$\PQ
t$\SSj
t$|PQ
T$0QR
t$0WV
t$4hhs
t$4RV
t$4WP
t$8RPV
t$9S0u-
t$D94
T$DG;
t$dPQ
T$DRP
t$dt-
T$H;J
T$H9T$
t$HRRP
t$lSP
t$lt*
t$Qjsj
t$T9t$d
t$tPQ
t$TVW
T$X#T$`
T$X9T$,
t$XhT
T$XRQP
t%<<u!
t(9sXt
T;qPr
t?h4H
t@j4Y
t`j4Y
t+h@O
t<hPH
t0(hHo
t2j?Y+
t79W@v
t8hL[
t99B0u4
t-9X(u
TARGET
target does not support relative addressing
tb!L$ 
tbuffer
technique
technique10
technique10 
Temp decl already encountered.  Repeated declaration on opcode #%d (count is 1-based). 
template
TerminateProcess
tex1D
tex1D will considered dependent since texcoord was not declared as at least float2
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2D
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3D
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texCUBE
texcube instructions cannot have integer offsets
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
TEXT_1BIT
texture
Texture
TEXTURE
texture access must have literal offset and multisample index
TEXTURE assignments inside of samplers cannot be expression indexed
TEXTURE assignments inside of samplers cannot be variable indexed
texture mismatch: texture used inconsistently, can only use one DX9-style texture intrinsic on individual samplers or sampler arrays
Texture objects/streams not supported on legacy targets
Texture1D
texture1D
Texture1DArray
texture2D
Texture2D
Texture2DArray
Texture2DArrayMS
Texture2DMS
texture2DMS cannot be more then 127 samples
Texture2DMS resources are only available for input to Pixel Shaders. Opcode #%d (count is 1-based). 
Texture2DMSArray
Texture3D
texture3D
TextureCube
textureCUBE
tF9B0uA
tFhISGNP
The application was compiled against and will only work with D3D10_1_SDK_VERSION (%d), but the currently installed runtime is version (%d).
the 'pixelshader' keyword is deprecated and reserved in strict mode
the 'sampler1D' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'sampler2D' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'sampler3D' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'samplerCUBE' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'stateblock' keyword is deprecated in strict mode
the 'vertexshader' keyword is deprecated and reserved in strict mode
There was a problem getting annotations
There was an error compiling expression
There was an error compiling HLSL shader variable
There was an unexpected error in the parse tree
this FX API is not available in this part your program (%s)
This object can only be bound to one slot in this version of Effects
throw
token
token '%s'
tolower
Too many %s signature parameters of type SV_ClipDistance or SV_CullDistance.  Maximum number of registers usable is %i.
too many arguments to target TX
too many nested #includes
too many outputs to target TX
Too many temp registers declared (%d).  Max allowed is %d.  Opcode #%d (count is 1-based). 
Too many total clip/cull distance values.  At most %d allowed (clip+cull total).  Opcode #%d (count is 1-based). 
Too many unique registers contain clip/cull distance values.  At most %d unique registers can have clip/cull distance in components.  Opcode #%d (count is 1-based). 
tPPPPV
Translation
transpose
triangle
triangleadj
TriangleStream
trunc
trunc -> integer
Try swizzling literal arrays to fit them together
Try to combine like instructions
Try to match temp array loads to their original store
Try to reduce known values to movs
tU9q uP
tv;s4tq
tVQhISGN
tWC;^
tWQQQQQ
tx_1_0
tY;~4tT
type mismatch
type mismatch between conditional values
TypeDeclStmts
typedef
TypeDefs
typename
Types
u"h(R
u%93t!9s
u(9FTt
u)SSSS
u,9} u'
u_9s<tZ
u|9\$Lt
u0hPr
u5Php
u69z@u1
u-9L$
ua!L$
uC;L$Xu=;D$\
uCj,X:
uF9q\uA
UGE a,a -> true
uH9Z\u
uI#t$d;
uint1
uint1x1
uint1x2
uint1x3
uint1x4
uint2
uint2x1
uint2x2
uint2x3
uint2x4
uint3
uint3x1
uint3x2
uint3x3
uint3x4
uint4
uint4x1
uint4x2
uint4x3
uint4x4
Ul[[f55
ULT a,a -> false
Unable to create warning string
Unable to unroll loop, loop does not appear to terminate in a timely manner (%d iterations)
undecipherable custom data
undeclared identifier '%s'
undef
undefined
Undefined shader variable '%s'
unexpected #elif
unexpected #elif following #else
unexpected #else
unexpected #else following #else
unexpected #endif
Unexpected component type
unexpected end of file
unexpected end of file in macro expansion
Unexpected indexing dimension for operand #%d of opcode #%d (counts are 1-based). Aborting.
Unexpected node encountered when trying to determine type
Unexpected template type
unexpected tokens following preprocessor directive
UnhandledExceptionFilter
uniform
union
unknown
UNKNOWN
unknown attribute %s, or attribute invalid for this statement
unknown D3D10 target
UnmapViewOfFile
Unnamed objects are not allowed
unorm
unorm double
unorm float
unorm half
unrecognized compiler target '%s'
Unrecognized FX function call (%s)
Unrecognized global flags.  Opcode #%d (count is 1-based). 
Unrecognized instruction or instruction not valid in geometry shader.
Unrecognized instruction or instruction not valid in pixel shader.
Unrecognized instruction or instruction not valid in vertex shader.
Unrecognized RHS value in assignment: '%s'
Unrecognized shader type.
Unrecognized state '%s'
Unrecognized token %s
unroll
unsigned
unsigned can not be used with type %s
Unsigned integer divide by zero
unsigned integer movc((a<b),a,b) -> min(a,b)
unsigned integer movc((a<b),b,a) -> max(a,b)
unsigned integer movc((a>=b),a,b) -> max(a,b)
unsigned integer movc((a>=b),b,a) -> min(a,b)
unsupported compiler target '%s'
untyped textures are deprecated in strict mode
uO9D$Dt
uS9;tj
UsageType
Use of potentially uninitialized variable (%s)
Use replicate swizzles to squish literal arrays
user defined %s buffers cannot be target specific
using
u-SSj
utof -> INT
UVWXXYYZ[\]^_`abcdefghijklmnofgpqrstuvwxyz{f|}~
uY9B\u
v 9|$d
v 9|$l
v PRh
v@;3tJ
V`j(X^]
v~1ghijkl'
v0hxf
Validation Error: %s
Value
value
Values
VarDeclStmts
VarFileInfo
variable
variable '%s' used without having been completely initialized
Variable has an invalid type; is the structure definition empty?
VariableDim
vector
vector dimension must be a literal scalar expression
vector dimension must be between 1 and %u
vectorize tunnel through add
vectorize tunnel through mul
vectorize tunnel through neg
version token
vertex_id
vertexfragment
vertexID already declared for input.  Opcode #%d (count is 1-based). 
VERTEXSHADER
VertexShader
vertexshader
VERTID
VFace
VhFX10
viewport_array_index
viewportArrayIndex already declared for input.  Opcode #%d (count is 1-based). 
viewportArrayIndex already declared for output.  Opcode #%d (count is 1-based). 
virtual
VirtualAlloc
VirtualFree
VjQhd_
Vlj$X^]
volatile
VPINDEX
VRVVP
vs.1.0
vs.1.1
vs.2.0
vs.2.a
vs.2.sw
vs.2.x
vs.3.0
vs.3.sw
vs_%d_%d
vs_1_0
vs_1_1
vs_2_0
vs_2_a
vs_2_sw
vs_2_x
vs_3_0
vs_3_sw
vs_4_0
VS_VERSION_INFO
VVVPQS
VVVRVP
VVVVV
VVVVW
VW9Q(v
VW9ZH
VWjbh
w%tB=
w,tP=
w,tW=
w@9O<u
w@t:=
W|;^hr
W|9^hv
w<t#=
w<t3=
w<tl=
w=t5=
w>t8=
w4t.=
w7t.=
warning
wAt8=
wbtY=
wctV-"
WD;WLsm
When code ends in subroutine definition, it must end with ret.
while
width
WIREFRAME
wJtD=
wL9wPs
WPRQh`B
wPtG=
wqtc=
WRWWP
WSh(a
wstf-
wStF-
wStF-"
wStJ=
wuth-:
wuth-<
WWQPh
wwtj-
WWWj 
WWWj0
WWWjP
WWWWP
WWWWW
WWWWWP
WWWWWR
WWWWWWWWW
wytl-
X AND TRUE => X
X OR FALSE => X
x#G;~$r
x$VSW
X(B;W
x)C;]
x*9sTu
X,B;W
x/QhISGN
x/QhOSGN
x@j4Y
x[9\$
X_^[]
x>j4Y
x69\$
xAj4Y
xDj4Y
xDSWh [
xEj43
xEj4Y
xjQhSDBG
XLF;r
XPQQQ
xS9sTt
xVj4Y
xVWWWWR
XXX who knows???
xYWWWj
y ;~ uI
y,hT_
Y__^[
Y+L$ 3
yacc stack overflow
YSYSWWhggU
YY_^3
YYYYYYYYY
Zero character semantics aren't allowed
Zu"8U
ZXA;O
