 0'0h0l0p0t0x0
 DisableStripFVF
 Microsoft Corporation. All rights reserved.
 Operating System
 t!Pj@
 t!Qj@
 t$Qj@
 t%Pj@
 t%Qj@
 t)Pj@
 t*SV
 t/Qj@
 t;Pj@
 t]Qj@
 t<Pj@
 t>Pj@
 t9Pj@
 tiQj@
 tIQj@
 Windows
!This program cannot be run in DOS mode.
"""""""
"""""""""""""""""""""""""""""""
#t/=DXT1t
$SVWh
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d.
%d different constant registers (c#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different input registers (v#) read by instruction.  Max. different input registers readable per instruction is %d.
%d different input registers (v#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different temp registers (r#) read by instruction.  Max. different temp registers readable per instruction is %d.
%d different temp registers (r#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture coordinate registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture coordinate registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%s specified twice in the declaration
%s(%d) : 
%sInput registers (v#) are not available in phase 1 of the shader.
%sInvalid register number: %d.  Max allowed for this type is %d.
%sInvalid register number: %d. Max allowed for this type is %d.
%sInvalid register type.
%sInvalid source modifier for tex* instruction.
%sInvalid source modifier.
%sInvalid source selector for tex* instruction.
%sInvalid source selector.
%sSource register type must be temp (r#) or texture coordinate input (t#) for tex* instruction.
%sSource register type must be texture coordinate input (t#) for texcrd instruction.
%sTexture coordinate registers (t#) are not available to arithmetic instructions.
(0/0W0a0
(First source param) 
(Global Validation Error) 
(Global Validation Warning) 
(Second source param) 
(Source param) 
(Statement %d) 
(Third source param) 
(Validation Error) 
(Validation Warning) 
)0D0I0
)0G0S0u0
, texm3x2depth
,0E0N0
,A;L$(r
,SVWj,
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$sxdata
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata$x
/k@Z>
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
: :[:h:
:!:*:@:q:
:!;\;
:!;];
:";5;
:#:(:2:`:
:#:-:7:A:
:#;=;P;
:$:,:D:h:p:x:
:$:X:`:h:t:
:%;9;d;
:&:4:D:c:
:&:H:W:u:
:&:m:s:{:
:(:2:<:F:P:Z:d:n:x:
:(:8:g:
:*:d:
:*:H:
:,:4:<:D:L:T:\:d:l:t:|:
:.:F:f:
:::b:
:::E:L:n:~:
:;CHv
:;FHv
:?:X:j:
:@:i:
:[;m;
:+;];
:<:E:
:1:A:S:m:
:1<X<{<
:2:R:r:
:3:@:
:4<8<<<@<
:5:T:l;p;t;x;|;
:5:T:r:
:8:I:z:
:9:f:~:
:9:u:
:A:n:
:a;l;
:B:n:
:C;W;
:d;w;
:H:`:{:
:H;W;
:I;{;
:J:~:};
:K;Y;
:L;P;T;X;)<N<
:N;Y;
:S;x;
:T:X:\:`:d;h;l;p;t;x;
:Y;B<
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;+;6;k;J<
; ;8;h;{;
; <(<V<v<
; <G<k<
; <k<
;";,;6;@;J;T;^;h;r;|;
;#;\;
;$;,;8;@;X;|;
;$;/;>;O;r;
;$<(<,<0<4<8<\<`<d<h<l<
;%;H;W;q;
;%<c<
;&;0;:;D;N;X;b;l;v;
;(;:;^;x;
;(;:;n;
;(;0;8;D;L;d;
;(;r;
;(<:<a<
;(<C<
;*;m;
;*;w;
;*<=<~<
;,;<;L;\;r;
;,<4<
;.;L;j;
;.=8=B=L=V=`=j=t=~=
;/;N;a;l;
;@;H;O;g;q;
;~$v;
;~(vP
;~pu(;Vtu#;Fxu
;+;B;O;Z;t;
;+<P<d<
;<<M<
;'<R<[<
;>;_;w;
;0;E;x;
;1<A<
;1B1d1h1l1p1t1
;2<z<
;3;K;
;6;N;f;~;
;8<J<
;B;z;
;B<e=
;C8u'
;CHv9
;CHw+
;D$\u
;d<z<
;e<|=P>
;F$s+
;F;{;
;F;};
;G,s/Q
;G,s@
;g;y;
;Gdu(9_<u#
;GHvA
;GHw-
;GHw#
;GHw*
;GHw~
;GHw=f
;GHw0
;GHw2
;GHw6
;GHw7
;GHwIf
;GxtD
;GxtV
;h;u;
;I;n;
;L;T;\;h;p;
;S<m<
;t$(u
;T$,u
;U;v;
;V,sY
;Vtu";Fxu
;Vxu";F|u
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?,?4?h?p?x?
?!?c?
?"?,?6?@?J?T?^?h?
?"?+?5?]?z?
?"?F?Z?
?#?L?e?
?%?F?m?
?(?T?]?
?*?X?i?z?
?,?4?<?D?L?X?x?
?,?D?a?
?,?P?X?`?l?t?
?/?<?n?
?:?S?
?;?h?z?
?'?1?:???E?O?Y?b?g?m?w?
??1type_info@@UAE@XZ
?@?Q?
?`?p?z?
?=?b?
?3?C?V?i?u?
?3?K?c?{?
?4?<?D?L?T?\?d?l?t?|?
?5?h?z?
?5?M?p?
?6?H?
?9?y?
?A?W?h?
?F?M?Z?a?
?J?z?
?l?p?t?x?|?
?N?b?
?terminate@@YAXXZ
?Z?r?
@( u@
@.reloc
@.rsrc
@H@t@
@H@u3
@P=DXT3wot
@ta_^
@VSWQ
\$ t`
\$<;L$`u(
] VWSj
__CxxFrameHandler3
__dllonexit
_amsg_exit
_bx2 is a valid src mod for texM* instructions only (%s source param).
_CIcos
_CIexp
_CIlog
_CIlog10
_CIpow
_CIsqrt
_CxxThrowException
_dw(=_da) modifier on source param for texld only allowed if source is a texture coordinate register (t#).
_dw(=_da) modifier on source param must be paired with source selector .xyw(=.rga).
_dz(=_db) modifier cannot be used on source parameter for texcrd. It is only available to texld instruction, when source parameter is temp register (r#).
_dz(=_db) modifier may only be used at most 2 times in a shader.
_dz(=_db) modifier on source param for texld must be paired with source selector .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
_dz(=_db) modifier on source param for texld only allowed if source is a temp register (r#).
_dz(=_db) modifier on source param for texld only allowed in second phase of a shader.
_except_handler4_common
_ftol2_sse
_H_^[
_initterm
_L_^[]
_lock
_onexit
_purecall
_stricmp
_unlock
_vsnprintf
_wcslwr
_XcptFilter
`.data
`j8j@
|$$t/
|$(tN;\$LuH;|$PuB
|$0I3
~%htO
+0X0j0
+K +C
< ?'?H?`?
< <$<(<$=
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <$<(<,<0<4<8<<<|<
< <*<4<><H<R<\<f<p<z<
< <T<\<d<p<x<
<"=2=
<"=7=L=h=z=
<"=n=
<#=,=5=
<$<?<W<{<
<$<H<P<X<d<l<
<$=|=
<%<+<
<%=)?
<%=_=
<&<6<@<K<
<&<M<y<
<&<Q<}<
<(<-<:<J<Q<a<h<x<
<(<6<
<(<7<t<
<(=6=W=i=
<(=9=a=
<*</<V<f<}<
<*<h<
<,<S<f<o<
<.=7=j=
</<\<
</<1=
<:<j<
<@=n=
<[<h<v<
<\<`<d<h<l<p<t<x<|<
<'<?<
<<<C<f<
<<<D<L<X<`<
<<=P=T=X=\=`=d=h=l=p=t=x=|=
<-<b<
<'<T<
<-=C>
<0=8=d=
<0O0i0
<1=z=
<2<]<
<4=L=h=r=
<5=R=
<8<J<
<8<J<~<
<8=N=d=
<8=T=k=
<9<o<y<
<A?P?e?
<C<r<
<d=k=!>F>X>\>`>d>
<M<T<\<
<N<y<
<O<t<
<Q<X<e<5=m=
<R<_<
<w=~=
<Y=k=
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=(=d>
= =@=H=P=\=|=
= ='=.=E=R=e=l=|=
=!>/>
=!>+>3>e>
=!><>C>w>
=#=;=S=k=
=#=i=
=$=X=`=h=t=|=
=%=:=[=
=%>J>r>
=&=>=V=n=
=&>\>g>
=&>k>~>
=(=9=r=
=(>c>
=(>g>
=)=2=7===G=Q=Z=_=e=o=y=
=)>h>
=,=L=P=T=X=\=`=
=.=G=
=.=i=E>
=/>-?
=/>]>
=:=L=a=
=:=S=?>
=;>S>|>
=?=O=`=F>y>
=?>F>x>
=@>b>~>
=[>}>
=^=t=
=+=9=V=e=
===h=x=
==>f>
='=B=H=T=Z=`=
=-=D=
=-=R=d={=
=>=k=
=>>`>x>
=0=R=
=0=T=\=d=p=x=
=2=p=
=4>J>U>
=8=J=~=
=8>$?v?
=9=K=m=
=B=b=
=DXT1tW=DXT2um
=DXT1u
=DXT2t!
=DXT2u
=DXT3
=DXT3u
=DXT4t
=DXT4u
=DXT5t
=DXT5u
=E=S=^=i=
=FILEt
=H=Z=
=h>u>
=H>X>p>H?Z?
=I=v=
=J=r=
=j>p>
=l>t>~>
=LINEu
=M>R>Y>^>e>j>x>}>
=N?Y?d?o?
=n=t=
=N>D?
=P=]=g=s=y=I>W>c>y>
=P>X>
=Q=h=l=p=t=x=|=
=s>x>
=T=c=z=
=UYVYu
=X=v=
=YUY2u
> ?$?
> ?4?Y?
> ?Q?x?
> >$>(>,>0>
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
> >(>.>n>
> >(>0>8>@>H>P>\>d>
>!?z?
>">'>->7>A>J>O>U>_>i>r>w>}>
>$>(>4>T>`>
>$>,>`>h>p>|>
>&?0?{?
>(?@?R?h?m?
>(?n?
>(?Z?x?
>(>=>-?
>(>->X>r>
>(>0>d>l>t>
>(>2><>F>P>Z>d>n>x>
>)?8?X?
>*?A?[?n?s?y?
>,>H>f>
>.?N?]?d?z?
>;>S>n>
>?>c>}>
>?>X>j>
>@>W>w>
>+>^>s>
>+>8>A>Y>d>|>
>+>C>[>s>
>=?C?O?W?]?u?
>->E>]>u>
>0>K>p>
>1?\?t?
>3?E?_?
>3>N>
>8>A>
>9>p>
>A>P>y>
>E?T?_?
>G>Y>`>
>h?u?
>N>t>
>O>t>
>P?T?X?\?`?d?h?l?
>P?Y?m?
>Qhlk
>S?g?
>T>^>
>t>x>|>
>U?_?
>Z?p?t?x?|?
0 0$0(0,00040
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,040d0
0 0%0*0/040?0I0S0]0g0q0{0
0 0(040<0p0x0
0 030F0N0U0d0p0
0!04080=0B0G0L0Q0W0\0r0
0"1,131
0"1J1e1
0#0;0
0$0,0D0h0p0x0
0$1G1
0%xh 
0(050J0S0z0
0(1,10141a2k2
0)0o0~0
0)1W1
0*0@0U0n0~0
0*050Y0
0*1w1
0*1x1
0,171b1g1l1q1v1{1
0,1K1
0,1w2
0:0h0
0:0t0
0:1}1
0;0[0
0@0o0h1p1
0@1F1
0\0`0d0h0l0p0t0x0|0
0+070C0
0+1K1c1
0<0l0
0=0l0s0
0'0_0f0
001@1L1i1}1
001B1o1
0080@0L0T0
00A0o0
0-0H0c0~0
00n0t0
'010E0
011H1Z1
0-1I1`1
0'1X1i1
020F0
030K0
040904B0
070~0
090b0
090s0
091t1
091X1j1
0B0d0
0B0z0
0B12292s3`4u4
0F0Q0\0g0
0F1p1
0G1Y1p1y1
0G1Z1
0H1W1u1
0K0c0l0
0K1f1
0K1g172i2
0L1|1
0L1x1-2o2
0L1X1d1{1
0O0b0
0P0i0
0P1u2
0p1u3
0q1}1
0t0x0|0
0VWj0
0W1~1
0watL
0x1|1
0X1j1
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1T1\1d1p1x1
1!1.1C1l1
1!2C2x2
1"2X2
1#1+131:1D1a1l1u1
1$1,141<1D1L1T1\1d1l1x1
1$1+12191@1G1N1U1\1e1u1
1%1/191C1M1l1
1%2/2F2r2
1%2l2p2t2x2|2
1(1H1P1\1|1
1(1L1T1\1h1
1(2I2l2
1)121@1F1O1V1g1y1
1)1H1U1u1
1.151r1
1.1f2
1.2K2
1.4b4
1/2j2
1;1[1
1;1p1
1;GHv
1@1R1
1^7E>
1<1Q1]1l1}1
1<2W2
1=2J2[2h2m2
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
10282@2L2T2l2
111b1
112B2]2p2t2x2|2
1'2;2
121R1r1
122g2
132F2
141a1
162`2
171R1m1
172n2
181I1z1
1a1q1
1B1b1
1C2q2
1d5h5l5p5t5x5|5
1g1s1
1H1Z1
1h1z1
1L2V2q2
1m1u1
1o2B3
1V2a2x2
1X1k1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2%2*2/24292>2C2H2M2R2W2\2a2f2k2p2v2|2
2 2G2g2
2 383]3
2"22282D2K2\2c2j2q2x2
2$20282P2t2|2
2$2O2o2
2%2@2R2i2
2%2M2w2'363|3
2&2,2A2
2&3=3
2(272h2^3
2(272Z2e2
2(3:3f3
2(383i3
2)2L2g2
2)3@3v3{3
2)384C4m4y4
2*2A2O2
2,3\3)4b4
2,3034383<3W3\3d3i3z3
2/292N2Z2`2q2w2}2
2:2j2
2;CHvJ
2?3P4
2<2H2P2
2<3l3
2<3P3X3`3h3p3|3
2>2`2a3
2>3I3w3
2>3Q3
203J3]3
212T2q2
213Y3
2'2P2m2
2'3,34393^3e3
2'3u3
242<2H2h2t2
252`2
273@3I3
282e2
283J3
2A2p2
2A3M3
2C3_3l3s3y3*404B4H4l4
2H2Z2
2j2|2(3Q3g3
2J2r2
2J3Q3$4K4h4
2K3k3g4n4a5w5
2O3|3
2t3U4A5
2V2y2
2V3p3
2w2}2
2W3j3
2X3e3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 4*4M4W4b4
3"3-343F3L3R3X3^3d3k3r3y3
3"3B3j3
3#3(3-32373<3A3F3K3P3U3Z3_3d3i3n3s3x3}3
3#4F4a4
3$3D3L3
3$4x4
3(323<3F3P3Z3d3n3x3
3(353`3p3
3(4:4o4
3(43494
3)4}4
3,3_3|3
3,3G3w3
3,3P3X3`3l3
3,4G4
3,4p5
3.4W4p4
3:3b3
3:4i4
3:4k4
3:4m4
3+4q4
3<4b4
30L0w0
313C3P3Z3n3
323?3
323V3z3b4
3-3~3
333^3y3{4
3'393F3K3S3[3v3
3'3R4z4
343<3D3P3X3
3'4V4
354o4v4
364R4l4
383J3
384<4@4D4H4L4P4T4
3A3{3
3B3Z3u3
3D3s3
3D3x3
3f4s5:6k6
3G3|3
3h3|3
3H3q3
3I4n4
3I4u4
3M3`3
3O4b4
3O4v4
3P3e3
3t3{3
3T4o4
3W4q4
3Z3t3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4$4(4,404G4[4
4 4(40484@4H4T4t4
4 4(444<4p4x4
4 4,444L4
4!4(4-43494>4C4I4N4U4[4a4j4
4"4'4,41464;4C4I4f4
4"5'5B5H5R5Y5
4#424i4x4
4$444=4P4V4\4b4h4n4u4|4
4%4?4X4x4
4%5p5
4&5b5
4(4r4
4(4w4
4(4Z4
4)5F5_5
4*4>4
4/5]5
4:4b4
4:5h5
4;5g5
4?4^4
4?4Q4k4
4+484
4+4X4j4
4+5b5
4+5I6X6_6n6u6}6
4<899
4>5O5V5
404C4
425E5
435~5m6
4'414;4E4O4Y4c4m4w4
444r4@5`5
445@5c5-6
445O5T5
464o4
464P4j4
464t4
465`5
466=6^6e6
475]5
475X5j5
485n7
495G5|5
495s5
4C5K5t5
4D4L4T4`4h4
4d5h5l5p5t5x5|5
4E5W5
4G4V4y4
4i6q6x6
4N5p5
4O586E6p6
4p5z5
4Q5q5
4X6g6
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5(5@5H5l5t5|5
5 5J5[5t5
5 6T6
5!5+555?5I5S5]5g5q5{5
5"6B6b6
5"6I6d6
5#5D5e5{5
5#5v5
5$5,585@5`5|5
5$5p5
5$6,646@6H6`6
5%6s6
5&5R5h5z5
5(6:6o6
5)6I6
5*5^5
5,6?6
5.5_5z5
5/5g5
5@5D5H5L5P5T5X5\5`5x5
5+5C5_5w5
5+5F5a5|5
5<6@6D6H6L6P6T6X6\6
5<6[6
5<6v6
5>5|5@6X6j6
5>5p5
50<0C0
50549d9{9
50585@5L5T5l5
505m5
505R5}5
515s5
51686T6
516Y6n6
526g6
535`5q5
535O5[5
545q5
566=6E6
566E6
576^647X7h7
576F6`6q6
585`5
596l6
5A5Q5
5B5{5
5B5b5
5B5g5
5b8|8
5d6r6
5G5P5
5G6b6
5H5S5Z5s5
5H6n6
5h6u6
5J6i6
5L5r5
5L5T5\5x5
5N5U5{5
5N6U6
5Q5x5
5R5l5
5r6S7z7x9
5U6o6
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6(646<6p6x6
6 6*6/666@6E6
6!7M7
6"7:7C7
6$6.686B6L6V6`6z6
6&6k6
6(7R7
6)6H6T6j6z6
6)6i6
6)7|7
6.757B7
6/6\6
6/6'7b7,8
6/6u6
6/7B7
6:8_8
6?6z6
6@6X6
6+6>6Q6o6
6+6I6]6
6<6[6x6
6>6h6
607i7
616^6~6
626c6
627G7r7
646^6
647Z7f7
666I6W6
666Y6
667I7X7w7
6'6m6}6
677{7
677C7
686[6
686`6
686X6t6x6
687E7f7y7
697q7
6A6R6~6
6B6b6
6D6l6|6
6D6y6
6H6P6X6d6l6
6l6r6#7)7z7
6L7P7
6O6^6
6p7{9
6Q6h6z6>7
6Q6r6
6T6f6{6
6U6Z6_6y6
6W7i7
6x7|7
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7+7\7|7
7 7D7H7L7P7T7
7!8{8
7!8l8
7"8b8z8
7$7,7D7h7p7x7
7%7.7z7
7%808
7&7L7
7(707d7l7t7
7*7;7d7
7*787
7*7b7
7*7f7y7
7*7h7z7
7*888C8N8
7,787F7X7c7j7y7
7,7o7
7.8w8
7/8e8
7;7N7Y7p7
7`7l7
7<7D7L7X7`7x7
7<7l8
7>8E8U8q8
718D8
727h7z7
727L7h7
738R8q8
748=8K8m8v8{8
758<8
758M8h8
767A7S7i7
767V7u7
768{8A9X9j9
777C7t7
7-7n7
787`7
787b7
797M7}7
7A7V7x7
7a9o9
7b7i7t7z7
7D8T8z8
7d9h9l9p9t9x9|9
7F8M8
7f8v8
7H7`7
7H7`7{7
7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7H7Z7
7I8_8M9
7j8y8
7M7^7e7|7
7n8y8
7O8x8
7t9x9|9
7U9p9
7W7`7
7Y7n7w7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8!8'8B8U8m8{8
8!939Y9
8"8)80878=8G8S8|8
8"8*80888>8D8W8
8"9J9z9
8#8H8U8o8}8
8$8,8@8H8P8\8d8
8$8,848:8A8F8K8P8U8Z8
8$828g8
8$848<8D8L8T8\8d8l8|8
8$8V8n8
8$9M9
8&878w8#9c9
8&8i8
8(828H8
8(989g9
8)9:9x9
8)9X9p9
8*8^8
8*939~9
8.8b8c:
8.8F8
8/9N9o9
8:8W8v8
8?9R9
8@9X9s9
8[9m9A:S:
8_Lv[
8_Lv]
8{9x:
8+;y<
8>8r8
818o8
819n9
828R8r8
84888
859`9
878R8x8
878Y8
879F9h9u9
8'8.8m8v8
88;<;@;D;H;L;P;k;
888@8H8T8\8
8-8A8G8
8-8Y8
8-8Z8l8
8A9]9
8B8j8
8e:u:}:
8G9p9|9
8h9z9
8i9n9
8K9t9
8M9g9
8N8Y8
8o8J9I:p:^;
8Q8g8r8
8q9 :
8Q9c9
8T8w8
8t8x8|8
8U9h9
8V8|9
8VWj8
9 9$9(9,9094989<9@9D9H9
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9 9;9Q9g9|9
9":r:
9#9,959J9_9n9v9
9$9,949<9D9P9X9
9$9,989X9d9l9
9$9,9C9J9O9Y9^9h9m9w9|9
9$9.989B9L9V9`9j9t9~9
9$9;9R9|9
9%:*:c:
9&:-:Z:a:|:
9&9,9\9v9
9&9>9V9n9
9(:2:J:Q:y:
9(:7:
9(919G9L9Y9~9
9(949P9`9
9)9h9z9P:v:
9*9_9
9,919>9E9_9g9w9}9
9,9P9X9`9l9t9
9.:A:u:
9.9d9j9
9::s:
9:9A9H9
9;9x9
9;FHv
9@9X9d9n9
9[;9=
9^:d:
9_ v{
9_ vd
9_ vf
9_9z9
909r9
919>9H9
92:f:
939L9P9T9X9\9`9d9h9l9p9t9
95:Q:f:m:v:
97:N:
98:E:p:
989I9
989I9z9
989J9[9b9g9n9t9
99:l:
99:S:_:
99:U:[:
9'9>9K9_9l9
9D9X9\9`9d9h9l9p9t9x9|9
9e:%;l;
9G u5
9H:X:z:
9I9d:G;U;r;
9L$(ub
9L$,u
9L$<u
9M:[:
9M9t9
9P9e9(:;:v:
9r:S>x>
9T$$w%r
9V:e:I<
9w vA
9w vC
9w<u#
9wpt 9wtu
9Y,vp
A ;GHv
A$;GHwXf
A(;B(u'
A(;GHv
A;N$r
A0;GH
A4;GHv
A8;B8u/
Absolute and relative addressing of constant registers cannot be combined in one instruction.
Adapter %d FPS = %ld.%01ld
AddAccessAllowedAce
AddMandatoryAce
Address mode must be absolute (%s source param).
Address register not available for vertex shader version %d.%d.  Version 1.1 required.
advapi32.dll
ADVAPI32.dll
After texdepth instruction, r5 is no longer available in shader.
AH;GHv
ALSVW
api-ms-win-core-versionansi-l1-1-0.dll
api-ms-win-gdi-dpiinfo-l1-1-0.dll
At;GHv
B$_^[
B(;A(t
B;V$r
B@;Bxu
B<;Btu
B8;A8t
BD;B|u
BD3GD
bem cannot be co-issued.
bem may only be used before the phase marker.
bem may only be used once in a shader.
BitBlt
Blend indices
Blend weight
C,_^[
C;Y,r
C4;C0t
CalibrateGammaRamp
CallWindowProcA
Cannot apply a negation source modifier on data that was last written with the saturate destination modifier. Affected components(*) of %s source param: %s
Cannot negate second source parameter to vector*matrix instructions.
Cannot set co-issue ('+') on a tex* instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on a texture instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on consecutive instructions.
Cannot swizzle second source parameter to vector*matrix instructions.
Cannot use tex* instruction after non-tex* instruction.
CD_^[
ChangeDisplaySettingsExA
ClientToScreen
CloseClipboard
CloseDesktop
CloseHandle
Co-issued instruction cannot write all components - must write either alpha or color.
Co-issued instructions cannot both be dot-product, since each require use of the color/vector pipeline to execute.
Co-issued instructions cannot both be dp3, since each require use of the color pipe to execute.
Co-issued instructions cannot both write to alpha component.
Co-issued instructions cannot both write to color components.
Co-issued instructions cannot both write to the same component(s).  One instruction must write to alpha and the other may write to any combination of red/green/blue.  Destination registers may differ.
Co-issued instructions cannot both write to the same components of a register.  Affected components: %s
Co-issued instructions must both write to the same register number for pixelshader version <= 1.0.
Co-issued instructions must both write to the same register type for pixelshader version <= 1.0.
CompanyName
ConnectNamedPipe
Const declaration (def) must appear before other instructions.
ConvertStringSidToSidA
CreateCompatibleBitmap
CreateCompatibleDC
CreateDCA
CreateDIBitmap
CreateFileA
CreateIconIndirect
CreateMutexA
CreateRectRgn
CreateSemaphoreA
CryptCATAdminAcquireContext
CryptCATAdminCalcHashFromFileHandle
CryptCATAdminEnumCatalogFromHash
CryptCATAdminReleaseCatalogContext
CryptCATAdminReleaseContext
CryptCATCatalogInfoFromContext
CryptCATClose
CryptCATEnumerateCatAttr
CryptCATGetCatAttrInfo
CryptCATOpen
D$ )D$
D$ Ph,A
D$ Pj
D$ PP
D$ SV
D$$+D$
D$$u4
D$$VW
D$(+D$ j
D$(k0p
D$(Ph
D$(PW
D$,Ph
D$,Pj
D$,tM
D$,Vj@
D$@;L$(
D$@j0j
D$@QjDP
D$@v-
D$\PS
D$\VW
D$\WP
D$`j<
D$`SVW
D$|PR
D$0_^[3
D$0j0j
D$0Pj
D$4+OX+GTQP
D$4Pj
D$8+D$
D$8Pj
D$D9W
D$dPj
D$dPW
D$h;O4u`
D$h;O8u;
D$HPj
D$HSV
D$LGP
D$LPt
D$Lt(
D$LWPP
D$T#D$0f
D$TPS
D$xVj
d<h<l<p<t<x<|<
D3D PixelShader Validator: Out of memory.
D3D8.dll
d3d8.dll
d3d8.pdb
D3D8_IdHot_Ctrl_SnapDesktop
d3d8d.dll
D3D8GetSWInfo
d3d8thk.dll
D3D9on12.dll
D3DKMTCloseAdapter
D3DKMTCreateAllocation
D3DKMTCreateAllocation2
D3DKMTCreateContext
D3DKMTCreateContextVirtual
D3DKMTCreateDCFromMemory
D3DKMTCreateDevice
D3DKMTCreateHwQueue
D3DKMTCreatePagingQueue
D3DKMTCreateSynchronizationObject
D3DKMTCreateSynchronizationObject2
D3DKMTDestroyAllocation
D3DKMTDestroyAllocation2
D3DKMTDestroyContext
D3DKMTDestroyDCFromMemory
D3DKMTDestroyDevice
D3DKMTDestroyHwQueue
D3DKMTDestroyPagingQueue
D3DKMTDestroySynchronizationObject
D3DKMTEscape
D3DKMTEvict
D3DKMTFreeGpuVirtualAddress
D3DKMTGetDeviceState
D3DKMTGetDisplayModeList
D3DKMTGetMultisampleMethodList
D3DKMTGetResourcePresentPrivateDriverData
D3DKMTGetScanLine
D3DKMTGetSharedPrimaryHandle
D3DKMTInvalidateCache
D3DKMTLock
D3DKMTLock2
D3DKMTMakeResident
D3DKMTMapGpuVirtualAddress
D3DKMTMarkDeviceAsError
D3DKMTOfferAllocations
D3DKMTOpenAdapterFromHdc
D3DKMTOpenResource
D3DKMTOpenResource2
D3DKMTPresent
D3DKMTQueryAdapterInfo
D3DKMTQueryAllocationResidency
D3DKMTQueryResourceInfo
D3DKMTReclaimAllocations
D3DKMTReclaimAllocations2
D3DKMTRegisterTrimNotification
D3DKMTRender
D3DKMTReserveGpuVirtualAddress
D3DKMTSetAllocationPriority
D3DKMTSetDisplayMode
D3DKMTSetDisplayPrivateDriverFormat
D3DKMTSetGammaRamp
D3DKMTSetVidPnSourceOwner
D3DKMTSharedPrimaryLockNotification
D3DKMTSharedPrimaryUnLockNotification
D3DKMTSignalSynchronizationObject
D3DKMTSignalSynchronizationObject2
D3DKMTSignalSynchronizationObjectFromCpu
D3DKMTSignalSynchronizationObjectFromGpu
D3DKMTSignalSynchronizationObjectFromGpu2
D3DKMTSubmitCommand
D3DKMTSubmitCommandToHwQueue
D3DKMTSubmitPresentToHwQueue
D3DKMTSubmitSignalSyncObjectsToHwQueue
D3DKMTSubmitWaitForSyncObjectsToHwQueue
D3DKMTUnlock
D3DKMTUnlock2
D3DKMTUnregisterTrimNotification
D3DKMTUpdateAllocationProperty
D3DKMTUpdateGpuVirtualAddress
D3DKMTWaitForSynchronizationObject
D3DKMTWaitForSynchronizationObject2
D3DKMTWaitForSynchronizationObjectFromCpu
D3DKMTWaitForSynchronizationObjectFromGpu
D3DREF8.DLL
DebugBreak
DebugSetMute
Declaration Token #%d: Cannot set stream input without first setting stream #.  Aborting shader decl. validation.
Declaration Token #%d: Cannot set tesselator stream input without first setting tesselator stream #.  Aborting shader decl. validation.
Declaration Token #%d: Duplicate declaration of input register %d as destination for normal generation.
Declaration Token #%d: Input reg %d specified as destination for normal generation is already declared elsewhere.
Declaration Token #%d: Input register %d already declared.
Declaration Token #%d: Input register number must not be specified (does not apply) for UV tesselation.
Declaration Token #%d: Invalid input reg num: %d. Max allowed is %d.
Declaration Token #%d: Invalid reg num: %d. Max allowed is %d.
Declaration Token #%d: SKIP not permitted in fixed-function declarations.
Declaration Token #%d: Stream number %d has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. Max allowed is %d.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. There are no streams available.  Aborting shader decl. validation.
Declaration Token #%d: Stream number must not be specified for tesselator stream.
Declaration Token #%d: Stream selector token must be followed by at least one stream data definition token.
Declaration Token #%d: Tess datatype must be FLOAT2 for UV generation.
Declaration Token #%d: Tesselation stream has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Unrecognized stream data type.
Declaration Token #%d: Unrecognized stream declaration token.  Aborting shader decl. validation.
Declaration Token #%d: Write to const register %d is not valid.  There are no constant registers available.
Declaration Token #%d: Write to const register %d is out of range.  Max offset is %d.
Declaration Token %d: Source input register %d for normal generation has not been declared.
def cannot be co-issued.
DefWindowProcA
DeleteCriticalSection
DeleteDC
DeleteObject
Description
Dest shift not allowed for tex* instructions.
Dest shifts not allowed for vertex shaders.
Dest write mask cannot be empty.
Dest write mask must be .rgb, .a, or .rgba (all).
Dest write mask must be .rgb, or .rgba (all) for dp3.
Destination for def instruction must be of the form c# (# = reg number, no modifiers).
Destination for texdepth must be r5.
Destination of texm3x2depth instruction (t%d) is not available elsewhere in shader.
Destination shift not allowed for tex* instructions.
DestroyIcon
Different relative addressing of constant registers cannot be combined in one instruction.
Diffuse
Direct3D Shader Validator: Out of memory.
Direct3D8EnableMaximizedWindowedModeShim
Direct3DCreate8
DisableDM
DisableGB
DisableMMX
DisableNVPS
DisableProcessWindowsGhosting
DisablePSGP
DisableST
DisableThreadLibraryCalls
DisableVBFailovers
DisableVidMemVBs
DisconnectNamedPipe
display
DisplayConfigGetDeviceInfo
Dot-product needs color/vector pipeline to execute, so instruction co-issued with it cannot write to color components.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used by the dot product.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used.
dp3 needs color pipe to execute, so instruction co-issued with it cannot write to color components.
dp3 which writes alpha cannot co-issue since it uses up both the alpha and color pipes.
dp4 cannot be co-issued.
dp4 instruction cannot be co-issued.
Driver failed to create the requested pixel shader. Please contact your friendly video card manufacturer to inquire why this problem was encountered.
DriverName
DriverStyle
Dst modifiers not allowed for vertex shaders.
DWM_DX_FULLSCREEN_TRANSITION_EVENT
dwmapi.dll
DwmIsCompositionEnabled
DXT1H
DXT1J
DXT1t
DXT1t 
DXT1t#
DXT1w0t(
DXT2t
DXT3K
DXT3M
DXT3t
DXT3u
DXT4t
DXT4w t
DXT5N
DXT5P
DXT5t
DXT5u
DXT5u>
E,j<j@
EmptyClipboard
EmulatePointSprites
EnterCriticalSection
EnumDisplayDevicesA
EnumDisplayMonitors
EnumDisplaySettingsA
EtwEventWriteNoRegistration
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ext-ms-win-rtcore-ntuser-dpi-l1-1-0.dll
F _^[
F 9N$v
F j8j@
F Pj@
f#F\f
f#V\f
F$_^[
F(h8~
F(Pj@
F,_^[
F\=DXT3
F<t]3
F4;F0t
F9W(t
FileDescription
FileVersion
first
First arithmetic instruction cannot have co-issue ('+') set; there is no previous arithmetic instruction to pair with.
First source for cnd instruction must be 'r0.a'.
First source parameter for bem must be temp (r#) or constant (c#) register.
FlipNoVsync
floor
FlushFileBuffers
ForceDriverFlagsOff
ForceRefreshRate
Format for address register must be a0.x.
FreeLibrary
fRichq>
FSoftware\Microsoft\Direct3D
FtWPQ
fxF+fw>
FXj@t;
G(@t-
G(@tI
G,Hu$
G@+GD;
G4_^[
G8+G(
GD_^[
GDI32.dll
GdiEntry1
GdiEntry13
GetClientRect
GetCurrentDpiInfo
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetCursor
GetCursorPos
GetDC
GetDesktopWindow
GetDeviceCaps
GetDeviceGammaRamp
GetDIBits
GetFileVersionInfoExA
GetFileVersionInfoSizeExA
GetForegroundWindow
GetIconInfo
GetKeyState
GetLastError
GetLengthSid
GetModuleFileNameA
GetModuleHandleA
GetMonitorInfoA
GetNativeSystemInfo
GetNearestColor
GetObjectA
GetPrivateDDITable
GetProcAddress
GetProcessDpiAwarenessInternal
GetProcessHeap
GetRandomRgn
GetRegionData
GetSidLengthRequired
GetSidSubAuthority
GetSystemDirectoryA
GetSystemMetrics
GetSystemPaletteEntries
GetSystemTimeAsFileTime
GetThreadDesktop
GetTickCount
GetUserObjectInformationA
GetVersionExA
GetWindowDC
GetWindowInfo
GetWindowLongA
GetWindowRect
GetWindowThreadProcessId
GL _[]
GL$_^[
GL(_^[
GlobalAddAtomA
GLV;GHv
GRGBu
Gt_^[
Hardware\DirectDrawDrivers
HeapAlloc
HeapFree
HIGHDPIAWARE
HSVWj
Incomplete texm* sequence.
Individual instruction in co-issue pair cannot write both alpha and color component(s).
InitializeAcl
InitializeCriticalSection
InitializeSecurityDescriptor
InitializeSid
InstalledDisplayDrivers
Instruction cannot have co-issue ('+') set without a previous arithmetic instruction to pair with.
Instruction modifiers are not allowed for tex* instructions.
Instruction modifiers not allowed for tex* instructions.
Instruction not supported by version %d.%d pixel shader.
Instruction not supported by version %d.%d vertex shader.
INTERNAL ERROR:View matrix in D3DFE_PROCESSVERTICES structure must be aligned to 16 bytes
InternalName
IntersectRect
Invalid const register num: %d. Max allowed is %d.
Invalid dest reg num: %d. Max allowed for this reg type is %d.
Invalid destination register number: %d. Max allowed for this register type is %d.
Invalid destination shift.
Invalid dst modifier.
Invalid dst shift.
Invalid instruction modifier.
Invalid parameter count.
Invalid reg num %d (%s source param).  Max allowed for this type is %d.
Invalid reg num: %d for %s source param. Max allowed for this type is %d.
Invalid reg type (%s source param).
Invalid reg type for %s source param.
Invalid reg type for dest param.
Invalid register type for destination param.
Invalid src mod for %s source param.
Invalid src mod for tex* instruction (%s source param).
Invalid src swizzle for %s source param.
Invalid texm* register.
Invalid texm* sequence.
IsDebuggerPresent
IsIconic
IsProcessorFeaturePresent
IsValidSid
IsWindow
IsWindowVisible
IsWow64Process
IsZoomed
jjjjj
jLowVidMemCap
jPj@tE
K09_4tE
kD$,,
KERNEL32
KERNEL32.dll
KH_^[
KV_DISPLAY
L$ J;
L$ PW
L$ QP
L$ WWR
L$$PR
L$,_^
L$,_^[3
L$,_^3
L$,Qh
L$,QP
L$\_^[3
L$|_^[3
L$|_^3
L$<_^
L$<_^[3
L$<_^3
L$4_^[3
L$D;T$0
L$d^3
L$d_^[3
L$d_^3
L$h^[3
L$hPW
L$l_^[3
L$LQS
L$t_^[3
L$T_^[3
L1l1"5p5w5
L2=3I3
LeaveCriticalSection
LegalCopyright
LoadDebugRuntime
LoadLibraryA
LoadLibraryW
Local\__DDrawCheckExclMode__
Local\__DDrawExclMode__
Local\D3D8CheckFullscreenSemaphore
LocalAlloc
LocalFree
lstrcmpA
malloc
Maximum of 3 cmp instructions allowed.
Maximum of 4 dp4 instructions allowed.
MaxPixelShaderValue
memcpy
memset
Microsoft
Microsoft Corporation
Microsoft Direct3D
Microsoft.Windows.Graphics.D3D8
MinimumLocalVidMem
mscat32.dll
msvcrt.dll
MultiByteToWideChar
Multiple constant registers cannot be read by a matrix op.
Multiple dependent texture reads are disallowed (%s source param).  Texture read results can be used as an address for subsequent read, but the results from that read cannot be used as an address in yet another subsequent read.
Multiple input registers cannot be read by a matrix op.
Multiple phase markers not permitted.  Aborting shader validation.
Must use texture register a dest param for tex* instructions.
N(G;y
nop cannot be co-issued.
nop instruction cannot be co-issued.
Normal
Normal2
ntdll.dll
Number of instruction slots used too high: %d. Max. allowed is %d.
O4_^[
OffsetRect
OH_^[
OjDj@
One of the instructions in a co-issue pair must write to alpha only (.a writemask).
Only one use of texdepth is permitted.
Only the mov instruction is allowed to write to the address register.
OP_^[
OpenAdapter
OpenClipboard
OpenEventW
OpenInputDesktop
OpenMutexA
OriginalFilename
OsThunkD3dContextCreate
OsThunkD3dContextDestroy
OsThunkD3dContextDestroyAll
OsThunkD3dDrawPrimitives2
OsThunkD3dValidateTextureStageState
OsThunkDdAttachSurface
OsThunkDdBlt
OsThunkDdCanCreateD3DBuffer
OsThunkDdCanCreateSurface
OsThunkDdCreateD3DBuffer
OsThunkDdCreateSurface
OsThunkDdCreateSurfaceEx
OsThunkDdCreateSurfaceObject
OsThunkDdDeleteDirectDrawObject
OsThunkDdDeleteSurfaceObject
OsThunkDdDestroyD3DBuffer
OsThunkDdDestroySurface
OsThunkDdFlip
OsThunkDdFlipToGDISurface
OsThunkDdGetAvailDriverMemory
OsThunkDdGetBltStatus
OsThunkDdGetDC
OsThunkDdGetDriverInfo
OsThunkDdGetDriverState
OsThunkDdGetFlipStatus
OsThunkDdGetScanLine
OsThunkDdLock
OsThunkDdLockD3D
OsThunkDdQueryDirectDrawObject
OsThunkDdReenableDirectDrawObject
OsThunkDdReleaseDC
OsThunkDdResetVisrgn
OsThunkDdSetExclusiveMode
OsThunkDdSetGammaRamp
OsThunkDdUnlock
OsThunkDdUnlockD3D
OsThunkDdWaitForVerticalBlank
Out of memory
Out of memory.
Out of memory.  Aborting shader decl. validation.
OutputDebugStringA
OutputDebugStringW
PeekNamedPipe
phase marker cannot be co-issued.
Phase marker cannot be co-issued.
PixelShaderVersion
Point size
Position
Position2
PostMessageA
PQh(h
PQSVW
PQVQW
Primary Display Driver
ProcessInfo
ProductName
ProductVersion
PWh(h
QCOMu
qD9QHr
QLSVW
QQPRj
QSVWj
QueryPerformanceCounter
QueryPerformanceFrequency
r/HPSh
r/HPWh
r0 must be written by shader. Uninitialized component%s(*): %s
r0 must be written by shader. Uninitialized component%s(*): %s. Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd. Also: Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
Read of uninitialized component%s(*) in %s%d: %s
Read of uninitialized component%s(*) in %s%d: %s. Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first. Also: Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
ReadFile
Reg num: %d for %s source param on matrix instruction causes attempt to access out of range register number %d. Max allowed for this type is %d.
RegCloseKey
RegCreateKeyA
RegCreateKeyExA
RegEnumKeyA
RegGetValueA
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. An r# register may be used as the destination for a tex* instruction at most once before the phase marker and once after. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. Second use of this register as a tex* destination is only available after the phase marker. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. To perform two tex* instructions with the same destination register, they must be separated by inserting a phase marker. 
RegisterHotKey
RegOpenKeyA
RegOpenKeyExA
RegQueryValueExA
RegSetValueExA
Relative addressing of constant register must reference a0.x only.
ReleaseDC
ReleaseMutex
ReleaseSemaphore
Reserved bit(s) set in destination parameter token!  Aborting validation.
Reserved bit(s) set in instruction parameter token!  Aborting validation.
Reserved bit(s) set in source %d parameter token!  Aborting validation.
ResetEvent
RGBGt
rIHPR
RSDSv9UN7
RVQSP
S(+S 
schemaVersion
second
Second source parameter for bem must be temp (r#) register.
Second source parameter for texm3x3spec must be c#.
SelectObject
SendMessageA
SetClipboardData
SetCursor
SetCursorPos
SetErrorMode
SetForegroundWindow
SetNamedPipeHandleState
SetProcessDpiAwarenessInternal
SetRect
SetRectEmpty
SetSecurityDescriptorDacl
SetSecurityInfo
SetStretchBltMode
SetUnhandledExceptionFilter
SetWindowLongA
SetWindowPos
ShowFrameRate
ShowWindow
Sleep
Software\Microsoft\Direct3D\Drivers
Software\Microsoft\Direct3D\MostRecentApplication
Software\Microsoft\Direct3D\ReferenceDevice
Software\Microsoft\DirectDraw
Software\Microsoft\DirectDraw\GammaCalibrator
Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers
SoftwareOnly
Source for texcrd requires component selector .xyw(==.rga), or .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Source swizzle not allowed for tex* instruction (%s source param).
Specular
s-QWV
Src reg for tex* instruction must be t# register (%s source param).
Src selector .b (%s source param) is only valid for instructions that occur in the alpha pipe.
sscanf_s
ssj(j@
strcpy_s
StretchBlt
StringFileInfo
strrchr
SUBSYS_
SVWhTD
SVWj<
SVWj0
SVWj03
SWPQQQ
SystemParametersInfoA
t!Qj@
t"Pj@
t# registers must appear in sequence (i.e. t0 before t2 OK, but t1 before t0 not valid).
T$ ;T$
T$ PS
t$$9L$,uh
T$$Rj
T$$Wj
t$(PS
T$,;T$0
T$,;T$L
T$,9T$0
T$,RQ
T$,uB
t$@;x
T$<RW
t$8WS
t$hPQ
t$hWP
T$L;D$,u8;
T$Lf;G
t$lQRS
t$T;B
t%jhj@
t)=DXT1t"=DXT2
t;9^tt6
t<Ph 
t0j,j
t0Pj@
T0X0\0`027
t1x1|1
t5Pj@
t7SVW
t9jZW
TA;L$Pr
TerminateProcess
Tex register t%d already declared.
tex* instructions cannot be after arithmetic instructions within one phase of the shader.  Each phase can have a block of tex* instructions followed by a block of arithmetic instructions. 
tex* instructions cannot be after arithmetic instructions. The exception is if a phase marker is present in the shader - this separates a shader into two phases.  Each phase may have a set of tex* instructions followed by a set of arithmetic instructions.  
tex* instructions must write all components.
texcrd must use .xyz(=.rgb) destination writemask.
texcrd with _dw(=_da) source modifier must use .xy(=.rg) destination writemask.
texld/texkill/texdepth instructions must write all components.
Texture
Texture coordinate register t%d read more than once in shader with different source selector (swizzle). Multiple reads of identical texture coordinate register throughout shader must all use identical source selector. Note this does not restrict mixing use and non-use of a source modifier (i.e. _dw/_da or _dz/_db, depending what the swizzle allows) on these coordinate register reads.
Texture register result of texbem or texbeml instruction must not be read by tex* instruction. Affected components(*) of %s source param: %s
Texture register result of texkill%s or texm*pad instructions must not be read. Affected components(*) of %s source param: %s
Texture register that has been read by a tex* instruction cannot be read by a non-tex* instruction. Affected components(*) of %s source param: %s
The current tex* instruction reads from %c%d, which was written earlier by another tex* instruction in the same block of tex* instructions.  Dependent reads are not permitted within a single block of tex* instructions.  To perform a dependent read, separate texture coordinate derivation from the tex* instruction using the coordinates with a 'phase' marker.
The only valid modifiers for the first source parameter of lrp are: reg (no mod) or 1-reg (complement).
The only valid write masks for the FRC instruction are .xy and .y.
third
tJj0j
tmhHe
tn;7uc
To use bem, a phase marker must be present later in the shader.
Too many (%d) arithmetic instructions after phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) arithmetic instructions before phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) arithmetic instructions. Max. allowed (counting any co-issued pairs as 1) is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many (%d) tex* instructions after phase marker. Max. allowed in a phase is %d.
Too many (%d) tex* instructions before phase marker. Max. allowed in a phase is %d.
Too many (%d) tex* instructions. Max. allowed is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many arithmetic instruction slots used: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Too many texture addressing instruction slots used: %d. Max. allowed is %d. (Note that some texture addressing instructions may use up more than one instruction slot)
Total number of instruction slots used too high: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
tpj8j@
tPjhj
tQhxD
Translation
tTPWV
u WVP
u#91t
u\h,Q
uJ9D$
ulj8j@
UnhandledExceptionFilter
UnionRect
Unrecognized instruction. Aborting pixel shader validation.
Unrecognized instruction. Aborting vertex shader validation.
UnregisterHotKey
UsePSConverter
User/kernel-mode driver mismatch
USER32
USER32.dll
user32.dll
UseVSConverter
Using a temp register (r#) as source for texld requires component selector .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Using a texture coordinate register (t#) as source for texld requires component selector .xyw(=.rga), or .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
UTCReplace_AppSessionGuid
UYVYt
UYVYtP
v#QPh
v#RPhh
v{PRh
v}PQh
ValidatePixelShader
ValidateVertexShader
VarFileInfo
VerifyVersionInfoA
VerQueryValueA
VerSetConditionMask
Version Token: %d.%d is not a supported pixel shader version. Aborting pixel shader validation.
Version Token: %d.%d is not a supported vertex shader version. Aborting vertex shader validation.
Version token: 0x%x indicates a pixel shader.  Vertex shader version token must be of the form 0xfffe****.
Version Token: 0x%x indicates a vertex shader.  Pixel shader version token must be of the form 0xffff****.
Version Token: 0x%x is invalid. Pixel shader version token must be of the form 0xffff****. Aborting pixel shader validation.
Version Token: 0x%x is invalid. Vertex shader version token must be of the form 0xfffe****. Aborting vertex shader validation.
Version Token: Code and declaration pointers passed into shader vertex shader validator cannot both be NULL.
Version Token: Pixel shader version %d.%d is too high for device.  Maximum supported version is %d.%d. Aborting shader validation.
Version Token: Vertex shader version %d.%d is too high for device. Maximum supported version is %d.%d. Aborting shader validation.
Vertex shader must minimally write first two (x,y) components of oPos output register.
Vertex shader must minimally write first two (x,y) components of oPos output register.  Affected component%s(*): %s
vGPQh
VHu0;
VS_VERSION_INFO
VW<0t
VWj0j@
VWjTj
w ^_[
w5t)=
WaitForSingleObject
wcscpy_s
wcsrchr
When a phase marker is present in a shader, texdepth is only permitted after the phase marker.
When a phase marker is present in a shader, texkill is only permitted after the phase marker.
WideCharToMultiByte
wintrust.dll
WinVerifyTrust
wIt"-
wlt^=
Wow64EnableWow64FsRedirection
WriteFile
Writemask for bem must be '.rg'
wUt&=
x@;T$
x@SVW
XGfp>
xQhTk
Y,9z$t
Y__^[
y{_^[
y>_^[
y4_^[
yD;zDu8
YUY2t!
YUY2tH
YUY2u
Z0F1Q1\1g1
