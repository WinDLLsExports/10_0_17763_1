 @8l$Pt
 @8t$0t
 A^_^
 A^_^][
 A_A^_
 A_A^A\
 A_A^A]A\_
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!\$ D
!\$(A
!\$(H
!\$0A
!\$0I
!\$8H
!|$0!|$(L
!|$8!|$0!|$(H
!|$8!|$0!|$(M
!|$8A
!l$0!l$(L
!l$8A
!t$(H
!t$0A
!t$8!t$0!t$(H
!t$8!t$0!t$(M
!t$8H
!This program cannot be run in DOS mode.
#CWdfWin32Target
$<O=r"wIL
$0< u
%02d.%03d
%s:%u(%S)
%s\%s
(cchNewID + cchInstanceID) must be less than (MAX_DEVICE_ID_LEN - 1).
)#ZN5
*njkH
,[|$^=L
.00cfg
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$00$brc
.data$dk00$brc
.data$zz
.data$zz$brc
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.pszString should not be NULL
.rdata
.rdata$00
.rdata$00$brc
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$lp00wudfx.dll!cold
.text$mn
.text$mn$00
.text$np
.text$x
.text$yd
.text$zy
.text$zz
.xdata
/fD;e
;@txH
?{uQH
@.data
@.reloc
@.rsrc
@;Cdu
@`H9_
@855V
@8k(t
@8t$0t
@8w9t
@8wPt
@A^_]
@A^_^
@A_A]]
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A]A\_^]
@SUVWATAVH
@SUVWAVH
@SUVWH
@SVWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAVH
[s7ph
\$ E3
\$ UATAVH
\$ UH
\$ UVWATAUAVAW
\$ UVWATAUAVAWH
\$ UVWATAVH
\$ UVWATAWH
\$ UVWAVAWH
\$(E3
\$0E3
\$8E3
\$8fD9K
\$PHc
\Callback\PowerState
__C_specific_handler
__dllonexit
_amsg_exit
_callnewh
_errno
_initterm
_lock
_onexit
_purecall
_unlock
_vsnprintf_s
_vsnwprintf_s
_wcsicmp
_XcptFilter
` AUH
` AVH
` AWH
` UAUAVH
` UAVAWH
`.rdata
`A^_]
`A^_^H
`A_A\_^]
`A_A\_^]H
`A_A^A]A\_^]
`PAGEWdfV=
{ ATAUAVH
{ ATAVAWH
{ ATH
{ AUAVAWH
{ AVH
{ AWH
{ UATAUAVAWH
{,9SXv
{?e:HC
{pD9{
{X@8{(t
|$ AVH
|$ AWH
|$ E3
|$ UATAUAVAWH
|$ UAVAWH
|$(fD
|$@E3
|$0E3
|$XL9
|qw3x
}0r2H
~Y@8~XvD
+{tea1
<H9~ht
<no typename given>
=L9o<
> sFH
>FxObject
040904B0
0A^_^
0A_A\_
0A_A^]
0A_A^_
0A_A^A\
0A_A^A]_^
0A_A^A]A\_^]
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
1GetActiveProcessorGroupCount
2IU<!u
4ZU|S
7fD;>u
8_^][
9;tHH
9\$$r
9^PsxH
9`-b\
9~(u8H
9t$HH
9t$LH
9u9H9O
A parameter (DxState, Enabled, or UserControlOfWakeSettings) is out range
A parameter (DxState, IdleCaps, Enabled, or UserControlOfIdleSettings) is out range
A;E,u
A;F,u
A;Fdu
A;G,u
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^]
A^A\_^][
A^A\_H
A^A]]
A^A]_
A^A]_^]
A^A]A\
A^A]A\_^
A_A\_
A_A]A\
A_A]A\_^
A_A^]
A_A^_
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\H
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]A\]
A_A^A]A\^
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_H
AcknowledgeInterrupt message to reflector returned failure. Check UMDF log for failure reason. 
AcquireLock: Invalid operation. The device is not configured to have callback lock
ActivityId should not be NULL
Added ID string must be at least one character.
advapi32
ADVAPI32.dll
advapi32.dll
aL@]VDriverCreatedFile was released without a preceding Close operation
api-ms-win-core-com-l1-1-0.dll
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
api-ms-win-eventing-provider-l1-1-0
AppID
APPID
ATAUAWH
ATAVAWH
ATL$__a
ATL$__m
ATL$__z
Attempt to change buffer on a non-preallocated memory object
Attempt to do multiple mapping of same resource, or multiple mapping in same resource range
AUAVAWH
B8T#1rDH
B8T#1rhH
B8T#1rVH
B8T#1rZH
B8T;1r
B8T;1r7H
B8T;1rMH
B8T+1rhH
Bad driver parameter
bAllowZeroLengthRequests is not a valid BOOL
bDefaultQueue is not a valid BOOL
bPowerManaged is not a valid BOOL
Buffer && BufferLength should not be NULL
Buffer should be NULL
Buffer should not be NULL
BusEnumerator
c AUAVAWH
c AWH
C,FxDr
CacheType incorrect
Can not reuse Create request
Cancel Trap
Canceled request should have a canceled HRESULT
CancelWaitableTimer
Cannot assign state to unregsitered interface.
Cannot call IWDFRemoteTarget::OpenFileByName() when it is already open. Call Close() first.
Cannot call IWDFRemoteTarget::OpenRemoteInterface() when it is already open. Call Close() first.
Cannot format a request targeted to USB device for Ioctl, use FormatControlTransfer instead
Cannot format a request targeted to USB device for read, call this method on appropriate pipe instead
Cannot format a request targeted to USB device for write, call this method on appropriate pipe instead
Cannot format a request targeted to USB pipe for Ioctl, use FormatControlTransfer on USB target device instead
Can't delete default queue
Can't delete object
Can't reuse a sent request
Can't set completion callback on a sent request
cbDataBufferSize > m_cchCompositeCompatibleIDs * sizeof(WCHAR)
cbDataBufferSize > m_cchCompositeHardwareIDs * sizeof(WCHAR)
cbDataBufferSize > m_cchCompositeInstanceID * sizeof(WCHAR)
cbDataLength not sizeof(DWORD)
cbDataLength not sizeof(QWORD)
cchString >= REGSTR_VAL_MAX_HCID_LEN
cCWdfFile::GetObjectFromInterface
ChangeTimerQueueTimer
ChangeTimerQueueTimer failed
CharNextW
CloseHandle
CloseThreadpool
CloseThreadpoolTimer
CloseThreadpoolWait
CloseThreadpoolWork
CLSID
CoCreateInstance
CompanyName
Completing a cancelable request. This can result in a race condition that causes double completion. Call IWDFIoRequest::UnMarkCancelable before IWDFIoRequest::Complete
Component Categories
Configuration should not be NULL
Configuration->AutomaticSerialization is not a valid BOOL
Configuration->OnInterruptIsr should not be NULL
Configuration->ShareVector is not a valid WDF_TRI_STATE
Context should be NULL when done
Context should contain a Continuous Reader
Context should not be NULL
Continuous Readers should have the same parent
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not find CWdfRemoteTarget in either list
Could not find CWdfRemoteTarget in m_TargetList. Perhaps CloseForQueryRemove() was called twice?
Could't enqueue work item
Count should be > 0
Count should be 0
CreateEventW
CreateFileW
CreateThreadpool
CreateThreadpoolTimer
CreateThreadpoolWait
CreateThreadpoolWork
CreateTimerQueue
CreateTimerQueueTimer
CreateWaitableTimerA
CStringID::CreateAndInitialize
CWdfCmResourceList
CWdfCmResourceList::GetCount
CWdfCmResourceList::GetDescriptor
CWdfCmResourceList::MapIoSpaceWorker
CWdfCmResourceList::ValidateAndClearMapping
CWdfCmResourceList::ValidatePortAddressRange
CWdfCmResourceList::ValidateRegisterPhysicalAddressRange
CWdfCmResourceList::ValidateRegisterSystemAddressRange
CWdfCmResourceList::ValidateRegisterSystemBaseAddress
CWdfCmResourceList::ValidateResourceUnmap
CWdfDevice
CWdfDevice::_CreateRequestCompletionRoutine
CWdfDevice::_ProcessCreateRequestCompletion
CWdfDevice::_RetrieveUnifiedDevicePropertyStoreWorker
CWdfDevice::~CWdfDevice
CWdfDevice::AcquireLock
CWdfDevice::AddCompositeCompatibleID
CWdfDevice::AddCompositeHardwareID
CWdfDevice::AddIoTarget
CWdfDevice::AssignCompositeInstanceID
CWdfDevice::AssignDeviceInterfaceState
CWdfDevice::AssignReferenceString
CWdfDevice::AssignS0IdleSettings
CWdfDevice::AssignS0IdleSettingsEx
CWdfDevice::AssignSxWakeSettings
CWdfDevice::CleanupFile
CWdfDevice::CloseFile
CWdfDevice::CommitPnpState
CWdfDevice::CommitTransportSettings
CWdfDevice::ConfigureForwarding
CWdfDevice::ConfigureRequestDispatching
CWdfDevice::CreateAndInitialize
CWdfDevice::CreateDeviceInterface
CWdfDevice::CreateFileHandleTarget
CWdfDevice::CreateFileW
CWdfDevice::CreateFxFileForHostFile
CWdfDevice::CreateHidInterface
CWdfDevice::CreateInterrupt
CWdfDevice::CreateIoQueue
CWdfDevice::CreateRemoteInterface
CWdfDevice::CreateRemoteTarget
CWdfDevice::CreateRequest
CWdfDevice::CreateSymbolicLinkW
CWdfDevice::CreateSymbolicLinkWithReferenceString
CWdfDevice::CreateUsbTargetDevice
CWdfDevice::CreateWdfFile
CWdfDevice::CreateWdfFileForOpenHandle
CWdfDevice::CreateWorkItem
CWdfDevice::DeleteDeviceFromFailedCreate
CWdfDevice::DeviceControl
CWdfDevice::DispatchCleanupClose
CWdfDevice::DispatchPnP
CWdfDevice::DispatchRequest
CWdfDevice::FdoInitialize
CWdfDevice::FindDeviceInterface
CWdfDevice::FlushAllQueuesByFileObject
CWdfDevice::FlushAllTargetsByFileObject
CWdfDevice::FlushBuffers
CWdfDevice::FowardToLowerDriverAndDeleteRequest
CWdfDevice::GetDefaultIoQueue
CWdfDevice::GetDefaultIoTarget
CWdfDevice::GetDeviceStackIoTypePreference
CWdfDevice::GetDriver
CWdfDevice::GetHardwareRegisterMappedAddress
CWdfDevice::GetPnpState
CWdfDevice::GetSystemPowerAction
CWdfDevice::Initialize
CWdfDevice::MapIoSpace
CWdfDevice::PostEvent
CWdfDevice::ProcessCloseFile
CWdfDevice::QueryInformationFile
CWdfDevice::ReadFile
CWdfDevice::ReadFromHardware
CWdfDevice::ReadRegister
CWdfDevice::ReadRegisterBuffer
CWdfDevice::RegisterRemoteInterfaceNotification
CWdfDevice::RegisterRemoteInterfaceNotificationInternal
CWdfDevice::ReleaseLock
CWdfDevice::RemoteInterfaceArrival
CWdfDevice::RemoteInterfaceRemoval
CWdfDevice::RemoveQueueReferences
CWdfDevice::ResumeIdle
CWdfDevice::ResumeProcessingForPower
CWdfDevice::RetrieveDeviceInstanceId
CWdfDevice::RetrieveDeviceName
CWdfDevice::RetrieveDevicePropertyStore
CWdfDevice::RetrieveUnifiedDevicePropertyStore
CWdfDevice::SetInformationFile
CWdfDevice::SetPnpState
CWdfDevice::SetupCallbacks
CWdfDevice::StopIdle
CWdfDevice::StopProcessingForPower
CWdfDevice::UnmapIoSpace
CWdfDevice::WriteFile
CWdfDevice::WriteRegister
CWdfDevice::WriteRegisterBuffer
CWdfDevice::WriteToHardware
CWdfDeviceInit::AutoForwardCreateCleanupClose
CWdfDeviceInit::GetPnpCapability
CWdfDeviceInit::GetPnpCapabilityInternal
CWdfDeviceInit::RetrieveDeviceInstanceId
CWdfDeviceInit::RetrieveDevicePropertyStore
CWdfDeviceInit::RetrieveUnifiedDevicePropertyStore
CWdfDeviceInit::SetIoTypePreference
CWdfDeviceInit::SetLockingConstraint
CWdfDeviceInit::SetPnpCapability
CWdfDeviceInit::SetPowerPolicyOwnership
CWdfDeviceInterface::AssignState
CWdfDriver
CWdfDriver::CreateDevice
CWdfDriver::CreatePreallocatedWdfMemory
CWdfDriver::CreateWdfMemory
CWdfDriver::CreateWdfMemoryWorker
CWdfDriver::CreateWdfObject
CWdfDriver::IsVersionAvailable
CWdfDriver::OnAddDevice
CWdfDriver::RetrieveVersionString
CWdfDriverCreatedFile
CWdfDriverCreatedFile::~CWdfDriverCreatedFile
CWdfDriverCreatedFile::AcquireLock
CWdfDriverCreatedFile::AssignContext
CWdfDriverCreatedFile::Close
CWdfDriverCreatedFile::DeleteWdfObject
CWdfDriverCreatedFile::GetDevice
CWdfDriverCreatedFile::GetRelatedFileObject
CWdfDriverCreatedFile::ReleaseLock
CWdfDriverCreatedFile::RetrieveContext
CWdfDriverCreatedFile::RetrieveCountedFileName
CWdfDriverCreatedFile::RetrieveFileName
CWdfFile
CWdfFile::GetDevice
CWdfFile::GetInitiatorProcessId
CWdfFile::GetRelatedFileObject
CWdfFile::RetrieveCountedFileName
CWdfFile::RetrieveFileName
CWdfHidInterface
CWdfHidInterface::CreateAndInitialize
CWdfHidInterface::NotifyPresence
CWdfInterrupt
CWdfInterrupt::AcquireInterruptLock
CWdfInterrupt::CreateAndInitialize
CWdfInterrupt::Disable
CWdfInterrupt::Enable
CWdfInterrupt::GetDevice
CWdfInterrupt::GetInfo
CWdfInterrupt::QueueWorkItemForIsr
CWdfInterrupt::ReleaseInterruptLock
CWdfInterrupt::SetExtendedPolicy
CWdfInterrupt::SetPolicy
CWdfInterrupt::TryToAcquireInterruptLock
CWdfInterruptThreadpool::CreateAndInit
CWdfInterruptThreadpool::UpdateThreadPoolThreadLimits
CWdfInterruptWaitblock::_CreateAndInit
CWdfIoQueue
CWdfIoQueue::AcquireLock
CWdfIoQueue::CancelForDriver
CWdfIoQueue::ConfigureRequestDispatching
CWdfIoQueue::DeleteWdfObject
CWdfIoQueue::DispatchEvents
CWdfIoQueue::DispatchRequestToDriver
CWdfIoQueue::Dispose
CWdfIoQueue::Drain
CWdfIoQueue::DrainSynchronously
CWdfIoQueue::FlushByFileObject
CWdfIoQueue::ForwardRequest
CWdfIoQueue::GetDevice
CWdfIoQueue::GetRequest
CWdfIoQueue::GetState
CWdfIoQueue::HostIrpCancelForDriver
CWdfIoQueue::Initialize
CWdfIoQueue::IsIoEventHandlerRegistered
CWdfIoQueue::IsState
CWdfIoQueue::ProcessAcknowledgedRequests
CWdfIoQueue::ProcessCancelledRequests
CWdfIoQueue::ProcessCancelledRequestsOnQueue
CWdfIoQueue::ProcessPowerEvents
CWdfIoQueue::ProcessPurgeComplete
CWdfIoQueue::ProcessReadyNotify
CWdfIoQueue::ProcessStopComplete
CWdfIoQueue::Purge
CWdfIoQueue::PurgeSynchronously
CWdfIoQueue::QueuePurge
CWdfIoQueue::QueueRequest
CWdfIoQueue::QueueRequestFromForward
CWdfIoQueue::QueueStop
CWdfIoQueue::ReleaseLock
CWdfIoQueue::RequestCancelable
CWdfIoQueue::RequestCompleteEvent
CWdfIoQueue::RequeueRequest
CWdfIoQueue::ResumeProcessingForPower
CWdfIoQueue::RetrieveNextRequest
CWdfIoQueue::RetrieveNextRequestByFileObject
CWdfIoQueue::SetState
CWdfIoQueue::Start
CWdfIoQueue::Stop
CWdfIoQueue::StopProcessingForPower
CWdfIoQueue::StopSynchronously
CWdfIoQueue_WorkItemThunk
CWdfIoRequest
CWdfIoRequest::_CancelRoutine
CWdfIoRequest::_TimerCallback
CWdfIoRequest::AssignContext
CWdfIoRequest::AsyncSend
CWdfIoRequest::CancelSentRequest
CWdfIoRequest::Complete
CWdfIoRequest::CompleteSubmitted
CWdfIoRequest::CompleteWithInformation
CWdfIoRequest::CreateTimer
CWdfIoRequest::DeleteWdfObject
CWdfIoRequest::FormatUsingCurrentType
CWdfIoRequest::ForwardToIoQueue
CWdfIoRequest::GetCompletedRequestType
CWdfIoRequest::GetCompletedUsbRequestType
CWdfIoRequest::GetCompletionParams
CWdfIoRequest::GetCompletionStatus
CWdfIoRequest::GetCreateParameters
CWdfIoRequest::GetCreateParametersEx
CWdfIoRequest::GetDeviceControlTransferParameters
CWdfIoRequest::GetDeviceIoControlParameters
CWdfIoRequest::GetEffectiveIoType
CWdfIoRequest::GetFileObject
CWdfIoRequest::GetInformation
CWdfIoRequest::GetInputMemory
CWdfIoRequest::GetIoctlParameters
CWdfIoRequest::GetIoQueue
CWdfIoRequest::GetObjectFromInterface
CWdfIoRequest::GetOutputMemory
CWdfIoRequest::GetPipeReadParameters
CWdfIoRequest::GetPipeWriteParameters
CWdfIoRequest::GetQueryInformationParameters
CWdfIoRequest::GetReadParameters
CWdfIoRequest::GetRequestorMode
CWdfIoRequest::GetRequestorProcessId
CWdfIoRequest::GetSetInformationParameters
CWdfIoRequest::GetStatus
CWdfIoRequest::GetUsbRequestContext
CWdfIoRequest::GetUserModeDriverInitiatedIo
CWdfIoRequest::GetWriteParameters
CWdfIoRequest::Impersonate
CWdfIoRequest::Initialize
CWdfIoRequest::InsertHeadRequestQueue
CWdfIoRequest::InsertTailRequestQueue
CWdfIoRequest::IsCanceled
CWdfIoRequest::IsFrom32BitProcess
CWdfIoRequest::IsFromUserModeDriver
CWdfIoRequest::MarkCancelable
CWdfIoRequest::PopulateMemoryObjects
CWdfIoRequest::RemoveFromRequestQueue
CWdfIoRequest::Requeue
CWdfIoRequest::RetrieveActivityId
CWdfIoRequest::RetrieveContext
CWdfIoRequest::RetrieveInputBuffer
CWdfIoRequest::RetrieveInputMemory
CWdfIoRequest::RetrieveOutputBuffer
CWdfIoRequest::RetrieveOutputMemory
CWdfIoRequest::Reuse
CWdfIoRequest::Send
CWdfIoRequest::SetActivityId
CWdfIoRequest::SetCompletionCallback
CWdfIoRequest::SetCompletionEvent
CWdfIoRequest::SetInformation
CWdfIoRequest::SetUserModeDriverInitiatedIo
CWdfIoRequest::StopAcknowledge
CWdfIoRequest::SynchronousSend
CWdfIoRequest::UnmarkCancelable
CWdfIoRequest::VerifierVerifyRequestIsDriverOwned
CWdfIoRequest::VerifierVerifyRequestIsInIQueueCallbackIoStopContext
CWdfIoRequest::VerifierVerifyRequestIsNotCancelable
CWdfIoTarget
CWdfIoTarget::_FormatGetSetInformationRequest
CWdfIoTarget::_FormatIoctlRequest
CWdfIoTarget::_FormatIoRequest
CWdfIoTarget::_RequestCancelled
CWdfIoTarget::_RequestCompletionRoutine
CWdfIoTarget::~CWdfIoTarget
CWdfIoTarget::AssignContext
CWdfIoTarget::CancelSentRequestsForFile
CWdfIoTarget::DecrementIoCount
CWdfIoTarget::Dispose
CWdfIoTarget::DrainPendedRequestsLocked
CWdfIoTarget::FormatGetSetInformationRequest
CWdfIoTarget::FormatIoctlRequest
CWdfIoTarget::FormatIoRequest
CWdfIoTarget::FormatRequestForFlush
CWdfIoTarget::FormatRequestForIoctl
CWdfIoTarget::FormatRequestForQueryInformation
CWdfIoTarget::FormatRequestForRead
CWdfIoTarget::FormatRequestForSetInformation
CWdfIoTarget::FormatRequestForWrite
CWdfIoTarget::GetState
CWdfIoTarget::GetTargetFile
CWdfIoTarget::GotoCloseState
CWdfIoTarget::GotoStartState
CWdfIoTarget::HandleFailedResubmit
CWdfIoTarget::IncrementIoCount
CWdfIoTarget::OnCompletion
CWdfIoTarget::Remove
CWdfIoTarget::RemoveCompletedRequestLocked
CWdfIoTarget::RequestCompletionRoutine
CWdfIoTarget::RetrieveContext
CWdfIoTarget::Start
CWdfIoTarget::Stop
CWdfIoTarget::SubmitLocked
CWdfIoTarget::SubmitPendedRequest
CWdfIoTarget::SubmitSync
CWdfIoTarget::WaitForDisposeEvent
CWdfMemoryBuffer
CWdfMemoryBuffer::CopyFromBuffer
CWdfMemoryBuffer::CopyFromMemory
CWdfMemoryBuffer::CopyToBuffer
CWdfMemoryBuffer::CreateAndInitalize
CWdfMemoryBuffer::GetDataBuffer
CWdfMemoryBuffer::SetBuffer
CWdfMemoryBuffer::SetBufferInternal
CWdfRegPropertyStore
CWdfRegPropertyStore::CreateDevicePropertyStore
CWdfRegPropertyStore::DeleteNamedValue
CWdfRegPropertyStore::GetNameAt
CWdfRegPropertyStore::GetNameCount
CWdfRegPropertyStore::GetNamedValue
CWdfRegPropertyStore::Reset
CWdfRegPropertyStore::SetNamedValue
CWdfRemoteInterface
CWdfRemoteInterface::~CWdfRemoteInterface
CWdfRemoteInterface::AssignContext
CWdfRemoteInterface::CreateAndInitialize
CWdfRemoteInterface::DeleteWdfObject
CWdfRemoteInterface::GetSymbolicLink
CWdfRemoteInterface::Initialize
CWdfRemoteInterface::OnClosedForQueryRemove
CWdfRemoteInterface::OnQueryRemove
CWdfRemoteInterface::OnRemoveCanceled
CWdfRemoteInterface::RegisterTargetDeviceNotification
CWdfRemoteInterface::RetrieveContext
CWdfRemoteInterface::UnregisterTargetDeviceNotification
CWdfRemoteInterfaceInit::CreateAndInitialize
CWdfRemoteInterfaceInit::GetInterfaceGuid
CWdfRemoteInterfaceInit::RetrieveSymbolicLink
CWdfRemoteInterfaceList::CreateRemoteInterface
CWdfRemoteInterfaceList::DispatchArrival
CWdfRemoteInterfaceList::Initialize
CWdfRemoteTarget
CWdfRemoteTarget::AssignContext
CWdfRemoteTarget::Close
CWdfRemoteTarget::CloseForQueryRemove
CWdfRemoteTarget::CreateAndInitialize
CWdfRemoteTarget::Dispose
CWdfRemoteTarget::FormatRequestForFlush
CWdfRemoteTarget::FormatRequestForIoctl
CWdfRemoteTarget::FormatRequestForQueryInformation
CWdfRemoteTarget::FormatRequestForRead
CWdfRemoteTarget::FormatRequestForSetInformation
CWdfRemoteTarget::FormatRequestForWrite
CWdfRemoteTarget::GetState
CWdfRemoteTarget::GetTargetFile
CWdfRemoteTarget::OnQueryRemove
CWdfRemoteTarget::OnRemoveComplete
CWdfRemoteTarget::OpenFileByName
CWdfRemoteTarget::OpenRemoteInterface
CWdfRemoteTarget::OpenTargetHandle
CWdfRemoteTarget::Reopen
CWdfRemoteTarget::RetrieveContext
CWdfRemoteTarget::SetCallbackComplete
CWdfRemoteTarget::SetCallbackInProgress
CWdfRemoteTarget::Start
CWdfRemoteTarget::Stop
CWdfRequest already completed
CWdfRequest is already in queue
CWdfRequestQueue::~CWdfRequestQueue
CWdfRequestQueue::CancelRoutineInternal
CWdfRequestQueue::InsertInQueue
CWdfRequestQueue::IsRequestInQueue
CWdfRequestQueue::RemoveNextRequestFromQueue
CWdfRequestQueue::RemoveRequestFromQueueByContext
CWdfTransportSettings::AddCompositeCompatibleID
CWdfTransportSettings::AddCompositeHardwareID
CWdfTransportSettings::AddID
CWdfTransportSettings::AssignCompositeInstanceID
CWdfTransportSettings::AssignReferenceString
CWdfTransportSettings::CommitTransportSettings
CWdfTransportSettings::Initialize
CWdfTransportSettings::TransportQueryHardwareCompatibleID
CWdfTransportSettings::TransportQueryID
CWdfTransportSettings::VerifyCharactersForID
CWdfTransportSettings::VerifyCharactersForReferenceString
CWdfUnifiedPropertyStore
CWdfUnifiedPropertyStore::GetPropertyData
CWdfUnifiedPropertyStore::SetPropertyData
CWdfUsbInterface
CWdfUsbInterface::Dispose
CWdfUsbInterface::GetConfiguredSettingIndex
CWdfUsbInterface::GetInterfaceDescriptor
CWdfUsbInterface::GetInterfaceNumber
CWdfUsbInterface::GetNumEndPoints
CWdfUsbInterface::GetWinUsbHandle
CWdfUsbInterface::Initialize
CWdfUsbInterface::ReleaseAssociatedInterfaceHandle
CWdfUsbInterface::RetrieveAssociatedInterfaceHandle
CWdfUsbInterface::RetrieveInterfaceDescriptor
CWdfUsbInterface::RetrieveUsbPipeObject
CWdfUsbInterface::SelectSetting
CWdfUsbPipeContinuousReader::_HandleReadFailureWorkItemThunk
CWdfUsbPipeContinuousReader::~CWdfUsbPipeContinuousReader
CWdfUsbPipeContinuousReader::Config
CWdfUsbPipeContinuousReader::FormatRepeater
CWdfUsbPipeContinuousReader::OnCompletion
CWdfUsbPipeContinuousReader::operator new
CWdfUsbPipeContinuousReader::QueueWorkItemLocked
CWdfUsbPipeContinuousReader::Release
CWdfUsbPipeContinuousReader::ResubmitRepeater
CWdfUsbTargetDevice
CWdfUsbTargetDevice::FormatControlRequest
CWdfUsbTargetDevice::FormatRequestForControlTransfer
CWdfUsbTargetDevice::FormatRequestForIoctl
CWdfUsbTargetDevice::FormatRequestForRead
CWdfUsbTargetDevice::FormatRequestForWrite
CWdfUsbTargetDevice::GetNumInterfaces
CWdfUsbTargetDevice::GetTargetFile
CWdfUsbTargetDevice::GetWinUsbHandle
CWdfUsbTargetDevice::RetrieveDescriptor
CWdfUsbTargetDevice::RetrieveDeviceInformation
CWdfUsbTargetDevice::RetrievePowerPolicy
CWdfUsbTargetDevice::RetrieveUsbInterface
CWdfUsbTargetDevice::SetPowerPolicy
CWdfUsbTargetPipe
CWdfUsbTargetPipe::Abort
CWdfUsbTargetPipe::ConfigureContinuousReader
CWdfUsbTargetPipe::Flush
CWdfUsbTargetPipe::FormatRequestForIoctl
CWdfUsbTargetPipe::FormatRequestForRead
CWdfUsbTargetPipe::FormatRequestForWrite
CWdfUsbTargetPipe::FormatTransfer
CWdfUsbTargetPipe::GetInformation
CWdfUsbTargetPipe::GetType
CWdfUsbTargetPipe::GotoStartState
CWdfUsbTargetPipe::IsInEndPoint
CWdfUsbTargetPipe::IsOutEndPoint
CWdfUsbTargetPipe::QueryInterface
CWdfUsbTargetPipe::Reset
CWdfUsbTargetPipe::RetrievePipeInfo
CWdfUsbTargetPipe::RetrievePipePolicy
CWdfUsbTargetPipe::SetPipePolicy
CWdfUserObject
CWdfUserObject::AcquireLock
CWdfUserObject::AcquireLock is not implemented
CWdfUserObject::CreateAndInitialize
CWdfUserObject::ReleaseLock
CWdfUserObject::ReleaseLock is not implemented
CWdfUtilRegPropVariantConv::IsExpandSz
CWdfUtilRegPropVariantConv::MultiSzToWstrArray
CWdfUtilRegPropVariantConv::NumberToByteArray
CWdfUtilRegPropVariantConv::PropVariantToRegistryValue
CWdfUtilRegPropVariantConv::RegistryValueToPropVariant
CWdfUtilRegPropVariantConv::WstrArrayToByteArray
CWdfUtilRegPropVariantConv::WstrToByteArray
CWdfWin32Target::FormatRequestForFlush
CWdfWin32Target::FormatRequestForIoctl
CWdfWin32Target::FormatRequestForQueryInformation
CWdfWin32Target::FormatRequestForRead
CWdfWin32Target::FormatRequestForSetInformation
CWdfWin32Target::FormatRequestForWrite
CWdfWin32Target::GetTargetFile
CWdfWorkItem
CWdfWorkItem::~CWdfWorkItem
CWdfWorkItem::CreateAndInitialize
CWdfWorkItem::Dispose
CWdfWorkItem::Enqueue
CWdfWorkItem::Flush
CWdfWorkItem::WorkItemRoutine
CWUDF::Initialize
CWudfDriverGlobals::~CWudfDriverGlobals
CWudfDriverGlobals::ConfigureForObjectTracking
CWudfDriverGlobals::Release
CWudfDriverGlobals::WaitForSignal
CWudfDriverTable::Insert
CWudfDriverTable::Remove
CWudfObjectEx::~CWudfObjectEx
CWudfObjectEx::LockingNotSupported
CWudfObjectEx::OnDispose
CWudfObjectEx::RetrieveObjectContext
CWudfOneShotTimer::~CWudfOneShotTimer
CWudfOneShotTimer::Cancel
CWudfOneShotTimer::CreateAndInitialize
CWudfOneShotTimer::Set
CWudfOneShotTimer::TimerCallback
CX8CYu
D!|$8D!|$0D!|$(H
D!AdH
D$ E3
D$ H;
D$ H9B
D$ H9C
D$(E3
d$(E3
D$(E3
D$(fD
D$(H9h
D$@!|$8!|$0!|$(L
D$@!t$8!t$0!t$(L
D$`E3
D$`H;
D$`L;
D$0E3
D$8@8
D$HE3
D$PfD
D$pH;
D$RA"
D$XH;
D$XH9D$Pt
D8=g)
D85vx
D8f-u
D8yXv6Hc
D9a t%A
D9m uBA
Data returned is more than MAX_ULONG
DbgBreakOnDeviceStateError
DbgBreakOnError
DbgPrint
DebugBreak
Delete
DeleteCriticalSection
DeleteTimerQueueEx
DeleteTimerQueueEx failed unexpectedly
DeleteTimerQueueTimer
DeleteTimerQueueTimer failed
DeleteTimerQueueTimer failed with an error other than ERROR_IO_PENDING
Dereference of destroyed object
Destroying locked transacted list
DeviceGroupId
DeviceOffset should be NULL
DirectHardwareAccess
DisableThreadLibraryCalls
Disconnect message to reflector returned failure. 
DllCanUnloadNow
DllGetClassObject
Don't yet support tagged requests
Driver attempted to read from invalid port address or address range
Driver attempted to read from invalid register address or address range
Driver attempted to unmap incorrect register address, or provided incorrect size
Driver attempted to write to invalid port address or address range
Driver attempted to write to invalid register address or address range
Driver called IWDFIoQueue::RetrieveNextRequest on a sequential queue with no outstanding requests. Driver must call IWDFIoQueue::RetrieveNextRequest before completing the current request
Driver called QueueWorkItemForIsr DDI without providing OnInterruptWorkItem callback
Driver cannot specify ShareVector different from WdfUseDefault in OnPrepareHardware callback.
Driver created request can't be completed by the same layer as the one that created it
Driver Created requests should not defer buffer retrieval
Driver did not unmap its register resources
Driver is attempting to queue a workitem that has been deleted. 
Driver must not call GetInputMemory if it has set RetrievalMode to DeferRetrieval.  Use RetrieveInputMemory or RetrieveInputBuffer instead.
Driver must not call GetOutputMemory if it has set RetrievalMode to DeferRetrieval.  Use RetrieveOutputMemory or RetrieveOutputBuffer instead.
Driver must set WDF_REQUEST_SEND_OPTION_IMPERSONATION_IGNORE_FAILURE with WDF_REQUEST_SEND_OPTION_IMPERSONATE_CLIENT.
Driver must successfully call IWDFRemoteTarget::Close() before returning from OnRemoteTargetRemoveComplete().
Driver must successfully call IWDFRemoteTarget::Close() or CloseForQueryRemove() before returning TRUE from OnRemoteTargetQueryRemove().
Driver opted for AutomaticSerialization but the locking constraint is not set correctly to WdfDeviceLevel. 
Driver provided incorrect base address
Driver set AutomaticSerialization to TRUE in workitem  config structure but it has explicitly set Locking Constraint to None. 
Driver Version: %d.%d Kmdf Lib. Version: %d.%d
DriverConfigInfo
DriverImageName
drivers\wdf\umdf\driverhost\framework\v1\fxtosharedinterface\fxdevice\fxdevicetomxinterface.cpp
drivers\wdf\umdf\driverhost\framework\v1\fxtosharedinterface\fxirp\fxirpum.cpp
drivers\wdf\umdf\driverhost\framework\v1\fxtosharedinterface\fxobject\fxobjectinterface.cpp
drivers\wdf\umdf\driverhost\framework\v1\fxtosharedinterface\fxpox\fxpoxum.cpp
drivers\wdf\umdf\driverhost\framework\v1\fxtosharedinterface\fxverifier\ufxverifier.cpp
drivers\wdf\umdf\driverhost\framework\v1\inc\ufxobject.h
drivers\wdf\umdf\driverhost\framework\v1\inc\wdflockobject.h
drivers\wdf\umdf\driverhost\framework\v1\inc\wudfglobals.h
drivers\wdf\umdf\DriverHost\Framework\V1\minkernel_shared_v11\inc\private\common\FxCollection.hpp
drivers\wdf\umdf\driverhost\framework\v1\minkernel_shared_v11\irphandlers\pnp\fxpkgfdo.cpp
drivers\wdf\umdf\driverhost\framework\v1\minkernel_shared_v11\irphandlers\pnp\fxpkgpnp.cpp
drivers\wdf\umdf\driverhost\framework\v1\minkernel_shared_v11\irphandlers\pnp\interruptobject.cpp
drivers\wdf\umdf\driverhost\framework\v1\minkernel_shared_v11\object\handleapi.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\fxrequestbuffer.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\fxrequestcontext.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\fxtransactionedlistum.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\interruptobjectum.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\ufxhidinterface.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\ufxinterrupt.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\ufxinterruptthreadpool.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\ufxworkitem.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdevice.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdevice.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdeviceinit.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdeviceinit.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdeviceinterface.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdriver.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdrivercreatedfile.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfdrivercreatedfile.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdffile.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdffile.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfglobals.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfioqueue.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfioqueue.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfiorequest.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfiorequest.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfiotarget.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfiotarget.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfmemorybuffer.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfmemorybuffer.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfregpropertystore.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremoteinterface.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremoteinterface.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremoteinterfaceinit.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremoteinterfaceinit.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremoteinterfacelist.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremotetarget.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfremotetarget.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfrequestqueue.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfresources.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdftransportsettings.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdftransportsettings.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfunifiedpropertystore.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfusbinterface.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfusbinterface.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfusbpipe.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfusbpipe.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfusbtargetdevice.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfusbtargetdevice.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfuserobject.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfutilregpropvariantconv.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wdfwin32target.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wudf.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wudfenumtranslation.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wudfobjectex.cpp
drivers\wdf\umdf\driverhost\framework\v1\wudf\wudfobjectex.h
drivers\wdf\umdf\driverhost\framework\v1\wudf\wudfoneshottimer.h
DriverVersion
DsfOn
DuplicateHandle
E(=csm
E_A;F,u
E8=csm
E8o-t
E9~ A
ED$49t$8
Eh=csm
EH=csm
eL9{0u
Enable is not a valid BOOL
Enabled is not a valid WDF_TRI_STATE
EnterCriticalSection
Entry has an add transaction pending but is already on the list
entry->m_EndSystemVa should be NULL
entry->m_EndSystemVa should not be NULL
entry->m_StartUsermodeVa should be NULL
entry->m_StartUsermodeVa should not be NULL
ERROR: Attempting to clobber old memory buffer with a new one
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EWA;F,u
EX=csm
Ex=csm
ExpandEnvironmentStringsW
Expected a pending transaction
Expected only add transactions
F H9C tAH
f!A H
F(L9x
f;D$@uhD
f\'dq.`@
f9<Bu
f94Au
f94Xu
fA9Z*v#A
Failed read work-item should not be set for re-running
Failed to assign interrupt resource to interrupt object because resource descriptor indicates it is not a level-triggered interrupt but allows sharing of interrupt. UMDF supports sharing of interrupts only for level-triggered interrupts.
Failed to assign interrupt resource to interrupt objectbecause interrupt resource is for level-triggered interruptwhich is not supported on this platform. See the docs for info onsupported platforms.
FAILED(hr)
False
fB9<@u
FCWdfRequestQueue::Initialize
fD;8ugH
fD9 u
fD90wiD
fD93u
fD94Gu
fD9'A
File object is NULL, but NULL file object support is not enabled
FileDescription
fileObj should not be NULL
FileObjectPolicy
FileType
FileVersion
FindResourceExW
FIt is illegal to invoke this DDI while thread is impersonated
FlushQueuedDpcs message to reflector returned failure
ForceLogsInMiniDump
ForceRemove
Forward is not a valid BOOL
FreeLibrary
fTrue is not a valid BOOL
FxCmResList
FxDeviceToMx::DeleteObject
FxDeviceToMx::FxPkgIo_ResetStateForRestart
FxDeviceToMx::FxPkgIo_ResetStateForRestart not implemented for UMDF
FxDeviceToMx::GetAttachedDeviceReference
FxDeviceToMx::GetAttachedDeviceReference not implemented for UMDF
FxDeviceToMx::GetDriverGlobals
FxDeviceToMx::GetDriverGlobals not implemented for UMDF
FxDeviceToMx::GetFxDevice
FxDeviceToMx::GetFxDevice not implemented for UMDF
FxDeviceToMx::GetHandle
FxDeviceToMx::GetParentDevice
FxDeviceToMx::GetParentDevice not implemented for UMDF
FxDeviceToMx::GetParentDevicePnpPkg
FxDeviceToMx::GetParentDevicePnpPkg not implemented for UMDF
FxDeviceToMx::GetPdoPkg
FxDeviceToMx::GetPdoPkg(AWDFDevicePtr) not implemented for UMDF
FxFormatUsbRequest
FxInterrupt::AssignResourcesInternal
FxInterrupt::DisconnectInternal
FxInterrupt::FlushQueuedDpcs
FxInterrupt::ResetInternal
FxInterrupt::RevokeResourcesInternal
FxInterrupt::SetPolicyInternal
FxInterrupt::ThreadpoolWaitCallback
FxInterrupt::WorkItemHandler
FxIoContext::CopyParameters
FxIoTargetToMx::GetFxObject
FxIoTargetToMx::GetFxObject not implemented for UMDF
FxIrp::AllocateIrp
FxIrp::GetIrpFromListEntry
FxIrp::GetMajorFunction
FxIrp::GetMinorFunction
FxIrp::GetParameterAllocatedResources
FxIrp::GetParameterAllocatedResourcesTranslated
FxIrp::GetParameterDeviceCapabilities
FxIrp::GetParameterPowerShutdownType
FxIrp::GetParameterPowerState
FxIrp::GetParameterPowerStateDeviceState
FxIrp::GetParameterPowerStateSystemState
FxIrp::GetParameterPowerSystemPowerStateContext
FxIrp::GetParameterPowerType
FxIrp::GetParameterQDRType
FxIrp::GetParameterQueryInterfaceInterface
FxIrp::GetParameterQueryInterfaceInterfaceSpecificData
FxIrp::GetParameterQueryInterfaceSize
FxIrp::GetParameterQueryInterfaceType
FxIrp::GetParameterQueryInterfaceVersion
FxIrp::GetParameterUsageNotificationInPath
FxIrp::GetParameterUsageNotificationType
FxIrp::SendIrpSynchronously
FxIrp::SetCompletionRoutine
FxIrp::SetParameterAllocatedResources
FxIrp::SetParameterAllocatedResourcesTranslated
FxPkgFdo
FxPox::_PoxActivateComponent
FxPox::_PoxActivateComponent is not implemented
FxPox::_PoxIdleComponent
FxPox::_PoxIdleComponent is not implemented
FxPox::_PoxRegisterDevice
FxPox::_PoxRegisterDevice is not implemented
FxPox::_PoxReportDevicePoweredOn
FxPox::_PoxReportDevicePoweredOn is not implemented
FxPox::_PoxSetDeviceIdleTimeout
FxPox::_PoxSetDeviceIdleTimeout is not implemented
FxPox::_PoxUnregisterDevice
FxPox::_PoxUnregisterDevice is not implemented
FxRequestBuffer::GetBuffer
FxRequestContext::_StoreAndReferenceMemoryWorker
FxRequestContext::~FxRequestContext
FxToObjectItf::FxAddToDisposeList
FxToObjectItf::FxAddToDriverDisposeList
FxTransactionedList::Add() failed
FxTransactionedListUm::~FxTransactionedListUm
FxTransactionedListUm::GetNextEntry
FxTransactionedListUm::ProcessTransactionList
FxTransactionedListUm::RemoveLocked
FxUsbDeviceControlContext::CopyParameters
FxUsbPipeTransferContext::CopyParameters
FxUserObject
FxVerifierBreakOnDeviceStateError
FxVerifierDbgBreakPoint
G tJH
gCWdfDeviceInit::SetFilter
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetLastError
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExW
GetModuleHandleW
GetProcAddress
GetProcessHeap
GetSystemInfo
GetSystemTimeAsFileTime
GetTickCount
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetVersionExA
GhH9X
GxL9x
h AVH
h UAVAWH
h VWAWH
H!;E3
H!\$@3
H!\$0H!\$(H
H!\$HE3
H!\$PE3
H!\$XH
H!|$`L
H8/6}
H9(u-H
H9?tb3
H9\$pu
H9]gt
H9]gu
H9|$pt
H9} u
H9}(L
H97u*H
H98u:H
H98udH
H99u=H
H99ucH
H9GHt8
H9kht
H9l$0u
H9l$pt
H9l$pulH
H9o(A
H9oHL
H9oHt<H;
H9oHtEH;
H9oHtHH;
H9QPL
H9u@u
H9u0u
H9u8u
H9ugu
H9uou
H9uPu
HA_A^A]A\_^[]
hA_A^A]A\_^[]
Hardware
Hardware access not allowed. Set the INF directive UmdfDirectHardwareAccess to AllowDirectHardwareAccess in driver's INF file to enable direct hardware access
HardwareId
HCCWdfIoQueue::~CWdfIoQueue
HeapAlloc
HeapFree
hFile is not a valid handle
Hid interface must be created in OnDeviceAdd.
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HostProcessSharingEnabled
hPdoKey is not a valid handle
hr != E_NOT_SUFFICIENT_BUFFER
hTarget is not a valid handle
I9V H
IdleInWorkingState
IdleSettings->Enabled is not a valid WDF_TRI_STATE
If previous block succeeds, pwszCurrentElement must not be NULL
If WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET is set no other flags should be set (except impersonation flags)
IFxMessageDispatch
IncludeExistingInterfaces is not a valid BOOL
Incorrect register access mode. Register mapping to user-mode is not enabled. Set the INF directive UmdfRegisterAccessMode to RegisterAccessUsingUserModeMapping in driver's INF file to enable Register mapping to user-mode
Incorrect Size parameter
Incorrect Type parameter
Infinite wait should never fail
INFNITE wait failed
Info should not be NULL
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
Input memory object should not be NULL if the UMIRP has an input buffer.
InstanceID has already been assigned.
InstanceID string must be at least 1 character.
InstanceID too long. HardwareID + InstanceID must be less than MAX_DEVICE_ID_LEN.
Integer overflow occurred when computing length of read access
Integer overflow occurred when computing length of write access
Integer overflow occurredwhen computing port address range
Integer overflow occurredwhen computing register address range
Interface
Internal consistency error: Queue is not in the m_Associated list
InternalName
Invalid buffer type
Invalid code path- Create, close and cleanup should not be handled in this path
Invalid config for manual queues
Invalid host irp
Invalid input paramater
Invalid input parameter
Invalid IoControlPreference
Invalid IoControlPreference - UMDF driver cannot request METHOD_NEITHER I/O type
Invalid operation. Request type is not Create
Invalid operation. Request type is not DeviceIoControl
Invalid operation. Request type is not QueryInformation
Invalid operation. Request type is not Read
Invalid operation. Request type is not Read, DeviceIoControl or QueryInformation
Invalid operation. Request type is not SetInformation
Invalid operation. Request type is not Write
Invalid operation. Request type is not Write, DeviceIoControl or SetInformation
Invalid operation: IWDFIoRequest doesn't belong to queue.
Invalid operation: Requeue is allowed only for a manual queue.
Invalid paramater: OnWorkItemFunc parameter is NULL
Invalid paramater: pConfig parameter is NULL
Invalid paramater: ppHidInterface parameter is NULL
Invalid paramater: ppWorkItem parameter is NULL
Invalid parameter in callback
Invalid parameter: zero buffer size
Invalid parameters
Invalid parameters: All input params are NULL
Invalid parameters: ImpersonationLevel is not a valid level
Invalid parameters: pCallback cannot be NULL
Invalid physical address or number of bytes provided
Invalid pnp capability.
Invalid pnp state.
Invalid power state
Invalid pRemoteInterfaceInit parameter, this object should be created by the framework.
Invalid queue state has been specified
Invalid ReadWritePreference
Invalid ReadWritePreference - UMDF driver cannot request METHOD_NEITHER I/O type
Invalid request type
Invalid request type passed to _FormatGetSetInformationRequest
Invalid request type passed to _FormatIoRequest
Invalid request type passed to FormatGetSetInformationRequest
Invalid request type passed to FormatIoRequest
Invalid RetrievalMode
Invalid state
Invalid State passed in as an argument
Invalid value supplied for locking model.
INVALID_HANDLE_VALUE == m_pRemoteDispatcher->GetHandle()
IoControlPreference should not be NULL
IRequestCallbackRequestCompletion
IsDirectHardwareAccessAllowed
IsFilter
IsKernelModeClientAllowed
IsListEmpty(&m_TargetQueryRemovedList)
IsMethodNeitherActionCopy
IsNullFileObjectAllowed
IsPoolingDisabled
IsPowerPolicyOwner
IsPresent is not a valid BOOL
IsS0IdleSystemManaged
IsS0IdleUsbSSEnabled
IsS0IdleWakeFromS0Enabled
IsSxWakeEnabled
IsUsingDirectIoForIoctl
IsUsingDirectIoForReadWrite
IsUsingDriverWppRecorder
IsUsingEdgeTriggeredLineInterrupt
IsUsingLevelTriggeredLineInterrupt
IsUsingMsi22MultiMessageInterrupt
IsUsingMsiXOrSingleMsi22Interrupt
IsUsingMultipleInterrupt
IsUsingUserModemappingAccessMode
IWDFCmResourceList
IWDFDevice::AssignS0IdleSettings can be called by the power policy owner only
IWDFDevice::AssignSxWakeSettings can be called by the power policy owner only
IWDFDevice::ResumeIdle can be called by the power policy owner only
IWDFDevice::StopIdle can be called by the power policy owner only
IWDFDevice3
IWDFDriver
IWDFDriverCreatedFile
IWDFFile
IWDFFileHandleTargetFactory
IWDFHidInterface
IWDFHidInterfaceFactory
IWDFInterrupt
IWDFInterrupt can only be created during: (1) OnDeviceAdd when the IWDFDevice %p is initially created, or (2) OnPrepareHardware
IWDFIoQueue
IWDFIoRequest3
IWDFIoRequestCompletionParams
IWDFIoTarget2
IWDFIoTargetStateManagement
IWDFMemory
IWDFNamedPropertyStore2
IWDFObject
IWDFPropertyStoreFactory
IWDFRemoteInterface
IWDFRemoteTarget
IWDFRemoteTarget never has a IWDFFile, do not call this method.
IWDFRemoteTarget::Close() must be called before IWDFRemoteTarget::WdfDeleteObject().
IWDFRemoteTarget::Reopen() method requires the state to be WdfIoTargetClosedForQueryRemove
IWDFRemoteTarget::WdfDeleteObject() cannot be called from within a IWDFRemoteTarget callback.
IWDFUnifiedPropertyStore
IWDFUnifiedPropertyStoreFactory
IWDFUsbInterface
IWDFUsbRequestCompletionParams
IWDFUsbTargetDevice
IWDFUsbTargetFactory
IWDFUsbTargetPipe
IWDFUsbTargetPipe2
IWDFWorkItem
IWudfTargetCallbackDeviceChange
jInvalid parameter passed to C runtime function.
K SUVWH
K SVWH
k VWAVH
k VWAWH
kernel32.dll
KERNEL32.dll
kernel32.dll
KernelDeviceName should not be NULL
KernelModeClientPolicy
KmdfLibrary
L!|$hL
L!egA
L!t$hL
L$ E3
l$ fD#
l$ VWATAVAWH
l$ VWAWH
L$(E3
L$@H3
L$`E3
L$0E3
L$0H3
l$8f#
L$hE3
l$HE3
l$PE3
l$pE3
L$PH3
L$pH3
L$xf9i
L$XH3
L$xH3
L;s(t
L9(ulH
L9@ t2H
L9{0t
L9|$`t
L9}gu
L96t-H
L9eHL
L9ePL
L9m@u
L9mHu
L9u u
L9u@A
L9uXu
L9wHt
L9wHtIH;
LcA<E3
Leaking WDF objects, use !wudfext.wudfdumpobjects %p to find the leaks
LeaveCriticalSection
LegalCopyright
LengthCb is not initialized to the size of WDF_PROPERTY_STORE_ROOT
List is emtpy
List is not locked for enumeration
List should be empty
LoadLibraryA
LoadLibraryExW
LoadResource
Locking model problem should have been caught earlier
LogPages
lstrcmpiW
m_CleanupCallback should be NULL
m_CloseCallback should be NULL
m_DevInit should be NULL
m_DevInit->m_pCreatedDevice should be NULL
m_DriverCallbackThreadID == 0
m_DriverCallbackThreadID == GetCurrentThreadId()
m_Enqueued == TRUE
m_IDeviceUnknown should be NULL
m_IPnpCallback should be NULL
m_IPnpCallbackHardware should be NULL
m_IPnpCallbackHardware2 should be NULL
m_IPnpCallbackHardwareInterrupt should be NULL
m_IPnpCallbackSelfManagedIo should be NULL
m_IPowerPolicyCallbackWakeFromS0 should be NULL
m_IPowerPolicyCallbackWakeFromSx should be NULL
m_IQueueUnknown should be NULL
m_ObjectTracker should be NULL
m_pAttachedIWudfDevice should be NULL
m_pHostIrp should not be NULL
m_pIWudfDevice should be NULL
m_pIWudfDevice should not be NULL
m_Pool should not be NULL
m_pPkgPnp should not be NULL
m_pRemoteInterface should be NULL
m_pTargetFile should not be NULL
m_pWdfDevice should not be NULL
m_pwszFullPath should not be NULL
m_RemoteInterfaceNotificationCallback should be NULL
m_RunningDown == FALSE
m_spCustomEventCallback.p should be NULL
m_spRemovalCallback.p should be NULL
m_TransportInterfaceNotificationCallback should be NULL
m_TransportInterfaceNotificationCallback should not be NULL
m_WorkitemEnqueued == TRUE
M0H!|$ E3
M9,$u
M9<$A
M96u7H
M9J(t
malloc
Manufacturer
Mapped length not zero
memcpy
memcpy_s
memmove
Memory should not be NULL
memset
MethodNeitherAction
Microsoft
Microsoft Corporation
Microsoft.Wdf.UMDF.FxV1
Microsoft_WDF_UMDF_Version
Module
Module_Raw
msvcrt.dll
MultiByteToWideChar
Mx::MxBugCheckEx
N89^E[0
NewID must be less than MAX_DEVICE_ID_LEN.
No failed read work-item should be running
Non Io Irp passed to CopyParameters
Non-NULL InterruptRaw or InterruptTranslated in WUDF_INTERRUPT_CONFIG structure not allowed in OnDeviceAdd callback
Non-Power managed queue must be in  powered on state during FxIoStopProcessingForPowerPurgeManaged
Non-power managed queue must be in powered on state in during FxIoStopProcessingForPowerPurgeNonManaged
NoRemove
Not a USB request
Not an error: Testing cancel
Not implemented
Not implemented for UMDF. Framework should not be invoking this code.
ntdll.dll
NULL InterruptRaw or InterruptTranslated in WUDF_INTERRUPT_CONFIG structure not allowed in OnPrepareHarwdare callback.
NumberOfBytes should be > 0
NumReaders should be > 0
O f;A"u6H9_`u)H9_hu#L
O f;A"utH
OLEAUT32.dll
OppWdfMemory should not be NULL
OriginalFilename
Output memory object should not be NULL if the UMIRP has an output buffer.
OutputDebugStringA
p AWH
p WATAUAVAWH
p WAUAVH
p WAVAWH
p->m_CancelCallback should not be NULL
PA^_^
PA^A\]
PA_A^_
PA_A^_^]
pA_A^_^]
pA_A^A\^]
PA_A^A]A\_^]H
PAGEWdfV$zz
Parameters\Wdf
pbData should not be NULL
pBuff should not be NULL
pCallbackInterface should not be NULL
pCloseIrp should not be NULL
pCreateCallback should be NULL
pCreateIrp should not be NULL
pCtx should not be NULL
pcwszFullPath is too long or is an empty string
pcwszFullPath should not be NULL
pcwszInstanceID should not be NULL
pcwszTransportReferenceString should not be NULL
pDefaultIoCallback should be NULL
pDevCntrlIrp should not be NULL
pDevice should not be NULL
pDeviceCallbacks should not be NULL
pDeviceInit should not be NULL
pDeviceInterfaceGuid should not be NULL
pDeviceInterfaceList should not be NULL
pDeviceInterfaceListLock should not be NULL
pDeviceQueryInterface should not be NULL
pDevInit should not be NULL
pDevIoControlCallback should be NULL
pDevStack should not be NULL
pDriverGlobals should not be NULL
pDrvGlobals should not be NULL
pdwDeviceNameLength should not be NULL
pdwDevInstLength should not be NULL
pdwProcessId should not be NULL
pdwStringLength should not be NULL
pdwVersionLength should not be NULL
pFile should be NULL
pFileObj should not be NULL
pFlushIrp should not be NULL
pFxContext should not be NULL
pFxMessageDispatch should not be NULL
PhysicalAddress.QuadPart should not be NULL
pInfo should not be NULL
pInterfaceHandle should not be NULL
pIoCanceledOnQueue should be NULL
pIoIrp should not be NULL
pIoResume should be NULL
pIoStop should be NULL
pIoTarget should not be NULL
pIParent should not be NULL
pIrp should not be NULL
pIWDFInterrupt should not be NULL
pIWDFIoRequest should not be NULL
pIWDFObject should not be NULL
pIWdfQueue should not be NULL
pIWdfReq should not be NULL
pLock should not be NULL
pMinimumVersion should not be NULL
Policy is out of range
PolicyAndGroup should not be NULL
pOnCompletion should not be NULL
PoolGroupId
Power managed queue must be in powered  off state during FxIoStopProcessingForPowerPurgeNonManaged
Power operation is already in progress
ppCompletionParams should not be NULL
ppDevice should not be NULL
ppFile should not be NULL
ppFileObject should not be NULL
ppInterrupt should not be NULL
ppIoQueue should not be NULL
ppIWdfDevice should not be NULL
ppIWDFIoRequest should not be NULL
ppMemory should not be NULL
ppObject should not be NULL
ppPropStore should not be NULL
ppRelatedFileObj should not be NULL
ppRemoteInterface should not be NULL
ppRemoteInterfaceInit should not be NULL
ppRemoteTarget should not be NULL
ppStringID should not be NULL
ppTarget should not be NULL
ppThreadpool should not be NULL
ppTimer should not be NULL
PPTP00
PPTP00#
PPTP00:u
PPTP00?u
PPTP00<u
PPTP008u
PPTP009u
PPTP00This object doesn't support callback locks
ppUsbInterface should not be NULL
ppUsbPipe should not be NULL
ppvContext should not be NULL
ppWdfDevice should not be NULL
ppWdfDriver should not be NULL
ppWdfIoQueue should not be NULL
ppWdfIoTarget should not be NULL
pQueue should not be NULL
pQueueObj should not be NULL
pQueueReadyCallback should be NULL
pReadCallback should be NULL
pReadIrp should not be NULL
Preallocated request needed for release is NULL
pRegistrationID should not be NULL
pRemoteInterface argument must have been created from IWDFDevice::CreateRemoteInterface() method
pRemoteInterface should be NULL
pRemoteInterfaceInit object has already been used in a previous call to CreateRemoteInterface(), or is being used outside the callback in which it was delivered.
pRemoteInterfaceInit should not be NULL
pReqCtx should not be NULL
pReqObj should not be NULL
pRequest should not be NULL
pRequest->m_DrainSingleEntry.Next should be NULL
Priority is out of range
ProcessUrbSynchronously
ProductName
ProductVersion
PropertyData should not be NULL
PropertyDataRequiredSize should not be NULL
PropertyKey should not be NULL
PropertyStore should not be NULL
PropertyType should not be NULL
pSetupPacket should not be NULL
PseudoBaseAddress should not be NULL
pSymbolicLink should not be NULL
psz should not be NULL
pszNewID should not be NULL
pTarget should not be NULL
pTimer should not be NULL
Pulled request from the CSQ without it having been cancelled
pUMIrp should not be NULL
pValueLength && Value should not be NULL
pWdfDevice || pWdfRequest should not be NULL
pWdfDriver should not be NULL
pWdfFileObject should not be NULL
pWdfQueueObj should not be NULL
pWdfRemoteInterface should not be NULL
pWriteCallback should be NULL
pWriteIrp should not be NULL
pwsz should not be NULL
pwszBaseFilePath should not be NULL
pwszDeviceInstanceId should not be NULL
pwszRelativeFileName is too long
pwszServiceName should not be NULL
pwszSymbolicLink should not be NULL
pWudfFile should not be NULL
Q t5A
QueryPerformanceCounter
Queue doesn't handle this type of request
Queue is being deleted while it has queued and driver-pending requests
Queue is being deleted while it is in a state to accept requests
R$fA;Z*
r3fD9~
r3fD9f
r3fD9n
r3fD9v
r8fD9f
r8fD9n
r9fD9n
RaiseException
rdrivers\wdf\umdf\driverhost\framework\v1\minkernel_shared_v11\object\fxobjectstatemachine.cpp
Read Failed Handler should be in progress
Read invoked on a pipe that is not an IN EndPoint
ReadWritePreference should not be NULL
realloc
Ref count went from 0 to 1
Refcount on Continuous reader should be  0
Refcount should be greater than or equal to 0
ReferenceString cannot contain any path separator characters ('\' or '/')
ReferenceString has already been assigned.
ReferenceString is too long
ReferenceString must be at least 1 character.
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegisterAccessMode
RegisterTraceGuidsW
RegisterWaitForSingleObject
REGISTRY
Registry key handle was invalid or already closed
RegOpenKeyExW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseLock: Invalid operation. The device is not configured to have callback lock
RemoteInterface should only be destroyed after all RemoteTarget objects have unregistered
RemoteTarget notified of RemoveCanceled, yet is still registered as QueryRemoved.
RemoveLockOptionFlags
Request already completed
Request being completed is on a cancellation list for a queue.
Request created by this layer can't be sent using SEND_AND_FORGET flag
Request doesn't belong to any queue
Request has not been formatted, cannot send
Request is already pending on an I/O Target
Request is being formatted with a non-NULL framework file that has a NULL host file object. This can happen if the request is formatted with a driver-created file that has already been closed.
Request is cancelable and hence it cannot be forwarded. Call IWDFRequest::UnmarkCancelable before forwarding to another queue.
Request is not owned by the driver and hence it cannot be forwarded.
Request is not owned by the driver and hence it cannot have a callback event.
Request is not owned by the driver.
Request is not power stop acknowledged.
Request should be unmarked cancelable by calling IWDFRequest::UnmarkCancelable.
Request should not be NULL
Request was not changed on the way down
Request was not changed on the way down. Obtain parameters from IWDFIoRequest
Request was not formatted as a read request on the way down
Request was not formatted as a Read request on the way down
Request was not formatted as a write request on the way down
Request was not formatted as a Write request on the way down
Request was not formatted as an Ioctl request on the way down
Requestor mode is neither KernelMode nor UserMode
RequestParentOptimizationOn
Requeue is not a valid BOOL
ResetEvent
RetrievalMode is invalid
RetrievalMode must be DeferRetrieval when choosing any IoControlPreference other than WdfDeviceIoBuffered
RetrievalMode must be DeferRetrieval when choosing any ReadWritePreference other than WdfDeviceIoBuffered
r-f9w
RJP|gp
Root class must be WdfPropertyStoreRootClassHardwareKey or WdfPropertyStoreRootClassHardwareKey for unified property store.
RootSpecifier should not be NULL
RtlAnsiStringToUnicodeString
RtlCaptureContext
RtlCompareMemory
RtlCompareUnicodeString
RtlGetVersion
RtlInitAnsiString
RtlInitUnicodeString
RtlLookupFunctionEntry
RtlQueryRegistryValues
RtlQueryRegistryValuesEx
RtlVerifyVersionInfo
RtlVirtualUnwind
s ATAVAWH
s UWAVH
s WATAUAVAWH
s WATAVH
s WAVAWH
s,f9W"td
sdH9oHtTH
SECURITY
Sent I/O count should be 0 after calling Dispose
ServiceName must be NULL while using WdfPropertyStoreRootClassHardwareKey with unified property store.
SetEvent
SetLastError
SetThreadpoolThreadMaximum
SetThreadpoolThreadMinimum
SetThreadpoolTimer
SetThreadpoolWait
Setting information on a completed request
SetUnhandledExceptionFilter
SetupClass
SetWaitableTimer
Size member of Configuration incorrect
Size member of pConfig incorrect
SizeofResource
Sleep
SleepEx
Software
SOFTWARE\Microsoft\Windows NT\CurrentVersion\WUDF
SOFTWARE\Microsoft\Windows NT\CurrentVersion\WUDF\Services
Source should not be NULL
State is not a valid WDF_TRI_STATE
StopAcknowledge can only be called from the IQueueCallbackIoStop callback.
strchr
StringFileInfo
SubmitThreadpoolWork
SYSTEM
t 9>s
t 97s
t L9}
T$ E3
t$ UWATH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAWH
t$ WAUAVH
t$ WAVAWH
t$ WH
t$(E3
T$(E3
T$`E3
T$0E3
t$HE3
T$pE3
T$PE3
t$pH9Y
T$XE3
t(@8u
t)97s
t/H9Y
t/H9y
t;H9Z
t\L9}
t_L9>L
t}L9}
t<fD9?t6H
t<L9e
t1L9aXu
t4H9X
t6H9Y
t7!y H
t7HcS
TargetAddress should not be NULL
TargetProcessorSet's reserved fields are not zero
tCH!|$(L
t'D9q(u
tDL9}
TerminateProcess
t'fD9}
The canceled irp is not same as irp associated with thie request object
The HCID should never get so long that we don't have enough room in the buffer.
The list of CompatibleIDs cannot be longer than REGSTR_VAL_MAX_HCID_LEN.
The queue state change notify method should not have been NULL.
The RemoteInterfaceList should be empty by the time we get here.
The thread that acquired the lock is not the same one this releasing it
There should be no Sent Io
This function should never be invoked for UMDF
This RemoteInterface has been Removed/Destroyed. To reopen the device, save a copy of the SymbolicLinkName and call IWDFRemoteTarget::OpenByFileName(...).
This type of request should have information parameter set to zero
this->m_pwszConfigRegistryPath should not be NULL
this->m_pwszDeviceKeyPath should not be NULL
Thread 0x%p is %s 0x%p
Thread is recursively acquiring the lock. This is disallowed 
Timeout specified without setting Timeout flag
Timer canceled but is not set
TL9ewA
To be implemented
TODO: Write something interesting here
TODO: Write something meaningful
TraceMessage
TraceMessageVa
TrackDriverForMiniDumpLog
TrackHandles
TransferLength can't be  0
Translation
Transport Settings are already committed. 
Transport Settings are not valid, please call AddCompositeHardwareID(...) first.
Transport Settings are not valid, please call AssignCompositeInstanceID(...) first.
Transport Settings should be committed.
TryEnterCriticalSection
tt@8=l
tuH9{
tX@85
TypeLib
u HcA<H
u"D8f/A
u#!;L
u#H9B
u&!3L
u`f9]`t9H
UATAUAVAWH
UATAVH
UAUAVH
UAUAWH
UAVAWH
ufxInterrupt->m_OnInterruptWorkItem should not be NULL
UfxObject::AddRef
UfxObject::PerformEarlyDispose
UfxObject::Release
ufxParentObject should not be NULL
UfxParentObject should not be NULL
UfxVerifierTrapNotImpl
UMD0L
UMDF completion routine can't be invoked selectively on Success/Error/Cancel
UMDF dispose should never be deferred
UMDF_VERSION
UmdfDispatcher should be set to FileHandle
UmdfDispatcher should be set to WinUsb
UmdfV1DriverInfo
UmdfVersion
Unexpected
Unexpected failure
Unexpected failure in QueryInterface
Unexpected failure in releasing associated interface
Unexpected failure in request send
unexpected registry value type
UnhandledExceptionFilter
Unknown enum value
Unknown power action in CWdfIoQueue::StopProcessingForPower
UnregisterClassA
UnregisterTraceGuids
UnregisterWaitEx
uQH9[
Urb should not be NULL
USB Interface handle is invalid
UsbAltInterfaceDescriptor should not be NULL
User Mode Driver Framework version 1.11.0
USER32.dll
USVWATAUAVAWH
uTCWdfRemoteInterfaceList::~CWdfRemoteInterfaceList
UVATAVAWH
uVL9ewA
UVWATAUAVAWH
UVWATAWH
UVWAUAVH
UVWAVAWH
UWATAVAWH
UWAVH
V(L9z
Valid ID Characters can only be between 0x20 and 0x7F (inclusive), but not 0x2C(',')
Validation of resources failed. See Trace log for details
Value is not a valid WDF_TRI_STATE
VarFileInfo
VATAUAVAWH
VerboseOn
VerifierAllocateFailCount
VerifierOn
VerifyDownLevel
VerifyOn
VerSetConditionMask
VS_VERSION_INFO
VWATAUAVH
VWATAUAWH
VWATAVAWH
VWATH
VWAUAVAWH
VWAUH
VWAVH
VWAWH
w$D8v0u
W<5Yr.
w5H9J
Waitblock should not be NULL
WaitForD0 is not a valid BOOL
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitForThreadpoolWaitCallbacks
waiting for all inflight requests to be acknowledged on IWDFIoQueue
waiting for all threads to stop dispatching requests so that queue can be powered off, IWDFIoQueue
WakeFromSleepState
WATAUAVAWH
WATAVH
WATAWH
WAUAVH
WAVAWH
wcschr
wcsncpy_s
wd@8k
WDF detected an invalid device state: Please check tracelog for description of error.
WDF detected an invalid operation: Please check tracelog for description of error.
WDF Violation: Please check tracelog for description of error.
WDF:UMDF Framework Library
WDF_INTERRUPT_EXTENDED_POLICY Size invalid
WDF_INTERRUPT_INFO size invalid
WDF_IO_QUEUE states not allowed
WDF_REQUEST_SEND_OPTION impersonation flags may only be set on Create requests.
WdfCallbackLock::Lock
WdfCallbackLock::Unlock
WDFCMRESLIST
WdfDefaultIdleInWorkingState
WdfDefaultWakeFromSleepState
WDFOBJECT
WdfToWudfTriState
wdH9kHtWH
wdH9kHtXH
We only set completion handlers for Create
WhH9Z
without
WKpCWdfIoRequest::SetFileObjectForNextLocation
WorkItem destroyed without calling WdfDeleteObject. Possible reference count problem?
Write invoked on a pipe that is not an OUT EndPoint
WUDF_INTERFACE_CONTEXT_INVALID != RemoteInterfaceID
WudfPowerPolicySettings
WudfToWdfTriState
Wudfx
WUDFx!CWdfFile
WUDFx!CWdfIoTarget
WUDFx!CWdfRegPropertyStore
WUDFx!CWdfUnifiedPropertyStore
WUDFx!UfxObject
WUDFx.DLL
Wudfx.dll
WUDFx.pdb
wwfA9q
WxL9z
x ATAUAVH
x ATAUAWH
x ATAVAWH
x ATH
x AUAVAWH
x AVH
x AWH
x UATAUAVAWH
xA_A^A]A\_^[]
Y@H9;u%L
y=L9}
y4L9m
y7H9~@D
yFM9/H
Your Device callback object must support IPnpCallbackRemoteInterfaceNotification
-ZYNULL
