 A^_^
 A^_^[]
 A^A\_
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]
 A_A^A]A\_
 H;]Pu
 H3E H3E
 Hcy0H
 LcIXL
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!advapi32.dll
!GetPackageId().empty()
!IsCallerLowIL(INVALID_USERCONTEXT_TOKEN)
!IsCallerLowIL(userContextToken)
!IsDisabledForAuditMode()
!L$0H
!L$4A
!m_packagePath.empty()
!m_shuttingDown
!m_threadHandle.IsValid()
!This program cannot be run in DOS mode.
"onecoreuap\shell\appreadiness\src\core\StdUtils.h
"onecoreuap\shell\appreadiness\src\tasks\stageuserdata.cpp
%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%d)\%hs!%p: 
%ls-%ld
%ls\%ls
%ls\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer
%s (OP:%ld)
%s!%s
%s-%s%c
%s-%s%c0
%s\%s
(_^[]
(A;OICI;KR;;;%ls)
(caller: %p) 
(D$ f
(D$0H
(H;]Pu
(t$ H
(t$@H
(t$pI
)t$ H
)t$@I
.?AV?$_Bind@$00KU?$_Pmf_wrap@P8Service@AppReadiness@@EAAKKKPEAX@ZKV12@KKPEAXU_Nil@std@@U34@U34@U34@@std@@PEAVService@AppReadiness@@AEAV?$_Ph@$00@2@AEAV?$_Ph@$01@2@AEAV?$_Ph@$02@2@U_Nil@2@U82@U82@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8BaseTask@Impl@AppReadiness@@EAAXXZXV123@U_Nil@std@@U45@U45@U45@U45@U45@U45@@std@@PEAVBaseTask@Impl@AppReadiness@@U_Nil@2@U62@U62@U62@U62@U62@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8BitsJob@Tasks@AppReadiness@@EAAXJ@ZXV123@JU_Nil@std@@U45@U45@U45@U45@U45@@std@@PEAVBitsJob@Tasks@AppReadiness@@AEAJU_Nil@2@U62@U62@U62@U62@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8Service@AppReadiness@@EAAXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PEAVService@AppReadiness@@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8ServiceThread@AppReadiness@@EAAXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PEAVServiceThread@AppReadiness@@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@@ZXV1234@PEAU5@U_Nil@std@@U67@U67@U67@U67@U67@@std@@AEBQEAVStoreMetadata@Store@Tasks@AppReadiness@@AEAV?$_Ph@$00@2@U_Nil@2@U82@U82@U82@U82@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@PEAUAppTileInfo@234@@ZXV1234@PEAU5@PEAU6234@U_Nil@std@@U78@U78@U78@U78@@std@@AEBQEAVStoreMetadata@Store@Tasks@AppReadiness@@AEAV?$_Ph@$00@2@PEAUAppTileInfo@456@U_Nil@2@U92@U92@U92@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@PEAUStoreProductInfo@234@@ZXV1234@PEAU5@PEAU6234@U_Nil@std@@U78@U78@U78@U78@@std@@AEBQEAVStoreMetadata@Store@Tasks@AppReadiness@@AEAV?$_Ph@$00@2@PEAUStoreProductInfo@456@U_Nil@2@U92@U92@U92@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8StorePreviews@Tasks@AppReadiness@@EAAXAEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@ZXV123@AEBV45@U_Nil@5@U65@U65@U65@U65@U65@@std@@AEBQEAVStorePreviews@Tasks@AppReadiness@@AEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@U_Nil@2@U72@U72@U72@U72@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8User@AppReadiness@@EAAXAEBVPackageList@Storage@2@AEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@W4PackageOperation@42@@ZXV12@AEBV342@AEBV56@W4742@U_Nil@6@U86@U86@U86@@std@@PEAVUser@AppReadiness@@AEAV?$_Ph@$00@2@AEAV?$_Ph@$01@2@AEAV?$_Ph@$02@2@U_Nil@2@U82@U82@@std@@
.?AV?$_Bind@$00XU?$_Pmf_wrap@P8User@AppReadiness@@EAAXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PEAVUser@AppReadiness@@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AV<lambda_046130ff1b1a6b71c19f8c8e14c27085>@@
.?AV<lambda_059184e8f364dfe5c918358185397c68>@@
.?AV<lambda_07d4cd50c7db6a61ab635af06f5e5a51>@@
.?AV<lambda_0bcc98ca959988977d770fa3e03d2f54>@@
.?AV<lambda_141cf924e6585cc8cb3cd095287cacf9>@@
.?AV<lambda_142f328f0f5263d46afa27a8d729e0ca>@@
.?AV<lambda_15c9b55303bf5df638e0949fcf6b7ebb>@@
.?AV<lambda_16f22cb9433ab5a9fd42e441162ee275>@@
.?AV<lambda_17ba42748e2727430c8699c6f60dcb65>@@
.?AV<lambda_1896b0420ca38c5cb223265a9738fa39>@@
.?AV<lambda_240c2dbf633b830c3dc2b365f76b75c3>@@
.?AV<lambda_24828e77ab84cbb9436961ad34eb50e0>@@
.?AV<lambda_264ef6cf727b553b6897d0bef5c178d7>@@
.?AV<lambda_29160d9b262522fd230e878540d4889a>@@
.?AV<lambda_2cfe183d6ebe93f384688f0bdd724c49>@@
.?AV<lambda_2e69251be88fae9fad057c7f3bdbc2c4>@@
.?AV<lambda_336e0e5d673baa22c75467757fe8e861>@@
.?AV<lambda_3b75c6c444af9b7e012ddd70e3de468a>@@
.?AV<lambda_3d1609ba18640af6ea160a724217abab>@@
.?AV<lambda_3ea34c1977d0666b6f99688bb246a049>@@
.?AV<lambda_437411830a38d256e33c0b151e1dce7e>@@
.?AV<lambda_457eef4576c97378304f32b6929e02e5>@@
.?AV<lambda_46c2cd49fdfcd496ca0edd760253d264>@@
.?AV<lambda_485ce827346b17e86bb5c3132b612a78>@@
.?AV<lambda_5074cba836762ef77c283a39c7dcadeb>@@
.?AV<lambda_524b754a7b24251b6e031b71bf90730a>@@
.?AV<lambda_52c2090915f50c466d198c45fe1a8e5f>@@
.?AV<lambda_556349a63bf27002c1a50d52b1b34303>@@
.?AV<lambda_5838afd94790d3cbffa5dda7aa9098b7>@@
.?AV<lambda_58e151a3731012cd4075c1b972c30c0b>@@
.?AV<lambda_58f502f2c102d382796d33b7a5160c2a>@@
.?AV<lambda_5e33cb52fd1397fc065cc5c2d0a4e387>@@
.?AV<lambda_600d56ae6c6a6d9c9167befac3d386f5>@@
.?AV<lambda_6460ad8e0ff6617b13d99557fc3c1b09>@@
.?AV<lambda_64c9b63fd339abd85b939300b0f84b34>@@
.?AV<lambda_66c1f01a0b9852e324e8887966467bc2>@@
.?AV<lambda_6837f2f050f3cb91b721b6b18456f8d9>@@
.?AV<lambda_6b74a4c3ee8a485d61fa68e8a40733e6>@@
.?AV<lambda_7015d3f00f92ea2af537802038f30f63>@@
.?AV<lambda_7107b8fccdf0da6a6aed3a674bf438cc>@@
.?AV<lambda_77ffb5b4c88d980e092855dcb2471f73>@@
.?AV<lambda_7b3333225c9b7030f90e8a52cf7fa8b2>@@
.?AV<lambda_7b98897b35f1995ef6c45e72a35ada67>@@
.?AV<lambda_7dd94c3bf1d17ecfb4d71d6fb90dda6e>@@
.?AV<lambda_81ee5a4511ccb47f64244d452fcbf3e6>@@
.?AV<lambda_83279ea248a312166fec1790f5705122>@@
.?AV<lambda_839d59885628051ef1e1b65b160bbef5>@@
.?AV<lambda_861b6def1eabb24631da2491e9dc8464>@@
.?AV<lambda_8752951fd3ce9a1933e1d1511e3de003>@@
.?AV<lambda_8872b46520379ffc27a44985f0fe6948>@@
.?AV<lambda_893fb070bc3b2f6ae2273ab6fe4ff010>@@
.?AV<lambda_8af9a15ff3bbf59a5d454b9830ed606b>@@
.?AV<lambda_8b7c57241abcb8a45d05834dd15bbce6>@@
.?AV<lambda_8bb1145105b81615064a6aac3fc23944>@@
.?AV<lambda_8e8ad3231b95925db78b552beb19a479>@@
.?AV<lambda_8ef5304d6a8f682d543c1643511ccf89>@@
.?AV<lambda_971559891dfc93af94b936406f5d3c2f>@@
.?AV<lambda_9e577ad165391c9dc0bc82371502a6f1>@@
.?AV<lambda_a076bbc7f89add10f81254c9d33efc83>@@
.?AV<lambda_a11b7953b61e93de0ff1d4c14c27e6d9>@@
.?AV<lambda_a8509fcfad1a45f408255ce6830d28bd>@@
.?AV<lambda_a85b2a0eaf882aa359e7a82128f285ac>@@
.?AV<lambda_aa25f65d6088fc6caaea3a1cbe3c4861>@@
.?AV<lambda_ad5e0ef7d6fd208ba898f6f706aee2ea>@@
.?AV<lambda_ad751e5a339a58fd1c7e0365f0e8c749>@@
.?AV<lambda_aee12e678e07a7b98be8f89a14e187f1>@@
.?AV<lambda_b548ad810831a212473338b82dc26717>@@
.?AV<lambda_b62627bf7d4402e1b915d8f4360132e2>@@
.?AV<lambda_bdb2e0d9b12acf04bb46a3d3e040060a>@@
.?AV<lambda_c07951d9657b8396b912d0f25a2bef47>@@
.?AV<lambda_c0d7d61d053c8698aa940f223a2c92fd>@@
.?AV<lambda_c2bcb3221393ef92f70a81c1401bd28c>@@
.?AV<lambda_c4078ed07cfbfe877d20f4be618a5063>@@
.?AV<lambda_c5fc14431d95cd564bb6d7c06a730be0>@@
.?AV<lambda_c87d1e472f81650a7ba3b2c8ff6cb695>@@
.?AV<lambda_c959c419b99b757af7545ec8a3d9110f>@@
.?AV<lambda_cac1a1b0ea33025184f417a4d0791b45>@@
.?AV<lambda_ccf6f953c6e24f4c347c0dec0f9810f9>@@
.?AV<lambda_ce1185b0127a773785c5a2cb44313fd6>@@
.?AV<lambda_ceac50f6bb65f6f2505f6516d08182b8>@@
.?AV<lambda_d06add2353a1f69e19e0eb708060d6a4>@@
.?AV<lambda_d6bf87c9bfd21c15179572cd87903efb>@@
.?AV<lambda_d8af22374a6a1a35fbce2cd408dcbdf3>@@
.?AV<lambda_dc83a49d3c7bc429277878727fd46f06>@@
.?AV<lambda_dd705a326c125b71213fed45a0eccb1e>@@
.?AV<lambda_dee8c8dc74ce24a79a321ea08f040d31>@@
.?AV<lambda_e4e349c3e454b0103814aa050c77b0fd>@@
.?AV<lambda_e6749707a8a06ac33c4cfedfd5733ce2>@@
.?AV<lambda_e690c72d4c28fa349f0144d8db0fe543>@@
.?AV<lambda_eadfe9823c83b739d4cae572735feee0>@@
.?AV<lambda_edb4f9379a81b78ab66d715e00383ff5>@@
.?AV<lambda_ee2878d600759b2095c2fe85fc8416b6>@@
.?AV<lambda_ee70a666295554ad8cc328fdcd34289f>@@
.?AV<lambda_eed2cc32f913ba9c91cd1c0ece39af1d>@@
.?AV<lambda_f0a041a0dd850f8914ef38c47e564b86>@@
.?AV<lambda_f5d66f6f2c3977f67d580743a895a151>@@
.?AV<lambda_fb0a4561c778e17e580c47e7a5386748>@@
.?AV<lambda_fdd86c4255431fc84805e4562e123821>@@
.?AV<lambda_fee0569768447db8f9141d8610a8d7b0>@@
.?AV<lambda_ff4c3646733d9a87ccb0cb1b79b85875>@@
.?AVbad_alloc@std@@
.?AVbad_function_call@std@@
.?AVexception@@
.?AVHResultException@Windows@@
.?AVlength_error@std@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.?AVResultException@wil@@
.00cfg
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$00
.data$00$brc
.data$brc
.data$dk00$brc
.data$r$brc
.data$zz
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.P6A_NPEAUIXmlReader@@PEBG@Z
.pdata
.rdata
.rdata$00
.rdata$brc
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$lp00AppReadiness.dll!20_pri7
.text$mn
.text$mn$00
.text$np
.text$x
.text$yd
.text$zy
.text$zz
.tls$
.tls$ZZZ
.xdata
.xdata$x
;|$0r
;t$@t
;t$`r
??_V@YAXPEAX@Z
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??0exception@@QEAA@XZ
??1exception@@UEAA@XZ
??1type_info@@UEAA@XZ
??3@YAXPEAX@Z
?terminate@@YAXXZ
?what@exception@@UEBAPEBDXZ
@.data
@.didat
@.reloc
@@M9h
@^SJ+*
@8|$0t
@8=5P
@8=h>
@A^_^
@A^_^[]
@A_A^]
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_^[]
@A_A^A]A\_
@A_A^A]A\_^]
@GhostedSecondaryTileReplacementLogo.png
@H;]Pu
@SUVWATAVAWH
@SUVWH
@SVWAVAWH
@SVWH
@t3H+\$hH
@USVWATAUAVAWH
@USVWATAUAWH
@USVWATAVAWH
@USVWATAVH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWAVH
@USWH
@UVWAVAWH
@UVWH
@VWAVH
@WATAUAVAWH
@WAVAWH
[ UVWH
[%hs(%hs)]
[%hs]
[onecoreuap\shell\appreadiness\src\tasks\storeinstall.cpp
\$ E3
\$ L+
\$ UH
\$ UVWAVAWH
\$ UVWH
\$ WH
\$(E3
\$`H!\$@H
\$8E3
\$8H;\$@
\$8H;\$@t3H
\$pH+
\$pH9\$htqH
\$XH;
]XH;]Pt
__C_specific_handler
__CxxFrameHandler3
__dllonexit
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_APPX_PREREGISTER, TaskPriority::PreShell)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_INBOX_GROUP, AppReadiness::TaskPriority::InboxGroup)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_OEM_FIRST_RUN, LogonOptimizationPermitted(LogonOptimizationFlags::DisableAppInstallsOnFirstLogon) ? TaskPriority::Low : TaskPriority::High)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_PREROAMING_GROUP, AppReadiness::TaskPriority::PreRoamingGroup)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_RESOLVE_STORE_CATEGORIES, TaskPriority::Low)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_USER_FIRST_LOGON, AppReadiness::TaskPriority::High)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_USER_LOGON, AppReadiness::TaskPriority::UserLogonGroup)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_prefix, package->GetPackageFamilyName()), package)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_RegisterTaskIdPrefix, packageInfo->GetPackageId()), packageInfo)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_StageUserDataPrefix, packageInfo->GetPackageId()), packageInfo)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_UnregisterTaskIdPrefix, endOfLifePackageFullName == nullptr? packageFamilyName: endOfLifePackageFullName))
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_UnregisterTaskIdPrefix, packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, c_PreviewTaskName, TaskPriority::PreviewTile)
__super::RuntimeClassInitialize(user, InstallPackage::BuildId(packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, RemovePackage::BuildId(packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, taskId, packageInfo, priority)
__super::RuntimeClassInitialize(user, taskName, TaskPriority::SystemTask)
_amsg_exit
_callnewh
_CoAllocStringArray(packages.data(), packages.size(), packageFamilyNames)
_CxxThrowException
_initterm
_lock
_onexit
_purecall
_RSDSfp1
_ui64tow_s
_unlock
_vsnprintf_s
_vsnwprintf
_XcptFilter
`.rdata
`A^_^
`A^_^[]
`A_A^A\_^[]
`A_A^A]A\_^]
{ AVH
|$ AVH
|$ E3
|$@E3
|$\.u
|$0E3
|$hI;
|$PI;
}<unknown>
}AppReadiness::Tasks::Store::StoreMetadata::CreateAbsoluteUrl
~HD+x
~HH+~@H
<unknown>
>3B>8
040904B0
0A^_^
0A^_^[]
0A_A^_
0A_A^_^[
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^]
0ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/i
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
2333333
3H97t H
58f01454-6895-42be-a245-ea2d809e1c2a
6H9s0t&H
7f9t$(u
8A^_^[
8A_A^_^[]
8A_A^A]A\_^[]
9*v.H
9\$@t
9\$@u'H
9\$`v;
9|$H}lE3
9}(vRH
9}0t*H
9}8vR
9D$hu
9D$XH
9D$XwX+D$X
9E0uRL
9O4t2
9Pefs
9s(v!H
9t$@u,H
9T$xH
9T$xwK3
9W(s%A
A!4$I
A(A;@
A,9A(
A;Q,s!D
A;Q@s
A^_^[]
A^A\_^[]
A__^[]
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]_]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
absoluteUri->get_AbsoluteCanonicalUri(uriStr.GetAddressOf())
AcquireSRWLockExclusive
AcquireSRWLockShared
ActivatableApps
ActivatableClsid
activateApps
activatibleClassId
ActiveSetupDisabled
ActiveSetupTaskOverride
ActivityId
address family not supported
address in use
address not available
address_family_not_supported
address_in_use
address_not_available
AedrW
AllocateAndInitializeSid
AllocateAndInitializeSid(&sidAuth, 2, SECURITY_BUILTIN_DOMAIN_RID, DOMAIN_ALIAS_RID_ADMINS, 0, 0, 0, 0, 0, 0, &sidGroup)
already connected
already_connected
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-biptcltapi-l1-1-7.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-debug-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-heap-obsolete-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-controller-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-shcore-registry-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-sysinfo-l1-1-0.dll
ApiSetQueryApiSetPresence
appDataVolumeNameString.Set(appDataVolumeName.c_str(), static_cast<UINT>(appDataVolumeName.length()))
AppId
Applicable
ApplicationManagement
AppReadiness
AppReadiness-%04d%02d%02d-%02d%02d%02d.etl
AppReadiness.dll
AppReadiness.etl
AppReadiness.pdb
AppReadiness::Api::CreateTask
AppReadiness::Api::CreateTaskForUser::<lambda_839d59885628051ef1e1b65b160bbef5>::operator ()
AppReadiness::Api::CreateUser
AppReadiness::Api::DoesCallerHaveAdminRights
AppReadiness::Api::EnterLogonPhaseForUser::<lambda_971559891dfc93af94b936406f5d3c2f>::operator ()
AppReadiness::Api::ExecuteOperationsIfAppropriate::<lambda_ee70a666295554ad8cc328fdcd34289f>::operator ()
AppReadiness::Api::GetTaskForUser::<lambda_6b74a4c3ee8a485d61fa68e8a40733e6>::operator ()
AppReadiness::Api::HandlePackageChange::<lambda_46c2cd49fdfcd496ca0edd760253d264>::operator ()
AppReadiness::Api::InstallForUser::<lambda_fdd86c4255431fc84805e4562e123821>::operator ()
AppReadiness::Api::IsCallerLowIL
AppReadiness::Api::RemoveForUser::<lambda_7dd94c3bf1d17ecfb4d71d6fb90dda6e>::operator ()
AppReadiness::Api::ResolveStoreCategories::<lambda_3b75c6c444af9b7e012ddd70e3de468a>::operator ()
AppReadiness::AppReadinessModule::AppReadinessModule
AppReadiness::BrokerSession::NotifyOfInstalledPackages
AppReadiness::CreateUserTokenUsingWts
AppReadiness::ExpandEnvironmentStringsW
AppReadiness::GetPackageFamilyName
AppReadiness::GetRegistryIntWithDefault
AppReadiness::Groups::AddToPreviewTask
AppReadiness::Groups::FirstLogonGroup::GetFirstLogonAppPackageFamilyNames::<lambda_eed2cc32f913ba9c91cd1c0ece39af1d>::operator ()
AppReadiness::Groups::FirstLogonGroup::OnComplete::<lambda_16f22cb9433ab5a9fd42e441162ee275>::operator ()
AppReadiness::Groups::FirstLogonGroup::RuntimeClassInitialize
AppReadiness::Groups::InboxGroup::RuntimeClassInitialize
AppReadiness::Groups::InstallPackage::Create
AppReadiness::Groups::InstallPackage::CreateLocalFlow
AppReadiness::Groups::InstallPackage::CreateStoreFlow
AppReadiness::Groups::InstallPackage::OnStarted
AppReadiness::Groups::InstallPackage::RuntimeClassInitialize
AppReadiness::Groups::OemFirstRun::RuntimeClassInitialize
AppReadiness::Groups::OnDemandSyncGroup::OnDemandSyncNewPackages::<lambda_ccf6f953c6e24f4c347c0dec0f9810f9>::operator ()
AppReadiness::Groups::PreRoamingGroup::RuntimeClassInitialize
AppReadiness::Groups::Previews::CreateTask
AppReadiness::Groups::Previews::OnStarted
AppReadiness::Groups::Previews::Previews
AppReadiness::Groups::RemovePackage::Create
AppReadiness::Groups::RemovePackage::OnStarted
AppReadiness::Groups::RemovePackage::RuntimeClassInitialize
AppReadiness::Groups::UserLogon::OnStarted
AppReadiness::ImmersivePolicy::GetAllDefaultApps
AppReadiness::ImmersivePolicy::ImmersivePolicy
AppReadiness::Impl::BaseTask::Cancel::<lambda_c0d7d61d053c8698aa940f223a2c92fd>::operator ()
AppReadiness::Impl::BaseTask::RuntimeClassInitialize
AppReadiness::Impl::BaseTask::SetCallback::<lambda_8b7c57241abcb8a45d05834dd15bbce6>::operator ()
AppReadiness::Impl::BaseTaskGroup::Add
AppReadiness::Impl::BaseTaskGroup::ExecuteTask
AppReadiness::Impl::BaseTaskGroup::OnComplete
AppReadiness::Impl::BaseTaskGroup::OnProgress
AppReadiness::Impl::BaseTaskGroup::Remove
AppReadiness::Impl::BaseTaskGroup::RuntimeClassInitialize
AppReadiness::Impl::ExternalCallback::RuntimeClassInitialize
AppReadiness::Impl::SearchForCallback
AppReadiness::LogUserLoadedPackages::<lambda_7b98897b35f1995ef6c45e72a35ada67>::operator ()
AppReadiness::PackageInfo::GetMainPackageId
AppReadiness::PackageInfo::GetManifestPath
AppReadiness::PackageInfo::GetPackageFullName
AppReadiness::PackageInfo::GetPackageManager
AppReadiness::PackageInfo::GetPackagePath
AppReadiness::PackageInfo::HasLockScreenApp
AppReadiness::PackageInfo::IsBundle
AppReadiness::PackageInfo::IsPackageFamilyInstalledFor
AppReadiness::PackageInfo::IsPackageInstalledFor
AppReadiness::PackageInfo::MarkStatus
AppReadiness::PackageInfo::MarkStatusForEndOfLifePackage
AppReadiness::PackageInfo::NeedsPreviewTile::<lambda_5074cba836762ef77c283a39c7dcadeb>::operator ()
AppReadiness::PackageInfo::SetPreInstalled
AppReadiness::PackageInfo::SupportsMultipleUsers
AppReadiness::PackagesToBeInstalledIterator::PackagesToBeInstalledIterator
AppReadiness::Service::CreateUser
AppReadiness::Service::GetSessionUserToken
AppReadiness::Service::GetSystemUser
AppReadiness::Service::GetTokenSid
AppReadiness::Service::IsSessionShared
AppReadiness::Service::OnServiceStart::<lambda_3d1609ba18640af6ea160a724217abab>::operator ()
AppReadiness::Service::OnUserLogon
AppReadiness::Service::SetGlobalComOptions
AppReadiness::Service::Start
AppReadiness::ServiceHandle::RegisterControlHandler
AppReadiness::ServiceThread::GetHandle
AppReadiness::ServiceThread::ServiceThread
AppReadiness::ServiceThread::Start
AppReadiness::Storage::PackageList::CreateSecurityDescriptor
AppReadiness::Storage::PackageList::InitRegistry
AppReadiness::Storage::PackageList::InitRegistry::<lambda_7d6f3c7050c76d449b930757fd844e05>::operator ()
AppReadiness::Storage::PackageList::MarkAllUsersAs
AppReadiness::Storage::PackageList::OpenUserMachineRoot
AppReadiness::Storage::PackageList::OpenUserQueueRoot
AppReadiness::Storage::PackageList::SetUserStateDWORD
AppReadiness::Storage::PackageMetadata::Clear
AppReadiness::Storage::PackageMetadata::CreateMetadataKey
AppReadiness::Storage::PackageMetadata::Set
AppReadiness::Storage::PBRPackageList::GetUserRoot
AppReadiness::Storage::WriteRegistryValue
AppReadiness::System::IsFreeNetworkAvailable
AppReadiness::System::IsNetworkConnected
AppReadiness::Tasks::ActivateApps::ComputeNumberOfSecondsActivated
AppReadiness::Tasks::ActivateApps::OnExecute
AppReadiness::Tasks::ActivateApps::OnExecute::<lambda_2cfe183d6ebe93f384688f0bdd724c49>::operator ()
AppReadiness::Tasks::ActivateApps::OnExecute::<lambda_77ffb5b4c88d980e092855dcb2471f73>::operator ()
AppReadiness::Tasks::ActivateApps::OnStarted
AppReadiness::Tasks::ApplicablePackages::ApplicablePackages
AppReadiness::Tasks::AppxPreRegister::RuntimeClassInitialize
AppReadiness::Tasks::AppxPreviews::Invoke::<lambda_8af9a15ff3bbf59a5d454b9830ed606b>::operator ()
AppReadiness::Tasks::AppxPreviews::OnExecute
AppReadiness::Tasks::AppxPreviews::OnExecute::<lambda_046130ff1b1a6b71c19f8c8e14c27085>::operator ()
AppReadiness::Tasks::AppxPreviews::RuntimeClassInitialize
AppReadiness::Tasks::BitsJob::CreateTemporaryFileName
AppReadiness::Tasks::BitsJob::CreateTemporaryFileName::<lambda_a85b2a0eaf882aa359e7a82128f285ac>::operator ()
AppReadiness::Tasks::BitsJob::GetUriFileExtension
AppReadiness::Tasks::BitsJob::JobError::<lambda_d6bf87c9bfd21c15179572cd87903efb>::operator ()
AppReadiness::Tasks::BitsJob::JobTransferred::<lambda_e6749707a8a06ac33c4cfedfd5733ce2>::operator ()
AppReadiness::Tasks::BitsJob::StartJob
AppReadiness::Tasks::BitsJob::StartJob::<lambda_1896b0420ca38c5cb223265a9738fa39>::operator ()
AppReadiness::Tasks::CreateBundleReader
AppReadiness::Tasks::CreateGuidString
AppReadiness::Tasks::DetermineApplicableResourcePackages
AppReadiness::Tasks::FindPlaceHoldersIn
AppReadiness::Tasks::GetAppxPackageRoot
AppReadiness::Tasks::GetMainPackagesForBundle
AppReadiness::Tasks::GetPackagePath
AppReadiness::Tasks::GetPackageResourcePri
AppReadiness::Tasks::Impl::PreviewTileTask::RuntimeClassInitialize
AppReadiness::Tasks::LocalPreviews::GetPackageResourceFiles
AppReadiness::Tasks::LocalPreviews::OnExecute::<lambda_2e69251be88fae9fad057c7f3bdbc2c4>::()::<lambda_ceac50f6bb65f6f2505f6516d08182b8>::operator ()
AppReadiness::Tasks::operator -
AppReadiness::Tasks::PackageChanges::OnExecute
AppReadiness::Tasks::PackageChanges::PackageChanges
AppReadiness::Tasks::Pause::OnExecute
AppReadiness::Tasks::Pause::RuntimeClassInitialize
AppReadiness::Tasks::RegisterPackage::Invoke::<lambda_eadfe9823c83b739d4cae572735feee0>::operator ()
AppReadiness::Tasks::RegisterPackage::OnExecute
AppReadiness::Tasks::RegisterPackage::OnExecute::<lambda_edb4f9379a81b78ab66d715e00383ff5>::operator ()
AppReadiness::Tasks::RegisterPackage::OnStarted
AppReadiness::Tasks::RegisterPackage::RuntimeClassInitialize
AppReadiness::Tasks::RemoveBackup::OnExecute::<lambda_a11b7953b61e93de0ff1d4c14c27e6d9>::operator ()
AppReadiness::Tasks::RemoveBackup::RuntimeClassInitialize
AppReadiness::Tasks::RemovePreviews::GetInstallState::<lambda_ff4c3646733d9a87ccb0cb1b79b85875>::operator ()
AppReadiness::Tasks::RemovePreviews::OnExecute::<lambda_861b6def1eabb24631da2491e9dc8464>::operator ()
AppReadiness::Tasks::ResolveStoreCategories::OnExecute::<lambda_dc83a49d3c7bc429277878727fd46f06>::operator ()
AppReadiness::Tasks::ResolveStoreCategories::RuntimeClassInitialize
AppReadiness::Tasks::StageUserData::Invoke::<lambda_58e151a3731012cd4075c1b972c30c0b>::operator ()
AppReadiness::Tasks::StageUserData::OnCancel
AppReadiness::Tasks::StageUserData::OnExecute
AppReadiness::Tasks::StageUserData::OnExecute::<lambda_893fb070bc3b2f6ae2273ab6fe4ff010>::operator ()
AppReadiness::Tasks::StageUserData::RuntimeClassInitialize
AppReadiness::Tasks::Store::ConvertToULong
AppReadiness::Tasks::Store::ParseXmlIntoStruct
AppReadiness::Tasks::Store::ReadArray
AppReadiness::Tasks::Store::ReadElementString
AppReadiness::Tasks::Store::Skip
AppReadiness::Tasks::Store::StoreMetadata::Create
AppReadiness::Tasks::Store::StoreMetadata::Create::<lambda_457eef4576c97378304f32b6929e02e5>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::Create::<lambda_8752951fd3ce9a1933e1d1511e3de003>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::CreatePropertyStore
AppReadiness::Tasks::Store::StoreMetadata::InitPlaceholderPath
AppReadiness::Tasks::Store::StoreMetadata::InitPlaceholderPath::<lambda_8fb9c7dc60644aa59a4aea8f234dbaaa>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::Parse
AppReadiness::Tasks::StoreInstall::OnStarted
AppReadiness::Tasks::StoreInstall::OnStarted::<lambda_c959c419b99b757af7545ec8a3d9110f>::operator ()
AppReadiness::Tasks::StoreInstall::ReacquirePackage::<lambda_ad5e0ef7d6fd208ba898f6f706aee2ea>::operator ()
AppReadiness::Tasks::StorePreviews::CreateTileForPackage
AppReadiness::Tasks::StorePreviews::GetSecondPassImages::<lambda_141cf924e6585cc8cb3cd095287cacf9>::operator ()
AppReadiness::Tasks::UnregisterPackage::FindPackageIdToRemove
AppReadiness::Tasks::UnregisterPackage::Invoke::<lambda_f5d66f6f2c3977f67d580743a895a151>::operator ()
AppReadiness::Tasks::UnregisterPackage::OnExecute
AppReadiness::Tasks::UnregisterPackage::OnExecute::<lambda_aa25f65d6088fc6caaea3a1cbe3c4861>::operator ()
AppReadiness::Tasks::UnregisterPackage::RuntimeClassInitialize
AppReadiness::User::CreateAppxPrepareTask
AppReadiness::User::CreateInSession
AppReadiness::User::CreateTask
AppReadiness::User::ExecuteUnderContext
AppReadiness::User::GetDefaultAccountSid
AppReadiness::User::GetWellKnownSid
AppReadiness::User::IsMemberOfDefaultSystemManagedGroup
AppReadiness::User::IsVDI
AppReadiness::User::MarkPackageError
AppReadiness::User::OnComplete
AppReadiness::User::ProcessTasks
AppReadiness::User::RuntimeClassInitialize
AppReadiness::User::SuspendActivity
AppReadiness::WinStore::StoreCallbackImpl::Register
AppReadiness_Api_CreateTask
AppReadiness_Api_DisableInAuditMode
AppReadiness_Api_EnterLogonPhase
AppReadiness_Api_GetTask
AppReadiness_Api_HandlePackageChange
AppReadiness_Api_Install
AppReadiness_Api_ProcessTasks
AppReadiness_Api_Remove
AppReadiness_Api_ResolveStoreCategories
AppReadiness_BrokerSession
AppReadiness_Error
AppReadiness_ExecuteTask
AppReadiness_MaintenanceTask_Run
AppReadiness_PackageChange
AppReadiness_PerfTrack
AppReadiness_PreRegister_Package
AppReadiness_ScorePackage
AppReadiness_Service
AppReadiness_Service_Lifetime
AppReadiness_Service_Thread
AppReadiness_Timeline
AppReadiness_TriggerTask_Run
AppReadiness_User_ProcessTasks
AppReadiness_User_Shutdown
AppReadinessDirectory
AppReadiness-Service
apps->GetAt(appIndex, IID_PPV_ARGS(&app))
apps->GetCount(&numApps)
appTile->QueryInterface(appTilePriv.GetAddressOf())
appTilePriv->GetPropertyStore(&propstore)
AppXAllUserStore.dll
AppxAllUserStore::IsInboxPackage(m_packageId.c_str(), &isInbox)
AppxAllUserStore::MarkStatusOfMainPackageForUser(user->GetUserSid().c_str(), user->IsSpecialProfile(), &mainPackage, resultCode)
AppxAllUserStore::TryGetEndOfLifePackageFullName( GetUser()->GetUserSid().c_str(), packageFamilyName, removePackageFullName, ARRAYSIZE(removePackageFullName), &found)
AppxApplicabilityEngine.dll
AppxDeploymentClient.dll
AppXDeploymentClient.dll
AppxPreviews
argument list too long
argument out of domain
ARS-GetMetadata(%ls)-%04d-%02d-%02d-%02d-%02d-%02d.txt
ART:AppxPreRegistration
ART:InboxGroup
ART:OemFirstRun
ART:OnDemandSyncGroup
ART:PreRoamingGroup
ART:ResolveStoreCategories
ART:UserFirstLogon
ART:UserLogon
Assert
assertVersion
asyncInfo->get_ErrorCode(&operationResult)
AsyncRunOnce
AsyncUpdatePCSettings
ATAVAWH
AttemptAfter
AuditBoot
B L+J@L
BackupData
BackupSize
bad address
bad allocation
bad file descriptor
bad function call
bad message
bad_address
bad_file_descriptor
BaseTask::RuntimeClassInitialize(user, taskId, priority)
BiChangeApplicationStateForPackageName
BiChangeSessionState
BiPtAssociateApplicationExtensionClass
BiPtQuerySystemStateBroadcastChannels
BiPtQuerySystemStateBroadcastChannels(&channels)
bitsManager->CreateJob(text.Get(), BG_JOB_TYPE_DOWNLOAD, &jobId, &job)
broken pipe
BrokerSession
BX9A4t
C H!C(H
C`H9D$`u*H
C|$pH
C0H!C8H
Ca A;
callback->QueryInterface(callbackUnknown.GetAddressOf())
callContext
CallContext:[%hs] 
Cancel
Cancel()
cArgs >= 1
CD$8L
CEnumerableObjectCollection::CreateInstance(IID_PPV_ARGS(&apps))
CHAN8
CheckRemoteDebuggerPresent
CheckTokenMembership
CheckTokenMembership(userToken.Get(), static_cast<PSID>(sidBuffer), &isMember)
CL$@L
CL$hE3
ClientGetAllPackagesToBeInstalledForUser(nullptr, false, &packages, &packageCount)
ClientGetAllPackagesToBeInstalledForUser(userSid.c_str(), specialProfile, &m_packagesToBeInstalled, &m_numPackagesToBeInstalled)
clientSecurity->SetBlanket(callback, RPC_C_AUTHN_DEFAULT, RPC_C_AUTHZ_DEFAULT, nullptr, RPC_C_AUTHN_LEVEL_DEFAULT, RPC_C_IMP_LEVEL_IDENTIFY, nullptr, EOAC_DEFAULT)
CloseHandle
CloseState
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateGuid(&guid)
CoCreateInstance
CoCreateInstance(__uuidof(::PackageInformation), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInformation))
CoCreateInstance(__uuidof(AppxBundleFactory), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&factory))
CoCreateInstance(__uuidof(BackgroundCopyManager), nullptr, CLSCTX_LOCAL_SERVER, IID_PPV_ARGS(&bitsManager))
CoCreateInstance(__uuidof(PackageInformation), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInfo))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInstallStateStore))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&stateStore))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(stateStore.GetAddressOf()))
CoCreateInstance(__uuidof(PackageInstallStateStoreEnum), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(stateStoreEnum.GetAddressOf()))
CoCreateInstance(clsid, nullptr, CLSCTX_INPROC_SERVER, riid, instance)
CoCreateInstance(CLSID_GlobalOptions, nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(globalOptions.GetAddressOf()))
CoCreateInstance(CLSID_StdGlobalInterfaceTable, nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(m_git.GetAddressOf()))
CoDisconnectContext
CoFreeUnusedLibraries
CoGetApartmentType
CoGetCallContext
CoGetMalloc
CoGetObject
CoGetObject(moniker, nullptr, IID_PPV_ARGS(&factory))
CoGetSharedServiceId(&m_serviceId)
CoImpersonateClient
CoInitializeSecurity
CoInitializeSecurity(reinterpret_cast<PSECURITY_DESCRIPTOR>(const_cast<GUID*>(&appIdAppReadiness)), -1, nullptr, nullptr, RPC_C_AUTHN_LEVEL_PKT, RPC_C_IMP_LEVEL_IDENTIFY, nullptr, EOAC_NO_CUSTOM_MARSHAL | EOAC_DYNAMIC_CLOAKING | EOAC_DISABLE_AAA | EOAC_APPID, nullptr)
combase.dll
ComDisconnectableObjectManager::Initialize()
ComDisconnectableObjectManager::MakeAndInitializeDisconnectableObject<AppReadiness::Impl::ExternalTaskWrapper>(task, taskToWrap.Get())
ComDisconnectableObjectManager::MakeAndInitializeDisconnectableObject<ExternalStoreCallback>(progressWrapper.GetAddressOf(), this)
CompanyName
CompareFileTime
CompareStringOrdinal
completed
Completed
completedOperation->QueryInterface(asyncInfo.GetAddressOf())
connection aborted
connection already in progress
connection refused
connection reset
connection_aborted
connection_already_in_progress
connection_refused
connection_reset
connection->GetNetworkConnectivityLevel(&level)
connectionCost->get_NetworkCostType(&cost)
ConvertSidToStringSid(reinterpret_cast<SID*>(sid), &rawSidStr)
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptor(userKeyAcl.c_str(), SDDL_REVISION_1, &rawPtr, nullptr)
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
CoRegisterClassObject
CoRegisterServerShutdownDelay(m_outstandingObjects.Get(), c_MaxWaitForObjects)
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
count
CoWaitForMultipleHandles
CreateBindCtx
CreateBindCtx(0, &bindctx)
CreateDirectory(tempPath, nullptr)
CreateDirectoryW
CreateEventExW
CreateFileW
CreateMutexExW
CreatePreviewTileOnly
CreateSemaphoreExW
CreateSemaphoreW
CreateStreamOnHGlobal
CreateThread
CreateTimerQueueTimer
CreateWellKnownSid
CreateWellKnownSid(sidType, domainSid, reinterpret_cast<SID*>(sid), &sidLen)
CreateWellKnownSid(WinBuiltinDefaultSystemManagedGroupSid, nullptr, sidBuffer, &sidSize)
CreateXmlReader
CreateXmlReader(IID_PPV_ARGS(&reader), nullptr)
CreateXmlReaderInputWithEncodingName
CreateXmlReaderInputWithEncodingName(reinterpret_cast<ISequentialStream*>(this), nullptr, L"utf-16", true, nullptr, &readerInput)
CreateXmlWriter
CreateXmlWriterOutputWithEncodingName
cross device link
currentContextId
currentContextMessage
currentContextName
Cy(A;
D$ 0u
D$ E3
d$ E3
D$ E3
D$ fD
D$ H;
D$(E3
D$(H;
D$(L+
D$@E3
D$@H;
D$`E3
D$`fD90t
D$`H;C
D$`H+
D$`L;C
D$0E3
D$0fD98t
D$0H;
D$0H+
D$0L;
D$0t2
D$8E3
D$8H!|$8H
D$8H;
D$8H0
D$D!D$D3
D$hE3
D$HE3
D$HH;
D$hH;
d$Ht*
D$PE3
D$PH;
D$PL;
D$X9D$ 
D$xE3
D$xH;
D$XH;
d$xH+
D$XL;F`t
D:P(A;OICI;KA;;;BA)(A;OICI;KA;;;S-1-5-80-2020831507-1298702824-3288167190-116113825-4190209)
D;|$Pt?E3
D;a D
D;A(D
D;J,H
D;t$0
D;vLt
D;y(D
D8{<t
D8}gt
D8d$@
D9|$0
D9C(t
D9d$0
D9egt
D9t$0vbL
D9t$P
DebugBreak
DecodePointer
DelayLoadFailureHook
DeleteAllPackagesFromPackageArray
DeleteCriticalSection
DeleteFileW
DeleteTimerQueueTimer
deploymentOperation->put_Completed(this)
deploymentOperation->put_Progress(this)
destination address required
destination_address_required
device or resource busy
DidAppSurviveOSUpgradeForUser
directory not empty
DisableAppInstallsOnFirstLogon
DisableInAuditMode
DisableResolveStoreCategories
DisableThreadLibraryCalls
DisableUpgradeCleanup
DoesCallerHaveAdminRights()
DumpGetMetadataXml
DuplicateHandle
DuplicateHandle(GetCurrentProcess(), m_threadHandle.Get(), GetCurrentProcess(), threadHandle, 0, false, DUPLICATE_SAME_ACCESS)
DuplicateTokenEx
DuplicateTokenEx(temp.Get(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, nullptr, SecurityImpersonation, TokenImpersonation, result.GetAddressOf())
DuplicateTokenEx(temp.Get(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, nullptr, SecurityImpersonation, TokenImpersonation, token.GetAddressOf())
Duration
Dw=internal\sdk\inc\wil\filesystem.h
DWordToInt(value, &intValue)
E H9E
E(=csm
E_ABORT
E_OUTOFMEMORY
E_UNEXPECTED
E8=csm
EarlyAppResolverStart
EH=csm
Eh=csm
Elapsed
EnableKdSpew
EnableLogging
EnableTraceEx2
EncodePointer
EnterCriticalSection
en-US
Error
EtwEventEnabled
EtwEventRegister
EtwEventWrite
EventData
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWrite
EventWriteTransfer
EVNTH"
EX=csm
Ex=csm
Exception
executable format error
ExitCode
ExpandEnvironmentStringsW
Expression
ExternalObjects
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-firewallapi-webproxy-l1-1-0.dll
ext-ms-win-kernel32-package-l1-1-0.dll
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-winsta-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f;.t8f
f;D$x
f;t$ tFH
f9*u?
f9,Au
f9<Au
f9<Ju
f94Au
fA;R*sx
fA9(t
fA9,Cu
fA9<@u
fA9<Au
fA9<Cu
fA9<Iu
fA9<Pu
fA9<Qu
fA9<Su
fA94@u
fA94Bu
fA94Qu
factory->CreateBundleManifestReader(stream.Get(), reader.GetAddressOf())
factory->CreateInstance(nullptr, riid, instance)
FailFast
failureCount
failureId
failureType
FallbackError
false
fB9<Hu
fC9,Qu
fC9<Qu
fC9<Su
fC94Au
fD9 t{L
fD9$Gu
fD9|$`tiL
fD9<Bu
fD9<Gu
fD9<Ku
fD9<Zu
fD94^u
fD94Au
fD94Bu
fD98t
fD98u^D8}Hu
fD9z*vU
fffffff
file exists
file too large
FileDescription
fileName
filename too long
filename_too_long
FileVersion
FindClose
FindFirstFileW
FindMissingTilesFailed
FindNextFileW
FindPackagesByPackageFamily
FindResourceExW
FirstLogon_NumConcurrentFirstRunApps
FirstLogon_NumConcurrentTasks
FirstLogonDelay
FirstRunLaunchTimeout
flags == APPREADINESS_TASK_DEFAULT
Fonecoreuap\shell\appreadiness\src\core\servicehandle.cpp
FormatMessageW
FreeApplicablePackages
FreeLibrary
FreeSid
function
Function
function not supported
FWClosePolicyStore
FWOpenPolicyStore
G@M9`
GenerateAppUserModelId(packageFamilyName.c_str(), tile.PRAID.c_str(), &appId)
generic
GetAllDefaultApps
GetAllUpdatedPackages
GetApplicablePackagesForUser
GetApplicablePackagesForUser(reader, sid, &this->count, &this->packages)
GetCallingUserToken(TOKEN_QUERY, callingUser.GetAddressOf())
GetComputerNameW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
getDefaultApps != nullptr
getDefaultApps(apps.Get())
GetFileAttributesExW
GetFileAttributesW
GetFileSize
GetHGlobalFromStream
GetLastError
GetLastError()
GetLocalTime
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetPackageApplicabilityForUserLogon
GetPackageApplicabilityWrapper
GetPackageApplicabilityWrapper(m_packageId.c_str(), user->GetUserSid().c_str(), &appState)
GetPackageOverrideSetupPhase
GetPackageStatusForUser
GetProcAddress
GetProcessHeap
GetProcessId
GetProfileType
GetSidSubAuthority
GetStateFolder
GetSystemDirectoryW
GetSystemTime
GetSystemTimeAsFileTime
GetTempPathW
GetTickCount
GetTokenInformation
GetTokenInformation(GetToken().Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &userSessionIdLen)
GetTokenInformation(userToken.Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &len)
GetTokenInformation(userToken.Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &userSessionIdLen)
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUser()->ExecuteUnderContext([&]() { auto packageManagerInternal = std::move(PackageInfo::GetPackageManager<IPackageManagerInternal>()); ThrowIfFailed(packageManagerInternal->RemovePackageAsync( to_winstring(m_packageFullName).Get(), m_repair ? DeploymentOptionsInternal_RepairAppRegistrationOption: DeploymentOptionsInternal_None, DeploymentOperationPriority::DeploymentOperationPriority_Default, deploymentOperation.GetAddressOf())); })
GetUser()->ExecuteUnderContext([&]() { ThrowIfFailed(packageManager->GeneratePreviewTiles(deploymentOperation.GetAddressOf())); })
GetUser()->ExecuteUnderContext([&]() { ThrowIfFailed(packageManager->StageUserDataWithOptionsAsync(packageId.Get(), AdjustDeploymentOptionsForUserLogon(DeploymentOptions_None), m_operation.GetAddressOf())); })
GetVersionExW
GetWindowsDirectoryW
gfffffffH
gfffffffH+
gfffffffI+
GlobalCollection
GlobalLock
globalOptions->Set(COMGLB_EXCEPTION_HANDLING, COMGLB_EXCEPTION_DONOT_HANDLE_ANY)
globalOptions->Set(COMGLB_RO_SETTINGS, COMGLB_ENABLE_AGILE_OOP_PROXIES)
globalOptions->Set(COMGLB_UNMARSHALING_POLICY, COMGLB_UNMARSHALING_POLICY_STRONG)
GlobalSize
GlobalUnlock
Group
GroupId
GSNxZ
GX9G4t`
H UVWAVAWH
H VWAVH
h VWAVH
H WAVAWH
H!\$@H
H!\$HH
H!]@!]0A
H!]8L
H!_@H
H!|$0E3
H;]Pu
H;0u2H
H;8u2H
H;8u3H
H;D$ u8H
H;EPu
H;Q0s
H;S(v
H@M9i
h_^[]
H+L$8H
H+O(H
H9\$@t
H9\$8t
H9_0t&H
H9{Hs<
H99t$H
H9A`t
H9D$Pv
H9E u*H
H9EHA
H9t$8t>H
hA^_[]
hA_A^_^[]
HA_A^A]A\_^[]
HA_A^A]A\_^][
HasUpd
HcL$ HcD$$H
HeapAlloc
HeapFree
HKEY_CLASSESS_ROOT
HKEY_CURRENT_USER
host unreachable
host_unreachable
HRESULT
hresult
HRESULT
hresult
HRESULT_FROM_NT(RtlGetSessionProperties(sessionId, &sessionProperties))
HrInstallClipLicense
hrPackageState
I9^0t<H
identifier removed
IdlePulse
illegal byte sequence
ImageBaseUrl
imageName
imageSize
ImpersonateLoggedOnUser
ImpersonateLoggedOnUser(m_userToken.Get())
inappropriate io control operation
Inbox_NumConcurrentTasks
InboxApps
InferUserContext(userContextToken, callingUser.GetAddressOf())
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
InitOnceExecuteOnce
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* , void** ) -> BOOL { MICROSOFT_TELEMETRY_ASSERT(!s_registryGate.IsValid()); s_registryGate = std::move(Microsoft::WRL::Wrappers::Semaphore(CreateSemaphore(nullptr, 1, 1, nullptr))); ThrowIfFalse(s_registryGate.IsValid(), ResultFromKnownLastError()) if (!s_registryRoot.empty()) { ThrowIfWin32ResultFailed(RegOpenKeyEx(HKEY_CURRENT_USER, s_registryRoot.c_str(), 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())); } else { ThrowIfWin32ResultFailed(RegOpenKeyEx(HKEY_LOCAL_MACHINE, c_AppReadinessRegRoot, 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())); } return true; }, nullptr, nullptr)
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* , void** ) -> BOOL { wchar_t buffer[MAX_PATH]; ThrowIfFailed(ResultFromWin32Count(GetSystemDirectory(buffer, _countof(buffer)), _countof(buffer))); ThrowIfFailed(PathCchAppend(buffer, _countof(buffer), L"@GhostedSecondaryTileReplacementLogo.png")); s_placeholderImagePath.assign(buffer); return true; }, nullptr, nullptr)
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* parameter, void** ) -> BOOL { HMODULE appxClientDll = LoadLibraryEx(L"AppxDeploymentClient.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32); if (appxClientDll != nullptr) { auto const ppfnResult = reinterpret_cast<PfnGetPackageApplicabilityForUserLogon*>(parameter); *ppfnResult = reinterpret_cast<PfnGetPackageApplicabilityForUserLogon>(GetProcAddress(appxClientDll, "GetPackageApplicabilityForUserLogon")); if (*ppfnResult == nullptr) { FreeLibrary(appxClientDll); } } return true; }, &pfnGetPackageApplicabilityForUserLogon, nullptr)
install:
Installed
internal\sdk\inc\wil\resource.h
internal\sdk\inc\wil\ResultMacros.h
internal\sdk\inc\wil\winrt.h
InternalName
interrupted
invalid argument
invalid map/set<T> iterator
invalid seek
invalid string position
invalid vector<T> subscript
invalid_argument
io error
iostream
iostream stream error
is a directory
is not
IsAuditMode
IsDebuggerPresent
IsFreeNetworkAvailable
IsIdle
IsInboxPackage
IsLocal()
IsNetworkConnected
IsSameObject
IsValidSid
item.As(&itemUnknown)
iter.first.As(&taskInf)
iterable->First(iterator.GetAddressOf())
iterator->get_Current(item.GetAddressOf())
iterator->get_HasCurrent(&current)
iterator->get_HasCurrent(&hasCurrent)
iterator->GetCurrent(&package)
iterator->GetHasCurrent(&hasCurrent)
iterator->MoveNext(&current)
iterator->MoveNext(&hasCurrent)
iuilp.dll
Iv}2ja
j.6`z
job->AddFile(iter.first.c_str(), iter.second.c_str())
job->Complete()
job->Resume()
job->SetNotifyFlags(BG_NOTIFY_JOB_TRANSFERRED | BG_NOTIFY_JOB_ERROR)
job->SetNotifyInterface(static_cast<IBackgroundCopyCallback*>(this))
job->SetPriority(hiPriority ? BG_JOB_PRIORITY_FOREGROUND : BG_JOB_PRIORITY_NORMAL)
jobError->GetError(&errorContext, &errorCode)
K SVWH
kernelbase.dll
keyName.InitializeFormat(L"Software\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\PBR\\%ls", userSid.c_str())
L$ !8
L$ E3
L$ SH
L$ SWH
L$ UH
L$ USWH
L$ UVWATAUAVAWH
L$ VWATAVAWH
L$(E3
L$(H3
L$@H3
L$`9L$Pu
L$`D;
l$`H;
L$`H3
L$0E3
L$0H;
L$0H3
L$8E3
l$DE3
L$DE3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH95
L$pE3
L$PE3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
l$PI;
L$XE3
L$XH+
L$xH+L$pH
L$XH3
L$xH3
L$XH3
L9{@u
L9{0t#H
L9qPt
LaunchAppAfterLogOn
LaunchCflScenario
LaunchUserOOBE
LcA<E3
LeaveCriticalSection
LegalCopyright
len != 0
lineNumber
LoadLibraryExW
LoadResource
LOCAL
Local\SM0:%d:%d:%hs
LocalAlloc
LocalFree
localPreview
localTask
localTask.As(&taskToWrap)
LockResource
LockScreenApps
LogHr
LogonCount
LogonDelay
LookupAccountSidW
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupGetDomainInfo(lsa.get(), AccountDomainInformation, (PVOID *)&domainInfo)
LsaLookupOpenLocalPolicy
LsaLookupOpenLocalPolicy(&lsaAttributes, LOOKUP_VIEW_LOCAL_INFORMATION, &lsa)
LUnConecoreuap\shell\appreadiness\src\core\api.cpp
m_git->RegisterInterfaceInGlobal(callback, __uuidof(IAppReadinessTaskCallback), &m_cookie)
m_operation->put_Completed(this)
m_operation->put_Progress(this)
m_package->get_InstalledLocation(storageFolder.GetAddressOf())
m_runningTasksEvent.IsValid()
m_taskGate.IsValid()
m_threadHandle.IsValid()
m_uriFactory->CreateUri(packageUriString.Get(), packageUri.GetAddressOf())
m_uriFactory->CreateUri(uriStr.Get(), &uriObject)
m_uriFactory->CreateWithRelativeUri(baseStr.Get(), relStr.Get(), &uri)
MachineOobeUpdates
MakeAndInitialize<AppReadiness::Groups::InstallPackage>(&task, user, package)
MakeAndInitialize<ExternalCallback>(&newCallback, callback)
MakeAndInitialize<Groups::FirstLogonGroup>(&task, this)
MakeAndInitialize<Groups::InboxGroup>(&task, this)
MakeAndInitialize<Groups::OemFirstRun>(&task, this)
MakeAndInitialize<Groups::OnDemandSyncGroup>(&task, this)
MakeAndInitialize<Groups::PreRoamingGroup>(&task, this)
MakeAndInitialize<Groups::UserLogon>(&task, this)
MakeAndInitialize<RemovePackage>(&task, user, packageInfo)
MakeAndInitialize<StoreMetadata>(&metadata)
MakeAndInitialize<Tasks::ActivateApps>(&task, GetUser(), acid.Get(), packageInfo)
MakeAndInitialize<Tasks::AppxPreRegister>(&task, this)
MakeAndInitialize<Tasks::AppxPreviews>(&appxPreviewTileRegistration, GetUser())
MakeAndInitialize<Tasks::LocalPreviews>(&localTask, GetUser())
MakeAndInitialize<Tasks::Pause>(&pause, GetUser(), seconds)
MakeAndInitialize<Tasks::RegisterPackage>(&registerTask, GetUser(), packageInfo)
MakeAndInitialize<Tasks::RemoveBackup>(&removeBackup, GetUser(), packageInfo)
MakeAndInitialize<Tasks::RemovePreviews>(&removePreviewTiles, GetUser(), packageInfo->GetPackageFamilyName())
MakeAndInitialize<Tasks::ResolveStoreCategories>(&localTask, user.Get(), cPackageFamilyNames, packageFamilyNames)
MakeAndInitialize<Tasks::StageUserData>(&stageUserData, GetUser(), packageInfo)
MakeAndInitialize<Tasks::StoreInstall>(&installTask, GetUser(), packageInfo)
MakeAndInitialize<Tasks::StorePreviews>(&previewTask, GetUser())
MakeAndInitialize<Tasks::StorePreviews>(&storeTask, GetUser())
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageFamilyName, removePackageFullName, true)
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageInfo)
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageInfo, true)
MakeAndInitialize<User>(&systemUser, systemSid, INVALID_USERCONTEXT_TOKEN, processToken)
MakeAndInitialize<User>(user.GetAddressOf(), userSid, userContextToken, userToken)
MakeAndInitialize<WindowsStoreUserApps>(&windowsStore)
malloc
ManifestCacheOptions
map/set<T> too long
MarkStatusOfMainPackageForUser
mbstowcs
memcmp
memcpy
memcpy_s
memmove
memmove_s
memset
message
message size
message_size
Metadata
Microsoft
Microsoft Corporation
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.ARS.Tiles
Microsoft-Windows-AppReadiness
Microsoft-Windows-AppReadiness/Admin
Microsoft-Windows-AppReadiness/Debug
Microsoft-Windows-AppReadiness/Operational
MigrationRepairAttempted
minATL$__a
minATL$__f
minATL$__m
minATL$__z
MissingTilesDetected
MissingTilesRepaired
module
ModuleCollection
MoveFileW
ms:Measures
Msg:[%ws] 
msvcrt.dll
NetUserGetInfo
network down
network reset
network unreachable
network_down
network_reset
network_unreachable
NHH+N@H
no buffer space
no child process
no link
no lock available
no message
no message available
no protocol option
no space on device
no stream resources
no such device
no such device or address
no such file or directory
no such process
no_buffer_space
no_protocol_option
not a directory
not a socket
not a stream
not connected
not enough memory
not supported
not_a_socket
not_connected
NotPostShellPhase
NotPreInstalled
NoWaitOnRoamingPayloads
NqX@W
ntdll.dll
NtQuerySystemInformation
NtQuerySystemTime
NtQuerySystemTime(&currentTime)
NtQueryWnfStateData
NtQueryWnfStateData(&stateName, 0, nullptr, &changeStamp, buffer, &bufferLen)
NumPackages
O@M9a
o\$PH
object->QueryInterface(objectUnknown.GetAddressOf())
oD$ f
OEMLicense.dll
oL$0f
onecore\shell\lib\calleridentity\calleridentity.cpp
onecoreuap\base\appmodel\statemanager\helpers\stateversion.cpp
onecoreuap\shell\AppReadiness\Src\AppReadinessPch.h
onecoreuap\shell\appreadiness\src\core\basetask.cpp
onecoreuap\shell\appreadiness\src\core\basetaskgroup.cpp
onecoreuap\shell\appreadiness\src\core\brokersession.cpp
onecoreuap\shell\appreadiness\src\core\externalcallback.h
onecoreuap\shell\appreadiness\src\core\immersivepolicy.h
onecoreuap\shell\appreadiness\src\core\module.h
onecoreuap\shell\appreadiness\src\core\packageinfo.cpp
onecoreuap\shell\appreadiness\src\core\packagelist.cpp
onecoreuap\shell\appreadiness\src\core\packagemetadata.cpp
onecoreuap\shell\appreadiness\src\core\pbrpackagelist.cpp
onecoreuap\shell\appreadiness\src\core\service.cpp
onecoreuap\shell\appreadiness\src\core\servicethread.cpp
onecoreuap\shell\appreadiness\src\core\storecallback.cpp
onecoreuap\shell\appreadiness\src\core\system.cpp
onecoreuap\shell\appreadiness\src\core\user.cpp
onecoreuap\shell\appreadiness\src\core\user.h
onecoreuap\shell\appreadiness\src\groups\firstlogongroup.cpp
onecoreuap\shell\appreadiness\src\groups\inboxgroup.cpp
onecoreuap\shell\appreadiness\src\groups\installpackage.cpp
onecoreuap\shell\appreadiness\src\groups\oemfirstrun.cpp
onecoreuap\shell\appreadiness\src\groups\ondemandsyncgroup.cpp
onecoreuap\shell\appreadiness\src\groups\preroaminggroup.cpp
onecoreuap\shell\appreadiness\src\groups\previews.cpp
onecoreuap\shell\appreadiness\src\groups\removepackage.cpp
onecoreuap\shell\appreadiness\src\groups\tilestoremigrationrecovery.cpp
onecoreuap\shell\appreadiness\src\groups\userlogon.cpp
onecoreuap\shell\appreadiness\src\tasks\activateapps.cpp
onecoreuap\shell\appreadiness\src\tasks\appxpreregister.cpp
onecoreuap\shell\appreadiness\src\tasks\appxpreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\bitsjob.cpp
onecoreuap\shell\appreadiness\src\tasks\localpreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\packagechanges.cpp
onecoreuap\shell\appreadiness\src\tasks\pause.cpp
onecoreuap\shell\appreadiness\src\tasks\previewtiletask.cpp
onecoreuap\shell\appreadiness\src\tasks\removebackup.cpp
onecoreuap\shell\appreadiness\src\tasks\removepreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\resolvestorecategories.cpp
onecoreuap\shell\appreadiness\src\tasks\storemetadata.cpp
onecoreuap\shell\appreadiness\src\tasks\storepreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\unregisterpackage.cpp
OnStart
oonecoreuap\shell\appreadiness\src\tasks\registerpackage.cpp
OPCOx
OpenProcessToken
OpenProcessToken(GetCurrentProcess(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, processToken.GetAddressOf())
OpenSemaphoreW
OpenStateExplicitForUserSidString
OpenThreadToken
Operation
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
operation.As(&asyncInfo)
operation_in_progress
operation_not_supported
operation_would_block
operationResult
OpposingOperation
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
oT$@f
OutputDebugStringW
owner dead
p AWH
p WATAUAVAWH
p WAVAWH
P:\AppData
P:\WindowsApps
PA^_]
pA__^[]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Package
package->get_Id(&packageId)
package->get_Id(packageId.GetAddressOf())
package->GetPackageId(&packageId)
packageChanges-%ld
PackageFamilyName
packageFamilyName
PackageFamilyName
PackageFamilyNameFoundInPolicy
PackageFamilyNameFromFullName
PackageId
packageId.Set(package->GetPackageId().c_str())
packageId->get_FullName(packageFullName.GetAddressOf())
packageId->get_FullName(str.GetAddressOf())
packageId->GetPackageFullName(&fullname)
PackageIdFromFullName
PackageIdFromFullName(m_packageId.c_str(), PACKAGE_INFORMATION_BASIC, &packageIdLen, reinterpret_cast<BYTE*>(packageId.get()))
PackageInfo
packageInfo->GetApplicationTileInfoAt(i, IID_PPV_ARGS(&appTile))
packageInfo->GetApplicationTileInfoCount(&numTiles)
packageInformation->Commit(false)
packageInformation->LoadFromDisk(m_packageFamilyName.c_str(), STCT_UNINSTALL)
PackageInstallPause
packageIter->First(&iterator)
packageManager.As(&packageManager2)
packageManager.As(&packageManager3)
packageManager->CopyTo(riid, object)
packageManager->FindPackagesByUserSecurityId(userSid.Get(), &iterable)
packageManager->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSid.Get(), packageFamilyName.Get(), PackageTypes_Main, &packageIter)
packageManager->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSidString.Get(), packageFamilyNameString.Get(), PackageTypes_Main, &packageIter)
packageManager->GeneratePreviewTiles(deploymentOperation.GetAddressOf())
packageManager->RegisterPackageAsync(packageUri.Get(), nullptr, deploymentOptions, &deploymentOperation)
packageManager->StageUserDataWithOptionsAsync(packageId.Get(), AdjustDeploymentOptionsForUserLogon(DeploymentOptions_None), m_operation.GetAddressOf())
packageManager2->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSidString.Get(), packageFamilyNameString.Get(), PackageTypes_Main, &packageIter)
packageManager3->AddPackageVolumeAsync(HStringReference(PREINSTALLED_WINDOWSAPPS).Get(), packageVolumeOperation.GetAddressOf())
packageManager3->FindPackageVolumeByName(appDataVolumeNameString.Get(), &volume)
packageManager3->RegisterPackageWithAppDataVolumeAsync( packageUri.Get(), nullptr, deploymentOptions, volume.Get(), &deploymentOperation)
packageManagerInternal->CopyTo(riid, object)
packageManagerInternal->RemovePackageAsync( to_winstring(m_packageFullName).Get(), m_repair ? DeploymentOptionsInternal_RepairAppRegistrationOption: DeploymentOptionsInternal_None, DeploymentOperationPriority::DeploymentOperationPriority_Default, deploymentOperation.GetAddressOf())
PackageOperationType
PackageRemovePause
PackageRoot
PackageSourceType
PackageState
packageUriString.Set(manifestPath.c_str(), static_cast<UINT>(manifestPath.length()))
PathAllocCombine
PathCchAddExtension
PathCchAddExtension(buffer, _countof(buffer), extension.c_str())
PathCchAppend
PathCchAppend(buffer, _countof(buffer), L"@GhostedSecondaryTileReplacementLogo.png")
PathCchCombine
PathCchCombine(buffer, _countof(buffer), m_tempDir.c_str(), guidBuf)
PathCchCombine(path, _countof(path), appxRootPath, fullname.Get())
PathCchCombine(path, _countof(path), packageInfo->GetPackagePath().c_str(), c_ResourcesPri)
PathCchCombine(path, _countof(path), rootPath.c_str(), c_ResourcesPri)
PathCchCombine(tempPath, _countof(tempPath), path.Get(), guidBuf)
PathCchRemoveFileSpec
PathCchRemoveFileSpec(buffer.get(), m_packagePath.length() + 1)
pause-
permission denied
permission_denied
PolicyManager_GetPolicyString
policyName
PreinstalledVolumeServicing.dll
PreinstalledVolumeServicing_ApplySuccess
PreinstalledVolumeServicing_ResetCleanup
PreRoaming_NumConcurrentTasks
PreviewTiles
PreviewTileSourceType
Priority
ProcessId
ProcessTasks
ProductName
ProductVersion
PROPSYS.dll
PropVariantClear
PropVariantToStringAlloc
PropVariantToUInt32
protocol error
protocol not supported
protocol_not_supported
PRVAT
PSCreateMemoryPropertyStore
PSCreateMemoryPropertyStore(IID_PPV_ARGS(&propertyStore))
q8I9>
QISearch
QueryPerformanceCounter
QueryUserToken
QueryUserToken(sessionId, temp.GetAddressOf())
QueryUserToken(userSessionId, temp.GetAddressOf())
Queue
RaiseException
RaiseFailFastException
RDSH/VDI
RDSRecoverRequests
read only file system
reader->GetLocalName(&elementName, nullptr)
reader->GetLocalName(&localName, nullptr)
reader->GetNodeType(&nodeType)
reader->GetPackageInfoItems(&iterator)
reader->GetValue(&value, &valueLen)
reader->MoveToElement()
reader->SetInput(readerInput.Get())
ReadFile
realloc
reaquireResult
Reason
ReferencesLeaked
RegCloseKey
RegCreateKeyEx(m_queueRootKey.Get(), packageFamilyName.c_str(), 0, nullptr, 0, KEY_CREATE_SUB_KEY, nullptr, packageKey.GetAddressOf(), nullptr)
RegCreateKeyEx(packageKey.Get(), c_MetadataStoreKeyName, 0, nullptr, REG_OPTION_VOLATILE, access, nullptr, key.GetAddressOf(), nullptr)
RegCreateKeyEx(s_machineRootKey.Get(), user->GetUserSid().c_str(), 0, nullptr, 0, accessRights, &securityAttr, key.GetAddressOf(), nullptr)
RegCreateKeyEx(userRootKey.Get(), c_UserQueueKeyName, 0, nullptr, 0, accessRights, nullptr, key.GetAddressOf(), nullptr)
RegCreateKeyExW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegFlushKey
RegGetValueW
registerPackage
RegisterPackageAsync
RegisterServiceCtrlHandlerExW
RegisterTraceGuidsW
RegisterWaitForSingleObject
RegisterWaitForSingleObject(&waitHandle, m_usersToProcessEvent.Get(), &StaticProcessUserTaskCallback, this, INFINITE, WT_EXECUTEDEFAULT)
RegOpenKeyEx(HKEY_CURRENT_USER, s_registryRoot.c_str(), 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())
RegOpenKeyEx(HKEY_LOCAL_MACHINE, c_AppReadinessRegRoot, 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())
RegOpenKeyExW
RegOpenUserClassesRoot
RegQueryInfoKeyW
RegQueryValueExW
RegSetKeyValueW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
remove:
removeBackup
RemoveDirectoryW
removePackage
RemovePackageAsync
removePreviewTiles
RepairDueToAppDataVolumeOnNonSystemVolume
RepairMissingTilesFailed
ResetEvent
ResolveDelayLoadedAPI
resource deadlock would occur
resource unavailable try again
resources.pri
Result
result
Result
result out of range
ResultFromKnownLastError()
ResultFromWin32Bool(DuplicateTokenEx(userToken.Get(), TOKEN_IMPERSONATE|TOKEN_DUPLICATE|TOKEN_QUERY, nullptr, SecurityImpersonation, TokenImpersonation, m_userToken.GetAddressOf()))
ResultFromWin32Count(::ExpandEnvironmentStrings(sourceString, buffer.get(), len), len)
ResultFromWin32Count(GetSystemDirectory(buffer, _countof(buffer)), _countof(buffer))
ResultFromWin32FromStatus(BiPtAssociateApplicationExtensionClass(&guid, &acid, &eventId, nullptr, 0, 0, nullptr))
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE | SYNCHRONIZE), m_outstandingObjects.GetAddressOf())
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE|SYNCHRONIZE), m_shutdownEvent.GetAddressOf())
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE|SYNCHRONIZE), m_startupEvent.GetAddressOf())
ResultFromWin32Handle(CreateThread(nullptr, 0, &ServiceThread::StaticThreadProc, this, 0, &threadId), m_threadHandle.GetAddressOf())
ResultFromWin32Handle(LoadLibraryEx(L"iuilp.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32), reinterpret_cast<HANDLE*>(m_policyHandle.GetAddressOf()))
ResultFromWin32HandleMaybenull(CreateEventEx(nullptr, nullptr, 0, EVENT_MODIFY_STATE | SYNCHRONIZE), m_usersToProcessEvent.GetAddressOf())
ResultFromWin32HandleMaybenull(CreateEventEx(nullptr, nullptr, 0, SYNCHRONIZE | EVENT_MODIFY_STATE), m_completeEvent.GetAddressOf())
ResultFromWin32HandleMaybenull(CreateSemaphoreEx(nullptr, semaphoreCount, semaphoreCount, nullptr, 0, SYNCHRONIZE | SEMAPHORE_MODIFY_STATE), m_taskGate.GetAddressOf())
ResultFromWin32HandleMaybenull(LoadLibraryEx(L"AppxDeploymentClient.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32), reinterpret_cast<HANDLE*>(module.GetAddressOf()))
ResumeAt
ReturnHr
RevertToSelf
RoActivateInstance
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
RoOriginateError
RoOriginateErrorW
RoRegisterActivationFactories
RoRevokeActivationFactories
RoTransformError
RoUninitialize
RPCRT4.dll
RtlCaptureContext
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetPersistedStateLocation
RtlGetSessionProperties
RtlInitUnicodeString
RtlIsMultiUsersInSessionSku
RtlIsStateSeparationEnabled
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlSubscribeWnfStateChangeNotification
RtlSubscribeWnfStateChangeNotification(&subscription, stateName, changeStamp, &ActivateApps::WnfCallback, this, nullptr, 0, 0)
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlVirtualUnwind
s$fD;{*spH
s.Set(str.c_str(), static_cast<UINT>(str.length()))
s_registryGate.IsValid()
s}AppReadiness::Groups::UserLogon::RuntimeClassInitialize
S-1-5-18
s5H+F
samcli.dll
Score
Scoring
SebCreateOEMPreInstallEvent
SebCreateOEMPreInstallEvent(&eventId, m_packageId.c_str())
SebSignalOEMPreInstallEvent
SebSignalOEMPreInstallEvent(eventId, m_packageId.c_str())
Service
ServiceMain
ServiceStatusType
Session:%ld!clsid:%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x
SetEvent
SetLastError
SetRestrictedErrorInfo
SetServiceStatus
SetUnhandledExceptionFilter
SHCreateStreamOnFile(packageInfo->GetManifestPath().c_str(), STGM_READ | STGM_SHARE_DENY_NONE, &stream)
SHCreateStreamOnFileW
SHDeleteValueW
SHGetKnownFolderPath
SHGetKnownFolderPath(FOLDERID_LocalAppDataLow, KF_FLAG_CREATE, user->GetToken().Get(), &path)
SHGetUserSid(callingUser.Get(), &userSid)
SHGetUserSid(token.Get(), &sid)
SHQueryToken(GetUser()->GetToken().Get(), TokenUser, false, &userToken)
SHQueryToken(user->GetToken().Get(), TokenUser, false, &userTokenPtr)
SHRegGetStringValueNative(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Appx", L"PackageRoot", path, static_cast<DWORD>(pathLen))
SHRegIncrementDWORD(PackageList::OpenUserMachineRoot(user, KEY_QUERY_VALUE | KEY_SET_VALUE).Get(), nullptr, L"LogonCount", 1, &logonCount)
SHRegSetDWORD(key.Get(), nullptr, MetadataTypeToValueName(type), value)
SHRegSetDWORD(root, subKey, valueName, static_cast<DWORD>(value))
SHRegSetDWORD(s_machineRootKey.Get(), key.c_str(), c_UserStateValueName, static_cast<DWORD>(state))
SHRegSetDWORD(userKey.Get(), nullptr, valueName, value)
ShutdownDelayMsec
SizeTToUInt(packages.size(), &packageCount)
Sleep
SleepConditionVariableSRW
Software\Microsoft\AllUserInstallAgent
Software\Microsoft\Windows NT\CurrentVersion\TileDataModel\Migration\TileStore
Software\Microsoft\Windows\CurrentVersion\AppReadiness
Software\Microsoft\Windows\CurrentVersion\Appx
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\PBR\%ls
SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\CFL\ExperienceManagerData
Software\Microsoft\Windows\CurrentVersion\Explorer
SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE
Source
spPackage->get_EffectiveSupportedUsers(&supportedUsers)
sprintf_s
stageUserData
StageUserDataAsync
StagingInProgress
stagingManager->DeleteStagedCollection(collectionId.Get())
StartPosition
StartTraceW
state not recoverable
StateAllowsModification()
stateStore.As(&stateStoreInf)
stateStore->Begin(IT_PREVIEWTILE, packageFamilyName.c_str(), rawPropertyStores.get(), static_cast<UINT32>(propertyStores.size()))
stateStore->CreatePreviewTilesForPackage(resources->packageFamilyName.c_str(), resources->packagePath.c_str(), static_cast<UINT>(resources->resources.size()), resources->resourcePaths.get())
stateStoreEnum->Load()
stateStoreInf->UpdateTemporaryLogos(packageFamilyName.c_str(), rawPropertyStores.get(), static_cast<UINT32>(propertyStores.size()))
Status
StopTraceW
storageFolder.As(&storageItem)
storageItem->get_Path(str.GetAddressOf())
STORE
storeHelper.Set(PKEY_AppUserModel_HostEnvironment, wil::PropVariantArg(static_cast<unsigned long>(APPUSERMODEL_HOSTENVIRONMENT_IMMERSIVE)))
storeHelper.Set(PKEY_AppUserModel_ID, wil::PropVariantArg(appId.Get()))
storeHelper.Set(PKEY_AppUserModel_PackageFamilyName, wil::PropVariantArg(packageFamilyName.c_str()))
storeHelper.Set(PKEY_Launcher_WinStoreCategoryId, wil::PropVariantArg(static_cast<unsigned long>(tile.Category)))
storeHelper.Set(PKEY_Tile_Flags, wil::PropVariantArg(static_cast<unsigned long>(tile.ShowDisplayName ? TF_SHOW_NAME_ON_ALL_LOGOS : TF_DEFAULT)))
storeHelper.Set(PKEY_Tile_SmallLogoPath, wil::PropVariantArg(logoPath.c_str()))
storeHelper.Set(property.key, wil::PropVariantArg(value->c_str()))
storeInstall
storePreviews
stream timeout
string too long
StringCchCopy(buffer.get(), m_packagePath.length() + 1, m_packagePath.c_str())
StringCchPrintf(buffer, bufferLen, L"%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x", guid.Data1, guid.Data2, guid.Data3, guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3], guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7])
StringCchPrintf(moniker, _countof(moniker), L"Session:%ld!clsid:%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x", userSessionId, clsid.Data1, clsid.Data2, clsid.Data3, clsid.Data4[0], clsid.Data4[1], clsid.Data4[2], clsid.Data4[3], clsid.Data4[4], clsid.Data4[5], clsid.Data4[6], clsid.Data4[7])
StringCchPrintf(subKeyName, _countof(subKeyName), L"%s\\%s", packageFamilyName.c_str(), c_MetadataStoreKeyName)
StringCchPrintf(taskId, _countof(taskId), L"%ls-%ld", taskPrefix, InterlockedIncrement(&s_uniqueId))
StringCchPrintf(taskName, _countof(taskName), L"packageChanges-%ld", InterlockedIncrement(&s_uniqueId))
StringCchPrintf(userKeyReadAcl, _countof(userKeyReadAcl), c_UserKeyReadAccess, user->GetUserSid().c_str())
StringCchPrintfEx(iter, spaceLeft, &iter, &spaceLeft, STRSAFE_IGNORE_NULLS, L"%s (OP:%ld)", packageFamilyName.c_str(), static_cast<DWORD>(operation))
StringFileInfo
StringFromGUID2
StringFromGUID2(guid, buffer, _countof(buffer))
StrRChrW
StrStrIW
SUVWATAUAVAWH
SVWAVAWH
SVWAVH
system
System\Setup\Status
System\Setup\Status\AuditBootVolatile
SystemEventsBrokerClient.dll
SystemTimeToFileTime
t"D8=
t$ AWH
t$ E3
t$ UWAVH
t$ WAVAWH
t$ WH
T$@E3
t$pfD
T$XE3
t@L;H
t^@8=%
t|L+G(H
t7fD92t1M
tA9kHt<H
task.As(&taskInf)
task->QueryInterface(completedTask.GetAddressOf())
task->QueryInterface(previewTask.GetAddressOf())
TaskCanceled
TaskCount
TaskId
taskInf->GetPercentComplete(&percent)
taskInf->QueryInterface(task.GetAddressOf())
taskInf->SetCallback(callback)
TaskPriorityType
Tasks
TASKx
TelemetryAssert
TelemetryAssertDiagTrack
TEMP 
TEMP$
TEMP`
TEMP|
TEMP<
TEMPd
TEMPl
TEMPL
TEMPP
TEMPT
TEMPt
TEMPx
TerminateProcess
testObject.As(&testObjectUnknown)
text file busy
text.Initialize(HINST_THISCOMPONENT, c_PreviewTileDownloadString)
tff93taH
tFH!\$0H
tGH!\$@H
threadId
threadpool->CreatePeriodicTimer(this, c_HeartbeatTimer, &timer)
threadpool->CreatePeriodicTimer(this, c_ProgressTimerSpan, &timer)
threadpool->CreatePeriodicTimer(this, c_PulseTimeSpan, &timer)
threadpool->CreateTimer(this, timeSpan, &timer)
threadpool->RunWithPriorityAsync(this, WorkItemPriority_High, &cancel)
timed out
timed_out
Timeline
Timeout
Timeout/BiChangeFailed
Timeout/Forced
Timeout/Lockscreen
timestamp
tmE3T
to_vector
to_winstring
too many files open
too many files open in system
too many links
too many symbolic link levels
too_many_files_open
totalHits
toupper
tr@8=
TraceMessage
Translation
Triggers
TryGetEndOfLifePackageFullName
TTBLxN
tUH+]
tV8\$XuPA
tx8\$XurH
u HcA<H
u,!]0H
u,A8i
u,A8j
u,E8y
UATAUAVAWH
UAVAWH
uEtwEventUnregister
UHH!|$pL
ULongLongAdd(currentTime.QuadPart, c_ErrorRetryDelay, &retryAfter.QuadPart)
ULongLongSub(left.QuadPart, right.QuadPart, &result)
ULongLongSub(now.QuadPart, start.QuadPart, &seconds)
ULongLongToInt(seconds, &result)
UMgrEnumerateSessionUsers
UMgrEnumerateSessionUsers(&usersCount, &sessionUsers)
UMgrFreeSessionUsers
UMgrQuerySessionUserToken
UMgrQuerySessionUserToken(sessionId, temp.GetAddressOf())
UMgrQueryUserContext
UMgrQueryUserContext(userToken.Get(), &userContextToken)
UMgrQueryUserToken
UMgrQueryUserToken(sessionUserContext.ContextToken, userToken.GetAddressOf())
UMgrQueryUserToken(userContextToken, temp.GetAddressOf())
UMgrQueryUserToken(userContextToken, userToken.GetAddressOf())
UnhandledExceptionFilter
unknown error
UnregisterTraceGuids
UnregisterWaitEx
Update
UpgradeOrPBRAttempts
uri.As(&absoluteUri)
uriObject->get_Extension(ext.GetAddressOf())
user->ExecuteUnderContext([&job, &text, &bitsManager]() { GUID jobId; ThrowIfFailed(bitsManager->CreateJob(text.Get(), BG_JOB_TYPE_DOWNLOAD, &jobId, &job)); })
user->ExecuteUnderContext([&tempPath]() { ThrowIfFailedWin32Bool(CreateDirectory(tempPath, nullptr)); })
USERENV.dll
UserId
UserLogon_NumConcurrentTasks
Username
UserPhaseType
UserState
USVWATAUAVAWH
USVWATAVAWH
USVWAVAWH
USVWAVH
USVWH
utf-16
UuidCreate
UVWATAUAVAWH
UVWAVAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAVH
UWAWH
uWH!] H
V`H+VXH
value too large
VarFileInfo
vector<T> too long
VMAP$
VMAP,
VMAP|
VMAP4
VMAPL
VS_VERSION_INFO
VWATAVAWH
VWAUAVAWH
VWAVH
w&H9Q
WaitForDeploymentOperation(m_onDemandRegisterOperation.Get())
WaitForMultipleObjects
WaitForPackageVolumeOperation(packageVolumeOperation.Get(), nullptr, &packageVolume)
WaitForSingleObject
WaitForSingleObjectEx
WakeAllConditionVariable
was already canceled or complete
was canceled
WATAUAVAWH
WATAVH
WAVAWH
WC_E_ROOTELEMENT
wcsrchr
wcstok_s
wcstoul
WEVT_TEMPLATE
WEVTt
WilError_02
wilResult
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Warning
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>
Windows.Foundation.Collections.IMap`2<UInt32, Object>
Windows.Foundation.Collections.IMapView`2<UInt32, Object>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Uri
Windows.Internal.StateRepository.Application
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PrimaryTile
Windows.Internal.StateRepository.User
Windows.Internal.Tiles.MigrationHelper
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.Networking.Connectivity.NetworkInformation
Windows.System.Threading.ThreadPool
Windows.System.Threading.ThreadPoolTimer
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManager)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManagerInternal)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManagerInternalPtr)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManagerPtr)
Windows::Foundation::ActivateInstance(HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManager)
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), m_uriFactory.ReleaseAndGetAddressOf())
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Networking_Connectivity_NetworkInformation).Get(), &m_networkInfo)
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Threading_ThreadPool).Get(), threadpool.GetAddressOf())
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Threading_ThreadPoolTimer).Get(), threadpool.GetAddressOf())
Windows::Foundation::GetActivationFactory(Microsoft::WRL::Wrappers::HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &m_uriFactory)
Windows::Foundation::Initialize(WINRT_INIT_MULTITHREADED)
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDuplicateString
WindowsGetStringRawBuffer
WindowsIsStringEmpty
windowsStore->GetMetadata(packages, 1, GMR_APPSYNC, true, &xml)
windowsStore->GetMetadata(packages.get(), static_cast<UINT>(packageFamilyNames.size()), GMR_APPSYNC, true, &xml)
windowsStore->RegisterForProgress(progressWrapper.Get(), __uuidof(ExternalStoreCallback), type, &cookie)
WindowsStringHasEmbeddedNull
WinStationFreePropertyValue
WinStationGetConnectionProperty
WriteFile
wrong protocol type
wrong_protocol_type
WTSEnumerateSessions(WTS_CURRENT_SERVER_HANDLE, 0, 1, &sessionPtr, &numSessions)
WTSEnumerateSessionsW
WTSFreeMemory
WTSQueryUserToken
WTSQueryUserToken(sessionId, temp.GetAddressOf())
x ATAVAWH
x ATH
x AUAVAWH
x AVH
x UAVAWH
x@L9o
x_^[]
x_^][
x|9s0u
x~D8u
x7;o(r
x7@8|$0t
xc9}0t1
XmlLite.dll
xVH!|$0E3
xxD;v(r
xY;|$XsSH
Y(HcQ
ZeroScore
