                    level="asInvoker"
                    uiAccess="false"
                />
                <requestedExecutionLevel
            <!-- This Id value indicates the application supports Windows Blue/Server 2012 R2 functionality-->
            <!-- This Id value indicates the application supports Windows Threshold functionality-->
            <!--This Id value indicates the application supports Windows 7/Server 2008 R2 functionality-->
            <!--This Id value indicates the application supports Windows 8/Server 2012 functionality-->
            <!--This Id value indicates the application supports Windows Vista/Server 2008 functionality -->
            </requestedPrivileges>
            <requestedPrivileges>
            <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
            <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
            <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
            <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
            <supportedOS Id="{e2011457-1546-43c5-a5fe-008deee3d3f0}"/>
        </application>
        </security>
        <application>
        <security>
    </compatibility>
    </trustInfo>
    <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
    <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    >
    manifestVersion="1.0"
    xmlns="urn:schemas-microsoft-com:asm.v1"
 0H>cmiManifestResourceTokenReplacer
 0o|cmiProfileSingleProcessPrivilege
 A^_^][
 A_A^_
 A_A^A\
 cmiQueryGetCategoryMembershipsWW8
 CreateQueryW
 DescriptionWx
 H3E H3E
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!"%,[M
!/CopyrightWWW
!029cmiFileAttributeNotContentIndexedWWW
!04ucmiQueryGetRedirectedToIdentitiesWWW8
!0Q]cmiInfSerializerMarkExternalFilesWWW
!cmiFileBasedRepositoryWW 5
!cmiVariantMapWWWd
!cmiZeroOrGreaterThanZero
!d"(.469=EFHJMTr
!FileRepositoryWW
!ResolutionStageW
!SecurityDescriptorReferenceW
!sExcludeComponentsWWWLO
!This program cannot be run in DOS mode.
" /A$
" NamespaceUri
""""z
"""'z
""'xw
"}ExtraArgumentsWW
"08vcmiUnattendPrimitiveNameValidationWW
"cmiCmiSecurityInformationWWWd
"cmiEventBulkImporterEndManifestShred
"ComponentWWW
"MembershipsW
"Microsoft Time Source Master Clock0
"Microsoft Window
"Microsoft Windows Verification PCA
"Microsoft Windows Verification PCA0
"VersionConstsWWW(#
#>ModuleNameWW
#0DVcmiQueryGetComponentsFromIdentitiesW8
#cmiFileRepositoryNoCleanupOnImportFailureWWW
#cmiLogFacilityRepositoryXM
#IPrivateTestPackagerlR
$(.46%A
$(.469+A
$(.469=EFHJ
$(.469=EFM
$(.469=ET
$(.469F
$(.46J
$`2X`F
$0:~cmiQueryGetIdentitiesByComponentType8
$dExpandWW
$Microsoft Ireland Operations Limited1
$Microsoft Root Certificate Authority0
$TargetProcessorArchitectureW
$YpluginCLSIDW
%53,&
%cmiEffectiveSettingsNoFilter
%cmiFileAttributeTemporaryWWW
%cmiQueryGetCategoryMembersWW8
%'CultureWt'
%MapSourceFileLocationWWW
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%pAccessModeWW
%pUserMessage|`
&,[\C
&0#rcmiInstallerCapabilityUseSymbolicLinksWW
&cmiHintPrependWW
&ComputeEffectiveSettingInstances$E
&IInstallerRegistrationWW
&SimpleIdentityWW$^
( 9cmiPairWd
(cmiHasDiskImageW
(QuImagingInformationWW
(U=ReferenceRedirectionTableWWW$E
(wcK'
(YSResolutionStatus
)::::EMT
)cmiLogFacilityConfigurationWXM
)Comments
)Microsoft Root Certificate Authority 20100
*.**)
*cmiFileDependencyWWWd
*cmiGenericTokenReplacerW(<
*GenericCommandsW
*ILocalizationInformationl
*UPreGatherWWWpb
,99InrospRQNmChHSG4LZKNRGFbAt7p8Jq4zRZ3G+Gb4=0Z
,RegistrationCommands
.(LogListenerW
.:><1
.?AUIClassFactory@@
.?AUIHostingTask@@
.?AUIMigPluginSurrogate@@
.?AUIUnknown@@
.?AVCAtlException@ATL@@
.?AVCMigPluginSurrogate@@
.?AVCSingletonClassFactory@@
.00cfg
.7DefinitionWW
.cmiWriteableTypeStaticWW
.CRT$XCA
.CRT$XCAA
.CRT$XCL
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.data
.data$brc
.data$r$brc
.GetInnerObjectWW
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.ObjectWW
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.ShowUIWW@
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.uy}"
.xdata
.xdata$x
.ZpContext
/_]`n5>
/953,&
/cmiTrusteeDomain|
/GetInstaller
/ICmiPair
/InitDoneEvent:
/InitDoneEvent:<event_name> - if specified, event will be set when host completes initialization and enters into waiting state.
/LogDir:
/LogDir:<path> - if specified, path to log directory, used to initialize panther logging.
/ParentPID:
/ParentPID:<pid> - if specified, host process will exit if parent process unexpectedly terminates.
:RemoveByReferenceRangeWW
;;;Ueee
;8721^.
;cmiNoRebootRequiredW
;Data
;InstanceAnswerWW\]
??1type_info@@UEAA@XZ
?[8?GOQY
?cmiEnvironmentWWd
?cmiOnlinePassWWW
?cmiSyncAgentPrivilegeWWW
?http://crl.microsoft.com/pki/crl/products/microsoftrootcert.crl0T
?terminate@@YAXXZ
@.data
@.reloc
@.rsrc
@cmiFileAttributeReadOnly
@cmiInstallerCapabilityForceDriversCriticalWW
@IDomainTrusteeWW
@jCreateIdentityReferenceW`T
@pOfflineRegistrySubkeyWW|`
@SUVWAVAWH
@SUWH
@SVWATAUAVAWH
@UVWH
@VWAVH
[(SerializeWWW
[cmiQueryGetAllIdentities8
[InstallerManager
[PPTP00
[PPTP00,
[ReturnValWWW4!
\$ UH
\$8E3
\,ResetPluginTimer|`
\\\;C
\PPTP00
\PPTP00h[
\PPTP00LO
\ProxyStubClsid
\ProxyStubClsid32
\TypeLib
]:::::::M
]:953,&
]]>2{
]0[0Y
]CmiLogConfig
]CmiObjectsWW
]IdWW
^::::::;M
^aUninstallWWW
^cmiCompressionFormatNone
^cmiTcbPrivilegeW
__C_specific_handler
__CxxFrameHandler3
__dllonexit
__set_app_type
__setusermatherr
__wgetmainargs
_8OfflineInstallerRepositoryWW
_amsg_exit
_BulkImporterEventsW
_cexit
_commode
_ConfigurationEvents
_CxxThrowException
_exit
_fmode
_IInstanceFactory
_initterm
_InstallerEvents
_lock
_OldVersionMaxWWW
_onexit
_PPTP00
_PPTP000
_PPTP00h
_PPTP00L6
_PPTP00x7
_PrivateTestPackagerEventsWW
_qv}"
_unlock
_vscwprintf
_wcmdln
_wcsnicmp
_wtol
_XcptFilter
`.rdata
`cmiLogLevelError
`Trustees
{{]^///^^^^Q
{00020424-0000-0000-C000-000000000046}
{EE45FDEE-232D-4fae-92E9-9A9ED142C346}
{Hint
{NamespaceWWW
|$ AUAVAWH
|$0E3
|^^ Yh
||offZZZJj
|hK,_
}}}yyyti=BF
}}}yyytt
}}}yyyttp
}}}yyyttpD
}}}yyyttppGW
}cmiEffectiveSettingsOverridesOnlyWWW$E
}cmiQueryGetComponentCustomInformationWWW8
}FileTypelibFlags\+
}zwmmhvLHFFHJMZ
~`{FXW
~{onyR
~~vvphh
~~vvpphc_
~~vvvlia<<
~4Listener<Z
~nnnnnnngx
+#-28<
+0> cmiQueryGetSettingDefinitionsForSettingNameW8
+AccessModeConsts
+cmiCategoryMembershipWWWd
+cmiDenyServiceLogonPrivilege
+cmiTrusteeGroupW|
+MoveFilesWWWd
+OutputObject
+RedirectInformationW
</assembly>
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<930>
<assembly
=:953,&
=ccc#
=cmiLogFacilityResolverWWXM
=CmiNamespacesWWWX
=CmiSecurityInformationWW
=IReferenceRedirectionTableEntryW
=JiK28
=L9o<
=ObjectToInstallW
=ReplicatedRepositoryRootPath
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
>IDirectoryWW
>IRegistryKey
>ResetWWW
0#/cmiEventOnInstanceAddedW
0#ucmiUserW
0$bApartmentThreadingModel
0%6cmiIncreaseQuotaPrivilegeWWW
0,WcmiDirectoryd
0.KcmiMigrationExcludeInformationWWd
0.ZcmiUnattendSyntacticValidationWW
0;6cmiSettingDefinitiond
0[ cmiAssignPrimaryTokenPrivilegeWW
0~RepositoryNameWW
00!cmiLanguageModeLangPackW
00)cmiRegQwordW
040904B0
05[cmiEnableDelegationPrivilege
05^cmiGeneralizePassWWW
058cmiFileWindowClassWWd
0A^_^
0A_A^A]
0aKcmiStage2PassWWW
0AycmiCmiLogConfigWd
0b3cmiRegDwordBigEndian
0c%%\\))8?GlQV
0cMcmiUtf8EncodingW
0cmiInstallerCapabilityReplicateComponentsWWW
0cmiInstanceAnswerWWWd
0cmiQueryGetIdentitiesFilteredOnIdentityAttributesWWW8
0f$cmiInstallerCapabilityNoneWW
0FgcmiFeatureComponentW
0h5cmiNotEqualW 
0h6cmiLanguageModeOneWW
0h-cmiQueryGetComponentFromIdWW8
0i:cmiRegMultiSzWWW
0jmcmiCompressionFormatDefaultW
0-K4B
0'kcmiSystemProfilePrivilegeWWW
0KscmiExclusive
0l6cmiEqual 
0LongRunningPluginWWW|`
0mzcmiLogFacilityInfWWWXM
0oicmiAuditPrivilegeWWW
0P-cmiLocalizationInformationWWd
0PutValue\
0r{cmiCreateGlobalPrivilege
0r3cmiRegExpandSzWW
0vCountWWW
0VID1
0YdcmiHintDefaultWW\
1(0&0
1.0,0
1/0-0
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
100701213655Z
111019184142Z
160211232409Z
171005173456Z
180703204550Z
180823202613Z
180823202711Z
181005173456Z0p1
190726204550Z0p1
191123202613Z0
191123202711Z0
1cmiLogModuleOtherWWW
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
1pSourceUserSidStringsWWW
1RepositorySetWWW0C
1SearchPatternWWW81
2"&,\45>
20180914213626Z
20180914214207Z
20180915045247.656Z0
20180915045248.854Z0
20180915213626Z0w0=
20180915214207Z0v0<
210509232813Z0
229879+4379540
230038+2426910
250701214655Z0|1
261019185142Z0
2cmiFileAttributeHiddenWW
2DestinationNameW
3FactoryClsid
3InfSerializerFlagsWW
4 part version of the repositoryWW6
4<ReadOnlyL
46*+5
4BulkImporter
4cmiAssemblyComponent
4cmiIdentityReferenced
4cmiImagingInformationWWWd
4cmiRemoteInteractiveLogonPrivilegeWW
4CmiXmlEncodingTypesW
4ICmiLogConfigWWW
4IMigrationContextWWW|`
4SubCategoryW
5cmiUnattendFileWd
5EnvironmentW
6|BaseInterfaceWWW
6|xU<
6AD}II
6cmiFileRepositorySkipExistingFilesWW,3
6ExcludeReference
6wElementNameW
777\;
7cmiFullResolutionWWWDH
7cmiUnsolicitedInputPrivilege
7DbNameWW
7FileRepositoriesd2
7OldPathW
7zResourceTypex
8!(IDictionaryW
8,%EffectiveSettingsFilterTypeW
8:<ShareModeConstsW
8[YFileRepositoryTypeConsts
8^&ManifestResourceTokenReplacerWWWt@
8^3ICmiEventWWW
8|bICmiCollectionWW
8}5FileDependencyWW|.
8=?IExcludeReferenceWWW
8>wIMigrationElementInformation
81pFileComClass
85~FileWindowClassW
855InstallerTypeConstsWdK
89dIInstallerManagerWWW8J
8a.ISysprepModuleWW
8BinariesDirectoryPathsWW
8cmiLoadDriverPrivilegeWW
8cmiNamespaceV1WWX
8cmiNamespaceV2WW
8DERepositoryInitializerWWW
8HdIXmlSerializerWW,
8http://www.microsoft.com/pki/certs/MicrosoftRootCert.crt0
8I0ISecurityDescriptorReference
8jZSysprepModuleWWW
8mGDirectoryWWWD/
8mlIInstallContextW
8n6PrivateTestPackagerTypeConstsWWW
8nDDbih/[g
8q]QueryFlagsWW
8R*FileRepositoryFlagsW,3
8r3ICmiFactoryEventSourceWW,
8SelectionInstancesWW0C
8SNIGroupTrusteeWWWD
8ssILocalizationResourcesWW
8uLIPreGatherWW
8w%IdentityDefinitionWWx
8'wIStringTableEntryWWW
8ZNISettingInformationWx
9*kq,#t
9AddEntry
9AllInstances
9cmiRegLinkWW
9cmiUnattendSemanticValidationWWW@Q
A_A^_
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^]
AADIN
acmiReadWrite
AcmiTrusteeAccountWWW|
Adds a new item to the dictionaryW.
Adds a new item to the end of the collectionWW.
Adds an entry to the redirection tableC
ADVAPI32.dll
AIInstallerFactoryWWW
aIsPresentWWW
all the overrides and the default are mergedWW;
all the overrides only are merged, but not with the defaultWWW8
aLocalNameWWW
Always serialize component manifest while importing components1
aMinorWWW
An empty directory that need to be created during installation.WWW?
ApInputSourceW(
Append to existing value.W
Applies the redirections from unattend file to configurationWW:
Applies this unattend file to a configurationW)
ApplySuccess
AssembliesWW
Assembly
assembly which contains categoryDefinitions elementWWW
assembly which contains feature elementWWW3
AssemblyIdsW
Assign an identity definition to this identity referenceWW
AssignIdentityDefinition
Associates a setting with the component to which the setting appliesWW=
Associates an setting name with a component to which the setting appliesWW-
AttributesWW
AuthorsW
B$1_`ajbgA
b_pOnlineRegistryPathW
Base interface for all extensible CMI interfaceWWW
base\ntsetup\migration\migcore\mighost\mighost.cpp
base\ntsetup\migration\migcore\mighost\surrogate.cpp
BatchCommitSizeW81
bCategoryInstancesWWW
BeforeWWl 
BeginTransaction methodWWW
BinaryImportPathp
bIncludeInformationWW0
BindingRedirectWH&
Bootstrapping pass, which can happen in online install/
bReferenceRedirectionRangeEntryWW
BuildTypeWWWL
ByteOrderMarkWWW
C#[/>iiD>8!#7
Callback
calloc
CarrierFilePaths
category dependencyWWW'
CategoryDependencyWW
CategoryInstanceh)
CategorySelectionConstsWT
CcmiMigrationTypeCreateOnlyWWH
ccmiMigrationTypeMigrateWH
CE=+FU
Checks whether the given component is present in the repository or not+
Child instances are not fully resolved.WWWJ
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CIMigrationInformationWWW
CIsCanceledWW|`
Cleanup pass, which can happen in online installWW9
ClearComponentWW\D
ClearLocalizedComponentW\D
ClearWWW
ClientProcessorArchitectureW
Close the repositoryWW#
CloseHandle
closes the repositoryW
CloseWWWd
CLSIDFromString
CLSIDFromStringfailed, error=0x%x.
ClsidWWWt
Cmi20WWW
cmiAllWWT
cmiAnswerFileResolverWWWHX
cmiAssemblyDependencyWWWd
cmiAssemblyWd
cmiAtLeastOneWWWT
cmiAutoW\D
cmiBackupPrivilegeWW
cmiBindingRedirectWWd
cmiBootstrapPass
cmiCategoryComponent
cmiCategoryInstanceWd
cmiCleanupPassWW
CmiCollectionWWW(#
cmiCompleteInstallWW
cmiComponentPackagerP_
cmiComponentSettingsd
CmiComponentType
cmiCompositionalResolutionWW$E
cmiCompressionFormatDontCare
cmiCompressionFormatLznt1WWW
cmiConfigurationAnswerWWd
cmiConfigurationd
cmiConfigurationPass
cmiControlWW\+
cmiCreatePagefilePrivilegeWW
cmiCreateTokenPrivilegeW
cmiCustomAttributeWWd
cmiCustomElementd
cmiDebugPrivilegeWWW
cmiDefaultFileRepository
cmiDefaultRepositoryX4
cmiDefaultResolverWW
cmiDenyBatchLogonPrivilegeWW
cmiDenyInteractiveLogonPrivilege
cmiDenyNetworkLogonPrivilege
cmiDenyRemoteInteractiveLogonPrivilegeWW
cmiDependencyWWWd
cmiDesignTimeWWW
cmiDisconnectedW
cmiDomainTrusteed
CmiEventArgs
cmiEventArgumentsWWWd
cmiEventBulkImporterBeginManifestShredWW
cmiEventBulkImporterCommittedToStorageWW
cmiEventBulkImporterCommittedToTempFiles
cmiEventInstallerBeginUninstallation
cmiEventInstallerEndInstallation
cmiEventInstallerEndUninstallationWW
cmiEventOnInstanceRemovedWWW
cmiExcludeReferenceWd
CmiFactoryWW`"
cmiFileAttributeArchiveW
cmiFileAttributeNormalWW
cmiFileAttributeOfflineW
cmiFileAttributeSparseFileWW
cmiFileAttributeSystemWW
cmiFileComClassWd
cmiFileComInterfaceProxyStubd
cmiFileRepositoryCreateLinks,3
cmiFileRepositoryDoNotOverwriteComponentsWWW,3
cmiFileRepositorySerializeComponentManifests,3
cmiFileRepositorySetd
cmiFileRepositorySkipMissingDriverCatalogFilesWW,3
cmiFileRepositorySkipMissingExternalFilesWWW,3
cmiFileRepositoryUseAlternateSetupPolicyLocation,3
cmiFileRepositoryWWWd
cmiFileTypelibWWd
cmiFileWd
cmiFirstLevelInformation81
cmiGenericCommandWWWd
cmiGenericTrusteeWWWd
CMigPluginSurrogate::COMGenericThreadingHostThreadProc
CMigPluginSurrogate::FreeSurrogate
CMigPluginSurrogate::Init
CMigPluginSurrogate::LoadAndRegisterServerInThreadContext
CMigPluginSurrogate::LoadDllServer
CMigPluginSurrogate::UnRegisterServerInThreadContext
CMigPluginSurrogate::WaitForHostTermination
cmiGreaterThanWW 
cmiGreaterThanZeroWW$
cmiGroupTrusteeWd
cmiHintAppendWWW\
cmiHintReplaceWW\
cmiIdentityDefinitionWWWd
cmiIdentityReferenceRangeWWWd
cmiImpersonatePrivilegeW
cmiIncreaseBasePriorityPrivilege
cmiInfSerializerd
cmiInfSerializerFullRegistryConversionWW
cmiInfSerializerGeneratePnpInfoW
cmiInfSerializerNoInstallConversionW
cmiInfSerializerProcessExcludeId
cmiInfSerializerProcessIdentityOnlyW
cmiInstallContextWWWd
cmiInstalledRepositoryWWd
cmiInstallerCapabilityRollbackWW
cmiInstallerCapabilityUnattended
cmiInstallerManagerWd
cmiInstallerRegistration
cmiInstallerSequenced
cmiInstanceFactoryWWd
cmiInstanceWd
cmiInstrumentationInformationWWW
cmiInteractiveLogonPrivilege
cmiLanguageModeAllWW$E
CmiLanguageModeW
cmiLessThanW 
cmiLessThanZeroW$
cmiLockMemoryPrivilegeWW
cmiLogFacilityObjectModelWWWXM
cmiLogFacilityOtherWXM
cmiLogFacilityXmlWWWXM
cmiLogLevelInfoW
cmiLogLevelNoneW
cmiLogLevelTrace,L
CmiLogLevelW
CmiLogMessageWWW
cmiLogModuleClrW
cmiLogModuleCmiW
cmiLogModuleCryptWWW
CmiLogModuleFlagsWWW
cmiLogModuleLocDrvWWXM
cmiLogModulePnpW
cmiLogModuleSmiW
cmiLogModuleSysprepW
cmiLogModuleTrustWWW
cmiMachineAccountPrivilegeWW
cmiManageVolumePrivilege
cmiMediaFileRepositoryWWd
-cmiMigrationElementInformationWWd
cmiMigrationIncludeInformationWWd
cmiMigrationInformationWd
cmiMigrationPatternWd
cmiMigrationPluginWWd
cmiMigrationTypeInheritWH
cmiMigrationTypeNoMigrateWWWH
cmiMigrationTypeOverwriteWWWH
cmiMigrationTypeRenameWW
cmiNamespaceNoneX
cmiNoneW
cmiNotComparable
cmiNotStartedWWW
CmiObjectTypeWWWd
cmiOfflineInstallWWW
cmiOnlineInstall
cmiPathFileW
cmiPrivateInstallerWdK
cmiPrivatePackagerNeedSelectionForFileOwnerW(<
cmiPrivateTestPackagerWWd
cmiPublicInstallerWWdK
cmiQualifiedSettingNameWd
cmiQueryGetComponentDependencies8
cmiQueryGetComponentDependentsWW8
cmiQueryGetComponentsByTypeW8
cmiQueryGetDefaultValueForSettingDefinitionW8
cmiQueryGetFileOwnersFromSourceNameW8
cmiQueryGetFileOwnersWWW8
cmiQueryGetSecuredAttributeForSettingDefinitionW8
cmiQueryGetSecuredSettingsForComponentsW8
cmiQueryGetSettingOverridesForSettingDefinitionW8
cmiQueryGetSettingTypeForSettingDefinitionWW8
cmiReadOnlyW
cmiRebootRecommended
cmiReconfigurationPassWW
cmiReferenceAnswerWWd
cmiRegBinary
cmiRegDwordLittleEndianW
cmiRegDwordW
cmiRegFullResourceDescriptor
cmiRegistrationCommandWWd
cmiRegistryKeyWWd
cmiRegistryValued
cmiRegNoneWW
cmiRegQwordLittleEndianW
cmiRegResourceListWW
cmiRegResourceRequirementsListWW
cmiRegSz
cmiRemoteShutdownPrivilegeWW
cmiRepositoryInitializerd
cmiRepositoryWWWd
cmiResolvedW
cmiResolverWd
cmiResolvingChildren
cmiRestorePrivilegeW
cmiRestrictedWWW\+
cmiRunTimeWW0C
cmiSecurityDescriptorDefinitionWd
cmiSecurityDescriptorReferenceWWd
cmiSecurityPrivilege
cmiSelectionDone
cmiServiceLogonPrivilege
cmiSettingInformationWWWd
cmiSettingInstanceWWd
cmiSettingOverrideInstanceWWd
cmiShare
cmiShutdownPrivilege
cmiSimpleIdentityWWWd
cmiStagePass
cmiStringTableEntryWd
cmiSysprepInformationWWWd
cmiSysprepModuled
cmiSystemEnvironmentPrivilegeWWW
cmiSystemtimePrivilegeWW
cmiTakeOwnershipPrivilegeWWW
cmiTargetWWWd
cmiTokenReplacerd
cmiTrusteeAliasW|
cmiTrusteeComputerWW|
cmiTrusteeDeletedAccount|
cmiTrusteeInvalidWWW|
cmiTrusteeUnknownWWW|
cmiTrusteeUserWW|
cmiTrusteeVirtualAccount
cmiTrusteeWellKnownGroup|
cmiUndockPrivilegeWW
cmiUtf16Encoding,
cmiVersionWWd
cmiWaitingForSelectionWW
cmiWriteableTypeSystemDataWW
cmiZeroOrLessThanZeroWWW$
cmiZeroOrOneT
cmiZeroW$
CoDisconnectObject
CoInitializeEx
ComClassesWW
ComInterfaceExternalProxyStubsWW
ComInterfaceProxyStubsWW
CommandLine doesn't contains mandatory CLSID.
CommandLine is NULL
CommandLineToArgvW
CommandLineToArgvW failed, error=0x%x.
CommitTransaction methodWW
CommitTransactionWWW
CompanyName
CompanyW
Compares the existing version with another version/
CompareW
Completely deletes the specified repository from the system.WW+
component that represents an atomic unit of distributionWW 
ComponentSettingsWWW@Q
ComponentsToAddW@Q
ComponentsToRemoveWW@Q
ComponentsToReplaceW@Q
ComponentTypeWWW
COMPRESSION_FORMAT_DEFAULT
COMPRESSION_FORMAT_LZNT1WW
COMPRESSION_FORMAT_NONEWWW
Computes effective changes without performing installation;
Computes the effective setting settingsWWW=
Configuration pass, which can happen in online install3
ConfigurationWWW\D
ConfigWW
ConstructPartialMsgVW
Converts only internal files and ignores Include/Needs directivesWQ
Converts only the identity of the driver packageWW)
CoRegisterClassObject
CoRevokeClassObject
CoUninitialize
CPPTP00
CPPTP00,
CPPTP00l9
CPPTP00p0
Create an instance of the component of the specified IdWWW8
Create dependency referenceWWW7
Create identity referenceW
CreateBulkImporterWW
CreateDependencyReferenceWWW
CreateEventW
CreateInstallerW
CreateObject
Creates a new object instance of the specified typeWWW%
Creates an installer instance for the specified element.WW<
Creates and initializes a new repository.W<
Creates and returns a bulk importer, if supportedW0
Creates and returns the requested query object, if supportedWW1
Creates reference redirection table based on the lower and upper version offset providedWW;
CreateThread
CSingletonClassFactory::RegisterClassObject
CSingletonClassFactory::RevokeInstance
CurrentInstance propertyWW
CurrentInstanceW
CurrentIP
CustomInformationsWW
D!d$PL!d$H
D!d$PL!d$HD
D$$I;
D$@I;
D$8E3
D$HE3
D;JmN
DcmiCreatePermanentPrivilegeW
DcmiEventPnpInstallerEndWaitForPnpWWW
DcmiNoMatchWW 
default installer capabilities flagWWW(
Default value.
DefaultIdentityWLO
DefaultValue
defaultWWW'
Defines registry value types.W
Defines the types of file repositories that can be created.WWW;
Definition propertyWWW
DefinitionsW0\
DeleteCriticalSection
Dependencies
dependency between componentsW+
DependencyId@
DependencyWW
Describes a generic command which needs to be executed as part of the installation.WWWO
Describes the assemblies that should be replaced by the owner assembly@
Describes the files that need to be registered after the installation is done.3
Deserializes a CMI object from the given sourceWWW0
DestinationPathW
DestinationWp
DestroyW 
DHBinariesFilePathsWWW
DictionaryWW
Different CMI namespacesWW
Different types of access modes for a repositoryWW/
Different types of installersW
Different types of queries<
Different types of reference resolution status/
Different types of resolution stagesWW.
Different types of share modes for a repositoryWWW+
Different types of token replacers
Directory LogDir=%s does not exist.
Discoverablex
DispatchMessageW
DisplayNameW
DllGetClassObject
dnzzqqmhcd
Do not clean up if import failsWWW+
DomainWW|`
Don't migrateW1
Dooo'MMM
Downgrades an object.W*
dParentInstanceWW0C
'DpOnlineFilePathW
E;SecuredW@
E@A!EH!
e0c0a
EBuildWWW
ecmiLogFacilityInstallerW,L
ecmiMatch 
ecmiReferenceFactoryWd
ed))dd++ee///^^^O
EditSequenceNumberWW
eeCapabilities
EffectiveSettingInstancesWWW$E
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EIInstallerSequenceWWl 
eiVn`
Elements
EnableBatchTransactionWW
EnabledW
Encodings supported by XML serializerWA
EndOfLifeWWW
EnterCriticalSection
EntryIdW
EntryTypeWWW
EntryWWW
eReferenceWWW
Error and WarningW
Error, Warning and InfoWWW
Error, Warning, Info and Trace(
ErrorW
ErT,-468
eSelectedElements\D
EstimatedSizeWWW
Event argumentsWWW&
Event interface for CMIWWW
Event sink interface of ICmiFactoryWWW6
Event source interface of ICmiFactoryW#
EventArgumentsWW
EventIdW
Events interface for bulk importer"
Events interface for configuration:
Events interface for installer'
Events interface for private test packagerA
ExcludeComponents property$
ExcludeInformationWW
ExcludeOptionalDependencies propertyWW
ExcludeReferences property
ExcludeReferencesWWWLO
ExcludeWow64Components propertyWWW@
ExcludeWow64ComponentsWW
ExecutableNameWW
Executes the bulk importWW"
Executes the query and returns9
ExecuteW
ExpandEnvironmentVariablesWW
Expands environment variables in a string.)
Exports the files for the given identityWW_
ExportWW
Exposes file repository properties
ExpressionWW
F^6JC
f0RemoveByReferenceIdW
f9<Bu
f9H\u
FacilitiesWW
Facility
Factory propertyWW+
Factory which creates instance of various types of objects used by CMI
FactoryW 
FallbackCultureW
FallbackLanguagesWWW
FcmiPathRegistryKeyWW
FcmiQueryGetComponentSettingOverrides8
fD9$Au
fD9,Au
fD9,Bu
fD9<Gu
fD9<Zu
fD93t
fD94Cu
Fetch only the first level information of the objects that are being queriedWW?
Fetch the complete information regarding the objects that are being queriedWWWL
FILE_ATTRIBUTE_ARCHIVE
FILE_ATTRIBUTE_HIDDENW
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED7
FILE_ATTRIBUTE_READONLYWWW
FILE_ATTRIBUTE_SPARSE_FILE"
FILE_ATTRIBUTE_SYSTEMW
FILE_ATTRIBUTE_TEMPORARYWW
FileAttributeTypeWWW
FileComInterfaceProxyStubWWW\+
FileCompressionTypeW
FileDescription
FileNamed
FileRepositories propertyW.
FileRepositorySet property
FileRepositorySetWWWX4
FileTypelibW$,
FileVersion
FiltersW
FindResourceExW
FInstanceFactoryWPF
Flags for IFileTypelib.FlagsWW?
Flags that control file repository behaviorWWW
Flags that control the caching and fetching policies of a queryWWW
Flags that control the inf serializer behaviorD
Flushes internally cached componentWWW-
Flushes internally cached localized componentW9
Forces conversion of all registry entriesW
Forces processing of un-decorated models sections even if decorations are presentW0
fPatternsh
FreeLibrary
FreeSurrogateWWW
FTargetWW
FullName
functionalities that do not fall into the following categories
g_TranslateWWW
GatherWWDa
Generalize pass, which can happen in online installWWW3
Generate PnP info during a no-install conversionWW.
Generic token replacer typeWWW%
GenericCommandSuccessCodeConstsW$
GenericCommandWW
GenericTokenReplacer
GenericTrusteeWW
Get a all identities in the databaseWW4
Get a component given an identityW
Get a list of components in the same order as the input list of identities$
Get all components of a typeWW!
Get all setting definitions that have a particular visibility levelWWWR
Get all the identities of a typeWWJ
Get all the secured setting definitions across componentsWC
Get category memberships declared by a componentWW
Get dependencies of a componentWWW/
Get Identities of the dependents of a componentWWW 
Get members of a categoryW
Get the custom information specified for a componentWWP
Get the identities or components that contain a file with a particular source name
Get the identities or components that contain a particular fileWWW:
Get the identities to which a given identity is redirected2
Get the list of identities filtered based on the first level identity attributesWW?
Get the setting overrides specified in a component9
GetAssemblyIdsWW
GetAssemblyW<(
GetComponentType
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDefaultValueW
GetFileAttributesW
GetFileNameForComponentW\D
GetFileNameW
GetFileRepositoryObject method&
GetFileRepositoryObjectWp
GetFullNameW
GetHashCodeW
GetInstanceFileRepositoryWWW
GetLastError
GetLocalizedComponentWWW\D
GetMessageW
GetModuleFileNameW
GetModuleHandleW
GetOfflineFileLocationWW
GetOfflineRegistryLocationEx
GetOfflineRegistryLocationWW
GetOfflineStatus
GetProcAddress
GetProcessHeap
GetRegistrationEntry
Gets a dictionary of security descriptor definitionsWW,
Gets a dictionary of trusteesW4
Gets a list of capabilities of a group trustee.
Gets a list of ICustomInformationW9
Gets a list of members of a domain trustee*
Gets a list of members of a group trusteeW)
Gets a list of privileges assigned to a trusteeWWW/
Gets configuration answer file that overrides an unattend.xml file<
Gets installer capability flags propertyWW(
Gets log listener property+
Gets the additional arguments for the event posted8
Gets the array of paths that defines this sequence2
Gets the boolean flag indicating if the security descriptor reference is for offline modeWY
Gets the class ID of the installer factory*
Gets the description of a security descriptor definitionWW8
Gets the description of a trusteeW!
Gets the display name of a security descriptor definitionW9
Gets the event ID for the event posted,
Gets the factory used by an instance factoryWW,
Gets the factoryWW
Gets the file repository containing the specified instance/
Gets the flags that control serialization behavior2
Gets the full name of a trusteeWWW
Gets the fully qualified file name or manifest name for the given file of a component identity.WWWU
Gets the fully qualified file name or manifest name for the given file of a component."
Gets the fusion activation context inheritance flag for applicationsWWD
Gets the fusion activation context inheritance flag for assembliesB
Gets the HRESULT from the event handler for the event that was postedW.
Gets the identifierWWW
Gets the import path for binary filesW%
Gets the import path for the INF fileW%
Gets the installation pass this sequence applies toWWW3
Gets the installer id of an entryW+
Gets the installer registration of an entryWWW
Gets the installer that this sequence needs to be ahead of:
Gets the installer that this sequence needs to followW5
Gets the installer typeWWWL
Gets the LanguageMode for resolving configurationW1
Gets the list of IInstallerSequences of the installers9
Gets the list of supported target processor architecturesW9
Gets the manifest resource dependencyW%
Gets the map of installer ID and the InstallationPassW6
Gets the migration information of a registry keyWW0
Gets the name of a security descriptor definitionW1
Gets the name of a security descriptor referenceWW0
Gets the name of a trustee
Gets the namespace URI for the specified qualifier8
Gets the object for the event postedWW*
Gets the operation hint of a security descriptor definitionWWW;
Gets the owner of a trusteeWWW
Gets the parent object of a custom information(
Gets the parent object of this valueWWS
Gets the parent object or nullY
Gets the parent of a registry keyW)
Gets the ResolutionMode for resolving configurationWWW3
Gets the SDDL of a security descriptor definitionW1
Gets the security descriptor reference of a directoryW5
Gets the security descriptor reference of a fileWW0
Gets the security descriptor reference of a registry keyWW8
Gets the security information of an assemblyWW,
Gets the sid of a trusteeW
Gets the supported combination of InstallationTypeConstsWW8
Gets the trustee typeW
Gets the type of elements in this collectionWW&
Gets the value/
Gets whether a trustee is enabled or notWW(
GetSequencedPathsWWW
GetStartupInfoW
GetSystemTimeAsFileTime
GetTickCount
GIFileComClassWWWt
gIIdentityReferenceRangeW|G
Given a setting definition find all the setting overridesW5
Given a setting definition find out if it is securedWW9
Given a setting definition find the default value for the settingWU
Given a setting definition find the setting type nameWA
Given a setting name, find all components that have a setting definition by this nameWT
Given a setting type name, find all components that use this setting definition typeWW4
GlobalLogListenerWWW
H SUVWAVH
h)EWCk@
H0F0D
hA_A^_^][
HasElementWW0C
HashAlgorithmWWW
HashCode
HcA<H
HcmiDeferredW
hcmiLocalizationResourcesd
HCmiLogFacilityFlagsWXM
hcmiQueryGetSettingDefinitionsForSettingTypeNameW8
hcmiSettingOverrideConflictInformationWWWd
hComputeEffectiveChangesW
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSetInformation
HeapSize
HEB=:`^[@
HEB=:953,&"\f
HEB=:953-\2
heee"
HelpDirW<
hIFileRepositorySetWW
HIInstallerManagerEntryWW
hMigrationElementInformationW
hN?!#u
hPathTypeConstsWW
i=:953,&H
i=;:953,M
I0G0E
I0G1-0+
IAssemblyDependencyW@
IAssemblyDependencyWWW
IAssemblyW
IAssemblyWWW
IBindingRedirect
IBindingRedirect interface
IBindingRedirectWW
IBulkImporterWWW81
ICategoryDependencyWT
ICategoryDependencyWWW
ICategoryInstanceW
ICategoryInstanceWWW
ICategoryMembershipW
ICategoryMembershipWWW
iCBeginTransaction
iChildInstancesWW
ICmiEventArgsWWW
ICmiExtensionWWW
ICmiFactoryCallbackW,
ICmiFactoryWd
ICmiLogConfigW
ICmiLogListenerW
IcmiMigrationSupportedComponentWWd
ICmiPairWW
IcmiRepositorySetd
ICmiSecurityInformationW
ICmiSecurityInformationWWW
ICmiWrapperW
IComponentSettings
IConfiguration
IConfigurationAnswerLO
IConfigurationAnswerWW
IConfigurationWW$E
ICustomInformation
Identifies the default CMI file repository.WWW%
Identifies the media file repository.W;
IdentitiesWWd
Identityd
IdentityReferenceRangeWW
IdentityReferenceWWW
IDependencyWWW
IDependencyWx
iDeserializeW\D
IDirecotry
IDiscovery
IDiscovery InterfaceWW
IDiscoveryWW
IDomainTrustee
IdReferenceRange(U
IEnvironment
IEnvironmentWW
IEventArgumentsWWW
IExcludeDependency interfaceWW
IExcludeReferenceW
IFileComClassW
IFileComInterfaceProxyStub
IFileComInterfaceProxyStubWW
IFileDependencyW
IFileDependencyWWW
IFileRepositoryPropertiesWWW,3
IFileRepositorySet
IFileRepositorySet interfaceWW
IFileRepositoryWd
IFileRepositoryWWW
IFileTypelibWW
IFileW
IFileWindowClass
IFileWindowClassWW
IFileWWW
IGenericCommandW
IGenericCommandWWW
IGenericTokenReplacerWWW
IGenericTrusteeWD
IGenericTrusteeWWW
Ignore compression processingW
Ignore missing catalog files in driver componentsW
IGroupTrusteeW
IIdentityDefinitionW
IIdentityDefinitionWWW
IIdentityReference
IIdentityReferenceRangeWWW
IIdentityReferenceWW
IImagingInformationW4
IImagingInformationWWW
IInfSerializer
IInfSerializerWWp
IInstallContext interfaceW!
IInstalledRepository
IInstalledRepositoryWW
IInstallerManagerW
IInstallerRegistration
IInstallerSequence
IInstallerWW
IInstanceAnswerWWW
IInstanceAnswerWxP
IInstanceContextWW
IInstanceFactoryWW
IInstanceW
IInstanceWWW\D
IInstrumentationInformationW
IInstrumentationInformationWWW8
ILocalizationInformationWW
ILocalizationResources
IManifestResourceTokenReplacerWW
IMigPluginSurrogate
IMigPluginSurrogate interface for migration plugins sandboxing onlyWWW
IMigPluginSurrogateW
IMigrationContext
IMigrationContext Interface provides migration context to pluginsW
IMigrationElementInformationWW
IMigrationExcludeInformationh
IMigrationExcludeInformationWW
IMigrationIncludeInformation
IMigrationIncludeInformationWW
IMigrationInformationW
IMigrationPatternW
IMigrationPatternWWW
IMigrationPlugin0*
IMigrationPluginWW
IMigrationSupportedComponentWW
IMigrationSupportedComponentx
Implement by client to provide return instancesWWW,
Implemented by wrappers of CMI objects. Applicable only for those CMI objects which rely on internal interface rather than public interface for their implementationWW8
ImportPathWW
Imports all the files for the given componentW(
ImportWWd
IndexWWW
Indicates that success is when return code is 0WWW9
Indicates that success is when return code is greater than 0WWE
Indicates that success is when return code is greater than or equal to 0WW
Indicates that success is when return code is less than 0W<
Indicates that success is when return code is less than or equal to 0WH
Indicates that the reference redirection table has been initializedWWW'
Indicates whether the component is present in the file repository or notWW6
InfImportPathWWW,
Information for resolving conflict in overridding a settingWWW2
InfSerializerWWWp0
InitializeCriticalSection
InnerContent
InnerTextWWW
InnerUnk N
InputObjectW
Install propertyWW
InstallableRepositoriesW
InstallationPass
InstallationStatusWW
InstallationType
InstallationType propertyW
InstallationTypeConstsWW
InstallContextWW
InstalledRepositoryW
Installer capabilities flagsWW
installer for ACL and user account%
installer for catalogs and certificatesWWW 
installer for localized driversWWW
installer for managed componentsWW
installer for PnP drivers and devicesW
installer for settings
installer for sysprepW'
InstallerCapabilityFlags,L
InstallerIdWdK
InstallerManager propertyW
InstallerManagerEntryWWWtY
InstallerProcessorArchitectureWW
InstallerRegistrationsWW
InstallerSequencesWW
InstallerSequenceWWW
InstallersWW
'InstallerTypeWWW
InstallerWWW
Installs an object.WWW
InstallW@
InstanceAnswersWLO
InstanceDictionaryWW|G
InstanceIdWW
InstanceSourceWW
InstrumentationInformationWW
Interface to replace tokens in a manifest using resource manfiestW
Interface to replace tokens in the manifestWWW
Interface to replace user specified tokens in the manifest*
Interface to specify component settings in unattend fileWW,
Interface to specify unattend file recognizable to cmi$
Interface to store information for imaging*
Interface to store information for sysprep moduleW
Interface to store information for sysprep#
Interface\
InternalName
Invoked to post-process the internally created object.#
IPathTranslatorW
IPostApply
IPostApply InterfaceWW
IPostApplyWW
IPostGather
IPostGather InterfaceW
IPostGatherWpb
iPPTP00
iPPTP00D
iPPTP00T=
IPreApply
IPreApply InterfaceWWW
IPreGather
IPreGather InterfaceWW
IPrivateTestComponentPackagerWWW4S
IPrivateTestDriverPackagerWW
IPrivateTestPackagerWW
IQualifiedSettingNameW
iQualifierWWW
IQueryWWX
IRedirectInformation`
IRedirectInformationWW
IReference
IReferenceAnswer
IReferenceAnswerWW
IReferenceFactoryW
IReferenceFactoryWWW
IReferenceRedirectionTableWW
IRegistrationCommand
IRegistrationCommandWW
IRegistryKeyWW
IRegistryValue
IRegistryValueWW
IRepositoryInitializer
IRepositoryInitializerWW
IRepositorySet
IRepositorySetWW
IRepositoryWWW
IResolverW
IRollbackTransactionW
ISecurityDescriptorDefinitionW
ISecurityDescriptorReferenceWW
ISerializerW
ISettingDefinition#
ISettingDefinitionWW
ISettingInformationWWW
ISettingInstance@
ISettingInstanceWW
ISettingOverrideConflictInformationWlR
ISettingOverrideConflictInformationWWW
ISettingOverrideInstance
ISettingOverrideInstanceWW
-IsHostAliveWF
iSHp6
ISimpleIdentityW
ISimpleIdentityWWW
IsPublic
IStringTableEntryW
ISysprepInformationWWW
ISysprepModule
ITargetWWW
ITokenReplacer
ITokenReplacerWW 
IUnattendFileW
IUnattendFileWWW
IUpgraderWWW N
IVariantMapWWW
IVersion
IVersionWW
IXmlSerializer
j}ArgumentsWWW
jcmiCompleteInformationWW
JcmiEventInstallerBeginInstallationWW
JConfigurationAnswerW@Q
JResolutionModeWWTV
KDClassIdW
Keep the connection open to the data sources and read data on demandWW.
KERNEL32.dll
KeyNameW
KKKKQKT
KProgidWWt
KValueWWW
L$ WH
L$pE3
LAdditionalArgsWW
LanguageL
LanguageModeDH
LastUpdateTimeWW
lc%%\\))dd++ee//>nl
LcA<E3
LcmiEventPnpInstallerStartWaitForPnpW
LcmiInfSerializerProcessAllModelsSections
lcmiLogModuleTool
lContentW
Lct$`M
lDomainTrusteeWWWH?
LeaveCriticalSection
Legal_Policy_Statement
LegalCopyright
Levels of validation for an unattend fileW4
LevelWWW,L
lIReferenceWW0C
lIRepositoryW
lManifestResourceDependencyWW
LoadDllServerWWW
LoadLibraryExW
LoadResource
LocalFree
LocalizationInformationW
LocalizationResourcesWWW
LockResource
logTypeW
LookupNamespaceW
LowerOffsetW
lpOfflineExecutionWWW|`
lPrivilegeTypeWWW
LProcessorArchitecturesWW
luunniiDu
m:::::::R
M~S-Ogs",
M0K0I
MachineNameW
main libraryWW
MajorWWW
manages core object modelW*
Manifest resource token replacer typeW"
ManifestSearchPatternWWW
MapAccessWWW
Marks external files with the external custom attributeWWWA
MaxDiskFileSizeMBWWW81
mCategoryMembershipWW
mcmiLogLevelWarningWW
MCompressionW
MCreateWWH
MembersWD
memcpy_s
memmove_s
memset
Merge another configuration to this configurationW4
Merge another setting with this settingWWW&
MessageBoxW
MessageW
method DiscoverWWW
method ExpandEnvironmentVariablesW
method FinalizeWWW
method FreeSurrogateWW
method GatherW
method GetOfflineFileLocationW!
method GetOfflineRegistryLocationExWWW
method GetOfflineRegistryLocationW#
method GetOfflineStatusWWW
method IsCanceledW
method IsHostAlive
method LoadDllServerWW
method LongRunningPluginWW
method MapSourceFileLocationWW"
method PostApplyWW
method PostGatherWC
method PreApplyWWW
method PreGatherWW
method ReportToUserWWW
method ResetPluginTimerWWW
method SendLogMessageW
method SetTelemetryDataPointWW
method UsersMigratingThisComponent
MethodCountW
MethodNameWW
MfSI*
Microsoft
Microsoft America Operations1&0$
Microsoft America Operations1'0%
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1%0#
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1+0)
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
microsoft1-0+
MIGHOST
MigHost
MigHost started with command line: %s
MigHost.exe
MigHost.exe {SurrogateCLSID} /InitDoneEvent:<event_name> /LogDir:<path> /ParentPID:<pid> 
MigHost.exe: Error: 
mighost.pdb
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: CoInitializeEx(%s) failed hr=0x%x.
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: Exiting ThreadID=[0x%x].
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: LoadAndRegisterServerInThreadContext() failed hr=0x%x.
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: LoadAndRegisterServerInThreadContext() succeeded.
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: ThreadID=[0x%x], Server=[%s], CLSID=[%s], ApartmentThreadingModel=[%d]
MigHost: CMigPluginSurrogate::FreeSurrogate: hThread=0x%x, ThreadId=0x%x, timeout.
MigHost: CMigPluginSurrogate::Init: failed to create event gle=0x%x
MigHost: CMigPluginSurrogate::Init: Successfully initialized surrogate.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: CoRegisterClassObject(%s) failed hr=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: DllGetClassObject(%s) failed hr=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: File is present, most likely it does not load on the current OS version
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: FreeLibrary(%s) failed gle=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: GetProcAddress(%s, DllGetClassObject) failed gle=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: Loaded server(%s)
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: LoadLibraryExW(%s, LOAD_WITH_ALTERED_SEARCH_PATH) failed gle=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: Successfully loaded and registered server(%s)
MigHost: CMigPluginSurrogate::LoadDllServer finished: Result=[0x%x].
MigHost: CMigPluginSurrogate::LoadDllServer in progress: BinaryPath=[%s], CLSID=[%s], ApartmentThreadingModel=[%d].
MigHost: CMigPluginSurrogate::LoadDllServer: Invalid argument: BinaryPath == NULL.
MigHost: CMigPluginSurrogate::LoadDllServer: Invalid argument: BinaryPath=[%s] does not exist.
MigHost: CMigPluginSurrogate::UnRegisterServerInThreadContext: CoDisconnectObject failed hr=0x%x on ThreadID=[0x%x].
MigHost: CMigPluginSurrogate::UnRegisterServerInThreadContext: CoRevokeClassObject failed hr=0x%x on ThreadID=[0x%x].
MigHost: CMigPluginSurrogate::WaitForHostTermination: Parent process unexpectedly exited. Terminating host.
MigHost: CSingletonClassFactory::RegisterClassObject: CoRegisterClassObject failed with hr=0x%x
MigHost: CSingletonClassFactory::RevokeInstance: CoRevokeClassObject failed with hr=0x%x
MigHost: Exiting process.
MigHost: Failed to initialize surrogate with CLSID[%s] and LogDir=[%s].
MigHost: Failed to register interfaces and type info. Exiting process.
MigHost: Failed to register surrogate class factory with CLSID[%s] and LogDir=[%s].
MigHost: Initialization completion event name has not been specified.
MigHost: Initialized successfully with CLSID[%s] and LogDir=[%s]
MigHost: OpenEvent(%s) failed.
MigHost: OpenProcess(%d) for parent process id failed.
MigHost: Parent process ID has not been specified.
MigHost: RegisterMigrationIIDsAndTypeInfo: CreateVolatileRegValue(%s, %s, %s) failed gle=[0x%x].
MigHost: RegisterMigrationIIDsAndTypeInfo: GetModuleFileName failed gle=[0x%x].
Migrate and overwrite the destination with sourceW?
Migrate and rename if a collision is detectedW
Migrate only if element or object is missing on the destinationWWW-
Migrate using default conflict resolution rulesWWW
MigrateW
Migration Plugins host program
Migration Plugins Type Library 2.0
MigrationIncludeInformationWL6
MigrationInformation`
MigrationPattern
MigrationPluginW@8
MMMMMMMMMMMM
modules that do not fall into the following itemsW
ModulesW
ModuleWW
Move the repository to the new rootWWW-
msvcrt.dll
N!IsPartialWWW
N0L0J
nCipher NTS ESN:2665-4C3F-C5DE1+0)
ncmiRebootRequiredWWW
NCmiResolutionModeWWWDH
'nComponentIdentityWWW
NewPathW
NewRootPathW
NewVersionWW
NewW N
NInitializeWW
nnngwwp
nnwww
No namespaceWW 
No reboot is requiredW
NoInheritableWWWl
NoInheritWWW
NoneWW
nStringTableEntry
NumberOfBytesWWW
NuNlI
O0CreationTime
O0M0K
ObjectToSelectFromWW\D
ObjectToUninstallWWW8J
ObjectTypeWW
OcmiCategoryDependencyWWWd
ocmiVersionAnyWWWT$
OeK?X #9
OfflineInstallWWx
OfflineW
oFlagsWWW
oK0D$"<
OldVersionWW
ole32.dll
OmitDeclarationW,
Online pass, which can happen in online installWWW6
OnlineEnvironmentWWW
Open the repository at the specified root path
OpenEventW
OpenProcess
opens the repository for reading or writingWWW
OpenThread
Operation hints for registry values.WW
OperationHintWWW\
OptionalPassesWW
OriginalFilename
Overloads [propget] IAssembly.IdWW
OwnersWW
OwnerWWW
p AWH
Packages components using the binaries and component carriers provided<
Packages non-Driver components?
PackageW
pAdviseWW
PairsWWW
PApplyToW
Parent process ID ParentPID=%s is invalid.
Parent propertyWWW
ParentWWL
PartialW
PAssemblyDependencyWW
PassesWW$
PcmiSerializerWWWd
PcmiStockInstallerWWW
pDependencyTypeWW
pEnvironmentVariable|`
performs conversion between object and inf+
performs conversion between object and xml*
performs dependency resolution
performs setup of componentsWW+
PerUserSupportWW
PerUserVirtualizationWWW
pFieldWW
pLogMessageW|`
pluginBinaryPath
PluginWW
pOfflineFilePath|`
pOfflineRegistryPath|`
pOfflineRegistryRootKeyW
possible entities that add an instance to a configurationW<
possible filter in the computation of effective settingsWW'
possible functionalities in CMI for loggingWWW@
possible levels of verbosity for loggingWW6
possible modules for loggingWW>
Possible passes in an installationE
possible set of values to indicate rebootW
Possible types of privilege, defined in ntseapi.hW 
Possible types of trustee, defined in ntseapi.h SID_NAME_USEWW
PostApplyWWW
PostEventWWW
PostGatherWW
PostProcessObjectWWW
Posts an event to the subscribersW-
PostThreadMessageW
PreApply
Prepend to existing value.$
PresentW8
priority
Private installerW
PrivateTestComponentPackager
PrivateTestDriverPackagerWWW|`
PrivilegesWW
Process ExcludeId directivesWW0
ProcessorArchitectureWWWL
ProductName
ProductVersion
property DomainWWW!
property PerUserSupportWWW
property UserNameW
property UserSidString
property WorkingDirWWW
Provides a mechanism for instrumentation team to keep its data9
Provides IInstaller::Install call sequence of a list of installers3
Provides information common to all trustee typesWW
Provides information of a domain trusteeWW*
Provides information of a generic trusteeW
Provides information of a group trusteeWWW)
Provides registration information about installerW*
ProxyNameWWW
ProxyStubClsid32
pSourceFilePathW
pTargetUserSidStringsWWW|`
Public installerWW
PublicKeyTokensW
PUpgradeW
pValL
pValueWW
pXmlStreamWW
q*PublicKeyTokenWWL
q_MergeWWW
QCmiCompareConsts 
QcmiHiddenWWW\+
qDiscover
qGatherSuccessWWWpb
QHash
qN<*~
qqqqqqq)A
qResolveInstaller
QualifiedSettingName4:
QueryPerformanceCounter
QueryTypeGenericQueryWWW
QueryTypeWWW8
R!s4Z
r%!k8S
R:953,&
R@55B
r~akow
rAddW
RaiseException
RBindingRedirects@
rcmiLanguageModeNoneW
Read all data and disconnect from data sourcesK
Rebase file repository
RebaseWW
Reboot is recommendedW
Reboot is required)
RebootIndicatorEnumW
RebootIndicatorW
Receives log. Prefix Cmi to avoid conflict with logging in SetupWW
Re-configuration pass, which can happen in online installW@
Redmond1
Reference factory interfaceWWW0
ReferenceAnswerW
ReferencedBy$E
ReferenceFactory
ReferenceIdW|G
ReferenceRangeDictionary
ReferenceRangeWW
ReferencesWW
RegCloseKey
RegCreateKeyExW
Register
Register propertyW9
RegisterListener
RegisterMigrationIIDsAndTypeInfo
Registers a log listener under a specified unique keyW#
Registers an installer factory using IInstallerRegistration.WWG
Registers callback for CreateObjectWWW%
Registration
RegistrationCommandW
RegistryKeyW
RegistryValuesWWh
RegistryValueTypeWWW
RegistryValueWWWP-
RegSetValueExW
Released
Relies on client inputs for non-deterministic resolutions.'
RemoveAllWWW
RemoveAtX
RemoveByInstanceIdWW
Removes all environment variable definitions.W*
Removes all items from the collectionW,
Removes all items from the dictionaryW"
Removes all the files of the components the repository+
Removes an entry from the redirection table using a reference rangeWWWE
Removes an item at the specified index
Removes entries from the redirection table using a reference identityWC
Removes entries from the redirection table using an instance identityWE
Removes the files of the component from the repository6
Removes the given component from repositoryWWW0
Removes the specified item from the collection%
Removes the specified item from the dictionary%
RemoveWW
REncoding
Replace existing value.WWW
Replaces the tokens for the given object & returns new objectW:
ReplaceTokensWWW
replicate source components to target source repositoryWWW:
ReportToUser
RepositorieshB
RepositoryDispatchWW
RepositoryTypeConstsX4
RepositoryWWL
Represent an instance of IDependency or ICompositionWW(
Represent an resolver of IReference(s)%
Represent four-part partial or full version valueW
Represents a collection of key-and-value pairs%
Represents a collection of objects that can be accessed by indexWW
Represents a configuration answer file9
Represents a definition of a security descriptorWW1
Represents a file dependency.W/
Represents a file repositoryWW
Represents a generic file elementW+
Represents a listener to logging from CMIW
Represents a log configuration from CMIWWW
Represents a pattern for string matching.W*
Represents a private test packager for driver componentsWW6
Represents a private test packager for non-driver componentsWW8
Represents a reference to a security definitionWWW0
Represents a serializer and de-serializerW/
Represents a set of environment variables.:
Represents a set of repositoriesWW 
Represents a setting instanceW
Represents a store of metadata and data (files) of componentsW+
Represents a string entry in the string tableW
Represents an assembly dependencyW'
Represents an entry in the reference redirection table!
Represents an identity definitionW 
Represents an identity referenceWW-
Represents an INF serializer and de-serializer8
Represents an installation targetW"
Represents an installed repository4
Represents an instance of an IComponentWWW1
Represents an XML serializer and de-serializer8
Represents both a root reference and a resolver contextWWW*
Represents Bulk Import$
Represents category instanceWW,
Represents category membership
Represents custom XML information present in the manifestW!
Represents data required for automatic resolution of a referenceWW%
Represents data required to customize an instanceW$
Represents element specific migration informationW!
Represents localization informationWWW-
Represents localization resources for a cultureWWW%
Represents private test packagers for componentsWW 
Represents queryWW
Represents range of referencesD
Represents read-only view of a setting definitionWC
Represents regisry key
Represents registry valueW
Represents security information define in a componentW
Represents the reference redirection tableK
Represents two values that is associated with each other.W#
Reset the resolution status of a reference's parentsWW,
Resolution done and meets the constraints..
Resolution has been deferred to actual instance to avoid cyclic references*
Resolution of a reference is not startedWW
Resolve a referenceWWW&
Resolve all the dependenciesWWA
Resolve at design time
Resolve at runtime$
Resolve each language-specific dependency to all matched componentsWWW"
Resolve each language-specific dependency to based on langpackC
Resolve each language-specific dependency to one component>
Resolve each language-specific dependency to zero componentWWW:
Resolve only compositional dependencies and language dependenciesW'
Resolver$E
ResolverIdWW\D
ResolverTypeConstsWW
ResolverWW9
Resolves the installer for the specified object and invokes its install method.WWWQ
Resolves the installer for the specified object and invokes its uninstall method.W>
ResourceIdWW<
ResourcesWWW
ResumeThread
Return an error when importing a component already present in the file repositoryWL
Return an installer registration entry in installer manager by element name.WW
return the build numberWWW
return the major version numberWWW
return the minor version numberWWW
return the revision number
Return whether the identity is partial or notW8
Return whether this is a partial version or notWWW/
Returns 16-byte public key token for the publisher/
Returns a colon separated list of authorsW&
Returns a colon separated list of ownersWW%
Returns a colon separated list of testersW&
Returns a flag indicating whether a component is readonly or notWW%
Returns a list of component settingsWW(
Returns a list of components to be addedWW*
Returns a list of components to be removed+
Returns a list of components to be replacedWWW-
Returns a list of IIdentity of top level instances"
Returns a list of IInstanceAnswerW@
Returns a list of IMigrationPatternWWW:
Returns a list of IMigrationSupportedComponent!
Returns a list of IReferenceAnswer!
Returns a list of setting override references as ISettingOverrideInstanceW.
Returns a list setting instances for a componentWW6
Returns a repository import object=
Returns an enumerator of name value pairsW
Returns an enumerator of valuesWWW,
Returns batch commit sizeW
Returns build type string, e.g. debug or releaseWW-
Returns comments that are useful for documentation purpose7
Returns company nameWW
Returns connection string to the repositoryWWW 
Returns copyright informationW
Returns creation timeW
Returns display nameWW
Returns environment to expand paths during importWF
Returns file repository for packageWWW
Returns four part version valueWWW
Returns identities of all assemblies in the repository2
Returns if a dependency is optional or not.WWW(
Returns if Component has element(s) of the specified pathW7
Returns if conflicting overrides are applied to this instanceW5
Returns if it is the key owner
Returns if the entry is enabled or not"
Returns if the installation is using cmiadapterWWW-
Returns if the instance is enabled or notW&
Returns if this instance is enabled or not'
Returns information about what to exclude during migration7
Returns information about what to include during migration7
Returns last update timeWW
Returns list of run-time dependenciesW
Returns locale independent nameWWW
Returns manifest file search patternWW!
Returns maximum disk file size
Returns nameWW
Returns new versionWWW
Returns old versionWWW
Returns processor architecture string, e.g. x86WWW,
Returns repository for packagerWWW.
Returns setting overrides of ISettingInstance type.WWW'
Returns source nameWWW
Returns support informationWWW
Returns the algorithm used to compute the hash.WWW,
Returns the algorithm used to generate the hashWWW,
Returns the arguments for the executable.W&
Returns the arguments for the registration.WWW(
Returns the arguments for the un-registration.+
Returns the arguments to this resolver#
Returns the array of fallback languages stringsWWW,
Returns the base interface nameWWW
Returns the base64 encoded hash of the fileWWW(
Returns the binding redirects of this dependencyWW3
Returns the cannoncial string representation of thisWW
Returns the category identityW
Returns the class id of the plugin
Returns the class IDWW
Returns the class-public key token map=
Returns the CMI namespaceW
Returns the collection of assemblies associated with this assembly(
Returns the collection of category memberships%
Returns the collection of identities of the components present in the file repositoryWH
Returns the collection of installable repositories.WWW%
Returns the collection of instance identities available for selectionW6
Returns the collection of instance identities selected,
Returns the collection of reference in of this instanceWWW
Returns the collection of resources elementWWW$
Returns the collection of selected instancesWW
Returns the COM classes implemented in this fileWW4
Returns the COM proxy stubs implemented in this fileWW.
Returns the COM typelibs embedded in this file3
Returns the component language
Returns the component type of this assemblyWWWB
Returns the component where the setting is defined/
Returns the component which defines this instance with all language-specific tokens substituted.WWC
Returns the component which defines this instanceW%
Returns the configuration an instance is contained inW*
Returns the configuration of an installed repositoryWW1
Returns the count entries in the environmentWW-
Returns the count of key-and-value pairs in the dictionary!
Returns the culture for the resourcesW!
Returns the current installer associated with the element nameD
Returns the current pass of an installationWWW(
Returns the current query flagsWWW$
Returns the current query parametersWW!
Returns the current query type
Returns the current setting for transactionsWW"
Returns the DataWW
Returns the default setting instances from the componentWW>
Returns the default value of a settingD
Returns the definition of a referenceW"
Returns the definition of this referenceWW%
Returns the dependencies of this file.E
Returns the dependency type for this dependencyWWW,
Returns the dependent assembly identityWWW$
Returns the dependent category identityWWW$
Returns the description for this dependencyWWW(
Returns the description of category instanceWW)
Returns the descriptionWWW
Returns the destination file name.
Returns the destination pathWW
Returns the discoverable flag.
Returns the display name of category instanceW*
Returns the display nameWW
Returns the edit sequence when AllInstances is last modifiedWW*
Returns the edit sequence when ComputeEffectiveSettingInstances is last called#
Returns the encoding (UTF-8/ UTF-16) to be used for serializationW>
Returns the entity who adds this instance to a configurationWW9
Returns the enumerator of ICmiPair@
Returns the environment variable set.W"
Returns the estimated size of a componentW&
Returns the factory used by an reference factoryWW-
Returns the fallback culture for the assemblyW*
Returns the file attributesWWW
Returns the file compression typeW
Returns the file repositories associated with this repositoryW7
Returns the file repository associated with a componentWWW
Returns the file repositoryWWW
Returns the file sizeW
Returns the file writeable typeWWW
Returns the first value in a pair.
Returns the flag indicating whether this dependency is optional or not)
Returns the flag that specifies if this command must run during install.WWE
Returns the fully qalified name for creating an empty directoryWWW<
Returns the fully qualified path to the execuable relative to component's root.WWWL
Returns the fully qualified path to the executable.WWW0
Returns the fully qualified path to the file.W*
Returns the hash code of thisW
Returns the help directory
Returns the id for a configuration generated by this answer fileWW=
Returns the identity of a parent or NULL for any parentWWW4
Returns the identity of the component to apply the setting toW:
Returns the identity of the componentW"
Returns the identity of the instanceWW!
Returns the identity of the supported component.WW-
Returns the identity of this configuration'
Returns the identity of this resolverW
Returns the identity reference rangeWW
Returns the identity that qualifies a settingW*
Returns the IIdentity to ISettingInstance mapW0
Returns the imaging informationWWW
Returns the INF file search repository#
Returns the input source of the assemblyWW%
Returns the install for this dependencyWWW$
Returns the installation pass during which registration is to be run.WB
Returns the installation pass during which un-registration is to be run.WWE
Returns the installation pass installer should perform3
Returns the installation passes during which this command must run.WWW@
Returns the installation status of an instance
Returns the installed repository .
Returns the installer associated with the specified installable object.WWWO
Returns the instance factoryWW
Returns the instance identityW#
Returns the instrumentation information from the assemblyW4
Returns the interface IDWW
Returns the key nameWW
Returns the language string or * for neutralWW0
Returns the language stringWWW
Returns the list of assembly identities that should be replaced.WW 
Returns the list of attributes as ICustomInformationWW2
Returns the list of category instances
Returns the list of directoriesWWW!
Returns the list of elements as ICustomInformation2
Returns the list of external COM proxy stubWWW%
Returns the list of filesW
Returns the list of generic commands.W*
Returns the list of installer paths ordered by Install call sequenceWW=
Returns the list of installer registrations.WW5
Returns the list of registration commands.,
Returns the list of registry keysW+
Returns the list of repositoriesWW4
Returns the list of setting definitions, each as ISettingDefinitionWWW=
Returns the list of setting types, each as ICustomInformationW%
Returns the list of sysprep modulesWWW
Returns the local name
Returns the localization informationWW!
Returns the log from which facilities to receive.W1
Returns the log from which modules to receive.1
Returns the map access valueWW
Returns the maximum number of instances need to select3
Returns the maximum verbosity level of log to receive..
Returns the migration information of a directoryWW-
Returns the migration informationW
Returns the migration plugin informationWW%
Returns the migration type
Returns the minimum number of instances need to select3
Returns the most recently computed effective setting instances>
Returns the most recently computed override conflictsW<
Returns the name of a settingW
Returns the name of the file of the plugin'
Returns the name of the module
Returns the name this settingW
Returns the namespace qualifierWWW
Returns the namespace URI of a custom info'
Returns the number of edits that have happened to this component instanceWF
Returns the number of methods, or -1 if not specifiedW2
Returns the number of valuesWW
Returns the object typeWWW!
Returns the offline installer file repositoryW*
Returns the online environment variable set.WW)
Returns the operation hint.WWW
Returns the optional passes to turn on/off'
Returns the ownership flag.WWW
Returns the parent instance of this resolution, or NULLWWWE
Returns the path of a file when the owning assembly is being importedWB
Returns the per user virtualization valueW&
Returns the previously installed instance during servicing7
Returns the processor architecture installers are running onWW9
Returns the processor architecture of infs used by this serializerD
Returns the processor architecture the target runs onW2
Returns the program ID
Returns the proxy stub class IdWWW
Returns the qualifier + localName + instance IdWWW0
Returns the read only collection of all instancesW
Returns the readonly collection of references to an instanceWW7
Returns the read-only list of registry valuesW8
Returns the read-only redirection table view from the instance indexWW
Returns the read-only redirection table view from the reference range indexWWWD
Returns the reboot indicatorWW
Returns the redirect informationWW
Returns the reference factoryW
Returns the reference identity which includes the from version&
Returns the reference redirection tableWWWX
Returns the replacement tokens
Returns the replicated repository root pathWWW(
Returns the repository
Returns the repository flagsWW
Returns the requested assembly from the repositoryF
Returns the resolution stage of this reference+
Returns the resolution status of this referenceWWW,
Returns the resolver identityW
Returns the resolverWW
Returns the resource IDWWW
Returns the resource type for this dependencyW*
Returns the root path of the installed repositoryW"
Returns the root pathW.
Returns the runtime name of a dependency fileW*
Returns the runtime path of a dependency fileW*
Returns the search paths of infs used by this serializerWW4
Returns the second value in a pair.WWW 
Returns the secured attribute of a setting"
Returns the setting information valueW"
Returns the simple identity of the componentWW)
Returns the source name of the dependency file.WWW,
Returns the source pathWWW
Returns the string tableWW%
Returns the string value for matchingW"
Returns the string value of this versionWW
Returns the subcategory of category instanceWW)
Returns the subobject of this category instanceWWW!
Returns the subobject of this dependencyWW9
Returns the success code for the generic command to.WW.
Returns the temporary directoryWWW
Returns the textWW
Returns the threading modelWWW
Returns the timeout for registration in seconds.WW-
Returns the tybelib ID5
Returns the type name of a setting
Returns the type name of categoryW
Returns the type of a custom infoW*
Returns the type of category selection#
Returns the type of file repository this object implements.WWWV
Returns the typelib flagsW
Returns the typelib ID
Returns the typeWW
Returns the unique hash of the file.WW!
Returns the user specified setting overrides for this instanceN
Returns the value by indexed by a keyW:
Returns the value indexWWW
Returns the value of end-of-life flagW"
Returns the value of released flag
Returns the value of the variable with the specified name.7
Returns the value of this settingW
Returns the value/inner XML/etc of a custom infoWW-
Returns the value/outer XML/etc of a custom infoWW-
Returns the valueW
Returns the versionWWW
Returns the visibility attribute of a settingW*
Returns the window classes implemented in this fileWWW&
Returns type attribute
Returns upper bound for the version rangeW&
Returns value for initializing other id in an answer fileW6
Returns version scope attributeWWW
Returns whether it is versioned or not#
Returns whether the containing assembly owns this directoryWWW8
Returns whether the dependency is needed for offline installWW9
Returns whether this is readonly or notWWW4
Returns whether to create default value during install3
Returns whether to omit xml declaration during serializeWW5
Returns whether to write the byte order mark during serializeW:
Returns whether UI should be shown for this settingWWW0
ReturnValueW
Revision 
RHEB=:953,&
rICustomInformationWW
RIIdentityWWWL
RInstance
rITargetWpI
RITrustee
rollback operations if they are supported by the installer'
RollbackTransaction method
RootPathd
RRegistryKeys
RResolveW
RSDS V}&
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
sCmiEventsWWW
scmiNetworkLogonPrivilege
scmiRedirectInformationWWd
SE_ASSIGNPRIMARYTOKEN_PRIVILEGEWWW
SE_AUDIT_PRIVILEGE
SE_BACKUP_PRIVILEGEWWW
SE_BATCH_LOGON_NAMEWWW
SE_CHANGE_NOTIFY_PRIVILEGE
SE_CREATE_GLOBAL_PRIVILEGE
SE_CREATE_PAGEFILE_PRIVILEGEWW
SE_CREATE_PERMANENT_PRIVILEGEW
SE_CREATE_TOKEN_PRIVILEGEW
SE_DEBUG_PRIVILEGE
SE_DENY_BATCH_LOGON_NAMEWW
SE_DENY_INTERACTIVE_LOGON_NAME
SE_DENY_NETWORK_LOGON_NAME
SE_DENY_REMOTE_INTERACTIVE_LOGON_NAMEW1
SE_DENY_SERVICE_LOGON_NAME 
SE_ENABLE_DELEGATION_PRIVILEGE
SE_IMPERSONATE_PRIVILEGEWW
SE_INC_BASE_PRIORITY_PRIVILEGE
SE_INCREASE_QUOTA_PRIVILEGEWWW
SE_INTERACTIVE_LOGON_NAMEW
SE_LOAD_DRIVER_PRIVILEGEWW
SE_LOCK_MEMORY_PRIVILEGEWW
SE_MACHINE_ACCOUNT_PRIVILEGEWW
SE_MANAGE_VOLUME_PRIVILEGE
SE_NETWORK_LOGON_NAMEW
SE_PROF_SINGLE_PROCESS_PRIVILEGEWW
SE_REMOTE_INTERACTIVE_LOGON_NAMEWW%
SE_REMOTE_SHUTDOWN_PRIVILEGEWW
SE_RESTORE_PRIVILEGEWW
SE_SECURITY_PRIVILEGEW
SE_SERVICE_LOGON_NAMEW
SE_SHUTDOWN_PRIVILEGEW
SE_SYNC_AGENT_PRIVILEGEWWW
SE_SYSTEM_ENVIRONMENT_PRIVILEGEWWW
SE_SYSTEM_PROFILE_PRIVILEGEWWW
SE_SYSTEMTIME_PRIVILEGEWWW 
SE_TAKE_OWNERSHIP_PRIVILEGEWWW
SE_TCB_PRIVILEGEWW
SE_UNDOCK_PRIVILEGEWWW
SE_UNSOLICITED_INPUT_PRIVILEGE
SearchPathsWp
SearchRepositoryp
Second stage pass, which can happen in offline or online installWW"
SecondWW
SecurityDescriptorDefinitionsWWW
SecurityDescriptorDefinitionT=
SecurityDescriptorWW
SecurityInformationW
SelectedInstancesWWW0C
SelectFromObject
Selection is doneW'
SelectionMax0C
SelectionMin0C
SelectionWWW
Selects element based on a path expression.
Selects elements from a specified object based on a path expressionWWW8
SelectWW
SendLogMessageWW
Sequence
SequencedPathsWW
SerializerWW
Serializes a CMI object to the given destinationWW.
set the build numberWW
set the major version numberWW
set the minor version numberWW
Set the program ID
set the revision numberWWW
SetErrorMode
SetEvent
Sets 16-byte public key token for the publisherWWW'
Sets a colon separated list of authors:
Sets a colon separated list of ownersW)
Sets a colon separated list of testers)
Sets a list of capabilities of a group trustee(
Sets a list of members of a domain trustee)
Sets a list of members of a group trusteeW.
Sets a list of privileges assigned to a trusteeWWW)
Sets assembly IdWW
Sets batch commit size
Sets build type string, e.g. debug or releaseW2
Sets comments that are useful for documentation purposeWWWI
Sets company nameW
Sets configuration answer file that overrides an unattend.xml fileB
Sets copyright information
Sets creation time
Sets descriptionWW
Sets display nameW
Sets environment to expand paths during import1
Sets file repository for packageWW#
Sets four part version valueWW,
Sets if a dependency is optional or not.WW-
Sets if optional flag for this dependencyW
Sets if the entry is enabled or notWWW&
Sets if the instance is enbaled or notB
Sets if this installation is using cmiadapterW`
Sets if this instance is enbaled or notWWW'
Sets information about what to exclude during migrationWWW0
Sets information about what to include during migrationWWW!
Sets installer capability flags propertyWW)
Sets language string (e.g. eng) or * for neutralWW/
Sets language stringWW/
Sets last update timeW"
Sets locale independent nameWW
Sets manifest file search patternW
Sets maximum disk file sizeWWW
Sets nameW
Sets new versionWW
Sets old versionWW
Sets processor architecture string, e.g. x86WW0
Sets repository for packagerWW
Sets source nameWW
Sets support informationWW)
Sets the additional arguments for the event to be postedWWE
Sets the algorithm used to compute the hash.WW+
Sets the algorithm used to generate the hashWW"
Sets the arguments for the executable.H
Sets the arguments for the registration.WW.
Sets the arguments for the un-registration.WWW0
Sets the arguments to this resolverWWW
Sets the array of fallback languages stringsWW%
Sets the array of paths that defines this sequence1
Sets the base interface nameWW
Sets the base64 encoded hash of the fileWW/
Sets the batch transaction setting
Sets the boolean flag indicating if the security descriptor reference is for offline modeW0
Sets the category identity&
Sets the class ID of the installer factory5
Sets the class id of the pluginWWW(
Sets the class IDW
Sets the CMI namespace1
Sets the component languageWWW8
Sets the component where the setting is definedWWW-
Sets the culture for the assemblyW
Sets the current pass of an installationWW<
Sets the current query flagsWW
Sets the current query parametersW
Sets the definition of a reference7
Sets the definition of this referenceW(
Sets the dependency type for this dependencyWW8
Sets the dependent assembly identityWW0
Sets the dependent category identityWW-
Sets the description for this dependencyWWF
Sets the description of a security descriptor definitionWW0
Sets the description of a trusteeW
Sets the description of category instanceW/
Sets the descriptionWW
Sets the destination file name.WWW
Sets the destination pathW
Sets the discoverable flag.WWW-
Sets the display name of a security descriptor definitionW8
Sets the display name of category instance,
Sets the display nameW
Sets the encoding (UTF-8/ UTF-16) to be used for serialization1
Sets the entity who adds this instance to a configurationW<
Sets the environment variable set.,
Sets the escaped textual representation for xml elementsWW.
Sets the estimated size of a component
Sets the event ID for the event to be postedWW$
Sets the factory used by an instance factoryWW
Sets the factory used by an reference factoryW
Sets the factoryWW=
Sets the fallback culture for the assembly+
Sets the file attributesWW
Sets the file compression type=
Sets the file repositoryWW
Sets the file size0
Sets the file writeable typeWW!
Sets the first value in a pair.WWW!
Sets the flag that specifies if this command must run during install.WC
Sets the flags that control serialization behavior&
Sets the full name of a trusteeWWW!
Sets the fully qalified name for creating an empty directoryWW;
Sets the fully qualified path to the execuable relative to component's root.WW)
Sets the fully qualified path to the executable.WW+
Sets the fully qualified path to the file.$
Sets the fusion activation context inheritance flag for applicationsWWB
Sets the fusion activation context inheritance flag for assemblies#
Sets the global log listener.W5
Sets the help directoryWWW
Sets the HRESULT for the event that was posted!
Sets the id for a configuration generated by this answer fileW
Sets the identity of a parent or NULL for any parentWW1
Sets the identity of the component to apply the setting toH
Sets the identity of the component7
Sets the identity of the instanceW)
Sets the identity of the supported component.W1
Sets the identity of this configurationWWW1
Sets the identity reference rangeW$
Sets the identity that qualifies a setting
Sets the imaging informationWW.
Sets the import path for binary filesW%
Sets the import path for the INF fileW.
Sets the INF file search repositoryWWW%
Sets the input source of the assemblyW>
Sets the install for this dependencyWW/
Sets the installation pass during which registration is to be run.H
Sets the installation pass during which un-registration is to be run.W
Sets the installation pass installer should performWWW
Sets the installation pass this sequence applies toWWW:
Sets the installation passes during which this command must run.WW/
Sets the installed repository .WWW3
Sets the installed repositoryW
Sets the installer that this sequence needs to be ahead of5
Sets the installer that this sequence needs to followW2
Sets the instance factoryW
Sets the instance identity
Sets the instrumentation information of the assemblyWW
Sets the interface IDW
Sets the key nameW
Sets the key owner-
Sets the LanguageMode for resolving configurationW
Sets the list of supported target processor architecturesW8
Sets the local nameWWW/
Sets the localization informationW*
Sets the manifest resource dependencyW(
Sets the map access valueW
Sets the maximum number of instances need to selectWWW6
Sets the migration information of a directoryW7
Sets the migration information of a registry keyWW!
Sets the migration informationF
Sets the migration plugin informationW.
Sets the migration typeWWW
Sets the minimum number of instances need to selectWWW6
Sets the module nameWW6
Sets the name of a security descriptor definitionW1
Sets the name of a security descriptor referenceWW
Sets the name of a settingB
Sets the name of a trustee
Sets the name of the file of the pluginWWW"
Sets the name this setting3
Sets the namespace qualifierWW
Sets the namespace URI of a custom infoWWW
Sets the number of edits that have happened to this component instance@
Sets the number of methods, or -1 if not specified
Sets the object for the event to be posted2
Sets the offline installer file repository*
Sets the online environment variable set.W
Sets the operation hint of a security descriptor definitionWWW9
Sets the operation hint.WW$
Sets the optional passes to turn on/offWWW
Sets the owner of a trusteeWWW'
Sets the ownership flag.WW
Sets the path of a file when the owning assembly is being imported/
Sets the per user virtualization value
Sets the previously installed instance during servicingWWW:
Sets the processor architecture installers are running onW5
Sets the processor architecture path of infs used by this serializerWW2
Sets the processor architecture the target runs on-
Sets the proxy stub class IdWW
Sets the reboot indicatorWD
Sets the redirect informationW
Sets the reference factory&
Sets the reference identity which includes the from version by valueWW>
Sets the registry valueWWW
Sets the replacement tokensWWWA
Sets the replicated repository root pathWW:
Sets the repository flagsW 
Sets the repository to be used with the instance factoryWW
Sets the repositoryWWW/
Sets the resolution stage of this referenceWWW
Sets the resolution status of this referenceWW
Sets the ResolutionMode for resolving configurationWWW5
Sets the resolver identity*
Sets the resolverW1
Sets the resource IDWW
Sets the resource type for this dependency<
Sets the runtime name of a dependency file0
Sets the runtime path of a dependency file-
Sets the SDDL of a security descriptor definitionW;
Sets the search path of infs used by this serializerWWB
Sets the second value in a pair.WW"
Sets the security descriptor reference of a directoryW0
Sets the security descriptor reference of a fileWW6
Sets the security descriptor reference of a registry keyWW1
Sets the security information of an assemblyWWD
Sets the setting information value-
Sets the sid of a trusteeW
Sets the simple identity of the componentW0
Sets the source name of the dependency file.WW-
Sets the source pathWW
Sets the string value for matchingD
Sets the subcategory of category instanceW-
Sets the success code for the generic command.N
Sets the supported combination of InstallationTypeConstsWW
Sets the temporary directoryWW,
Sets the textW
Sets the threading modelWW
Sets the timeout for registration in seconds.W
Sets the trustee typeW(
Sets the type name of category
Sets the type of category selectionWWW!
Sets the typelib flags
Sets the typelib IDWWW$
Sets the unique hash of the file.W/
Sets the value
Sets the value of end-of-life flagI
Sets the value of released flagWWW%
Sets the value of the variable with the specified name.WWW,
Sets the value of this settingsWWW'
Sets the value of this version(
Sets the value/inner XML/etc of a custom infoW4
Sets the value/outer XML/etc of a custom infoW0
Sets the versionWW
Sets type attributeWWW
Sets up the internal environment object for the specified setup typeWW(
Sets upper bound for the version range)
Sets value for initializing other id in an answer file2
Sets version scope attributeWW!
Sets whether a trustee is enabled or notWW/
Sets whether it is versioned or notWWW
Sets whether the containing assembly owns this directoryWW5
Sets whether the dependency is needed for offline installW(
Sets whether to create default value during installWWW0
Sets whether to omit xml declaration during serializeW=
Sets whether to write the byte order mark during serialize
Sets whether UI should be shown for this settingWW!
SetTelemetryDataPointWWW
SettingDefinitionsWWx
SettingDefinitionWWW
SettingInformationWW
SettingInstances@Q
SettingInstanceWl9
SettingNameW\D
SettingOverrideConflictFlagW$E
SettingOverrideConflictInformationsW\D
SettingOverrideConflictInformationWW
SettingOverrideInstances
SettingOverrideInstanceW
SettingOverrides@
SettingTypes
SetUnhandledExceptionFilter
SetupEnvironment
ShareModeWWW
SHDeleteKeyW
SHELL32.dll
SHLWAPI.dll
Shttp://www.microsoft.com/pkiops/crl/Microsoft%20Windows%20Verification%20PCA(1).crl0q
SidTypeAccount
SidTypeAliasWW
SidTypeComputerWWW
SidTypeDeleteAccountWW
SidTypeDomainW
SidTypeGroupWW
SidTypeInvalid
SidTypeUnknown
SidTypeUserWWW
SidTypeVirtualAccountW<
SidTypeWellKnownGroupW
SidW|
SimpleId
SISysprepInformationW4
SizeofResource
Skip missing files if the external attribute is set during import and exportWW=
Skip the file if it is present in destinationWQ
skrkh
Sleep
smServerNameWW
Software\Classes\
SourceNameWW
SourcePathWW
SourceWW
Specialize pass, which can happen in online installWWW0
Specifies a COM class informationW
Specifies a COM interface proxy stubWW
Specifies a COM typelibWWW
Specifies a Windows classW&
Specifies elements to be excludedW:
Specifies elements to be includedW#
Specifies information about a component which migration is supportedWW0
Specifies migration information of a component)
SSS)}}}
SSSSSSSS
Stage pass, which can happen in offline or online installW6
StageWWWX
static type, file contents do not change during installationWW
stdole2.tlbWWW
Stock installerWWW
stores and manages components in repositoryWWW
StringFileInfo
StringFromGUID2
StringTableW
SubElementsW
SubObjectWWW
SuccessCodeW
SupportedComponentsWx7
SupportedTargets
SupportedTypesWW4!
SupportInformationWW
svvvvvvvgA
SVWATAUAVAWH
Switch %s is unsupport.
Swwwj=B>
SysprepInformationWW<A
SysprepModulesWW,L
systemData type, file contents can change during installationW<
t$ ;t$P
t$PHc
Target propertyWWWR
TcmiChangeNotifyPrivilege
tcmiInfSerializerInfIsInboxWW
TDirectoriesW
TemporaryDirectoryWW81
TerminateProcess
TestersW
tExcludeOptionalDependenciesWLO
Text<
TFB=:953,&
Thales TSS ESN:843D-37F6-F1041%0#
Thales TSS ESN:C3B0-0F6A-41111%0#
This interface allows access to an entry in IInstallerManagerW!
This interface allows creation of installer instances.:
This interface allows installing and uninstalling objects.
This interface allows metadata repository initialization.W)
This interface allows upgrading and downgrading objects.WW
This interface manages the association between installable objects and installers.6
TimeoutW
TIQualifiedSettingNameWWWl 
TlP0X
tMigrationSupportedComponentW
TokenReplacerTypesWW(<
TokenReplacerWWW
TokensWWL
ToStringL
ToVersionWWW
tPopulateReferenceRedirectionTableWWW
TranslatedValueWLO
Translation
treat all driver components as criticalWWW
Treat the INF file as inboxWWW
TrusteeTypeW|
type used to uniquely identify componentWW
TYPELIB
TypeLib\{EE45FDEE-232D-4fae-92E9-9A9ED142C346}\2.0
TypeLib\{EE45FDEE-232D-4fae-92E9-9A9ED142C346}\2.0\0
TypeLib\{EE45FDEE-232D-4fae-92E9-9A9ED142C346}\2.0\0\win32
TypeLib\{EE45FDEE-232D-4fae-92E9-9A9ED142C346}\2.0\FLAGS
Typelibs
TypeName
Types of configuration resolution modesWWW3
Types of installation.%
Types of language resolution modes1
Types of packagers. Used while creating a private test packagerWWW*
Types of path supported by IPathTranslator&
Types of repositories. Used while creating the repositoryW
Types of resolvers. Used while creating the resolverWW
u HcA<H
u$L97t
u*9Q<|%
U>ThreadingModelWWt
U0S0Q
UATAUAVAWH
ucmiReferenced
uee*))))00
uFileWriteableTypeWWW
Uhttp://www.microsoft.com/pkiops/certs/Microsoft%20Windows%20Verification%20PCA(1).crt0
ulid\VL
Unadvise
UnattendFile
UnattendFileValidationLevelW
UnhandledExceptionFilter
Uninstalls an object.W8
UnregisterClassA
UnregisterPassWWP
Unregisters callback for CreateObjectW.
updates configurationW
Upgrades an object.WWW
UpperOffsetW
urn:schemas-microsoft-com:asm.v1WW 
urn:schemas-microsoft-com:asm.v3WW
urResultWW
Usage: 
Use a file-based repository implementation9
Use alternate setup policy location in fusion file repositoryW>
Use file system and have limited query support*
use symbolic links for file installationWW7
Use symbolic links while copyingWW-
Use the same actions as parent element or objectWW/
use unattend installationW
Used to identify component from unattend file to instance identity
Useful constant for the default valueW
USER32.dll
UserName|`
UserSidStringWWW|`
UsersMigratingThisComponentW
UserWW
Uses an answer file to help resolution.WWW4
UsingCmiAdapterW\D
UTF-16 encodingWWW%
UTF-8 encoding
utility toolWW"
UVWATAUAVAWH
V11oF
Valid component typesW+
Valid events that CMI objects supportW
Valid file compression type.WW!
Valid migration typesW
Valid object types for ICmiFactory.CreateObject() methodWW3
valid values of ICategoryDependency.SelectionW&
Valid writeable types.
ValidateAgainstWh[
Validates this unattend file against a configurationWWB
ValuesWW
VarFileInfo
Various comparision resultsWWW2
Various success codesW4
VcmiBatchLogonPrivilegeWW
VDefaultSettingInstancesW
VDirtyWWW
vDowngradeWWW
Version
VersionedWWW
VersionScope
VersionWL
vGroupTrustee
vIResolverWWWPF
VisibilityWW
vMigrationExcludeInformationW
VMigrationTypeWWWH
VPPTP004:
VPPTP00l 
VS_VERSION_INFO
vswprintf_s
VWAVH
vyReferenceAnswersLO
W\ApplyRedirection@Q
W7'''''7A
WaitForMultipleObjects
WaitForSingleObject
Waiting for selectionW
Washington1
WATAUAVAWH
WAVAWH
wcschr
WDSCORE.dll
WdsInitialize
WdsInitialize failed to initialize.
WdsSetupLogMessageW
WdsTerminate
WIComponentSettingsWW
wIFileTypelib<
Win32 file attribute that can be represented as a flag.WWW
WindowClassesWWW
WISecurityDescriptorDefinitionWWW
WorkingDirWW|`
wqBatchTransactionOnWW
WriteableTypeWWWt
WServicingReferenceInstanceWW
WU'%]469=EFHJNl0#A
wWinMain
WWWtF>
wwwwp
wwwww
wwwwww
wwwwwwww
wwwwwwwwwx
wwwwwwx
wwwwwx
wwwwx
wXFilesWWW
x ATAVAWH
x AVH
x!!ff
xA_NewEnum
XAfterWWWl 
xBpTargetFilePathW|`
XcmiSpecializePassWWW
xgsTMJ
xJNewObjectWWW
XmlSerializerWWW
XnContextW
xthbZQO;?
XYYYYO#
XZUnregisterArgumentsW
y;2uQ
ybB?y
yCarrierDirectoryPathsWWW
YcmiQueryGetSettingDefinitionsWithVisibilityForComponents8
YInstallerRegistrationWWW`;
YIPreApplyWWWDa
YoTlbidWWW
Yq"\0
yRich
Ysssssss
z.9Wv
ZcmiConnected
zcmiExactlyOneWWWT
zEntryValueWW
zFirstWWW@
ZgOptionalx
ZInitializedW
zItem
zmg]/0
