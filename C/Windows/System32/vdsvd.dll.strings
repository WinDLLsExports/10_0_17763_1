 A_A^A\
 A_A^A]
 A_A^A]A\_
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!|$0H
!This program cannot be run in DOS mode.
(t$pH
)D$ H9
)t$pH
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata
??_FCRtlList@@QEAAXXZ
??_FCRtlMap@@QEAAXXZ
??0CPrvEnumObject@@QEAA@XZ
??0CRtlList@@QEAA@P6AXPEAVCRtlEntry@@@Z@Z
??0CRtlMap@@QEAA@KP6AXPEAVCRtlEntry@@@Z1@Z
??0CRtlSharedLock@@QEAA@XZ
??0CVdsCallTracer@@QEAA@KPEBD@Z
??0CVdsCriticalSection@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
??0CVdsPnPNotificationBase@@QEAA@XZ
??0CVdsUnlockIt@@QEAA@AEAJ@Z
??1CPrvEnumObject@@QEAA@XZ
??1CRtlList@@QEAA@XZ
??1CRtlMap@@UEAA@XZ
??1CRtlSharedLock@@QEAA@XZ
??1CVdsCallTracer@@QEAA@XZ
??1CVdsCriticalSection@@QEAA@XZ
??1CVdsPnPNotificationBase@@QEAA@XZ
??1CVdsUnlockIt@@QEAA@XZ
?AcquireRead@CRtlSharedLock@@AEAAXXZ
?AcquireWrite@CRtlSharedLock@@AEAAXXZ
?AllowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Append@CPrvEnumObject@@QEAAJPEAUIUnknown@@@Z
?Begin@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Begin@CRtlMap@@QEAA?AVCRtlMapIter@@XZ
?Clone@CPrvEnumObject@@UEAAJPEAPEAUIEnumVdsObject@@@Z
?CurrentThreadIsWriter@CRtlSharedLock@@QEAAHXZ
?DisallowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Downgrade@CRtlSharedLock@@AEAAXXZ
?End@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Find@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAV2@@Z
?GetEntry@CRtlListIter@@QEAAPEAVCRtlEntry@@XZ
?GetOutputType@CVdsAsyncObjectBase@@QEAA?AW4_VDS_ASYNC_OUTPUT_TYPE@@XZ
?Insert@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?IsCancelRequested@CVdsAsyncObjectBase@@QEAAHXZ
?m_ExtraLogging@CVdsTraceSettings@@QEAAHXZ
?m_NoDebuggerLogging@CVdsTraceSettings@@QEAAHXZ
?Next@CPrvEnumObject@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?Next@CRtlListIter@@QEAAAEAV1@XZ
?Next@CRtlMapIter@@QEAAAEAV1@XZ
?Prev@CRtlListIter@@QEAAAEAV1@XZ
?Release@CRtlSharedLock@@AEAAXXZ
?Remove@CRtlMap@@QEAAHAEAVCRtlEntry@@@Z
?RemoveAll@CRtlList@@QEAAXXZ
?RemoveAll@CRtlMap@@QEAAXH@Z
?Reset@CPrvEnumObject@@UEAAJXZ
?SetOutput@CVdsAsyncObjectBase@@QEAAXU_VDS_ASYNC_OUTPUT@@@Z
?SetOutputType@CVdsAsyncObjectBase@@QEAAXW4_VDS_ASYNC_OUTPUT_TYPE@@@Z
?SetPositionToLast@CPrvEnumObject@@QEAAXXZ
?Skip@CPrvEnumObject@@UEAAJK@Z
?Upgrade@CRtlSharedLock@@AEAAXXZ
?ZeroAsyncOut@CVdsAsyncObjectBase@@QEAAXXZ
@.data
@.reloc
@.rsrc
@A^_^
@SUVWATAUAVAWH
@USVWATAUAVAWH
\$ E3
\$ UH
\$ UVWH
\$ VWAVH
__C_specific_handler
__dllonexit
_amsg_exit
_callnewh
_initterm
_lock
_onexit
_purecall
_unlock
_wcsicmp
_XcptFilter
` UAVAWH
`.rdata
`H!t$(A
|$ UATAUAVAWH
040904B0
0A^_^
0A_A^_
1.0.0
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
9z<--
A^A\_^]
A_A^]
A_A^A\_^
A_A^A]_]
A_A^A]A\]
A_A^A]A\_^[]
A_A^A]A\_^]
AdjustTokenPrivileges
ADVAPI32.dll
AllocateAndGetVhdFileName failed for GUID, 2, hr=%lX
AllocateAndGetVhdFileName, 1, hr=%lX
AllocateAndGetVhdFileName, 2, hr=%lX
api-ms-win-core-com-l1-1-0.dll
ATAVAWH
ATL.DLL
AttachVirtualDisk
CancelIoEx
CloseHandle
CLSID = s '{80CB8C11-0E10-45F4-A1BA-EAD3838D7034}'
CoCreateGuid
CoImpersonateClient
CompactVirtualDisk
CompanyName
ConvertStringSecurityDescriptorToSecurityDescriptorW
COpenVDisk::~COpenVDisk
COpenVDisk::Attach
COpenVDisk::Attach, 1, hr=%lX
COpenVDisk::Attach, 2, hr=%lX
COpenVDisk::Attach, 3, %lX
COpenVDisk::Attach, 4, hr=%lX
COpenVDisk::Attach, 5, SD=%s, hr=%lX
COpenVDisk::Attach, 6, %lX
COpenVDisk::Attach, 7, hr=%lX
COpenVDisk::Attach, 8, hr=%lX
COpenVDisk::Attach, 9, hr=%lX
COpenVDisk::Attach, CoImpersonateClient failed, hr=%lX
COpenVDisk::Attach, CoRevertToSelf failed: %lX
COpenVDisk::Compact
COpenVDisk::Compact, 1, hr=%lX
COpenVDisk::Compact, 2, hr=%lX
COpenVDisk::Compact, 3, hr=%lX
COpenVDisk::Compact, 4, hr=%lX
COpenVDisk::Compact, 5, hr=%lX
COpenVDisk::Compact, 6, hr=%lX
COpenVDisk::Compact, 7, hr=%lX
COpenVDisk::Compact, 8, hr=%lX
COpenVDisk::Compact, CoImpersonateClient failed, hr=%lX
COpenVDisk::Compact, CoRevertToSelf failed: %lX
COpenVDisk::COpenVDisk
COpenVDisk::CreateInstance
COpenVDisk::CreateInstance, 1, hr=%lX
COpenVDisk::CreateInstance, 2, hr=%lX
COpenVDisk::Detach
COpenVDisk::Detach, 1, hr=%lX
COpenVDisk::Detach, 2, hr=%lX
COpenVDisk::Detach, 3, hr=%lX
COpenVDisk::Detach, CoImpersonateClient failed, hr=%lX
COpenVDisk::Detach, CoRevertToSelf failed: %lX
COpenVDisk::DetachAndDelete
COpenVDisk::DetachAndDelete, 1, hr=%lX
COpenVDisk::DetachAndDelete, 2, hr=%lX
COpenVDisk::DetachAndDelete, CoImpersonateClient failed, hr=%lX
COpenVDisk::DetachAndDelete, CoRevertToSelf failed: %lX
COpenVDisk::Expand
COpenVDisk::Expand, 1, hr=%lX
COpenVDisk::Expand, 2, hr=%lX
COpenVDisk::Expand, 3, hr=%lX
COpenVDisk::Expand, 4, hr=%lX
COpenVDisk::Expand, 5, hr=%lX
COpenVDisk::Expand, 6, hr=%lX
COpenVDisk::Expand, CoImpersonateClient failed, hr=%lX
COpenVDisk::Expand, CoRevertToSelf failed: %lX
COpenVDisk::InternalAddRef, path=%s, Ref=%ld
COpenVDisk::InternalRelease, path=%s, Ref=%ld
COpenVDisk::Merge
COpenVDisk::Merge, 1, hr=%lX
COpenVDisk::Merge, 2, hr=%lX
COpenVDisk::Merge, 3, hr=%lX
COpenVDisk::Merge, 4, hr=%lX
COpenVDisk::Merge, 5, hr=%lX
COpenVDisk::Merge, CoImpersonateClient failed, hr=%lX
COpenVDisk::Merge, CoRevertToSelf failed: %lX
COpenVDisk::WaitForDiskArrivedPnpEvent, 1, hr=%lX
CoRevertToSelf
CoTaskMemAlloc
CoTaskMemFree
CPrvEnumObject::~CPrvEnumObject()
CPrvEnumObject::CPrvEnumObject()
CreateEventW
CreateThread
CreateVirtualDisk
CurVer = s 'VdsVd.VdsVdProvider.2'
CVdAsyncObject::~CVdAsyncObject
CVdAsyncObject::Cancel
CVdAsyncObject::CVdAsyncObject
CVdAsyncObject::FinalConstruct
CVdAsyncObject::FinalConstruct, 1, %lX
CVdAsyncObject::FinalConstruct, 2, %lX
CVdAsyncObject::QueryStatus
CVdAsyncObject::SaveContext
CVdAsyncObject::SpawnWaitThread
CVdAsyncObject::SpawnWaitThread, 1: CreateThread failed: %X
CVdAsyncObject::Wait
CVdAsyncObject::Wait, 1, %lX
CVdAsyncObject::Wait, 2, %lX
CVdDiskCollection::~CVdDiskCollection()
CVdDiskCollection::Add()
CVdDiskCollection::AddVDiskToMap, 2
CVdDiskCollection::Delete
CVdDiskCollection::Dispose()
CVdDiskCollection::Get
CVdDiskCollection::GetByDevicePath
CVdDiskCollection::GetByFilename
CVdDiskCollection::GetById
CVdDiskCollection::GetByInstance
CVdDiskCollection::GetEnumeration
CVdDiskCollection::GetEnumeration, 1
CVdDiskCollection::GetEnumeration, 2, hr=%lX
CVdDiskCollection::GetEnumeration, 3, hr=%lX
CVDisk::~CVDisk
CVdisk::CreateInstance
CVdisk::CreateInstance, 1, hr=%lX
CVdisk::CreateInstance, 2, hr=%lX
CVdisk::CreateInstance, 3, hr=%lX
CVdisk::CreateInstance, 4, hr=%lX
CVdisk::CreateInstance, 5, hr=%lX
CVDisk::CVDisk
CVDisk::GetDeviceName
CVDisk::GetDeviceName, 1, hr=%lX
CVDisk::GetDiskFlags
CVDisk::GetDiskFlags, 1, result=%lX
CVDisk::GetDiskFlags, 2, hr=%lX
CVDisk::GetDiskFlags, 3, hr=%lX
CVDisk::GetDiskFlags, 4, hr=%lX
CVDisk::GetProperties
CVDisk::GetProperties, 1, hr=%lX
CVDisk::GetProperties, 2, hr=%lX
CVDisk::GetProperties, 3, hr=%lX
CVDisk::GetProperties, 4, hr=%lX
CVDisk::GetProperties, 5, hr=%lX
CVDisk::GetProperties, 6, hr=%lX
CVDisk::GetProperties, 7, hr=%lX
CVDisk::GetProperties, 8, hr=%lX
CVDisk::GetProperties, CoImpersonateClient failed, hr=%lX
CVDisk::GetProperties, CoRevertToSelf failed: %lX
CVDisk::InternalAddRef, path=%s, Ref=%ld
CVDisk::InternalRelease, path=%s, Ref=%ld
CVDisk::Open
CVDisk::Open, 1, hr=%lX
CVDisk::Open, 2, hr=%lX
CVDisk::Open, 3, hr=%lX
CVDisk::Open, CoImpersonateClient failed, hr=%lX
CVDisk::Open, CoRevertToSelf failed: %lX
CVDisk::SetDeviceName
CVDisk::SetDeviceName, 1, hr=%lX
CVDisk::ValidateOperation
CVDisk::ValidateOperation, 1, result=%lX
CVDisk::Wait
CVDisk::Wait, 1, hr=%lX
CVDisk::Wait, 2, WaitResult=%lX
CVdProvider::~CVdProvider
CVdProvider::AddOrFindVDisk
CVdProvider::AddOrFindVDisk, 1, hr=%lX
CVdProvider::AddOrFindVDisk, 2, hr=%lX
CVdProvider::AddOrFindVDisk, 3, hr=%lX
CVdProvider::AddOrFindVDisk, 4, hr=%lX
CVdProvider::AddOrUpdateDiskOnPnP
CVdProvider::AddOrUpdateDiskOnPnP, 1, hr=%lX
CVdProvider::AddOrUpdateDiskOnPnP, 2, hr=%lX
CVdProvider::AddOrUpdateDiskOnPnP, 3, hr=%lX
CVdProvider::AddOrUpdateDiskOnPnP, 4, hr=%lX
CVdProvider::AddOrUpdateDiskOnPnP, 5, hr=%lX
CVdProvider::AddVDisk
CVdProvider::AddVDisk, 1, hr=%lX
CVdProvider::AddVDisk, 2, hr=%lX
CVdProvider::AddVDisk, 3, hr=%lX
CVdProvider::AddVDisk, CoImpersonateClient failed, hr=%lX
CVdProvider::AddVDisk, CoRevertToSelf failed: %lX
CVdProvider::CreateDisk, 4, hr=%lX
CVdProvider::CreateVDisk
CVdProvider::CreateVDisk, 1, hr=%lX
CVdProvider::CreateVDisk, 2, SD=%s, hr=%lX
CVdProvider::CreateVDisk, 3, hr=%lX
CVdProvider::CreateVDisk, 5, hr=%lX
CVdProvider::CreateVDisk, 6, hr=%lX
CVdProvider::CreateVDisk, 7, hr=%lX
CVdProvider::CreateVDisk, CoImpersonateClient failed, hr=%lX
CVdProvider::CreateVDisk, CoRevertToSelf failed: %lX
CVdProvider::CVdProvider
CVdProvider::DiskAssigned
CVdProvider::DiskAssigned, 1, device_path=%S
CVdProvider::DiskRemoved
CVdProvider::DiskRemoved, 1, device_path=%S, unexpected state=%d
CVdProvider::GetDiskFromVDisk
CVdProvider::GetDiskId
CVdProvider::GetDiskInformation
CVdProvider::GetDiskInformation, 1, result=%lX
CVdProvider::GetDiskInformation, 2, hr=%lX
CVdProvider::GetDiskInformation, 3, hr=%lX
CVdProvider::GetDiskInformation, 4, hr=%lX
CVdProvider::GetObject
CVdProvider::GetObject, 1,hr=%lX, ppObject=%p, type=%ld
CVdProvider::GetObject, 2,hr=%lX
CVdProvider::GetProperties
CVdProvider::GetProperties, 1
CVdProvider::GetProperties, 3, hr=%lX
CVdProvider::GetProperties, 4, hr=%lX
CVdProvider::GetVDiskFromDisk
CVdProvider::InternalAddRef, Ref=%ld
CVdProvider::InternalRelease, Ref=%ld
CVdProvider::m_VerifyVDiskPath
CVdProvider::m_VerifyVDiskPath, 1, hr=%lX
CVdProvider::m_VerifyVDiskPath, 2, hr=%lX
CVdProvider::m_VerifyVDiskPath, 3, hr=%lX
CVdProvider::m_VerifyVDiskPath, 4, hr=%lX
CVdProvider::m_VerifyVDiskPath, 5, hr=%lX
CVdProvider::OnLoad
CVdProvider::OnUnload
CVdProvider::QueryIfOwnDisk
CVdProvider::QueryIfOwnDisk, 1, hr=%lX
CVdProvider::QueryIfOwnDisk, 2, hr=%lX
CVdProvider::QueryVDisks
CVdProvider::QueryVDisks, 1, hr=%lX
CVdProvider::Refresh
CVdProvider::RemoveDisk
CVdProvider::RemoveDisk, 1, hr=%lX
CVdThreadCollection::~CVdThreadCollection()
CVdThreadCollection::Add
CVdThreadCollection::Add()
CVdThreadCollection::Delete
CVdThreadCollection::Dispose()
D$(E3
D$0!t$(
D$0E3
D$HE3
D$hE3
D$XE3
D:P(A;;GA;;;WD)(A;;GA;;;AC)
DeleteCriticalSection
DeleteFileW
DetachVirtualDisk
DeviceIoControl
DisableThreadLibraryCalls
DllCanUnloadNow
DllGetClassObject
DllGetClassObject, 1, hr=%lX
DllMain
DllMain, 1, hr=%lX
DllMain, 2, hr=%lX
DllRegisterServer
DllRegisterServer failed 1, hr=%lX
DllRegisterServer failed 2, hr=%lX
DllUnregisterServer
DllUnRegisterServer failed 1, hr=%lX
E(=csm
E@H!}@H
E8=csm
EgH!]gH
Eh=csm
EH=csm
EnterCriticalSection
en-US
Ex=csm
EX=csm
EXIT CVdAsyncObject::QueryStatus, *pHrResult=%lX,  *pulPercentageCompleted=%l
EXIT CVdAsyncObject::QueryStatus, 1, hr=%lX
EXIT CVdAsyncObject::Wait, hr=%lX
EXIT CVdProvider::GetProperties, hr=%lX
EXIT Virtual Disk DllRegisterServer, hr=%lX
EXIT Virtual Disk DllUnRegisterServer, hr=%lX
ExpandVirtualDisk
FileDescription
FileVersion
ForceRemove {80CB8C11-0E10-45F4-A1BA-EAD3838D7034} = s 'VdsVdProvider Class'
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetFullPathNameW
GetLastError
GetProcessHeap
GetStorageDependencyInformation
GetSystemTimeAsFileTime
GetTickCount
GetVhdFileName, 5, hr=%lX
GetVirtualDiskInformation
GetVirtualDiskOperationProgress
GPH9_Hu/
H!E@L
H!E8L
H!t$8
H!t$XH
H;D$(u
H@8y(t
H9|$Pu
HcCDH
HkD$8d3
I!<$H
ImpersonateSelf
InitializeCriticalSection
InprocServer32 = s '%MODULE%'
InternalName
jOHi'
KERNEL32.dll
L$ UVWATAUAVAWH
L$`H3
L$hH3
L$HH3
L$pH3
L$XH3
LcA<E3
LeaveCriticalSection
LegalCopyright
LocalFree
LookupPrivilegeValueW
malloc
MapKeyFreeRoutine
MapValueFreeRoutine
memset
MergeVirtualDisk
Microsoft
Microsoft Corporation
Microsoft Virtual Disk Service Virtual Disk Provider
msvcrt.dll
NoRemove CLSID
ntdll.dll
OpenDevice
OpenThreadToken
OpenVirtualDisk
OriginalFilename
p AWH
PA^_^
pd.]8
ProductName
ProductVersion
ProgID = s 'VdsVd.VdsVdProvider.2'
QueryPerformanceCounter
RegisterProvider
REGISTRY
ResetEvent
RevertToSelf
RSDSi
RtlAcquireResourceExclusive
RtlAcquireResourceShared
RtlCaptureContext
RtlConvertExclusiveToShared
RtlConvertSharedToExclusive
RtlDeleteResource
RtlInitializeResource
RtlLookupFunctionEntry
RtlReleaseResource
RtlVirtualUnwind
SeManageVolumePrivilege
SetEvent
SetUnhandledExceptionFilter
Sleep
StringFileInfo
t$ UWAUAVAWH
t$(E3
t)f9)t$H
t0fD9!t*H
t2fD9 t,H
TerminateProcess
Translation
u HcA<H
UnhandledExceptionFilter
UnregisterProvider
UVWATAUAVAWH
UVWATAVH
val ThreadingModel = s 'Free'
VarFileInfo
VDiskMapKeyFreeRoutine
VDiskMapValueFreeRoutine
VDS Virtual Disk Provider, Version 1.0
VdsAllocateString
VdsHeapAlloc
VdsHeapFree
VdsTraceEx
VdsTraceExW
vdsutil.dll
VDSVD.DLL
vdsvd.DLL
VDSVD.DLL
vdsvd.pdb
VdsVd.VdsVdProvider = s 'VdsVdProvider Class'
VdsVd.VdsVdProvider.2 = s 'VdsVdProvider Class'
VdsvdAcquireManageVolume entered.
VdsvdAcquireManageVolume: AdjustedTokenPrivileges returned 0x%x.
VdsvdAcquireManageVolume: OpenThreadToken returned 0x%x.
VdsvdAcquireManageVolume: Returning 0x%x, %u, %u
VdsvdReleaseManageVolume: AdjustTokenPrivileges returned 0x%x
VdsvdReleaseManageVolume: Closing handle 0x%x
VdsvdReleaseManageVolume: Entering with %u, %u
VersionIndependentProgID = s 'VdsVd.VdsVdProvider'
VirtDisk.dll
VS_VERSION_INFO
VWATAVAWH
VWAVH
WaitForSingleObject
Waiting for WaitThreadRoutine completion
WATAUAVAWH
WAVAWH
x ATAVAWH
x AUAVAWH
x AVH
XA_A^A]A\_^][
