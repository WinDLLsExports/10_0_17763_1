 A_A^A\
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!This program cannot be run in DOS mode.
%hs() failed with hr=%#x
%hs() FindFirstFile say that '%s' is %Id bytes.
%hs(): Not an auto-recovery snapshot. Doing nothing.
%hs(): The input database name was not set!
%hs: Failed allocating EseShadowInformation.
%hs: No writer found.
%ls\%lstmp.%ls
%s\%s*.%s
)D$PH
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.edata
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata
@.data
@.reloc
@.rsrc
@8-%m
@8=[b
@8=]\
@8-Dm
@SUVH
@SUWAVAWH
@SVATAUAWH
@USVWATAUAVAWH
\$ E3
\$ UH
__C_specific_handler
__super::Initialize( EseRecoveryWriterId, EseRecoveryWriterName, VSS_UT_USERDATA, VSS_ST_OTHER )
_amsg_exit
_callnewh
_initterm
_purecall
_vsnwprintf
_wcsicmp
_XcptFilter
`.rdata
|$ AVH
|$(E3
040904B0
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
A_A]A\^[
A_A^_][
A_A^A]A\_^[]
Adding '%s' to the file group
Adding directory '%s' (file=*) to the file group
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
ATAVAWH
CloseHandle
CoInitializeEx
CompanyName
CoUninitialize
CreateFileW
CreateVssBackupComponents( &pvbc )
CreateVssBackupComponentsInternal
CreateWriter
D$HE3
D$PfE
D;|$@
D;t$@r
D9t$@
D9t$@vc
D9t$P
Device name is %s.
DisableThreadLibraryCalls
DllMain
ds\esent\src\noncore\eseshadow\eseshadow.cxx
ds\esent\src\noncore\eseshadow\esewriter.cxx
E(=csm
E8=csm
Eh=csm
EH=csm
Entering %hs (and returning true).
Entering %hs( %s ).
Entering %hs.
ESENT.dll
EseRecoveryWriter
EseRecoveryWriter::CreateWriter
EseRecoveryWriter::DestroyWriter
EseRecoveryWriter::GetSingleton()->Initialize()
EseRecoveryWriter::Initialize
EseRecoveryWriter::OnAbort
EseRecoveryWriter::OnBackupComplete
EseRecoveryWriter::OnBackupShutdown
EseRecoveryWriter::OnFreeze
EseRecoveryWriter::OnIdentify
EseRecoveryWriter::OnPostRestore
EseRecoveryWriter::OnPostSnapshot
EseRecoveryWriter::OnPrepareBackup
EseRecoveryWriter::OnPrepareSnapshot
EseRecoveryWriter::OnPreRestore
EseRecoveryWriter::OnThaw
EseRecoveryWriter::RecoverEseDatabase
EseRecoveryWriter::Uninitialize
eseshadow.dll
EseShadowCreateShadow
EseShadowCreateShadow ran out of memory!
EseShadowCreateSimpleShadow
EseShadowICreateShadow
EseShadowICreateShadow was successful!
EseShadowICreateShadow( pvbc, szArbitraryFile, NULL, NULL, &pesi->m_vssIdSnapshotSet, &pesi->m_vssIdDbSnapshot, &pesi->m_vssIdLogSnapshot, &pesi->m_vssIdSystemSnapshot )
EseShadowICreateShadow( pvbc, szDatabaseFile, szLogDirectory, szSystemDirectory, &pesi->m_vssIdSnapshotSet, &pesi->m_vssIdDbSnapshot, &pesi->m_vssIdLogSnapshot, &pesi->m_vssIdSystemSnapshot )
EseShadowIMountShadow
EseShadowIMountShadow( pvbc, pesi->m_vssIdDbSnapshot, pesi->m_databaseFile, szOutDatabasePath, cchOutDatabasePath )
EseShadowIMountShadow( pvbc, pesi->m_vssIdLogSnapshot, pesi->m_logFilePath, szOutLogPath, cchOutLogPath )
EseShadowIMountShadow( pvbc, pesi->m_vssIdSystemSnapshot, pesi->m_systemFilePath, szOutSystemPath, cchOutSystemPath)
EseShadowInit
EseShadowMountShadow
EseShadowMountSimpleShadow
EseShadowPurgeShadow
EseShadowPurgeShadow() called with a NULL context!
EseShadowTerm
esevss
esevss.pdb
Ex=csm
EX=csm
Failed GetFinalPathNameByHandleW( %s ): returned %d.
Failed GetVolumePathNameW( %s ): returned %d.
Failed to create temporary log file %s: Error %d.
Failed to open %s: Error %d.
Failed! %hs returned err = %#x, [%hs %hs:%d]
Failed! %hs returned hr = %#x, [%hs %hs:%d]
fD98t
FileDescription
FilesComponent
FileVersion
FindClose
FindFirstFileW
Found a suitable writer to invoke: %s
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetFinalPathNameByHandleW
GetLastError
GetLogFileSizeAndExtensionFromDirectoryAndBaseName
GetSnapshotDeviceName( szVolume, &szDeviceName )
GetSystemTimeAsFileTime
GetTempFileName() failed with 0x%x
GetTempFileNameW
GetTempPath() failed with 0x%x
GetTempPathW
GetTickCount
GetVolumePathNameW
hrStatus
InternalName
JetGetDatabaseFileInfoW
JetGetDatabaseFileInfoW( szNewDbName, &cbPage, sizeof( cbPage ), JET_DbInfoPageSize )
JetInit3W
JetInit3W( &instance, &rstInfo, grbit )
JetSetSystemParameterW
JetTerm2
L$ SVH
L$pfD
L$pH3
LcA<E3
Leaving %hs (returning %#x).
Leaving %hs (returning %d).
Leaving %hs (returning hr=%#x).
Leaving %hs.
LegalCopyright
Looking at writer GUID %s.
malloc
memcpy
memset
Microsoft
Microsoft Corporation
Microsoft(R) ESENT shadow utilities
msvcrt.dll
Need to provide a database name!
OnPostSnapshot() begin.
OriginalFilename
pAsync->Wait()
pComponent->GetComponentInfo( &pInfo )
pMetadata->AddComponent( VSS_CT_FILEGROUP, NULL, szComponent, L"recovered_database", NULL, 0, false, true, true, true, VSS_CF_BACKUP_RECOVERY | VSS_CF_APP_ROLLBACK_RECOVERY )
pMetadata->AddFilesToFileGroup( NULL, szComponent, g_eseRecoveryWriterConfig.m_szDatabasePath, L"*", false, NULL )
pMetadata->AddFilesToFileGroup( NULL, szComponent, g_eseRecoveryWriterConfig.m_szLogDirectory, L"*", false, NULL )
pMetadata->AddFilesToFileGroup( NULL, szComponent, g_eseRecoveryWriterConfig.m_szSystemDirectory, L"*", false, NULL )
pMetadata->GetComponent( iComponent, &pComponent )
pMetadata->GetFileCounts( &cIncludeFiles, &cExcludeFiles, &cComponents )
pMetadata->GetIdentity( &idInstanceT, &idWriter, &bstrWriterName, &vssUsageType, &vssSourceType )
pMetadata->SetBackupSchema( dwBackupSchema )
pMetadata->SetRestoreMethod( VSS_RME_RESTORE_IF_CAN_REPLACE, NULL, NULL, VSS_WRE_ALWAYS, false )
ProductName
ProductVersion
Pt+@8=
pvbc->AddComponent( idInstance, idWriter, pInfo->type, pInfo->bstrLogicalPath, pInfo->bstrComponentName )
pvbc->AddToSnapshotSet( szLogDrive, GUID_NULL, pvssIdLogSnapshot )
pvbc->AddToSnapshotSet( szSystemDrive, GUID_NULL, pvssIdSystemSnapshot )
pvbc->AddToSnapshotSet(szDbDrive, GUID_NULL, pvssIdDbSnapshot )
pvbc->BackupComplete( &pAsync )
pvbc->DisableWriterClasses( &guidSystemWriter, 1 )
pvbc->DoSnapshotSet( &pAsync )
pvbc->GatherWriterMetadata( &pAsync )
pvbc->GatherWriterStatus( &pAsync )
pvbc->GetSnapshotProperties( vssIdVolume, &prop )
pvbc->GetWriterMetadata(iWriter, &idInstance, &pMetadata )
pvbc->GetWriterMetadataCount(&cWriters)
pvbc->GetWriterStatus( iWriter, &idInstance, &idWriter, &bstrWriterName, &vssWriterState, &hrStatus )
pvbc->GetWriterStatusCount(&cWriters)
pvbc->InitializeForBackup()
pvbc->PrepareForBackup( &pAsync )
pvbc->SetBackupState( true, false, VSS_BT_FULL, true )
pvbc->SetContext( VSS_CTX_BACKUP | VSS_VOLSNAP_ATTR_ROLLBACK_RECOVERY )
pvbc->StartSnapshotSet( pvssIdSnapshotSet )
QueryPerformanceCounter
recovered_database
RecoverJetDB successfully replayed the logs.
RPCRT4.dll
RpcStringFreeW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
SetUnhandledExceptionFilter
Sleep
Snapshot database file: %s
Snapshot log directory: %s
Snapshot system directory: %s
StringCchCatW( szOutPath, cchOutPath, fullPath )
StringCchCopyW( szOutPath, cchOutPath, pProp->m_pwszSnapshotDeviceObject )
StringCchPrintfW( szOutPaths[ i ], _countof( szOutPaths[ i ]), L"%s%s", szDeviceName, szRelativePathFromRoot )
StringCchPrintfW( szStr, cch, L"{%s}", strGuid )
StringFileInfo
Subscribe()
t$ E3
T$pH+
t{@8-
TerminateProcess
Translation
u HcA<H
ud@8=0\
UnhandledExceptionFilter
Unsubscribe()
UuidToStringW
UuidToStringW( &vssId, &strGuid )
UWAUI
VarFileInfo
VS_VERSION_INFO
VSS Database dir ID = %s
VSS Log dir ID = %s
VSS Snapshot ID = %s
VSS System dir ID = %s
VSSAPI.DLL
VssFreeSnapshotPropertiesInternal
VssIdToString
VssIdToString( *pvssIdSnapshotSet, szID, ARRAYSIZE(szID ) )
VssIdToString( idWriter, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdDbSnapshot, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdLogSnapshot, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdSnapshotSet, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdSystemSnapshot, szID, _countof( szID ) )
VssIdToString( vssIdVolume, szID, ARRAYSIZE( szID ) )
VWAVH
Warning: g_eseRecoveryWriterConfig->m_szDatabaseFileFullPath is NULL.
wcscpy_s
wcsrchr
wprintf
xERich
y!@8-
y!@8-(l
y!@8-nm
y!D85
y!D85)
y!D85@
y!D85c
y!D85f
y!D85N
y!D85T
y)D85
y;D8=
y_@8o
y+D85
y=@8-r
yA@8-
yD@8-
yD@8-2
yDD8=
yDD8=d
yE@8=
yH@8=
yZ@8-lk
