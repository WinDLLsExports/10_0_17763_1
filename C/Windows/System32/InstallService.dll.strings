     
      <Arguments>%windir%\\system32\\InstallServiceTasks.dll,ForceAppInUseRestart</Arguments>
      <Command>%windir%\\system32\\rundll32.exe</Command>
      <RunLevel>HighestAvailable</RunLevel>
      <UserId>S-1-5-18</UserId>
    </Exec>
    </Principal>
    <AllowHardTerminate>true</AllowHardTerminate>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <DisallowStartOnRemoteAppSession>true</DisallowStartOnRemoteAppSession>
    <Enabled>true</Enabled>
    <Exec>
    <ExecutionTimeLimit>PT1H</ExecutionTimeLimit>
    <Hidden>false</Hidden>
    <MultipleInstancesPolicy>Queue</MultipleInstancesPolicy>
    <Principal id="LocalSystem">
    <Priority>7</Priority>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FA;;;BA)(A;;GRGX;;;SU)</SecurityDescriptor>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <URI>\\Microsoft\\Windows\\InstallService\\SmartRetryByPolicy</URI>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <Version>1.0</Version>
    <WakeToRun>false</WakeToRun>
  </Actions>
  </Principals>
  </RegistrationInfo>
  </Settings>
  </Triggers>
  <Actions Context="LocalSystem">
  <Principals>
  <RegistrationInfo>
  <Settings>
  <Triggers>
 A^_^
 A^_^[]
 A^A\_
 A_A\_
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]
 A_A^A]A\_
 A_A^A]A\_^]
 AND UpdateID='%s'
 H3E H3E
 info
 Microsoft Corporation. All rights reserved.
 Operating System
 WARN
 Windows
!"Unsupported Http_Verb - please add"
!(H!l$ I
!_hEvent
!_isTaskDefinitionDirty
!_progressCallback
!_resumeCallback
!_spAgentInstallControl
!_suspendCallback
!|$pL
!IsInteractive()
!M;` s]H
!swapWith.active
!This program cannot be run in DOS mode.
"z}!M
#f9.H
$0< u;3
$H!t$x
$I9A 
%d.%02d
%d.%d.%d.%d
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%d)\%hs!%p: 
%s = %s, catalogId = %s
%s = %s, catalogId = %s, flightId  = %s, CV = %hs
%s is already pinned to the Start screen.
%s is already pinned to the taskbar.
%s not found, CV = %hs
%s.%s.%s
%s: %s
%s: (fallback) %s
%s: ALPC message id=%x required continuation unexpectedly.Cancelling it.
%s: Error receiving message from PO %x
%s: Unable to cancel ALPC message id=%x
%s: Unexpected ALPC message type - %x
%s:%s:%s
%s\%s.dat
%s_%d_%s_%s
%ssa.%s.dat
%Title%
%ws: %ws (%hs) [%hs] %ws
%ws: %ws (0x%08x) (%hs) [%hs] %ws
%Y-%m-%dT%H:%M:%S%z
&catalogId=%s
&moId=%s&oemId=%s&scmId=%s
(((HRESULT)(hr)) >= 0) && "We should always take a reference and never allocate here"
(((HRESULT)(s_spGlobalQueue->GetInstance()->_spPendingQueue->get_Size(&count))) >= 0) && (count == 0)
(_^][
(_downloadState == InstallState_Downloading) || (_downloadState >= InstallState_LowBattery && _downloadState <= InstallState_Error)
(_installType == InstallType_Install) || (_installType == InstallType_Restore)
(A_A^A]A\_^][
(abortedItems + activeItems) == activeItemCount
(AgileVector<IFulfillmentDataInfo *>::Make(&fulfillmentData))
(caller: %p) 
(D$ H
(D$`f
(D$0H
(D$pf
(L$@f
(streamingType != WindowsUpdate::Internal::StreamingType_Undetermined) && (_cbAutoDownloadSize == 0) && ((_streamingType == WindowsUpdate::Internal::StreamingType_Undetermined) || (_streamingType == streamingType))
(t$`H
(t$0H
(t$PH
(t$PI
)D$ A
)D$@f
)D$@H!4
)D$0f
)D$P3
)D$PH
)H!>eH
)L$@H
)L$`H
)L$0A
)Rich
)t$0L
*9internal\sdk\inc\wil\wrlevent.h
*cv != '\0'
*pszAdditionalQueryParams == L'&'
,en,neutral
.?AU?$default_delete@VTraceLoggingCorrelationVector@@@std@@
.?AUhresult_access_denied@winrt@@
.?AUhresult_canceled@winrt@@
.?AUhresult_changed_state@winrt@@
.?AUhresult_class_not_available@winrt@@
.?AUhresult_error@winrt@@
.?AUhresult_illegal_delegate_assignment@winrt@@
.?AUhresult_illegal_method_call@winrt@@
.?AUhresult_illegal_state_change@winrt@@
.?AUhresult_invalid_argument@winrt@@
.?AUhresult_no_interface@winrt@@
.?AUhresult_not_implemented@winrt@@
.?AUhresult_out_of_bounds@winrt@@
.?AUhresult_wrong_thread@winrt@@
.?AUInvalidContentId@ContentDelivery@@
.?AUInvalidCorrelationVector@CorrelationVectorUtils@@
.?AUScanException@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_425c0821128b1232d8dc09d18f55f556>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_96d57a7351c1a4e831c610d07804f939>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_da3ce4d512d2f76d0d578c2741ef5e4e>@@@std@@
.?AV_Interruption_exception@details@Concurrency@@
.?AV_System_error@std@@
.?AV<lambda_146679520a4ce7508888ce69350fd5fe>@@
.?AV<lambda_2627ef6526aa92c24740e9c36b144e3e>@@
.?AV<lambda_4dfb5f654f560a14fe3091eb662807bf>@@
.?AV<lambda_5f344b2d9c1d965595f969521420773f>@@
.?AV<lambda_713ee8bbd6b08550d59c52695cab5ce3>@@
.?AV<lambda_763529b0c7473cbc215a52d189ac9b18>@@
.?AV<lambda_ab827f4fc041e600dec2d5eb6c9f29bd>@@
.?AV<lambda_b18e1e801b747cc74903bd5afc99635c>@@
.?AV<lambda_d9573b3e127481152bf494434de81d67>@@
.?AV<lambda_e0b623a606acfd10554dbddbb0c1a7da>@@
.?AV<lambda_e93205161c7fec2c27acd433e3604124>@@
.?AV<lambda_f25c37099038263181b5186a3fa41b37>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_cast@std@@
.?AVCAtlException@ATL@@
.?AVexception@std@@
.?AVinvalid_operation@Concurrency@@
.?AVlogic_error@std@@
.?AVResultException@wil@@
.?AVruntime_error@std@@
.?AVsystem_error@std@@
.?AVtask_canceled@Concurrency@@
.?AVtype_info@@
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.L7Gq&
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata
.xdata$x
//ServiceEnvironment/Authentication
//ServiceEnvironment/InstallService
/toast
/toast/visual/binding
::UpdateFrameworks(callerContext, spFrameworkUpdates.Get(), szCV)
::WindowsDuplicateString(storeClientName, &storeClientNameCopy)
::WindowsDuplicateString(storeClientPublisher, &storeClientPublisherCopy)
:@8y]tCH
:@8y=tCH
:fH%wu7
:u{6tu!
:w*tD
:W3oqu(
; charset=utf-8
;]@}.
;]0}3
;|$`r
;|$PD
;} }<
;}@}#
;}0s*
;C(t0
;t$hr
;t$psrH
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$basic_iostream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@@Z
??0?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0_Lockit@std@@QEAA@H@Z
??0task_continuation_context@Concurrency@@AEAA@XZ
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_iostream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_istream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1_Lockit@std@@QEAA@XZ
??Bid@locale@std@@QEAA_KXZ
?__ExceptionPtrAssign@@YAXPEAXPEBX@Z
?__ExceptionPtrCopy@@YAXPEAXPEBX@Z
?__ExceptionPtrCreate@@YAXPEAX@Z
?__ExceptionPtrCurrentException@@YAXPEAX@Z
?__ExceptionPtrDestroy@@YAXPEAX@Z
?__ExceptionPtrRethrow@@YAXPEBX@Z
?__ExceptionPtrToBool@@YA_NPEBX@Z
?_BADOFF@std@@3_JB
?_CallInContext@_ContextCallback@details@Concurrency@@QEBAXV?$function@$$A6AXXZ@std@@_N@Z
?_Capture@_ContextCallback@details@Concurrency@@AEAAXXZ
?_Execute_once@std@@YAHAEAUonce_flag@1@P6AHPEAX1PEAPEAX@Z1@Z
?_Getcat@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA_N_N@Z
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_LogCancelTask@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogScheduleTask@_TaskEventLogger@details@Concurrency@@QEAAX_N@Z
?_LogTaskCompleted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogTaskExecutionCompleted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogWorkItemCompleted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogWorkItemStarted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAXXZ
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
?_Release_chore@details@Concurrency@@YAXPEAU_Threadpool_chore@12@@Z
?_ReportUnobservedException@details@Concurrency@@YAXXZ
?_Reset@_ContextCallback@details@Concurrency@@AEAAXXZ
?_Rethrow_future_exception@std@@YAXVexception_ptr@1@@Z
?_Schedule_chore@details@Concurrency@@YAHPEAU_Threadpool_chore@12@@Z
?_Syserror_map@std@@YAPEBDH@Z
?_Throw_C_error@std@@YAXH@Z
?_Throw_Cpp_error@std@@YAXH@Z
?_Throw_future_error@std@@YAXAEBVerror_code@1@@Z
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Xbad_function_call@std@@YAXXZ
?_XGetLastError@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV12@XZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?get@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@QEBA?AV?$istreambuf_iterator@GU?$char_traits@G@std@@@2@V32@0AEAVios_base@2@AEAHPEAUtm@@PEBG4@Z
?GetCurrentThreadId@platform@details@Concurrency@@YAJXZ
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
?id@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@2V0locale@2@A
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
?pbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGG@Z
?sputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAA_JPEBG_J@Z
?swap@?$basic_iostream@GU?$char_traits@G@std@@@std@@IEAAXAEAV12@@Z
?swap@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXAEAV12@@Z
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?uncaught_exception@std@@YA_NXZ
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
@.data
@.didat
@.reloc
@8,1u
@8|$P
@8|$Pt]
@8|$St(H
@8|$T
@8|$Ut
@8}ot
@8}wu
@8=aP
@8iMu?3
@8imu?3
@8n@t!H
@8t$@
@8t$`t
@8t$a
@8t$hu
@8t$uL
@A^_^
@A^_^[]
@A^_^][
@A^A\_^]
@A^A]A\_^[]
@A_A]A\_^
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A\_^][
@A_A^A]_^
@A_A^A]A\_
@A_A^A]A\_^[
@A_A^A]A\_^]
@E=K7
@SUVWATAUAVAWH
@SUVWATAVAW
@SUVWATAVAWH
@SUVWATH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SUWH
@SVWATAUAVAWH
@SVWATAVAWH
@SVWAVAWH
@SVWH
@UATAUAVAWH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAVAWH
@USVWATH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
@USWH
@UVWATAUAVAWH
@UVWAVAWH
@UVWH
@UWATAVAWH
@UWAVH
@VATAUAVAWH
@VWATAVAWH
@VWAUAVAWH
@VWAVH
@WAVAWH
[ UVWH
[%hs(%hs)]
[%hs]
[Root]
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAW
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$ WH
\$(E3
\$(H;
\$(H;3t
\$@L9d$hvvI
\$8H;
\$8I;
\$8L!0L
\$p;_
\$pD9g
\$PD9l$X
\$PE3
\$pH!\$XH!]
\$PH;
\$pL;
\$xE3
\$XE3
\$xE3
\CategoryCache
\Microsoft\InstallAgent
\PdcPort
\winstoreauth.cpp
\winstoreauthstatics.cpp
]@H9^8t?H
]@I9^Xt?H
]HD;e
]HH!|$ L
]hH!|$ L
__C_specific_handler
__CxxFrameHandler3
__std_terminate
__std_type_info_compare
__TlgCV__
_Activate()
_AppIdFromUpdate
_Cnd_broadcast
_Cnd_destroy
_Cnd_destroy_in_situ
_Cnd_do_broadcast_at_thread_exit
_Cnd_init
_Cnd_init_in_situ
_Cnd_register_at_thread_exit
_Cnd_signal
_Cnd_unregister_at_thread_exit
_Cnd_wait
_CreateNotificationFromXml
_cRef == 0
_cSuspendRefs != 0
_cSuspendRefs == 0
_CxxThrowException
_DeleteCheckpointByName
_DeleteCheckpointIfRetriesExceeded
_DetermineWUVolumePath
_DisplayNotification(spTNMForUser.Get(), notification.Get())
_DoNormalInstall()
_downloadState >= InstallState_LowBattery && _downloadState <= InstallState_Error
_FillCheckpointDataFromInstallWorkStatus(pStatus, &data)
_FindPackage
_FormatProgressValueForNotification
_GetIsAppAllowedToInstallWithPackageInfoForUserAsync request: packageIdentityName = %s, publisherCertificateName = %s, CV = %hs
_GetLocalDataPath
_GetPackageDetailsFromSinglePackage
_GetPdcActivation()
_hEvent
_initterm
_initterm_e
_Mtx_destroy
_Mtx_destroy_in_situ
_Mtx_init
_Mtx_init_in_situ
_Mtx_lock
_Mtx_unlock
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__localtime64_s
_o__mktime64
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__set_errno
_o__ui64tow_s
_o__wcsicmp
_o__wcstoui64
_o__wtoi
_o__wtoi64
_o_free
_o_malloc
_o_mbstowcs
_o_mbstowcs_s
_o_rand
_o_realloc
_o_srand
_o_strncpy_s
_o_strtol
_o_terminate
_o_toupper
_o_wcscat_s
_o_wcscpy_s
_o_wcsftime
_o_wcstok_s
_o_wcstombs
_o_wcstoul
_OpenCheckpointFile
_OpenCheckpointFile(pszProductId, &pFileData)
_PackagesFromSearchResult
_pAvailability != nullptr
_pPackage != nullptr
_pSku != nullptr
_SetInternalConfigurationFlags
_SetNotificationAction
_SetNotificationTexts
_spDownload->RequestAbort()
_spInstall->RequestAbort()
_spInstallItemMap->First(&spIterator)
_spInstallWork->add_StatusChanged((Microsoft::WRL::Callback< Microsoft::WRL::Implements< Microsoft::WRL::RuntimeClassFlags<Microsoft::WRL::RuntimeClassType::WinRtClassicComMix>, Windows::Foundation::IEventHandler<InstallWorkStatus>, Microsoft::WRL::CloakedIid<IAgileObject>, Microsoft::WRL::FtmBase> >(this, &InstallItem::_OnWorkStatusChanged)).Get(), &_evtInstallWorkStatusChangedEventToken)
_spInstallWork->get_InstallState(&previousState)
_spInstallWork->get_WorkId(workId.GetAddressOf())
_spInstallWork->Resume(false , nullptr , nullptr )
_spNotificationCreator->CreateNotification( spTNMStatics.Get(), pData, !!(dwToastDisplayFlags & FLAG_GROUPED), !!(dwToastDisplayFlags & FLAG_GHOST), cNotificationCount, notification.GetAddressOf())
_spNotificationCreator->CreateNotificationUpdateData(pData, notificationUpdateData.GetAddressOf(), notificationGroup.GetAddressOf(), notificationTag.GetAddressOf())
_streamingType != StreamingType_Undetermined
_streamingType != WindowsUpdate::Internal::StreamingType_Undetermined
_suspendTimer.get() != nullptr
_Thrd_detach
_Thrd_start
_time64
_UninstallPackages()
_UpdateFrameworks
_UpdateFrameworksImpl
_UpdateNotification(spTNMForUser.Get(), notificationUpdateData.Get(), notificationGroup.Get(), notificationTag.Get())
_UpdateNotificationHistory(spTNMForUser, pData, &dwToastDisplayFlags, &cNotificationCount)
_uPercentMin == 0
_WriteBlobToFile
_WriteStringDataToFile
_XmlCreateTextNode
_Xtime_get_ticks
` UAVAWH
`.rdata
`A^_^
`A^_^[]
`A_A\_^]
`A_A^_^]
`A_A^A\_^[]
`A_A^A]A\_^]
{ ATAVAWH
{ AVH
{268761a2-03f3-40df-8a8b-c3db24145b6b}
{8uOH
{d6d5a677-0872-4ab0-9442-bb792fce85c5}
|$ 0t
|$ AVH
|$ E3
|$ UATAVH
|$ UH
|$(A^
|$(E3
|$@H;
|$0u3H
|$pE3
|$PE3
|$xH;
|$xI;
}$;M8
}0H+}(H
~0uUH
~HD+y
</Task>
<Task xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">
<toast><visual><binding><text>%Title%</text><progress value="{progressValue}" status="{progressStatus}" /></binding></visual></toast>
=Q.u'
>&t?L
>{u9H
>PDA2t
0.0.0.0
0123456789abcdef"
040904B0
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A\_^[]
0A_A^A]
0A_A^A]_^
0A_A^A]_^[]
0A_A^A]_^][
0A_A^A]A\]
0A_A^A]A\^
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
2L9h(t,H
6V,IW
7510BCA33E0B8441
7518BCA33E06830D
7538BDA33E06830D
7Lci8A
8\$`t
8\$Pur
8_^[]
8_^][
855E8A7C-ECB4-4CA3-B045-1DFA50104289
89:u!
89:u6
8A^_^[
8A_A^A]A\_^[]
8H!(H
8YMu5
8Ymu5
9\$ H
9\$@t
9\$0tdH
9\$0u
9\$0uzA
9\$hv;
9\$Pt
9\$Xu
9\$XuNH
9]Ou"H
90v&H
9D$ uG3
9jPtV
9M;x s]H
9M4t[A
9MTt[A
9N4t<
9N4tIA
9N4tJ
9NTt<
9NTtIA
9NTtJ
9O$tE
9O4t<
9O4t2
9O4t6
9ODtE
9OTt<
9OTt2
9OTt6
9PDA2
9PDA2L
9PDA2t
9t$PuOH
9t$Pv
9t$xvZH
9u(v'
9uHv'
9WZDNCRFJBMP|9NBLGGH4LS1F
A!4$I
A(;A,H
A(A;@
A(t&H
A,9A(
A\_^][
A]A\_
A^_^[
A^_^[]
A^A\]
A^A\_
A^A\_^]
A^A]A\_]
A_A\_
A_A]A\_^
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\^]
A_A^A\_]
A_A^A\_^
A_A^A\_^[
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A]A\_H
a0H9Yp
A8]8t
A8^VA
A8|$9
A9,$u
A9}0t H
A94$u
A9u0t?
A9u0t-H
A9uPt?
A9uPt-H
A9wPu!L
AADAuthority
AADResource
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%u!
Abort Requested. Not Proceeding with State : %hs
AbortedInstallation
Accept:application/json
AccountProviderId
AcquireSRWLockExclusive
AcquireSRWLockShared
AcquiringLicense
Acquisition;
AcquisitionIdentity: %s
AcquisitionInfo
action
action=GetUrls
action=pinToStart:packageFullNames=
Actions
actions
ActivateInstance(HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &spPackageManager)
activatibleClassId
ActivationCount
ActivationDuration
ActivationHandle
ActivationsUpCounter
activationType
Added fulfillment task to work. TaskId: %d, Data: %s
Adding 'failed due to network' item to Retry list: productId = %s
Adding 'failed due to restart' item to Retry list: productId = %s
Adding 'failed due to user credential issue' (for User SID: %s) item to Retry list: productId = %s
Adding 'non-specifc failure' item to Retry list: productId = %s
Adding 'package in use' failed item to Retry list with ForceAppRestart: productId = %s
Adding 'package in use' failed item to Retry list: productId = %s
AggregatedPackageFullNames
AgileVector<ContentIdInfo *>::Make(&contentIds)
AgileVector<Internal::AppData*>::Make(&spAppVector)
AHA;@
AHH98H
AL9AH
AllContent
AllowAppStoreAutoUpdate
AllowedPlatforms
AllowSharedLocalAppData
AlpcGetMessageAttribute
AlpcInitializeMessageAttribute
AlternateIds
AlwaysPromptBeforePurchase
api/solutions/books/v1
API;%s
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-time-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-base-l1-2-0.dll
api-ms-win-security-capability-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-shcore-taskpool-l1-1-0.dll
api-ms-win-shcore-thread-l1-1-0.dll
api-ms-win-shell-namespace-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
api-ms-win-stateseparation-helpers-l1-1-0.dll
ApiSetQueryApiSetPresence
AppCategoryIDs contains '%s'
AppId = %s, WU Installed Flag = %d, OnlineSearch = %d, Interactive = %d, Scope = %d, Client ID = %s
AppId::IdTypeName
AppId::Type %d = %s, catalogId = %s, bundleId = %s, CV = %hs
AppId::Types are not equal. Expected: %d, Actual: %d
applaunch
Applicability result: productId = %s, isApplicable = %s, CV = %hs
Applicability scan returned unrecognized CategoryId: %s
Application
application/json
ApplicationId
ApplicationManagement
Applications
AppUpdate
appxbundle
AppxCreateSharedLocalFolderForFamilyName
AppxDoesSharedLocalFolderExistForFamilyName
Architectures
arguments
arm64
Array
Assert (%s): %s
Assert (%s): Failed
AssertIdTypesAreEqual
ATAVAWH
Attempting to get Package Details for PFN: %s.
Attempting to register update for User:%s
Attempting to remove %s
AttemptNumber
AUAVAWH
AuthD
Authenticated catalog access failed, trying anonymous
Authority
authority
authorization
AutoDownload
AutomaticContentOnly
AutoResumeQueue
Availabilities
Availability Not allowed on Client %s Version %d
AvailabilityId
availabilityId
AXH98t5L
b;:'y
B]This function cannot be called on a default constructed task
background
BackgroundColor
BackQueueRetry
bad allocation
bad array new length
bad cast
Bearer 
BeginAcquireLicense
BeginDownload
BeginFrameworkUpdate
BeginGetFreeEntitlement
BeginGetInstalledContentIds
BeginInstall
BeginScanForUpdates
BeginSearchUpdatePackages
BeginStageUserData
BeginUpdateMetadataPrepare
BigId
BL9mH
Book Acquisition Workflow
BookId
BookPlugin::Internal::BookInstallWork::BookInstallWork
Books.Book
Books\
BooksInstallWork: Content %ls, InstallType %d
Boolean
broken promise
Build Name
BuildLabEx
BundledSkus
BundleId
BX9A4t
Bx9ATt
C D8U@u
C H9D$psAH
C\$0I
C++/WinRT version:1.0.180821.2
C9fD9?u-
CallbackReason
CallContext:[%hs] 
callerApplicationId
CallerContext::_getCallerToken
CallerContext::Create
CallerContext::ImpersonateUser
CampaignId
campaignId
CampaignId
CampaignServiceUrl
Cancel: productId = %s, CV = %hs
Cancel: productId = %s, CV = %hs, Item not found
Canceled
Canceling update: productId = %s
CancelInstallation
CanFulfillSkuAvailability
Cannot Add fulfillment data to existing work. Creating a separate work item
Cannot add fulfillment task while the work is not waiting for its turn. InstallState: %d
Cannot create StoreAgentInstallitem ProductId = %s. May not recieve progress on this
Cannot find a fulfillable availability for Sku (%s). Will be ignored for install
Cannot find a WUCategoryId
Cannot Find Matching Packages for Sku (%s). Will be ignored for install
Cannot find PackageFamilyName for IUpdate
Cannot find subkey: %ws
Cannot Find the specified sku: %s
Cannot Find Trigger : %ws
Cannot get any user tickets. Using device ticket
Cannot Get Array Item at Index: %Iu
Cannot get the impersonation token for the requested user
Cannot Install %s .Failure Processing FulfillmentData
Cannot preallocate array. Count = %Iu
Cannot update volume path during an ongoing install. InstallState: %d
CapabilityCheck
CatalogId
CategoryId
cb == sizeof(fileData)
cbTotal.Lo64 > 0
CHANh
charset
CheckExclusivity
CheckingOut
Checkpoint file create failed: Id = '%s'
Checkpoint file open failed: Id = '%s'
Checkpoint file write failed writing Blob: productId = %ws
Checkpoint file write failed: Id = '%s'
Checkpoint Item for ProductId = %s already exists. Not re-adding
CheckpointFilename(szCheckpointPath, ARRAYSIZE(szCheckpointPath), pszProductId)
Checkpoints
CheckTokenMembershipEx
CHH98H
Cleaning up download data for %d IUpdate packages
CleanupInstallOperation
CleanupInstallOperation(data->ProductId(), data->PackageFamilyName())
client
ClientAppId
ClientConditions
clientContext
ClientID
ClientId
ClientID
clientid
CloseHandle
CloseState
CloseThreadpool
CloseThreadpoolTimer
CloseThreadpoolWork
CM@E3
CoAddRefServerProcess
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstance(__uuidof(InstallServiceUserBroker), nullptr, CLSCTX_LOCAL_SERVER | CLSCTX_ENABLE_CLOAKING | CLSCTX_ENABLE_AAA, IID_PPV_ARGS(&pinToHelper))
CoCreateInstance(__uuidof(UpdateSession), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&spSession))
CoDecrementMTAUsage
CoFreeUnusedLibraries
CoGetApartmentType
CoGetCallContext
CoGetInterfaceAndReleaseStream
CoGetMalloc
CoImpersonate Client Failed
CoImpersonateClient
CoIncrementMTAUsage
CoInitializeEx
CoMarshalInterface
CompanyName
CompareFileTime
CompareStringOrdinal
Completed
Completed Register operation for %d users
Completed work for item: productId = %s
CompleteGetAuthTickets
CompleteGetSlsURL
CompleteInstallOperation
CompleteInstallOperation(data->ProductId(), data->PackageFamilyName(), hr)
CompleteInstallOperationRequest
CompletePostCampaignData
CompletePurchaseOrder
Conditions
Conflicting Operation Result. Something is not quite right. Extended error code returned success for ORC:%d
Conflicting Operation Result. Something is not quite right. Update results returned success for ORC:%d
ConnectedAccountProvider
ConstrainedImpersonateLoggedOnUser::GenerateImpersonationToken
ConstrainedImpersonateLoggedOnUser::Impersonate
ConstrainedImpersonateLoggedOnUser::Revert
consumers
content
ContentId
ContentId: %s, cached FulfillmentData: %s
ContentId: %s, non-cached FulfillmentData: %s
Content-Type
ConvertSidToStringSidW
ConvertToWide
ConvertWideToUtf8
CoRegisterClassObject
CoReleaseMarshalData
CoReleaseServerProcess
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CorrelationVector
CoSetProxyBlanket
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not find a fulfillable sku. Install not allowed
Could not find Product Document for productId = %s, CV = %hs. This was an M$ search. Retrying with AAD tokens
Couldn't find product title for productId = %s. Not showing any notifications
couldnt get volume name
Couldn't read %s SLAPI policy.
CoUninitialize
CoWaitForMultipleHandles
CpH!CxH!
CreateCheckpointFile
Created task progress for %s with parentbundleId %s
CreateDirectoryExW
CreateDiscInstallObjects(_spFulfillmentDataVec.at(0).Get(), _volumePath.Get(), spSession.GetAddressOf(), &packages)
CreateEventExW
CreateEventW
CreateFileMappingW
CreateFileW
CreateInstallWork
CreateItemsValue(pszProductId, pszSkuId, pszAvailabilityId, pszCampaignId, &spItems)
CreateMutexExW
CreateMutexW
CreateOrderBody(nullptr, callerApplicationId, &spCreateOrderBody)
CreateOrderBody(strOrderId.GetRawBuffer(nullptr), callerApplicationId, &spPurchasedOrderBody)
CreatePurchaseOrder
CreateSemaphoreExW
CreateStreamOnHGlobal
CreateThreadpool
CreateThreadpoolTimer
CreateThreadpoolWork
CreateWellKnownSid
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptGetHashParam
CryptHashData
CryptReleaseContext
Current Ordering (%ld) matches requested ordering for productId = %s
currentIndex < swapWith.currentIndex
CV should be passed in for interactive action
Cx9D$Pu
D!t$8H
D$ D8
D$ E3
d$ E3
D$ E3
D$ fD
D$ H;
D$ I;
D$(E3
D$(H9C
D$@@8imu)
D$@E3
D$@fD
D$@fD9e
D$@H!\$@H
D$@H!L$8H!L$0H
D$@H;
d$\fD
D$`E3
D$`eH
d$`H!|$@3
D$`H;
D$`H+
D$0E3
D$0H!\$0H
D$0H;
D$3A;
D$8E3
D$8H!|$8D
D$8H;
D$DI;
D$h9+u
D$HE3
d$hfD
D$HH;
D$hHc
D$HM;
D$pE3
D$PH;
D$PH=
D$pH9A s
D$PHcH
D$pL;
D$T9p
D$X9F4
D$X9G4
D$xA;
D$xD8k
D$XE3
D$xfA
D$XH;
D:P(A;;FA;;;SY)(A;;FA;;;BA)(A;;GRGX;;;SU)
D;|$xr
D;}(r
D;}Hr
D;~(u
D;~pu
D;A(t2H
D;A,sOA
D;d$P
D;e(r
D;eHr
D;G,s)H
D;gHr
D;GLs)H
D;l$P
D;t$H
D;t$X
D8,0u
D8}8t*H
D8d$0tWH
D8d$a
D8d$pL
D8d$qH
D8d$rH
D8d$x
D8d$Xt
D8d$y
D8ext*H
D8f H
D8l$ 
D8l$`
D8l$Pt
D8l$ptAM
D8l$PtQL
D8l$ut
D8mHt
D8t$0u
D8t$P
D8u@t
D8u0t
D8u8t
D9|$`
D9|$`t`I
D9|$pL
D9}(v+3
D9}8A
D9}8u
D90v(H
D9d$`t
D9d$h
D9d$l
D9d$PtBH
D9e@u
D9e@u.H
D9extRH
D9K(t
D9L$`vHL
D9l$H
D9l$ptBH
D9l$T
D9t$`
D9t$8
D9u0t'H
D9u0uTH
Daily
DailyRetryOverride
data.hrError == ((HRESULT)0L) || data.installState == InstallState_Error
data.installState < InstallState_LowBattery || data.installState > InstallState_WifiRequired
data.installState >= InstallState_Pending && data.installState <= InstallState_RestoringData
data.installType >= InstallType_Install && data.installType <= InstallType_Disc
data.uLastDownloadSuccessPercentComplete <= 100
data.uPercentComplete <= 100
data->StoreInContentIdCache(search->second.GetRawBuffer(nullptr))
DaysOfMonth
DaysOfWeek
DCATEnvironment
DD$`D
dD;t$l
DebugBreak
DecodePointer
DelayLoadFailureHook
DELETE
DeleteCriticalSection
DeleteFileW
Dependencies
dependencies->First(dependenciesIterator.GetAddressOf())
dependenciesIterator->get_Current(uri.GetAddressOf())
dependenciesVector.As(&_dependencies)
dependenciesVector->Append(uriCopy.Get())
dependencyName
dependencyOperationName
dependencyOperationVersion
dependencyType
deploymentOperation != nullptr
DetectAndReportQueueHang
DeviceClass
DisableStoreApps
DisableStoreOriginatedApps
DisableThreadLibraryCalls
DiscDownloadJob::DoDiscDownloadJob
DisplaySkuAvailabilities
DllGetActivationFactory
DllGetClassObject
Doing per app offline scan to get app specific update collection. categoryId = %s, cv = %hs
Download and Install Failed at Stage: %hs
Download and Install Failed at Stage: %hs. Clearing cached updatecollection and trying again
Download Complete. The item was paused.
Download is complete, but no bytes have been downloaded!
Download running, not restarting
Download stopped (paused): PauseReasonCode = %d
Download stopped (transient error)
Downloading
Downloading %s
Downloading Automatic Contents for Streaming Install
Downloading with IsForced = TRUE
DownloadPackages
DownloadProgress::Invoke
DownloadSize
DownloadUrl
Duplicate String detected in List:%s. Ignoring and moving on.
DuplicateTokenEx
DuplicateTokenEx failed
E;gHr
E;o(r
E_BOUNDS
E_FAIL
E_INVALIDARG
E_NOT_SUFFICIENT_BUFFER
E_NOT_VALID_STATE
E_UNEXPECTED
E8|$0L
E9gHvf3
E9V0u
eappx
eappxbundle
eHD9e@tEH
Either AppId or Json object must be passed
Empty CategoryId list. Did not scan. Returning empty packages
Empty or Invalid Correlation Vector cvIn = %s. Using CV from queue cv = %s
EnableDailyRetry
EncodePointer
EndAcquireLicense
EndDownload
EndFrameworkUpdate
EndGetFreeEntitlement
EndGetInstalledContentIds
endIndex <= collectedLen
EndInstall
EndScanForUpdates
EndSearchUpdatePackages
EndStageUserData
EndUpdateMetadataPrepare
EnsureDownloadAsync initialization failed: productId = %s
EnsureDownloadAsync request: productId = %s, CV = %s
EnterCriticalSection
Entitlement result: %s
en-US
EPxrA
Error
ERROR
Error
Error attempting to fetch tickets. catalog access will be anonymous
Error Code
Error Getting a valid PFN from the Update. PFN %s
Error getting recommended retry interval
Error Loading Checkpoint Data Blob for %ws
Error Registering Handler: %ls
Error: %s. Message: %s.
Error: AppId::Types are not equal. Expected: %d, Actual: %d.
ErrorAppIdTypesAreNotEqual
errorCode
ErrorCount
errorLocation
errorMessage
errorMethod
errorName
errorType
Evaluating Bundled Product for: %s -> %s
EventActivityIdControl
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EX;0r
Ex9FTt_A
Ex9GTtkA
Exception
ExcludedContentIdsForUpdate
ExcludedErrorCodeList
Exclusivity check failed for sku %s.
ExclusivityFailed
ExclusivityStatus
EXD;0r
ExperienceIds
ExtendedCampaignId
ExtendedHResult
ext-ms-win-appmodel-deploymentvolumes-l1-1-0
ext-ms-win-appmodel-deploymentvolumes-l1-1-1
ext-ms-win-appmodel-deploymentvolumes-l1-1-1.dll
ext-ms-win-appxdeploymentclient-appxdeployonecore-l1-1-1.dll
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-security-slc-l1-1-0.dll
ext-ms-win-security-srp-l1-1-0
ext-ms-win-security-srp-l1-1-0.dll
ext-ms-win-security-srp-l1-1-1
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
ext-ms-win-shell-shell32-l1-2-0.dll
ext-ms-win-shell-shell32-l1-2-1.dll
ext-ms-win-wer-reporting-l1-1-0.dll
f+S5I
F0D8#ukD8c
f9,Au
f9,Bu
f9,Cu
f9,Gu
f9,Ku
f9,Pu
f9\$`u
f9_2u/f9_0u)
f9|$`t
f9<Au
f9<Bu
f9<Hu
f9<Pu
f94Au
f94Cu
f94Gu
f94Hu
f94Ju
f94Pu
fA;DP
fA9,Qu
fA9<@u
fA9<Bu
fA94@u
fA94Au
fA94Xu
fA9Z*v$A
Fail to schedule the chore!
Failed
Failed to add %s to list of installed ContentIDs
Failed to cache fulfillmentdata. key = %s, data = %s
Failed to complete install operation for %s : 0x%08X
Failed to connect to %ws with proxy %ws
Failed to connect to %ws with proxy config url %ws
Failed to create mutex
Failed to find AppListEntry for %ws
Failed to Find fulfillmentdata in the response json for contentId %s
Failed to find packages to download
Failed to find updates to download or install, assuming this is ok!
Failed to get packages to register for user: %ws
Failed To load Checkpoint for productId = %s
Failed to load resource string %d
Failed to obtain user tickets.
Failed to pause Item productId = %s to reorder it. Ignoring it for reorder request
Failed to Register for UserSid: %ws
Failed to remove %s
Failed Writing To ContentId Cache. ContentId = %s
Failed: storeId = %s, campaignId = %s, useDeviceId = %s, CV = %hs
FailedRetry
FailFast
Failure detected
Failure to Load Initial UpdateCollection. Online Scan will be required
Failure trying to query queued product. index = %d
FailureReportMetadata_
false
fB94Iu
fD9 A
fD9!t
fD9#t
fD9$Au
fD9$Fu
fD9$Hu
fD9$Ju
fD9$Pu
fD9$yu
fD9*u
fD9,Au
fD9,Fu
fD9,Nu
fD9,Pu
fD9,Qu
fD9,xu
fD9/t
fD9<~u
fD9<Fu
fD9<Hu
fD9<Su
fD9<Vu
fD9>u$H
fD90A
fD90t,
fD90u
fD94Au
fD94H
fD94Hu
fD94Nu
fD94Pu
fD94Zu
fD98@
fD98A
fD98t
fD9lE
fD9t]
fD9u8u
fE9$Fu
fE9$wu
fE9,Lu
fE9<Fu
fE9DU
fE9L]
fE9L}
FetchImageFromNetworkAndSaveToFile
FetchUriResponse
FetchUriResponseWithAuthTicket
FetchUriResponseWithAuthTicket(pCV, pUri, nullptr, nullptr, Http_Verb::Get, nullptr , nullptr , jsonResponse)
fF9$Nu
fF9$su
fF9$Wu
fF9<Hu
fF9<Ou
fF9<Pu
fF94zu
fffffff
Fgeneric
fH%w[
fhD+`
fieldsTemplate
FileDescription
FileId
files
FileVersion
finalOrderIt->second > currentOrder
FindAvailability
FindClose
FindFirstFileW
FindFulfillmentData
FindNextFileW
FindPackageVolumeByName FAILED for "%s"
FindSkuAvailability
FindStringOrdinal
Finished updating frameworks, cv = %hs
Finternal\sdk\inc\wil\ResultMacros.h
FInvalid CV: %hs
FlightBundleId
FlushViewOfFile
ForceAppRestartValues NOT set in MDM or invalid.
ForceRestart
ForeachInstallWorkFactory
ForegroundColor
FormatMessageW
Found a dormant item still reporting an active state. ProductId = %s
Found already queued item for update. productId = %s
Found Bundle Sku: %s
Found Existing work for categoryId = %s. Adding to existing work
Found framework update, categoryId = %s, cv = %hs
Found matching Packages for Sku (%s). Install Allowed
Found update for categoryId = %s
Fulfill
Fulfillable Product: ProductId = %s, SkuId = %s, AvailabilityId = %s, PackageId = %s
FulfillmentComplete
FulfillmentData
FulfillmentInitiate
FulfillmentType
Function
FunctionName
future
future already retrieved
fwkUpdData->frameworks.Get()
FX9G$tEA
FX9G4t/
Fx9GDtEA
Fx9GTt/
FXI;FX
G HcE
Gd$@E;
gdD;d$@D
GenerateCacheKey(pAppId, szMoId, pszFieldsTemplate, szCacheKey, ARRAYSIZE(szCacheKey))
GenerateCacheKey(spAppId.Get(), szMoId, pszFieldsTemplate, szCacheKey, ARRAYSIZE(szCacheKey))
GenerateExcludedErrorCodeListForRetry(errorCodes.Get())
GenerateIfMissingCVAndExecute
GenerateNetworkErrorCodeListForRetry(networkErrorCodes.Get())
get_Flags(&pinFlags)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_ApplicationModel_TaskbarPinnableSurface).Get(), &pinnableSurfaceFactory)
GetActivationFactory(HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetAuthTicket
GetAuthTicketForCampaignData
GetCachedFulFillmentDataFromPackageFamilyNameOrEmpty
GetCollectionType(pPackages, &_collectionType)
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDownloadExtendedHResult
GetDownloadExtendedHResult(spJob, &hrExtended)
GetEnvironmentVariableW
GetExclusivityId(L"MOID", szMoId, ARRAYSIZE(szMoId))
GetExclusivityIds(pszAdditionalQueryParamsEnd, cchAdditionalQueryParams, pszMoId)
GetFileAttributesExW
GetFileSizeEx
GetForceAppRestartPolicy
GetFulfillmentData
GetFulfillmentData::<lambda_0ce500a78ee108a72933f647220d3b19>::operator ()
GetGroupForNotificationType
GetInstalledContentIdsNoCV
GetInstallExtendedErrorCode
GetInstallExtendedErrorCode(pPackages, spResult.Get(), &hrExtended)
GetLanguageAndRegion(language.GetAddressOf(), region.GetAddressOf())
GetLastError
GetLastError()
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMultipleProductDatas
GetMultipleProductDatas::<lambda_776f81e70bbefd2a3682a71f4a109f28>::operator ()
GetPackageFamilyName
GetPackageFullName
GetPackageFullNameForUpdate
GetPackageFullNameFromToken
GetPackageFullNamesFromCollection(_updateCollection.get(), _pkgFullNames.GetAddressOf())
GetPackageFullNamesFromCollection::<lambda_0f83b99f3d57e259083c0c706a2fd10a>::operator ()
GetPersistedRegistryLocationW
GetProcAddress
GetProcessHeap
GetProcessReference
GetProductData
GetProductDataPlural( user, pIds, catalogId, idType, identityData.Get(), nullptr, pCV, &spResult)
GetProxyVectorFromList
GetRestrictedErrorInfo
GetSharedLocalFolder
GetSidSubAuthority
GetSidSubAuthorityCount
GetSlsDataChunk
GetSlsDataChunk(CLSCTX_LOCAL_SERVER, &pszJSON, &lastModified, &marker)
GetSLSUri
GetSLSUri(slsBulkHydrate, rgAnnotationValues, ARRAYSIZE(rgAnnotationValues), szAdditionalQueryParams, pCV, &spUri)
GetStoreAppsAreDisabled
GetSystemTime
GetSystemTimeAsFileTime
GetTempFileNameW
GetTempPathW
GetTickCount64
GetTokenInformation
GetUpdateSearcher
GetUriResponseWithAuthTicket(user, spUri.Get(), pCV, nullptr , acquistionIdentity, false , &spJsonObject)
GetUriResponseWithAuthTicket(user, spUri.Get(), pCV, pAppId->CatalogIdHStr().Get(), acquistionIdentity, false , &spJsonObject)
GetUriResponseWithAuthTicket(user, spUri.Get(), pCV, pAppId->CatalogIdHStr().Get(), acquistionIdentity, true , &spJsonObject)
GetVersionExA
gfffffffH
gfffffffH+
gfffffffI
GlobalFree
GPD8m
Group policy has blocked the running and updating of all Windows Store apps on this device.
GroupResponseCount
GXH;F
GXI;FX
h H;p
H UATAUAVAWH
h UAVAWH
H UVWATAUAVAWH
H UVWAVAWH
H UWATAVAWH
H!\$ L
H!\$`H
H!\$PH
H!]0I
H!^PH!^XH!^`
H!_@3
H!{HH
H!|$@A
H!|$@H
H!|$`L
H!|$0H
H!|$x
H!}@I
H!}8H!} H
H!~(H!~0H!~8H!~@3
H!khH
H!kpH
H!l$@
H!L$0
H!L$8A
H!s H!s(H
H!sPH!sXH!s`@
H!T$ 3
H!t$03
H!uX3
H;\$ t
H;\$(t
H;\$0t
H;\$8t
H;^ s
H;_ s
H;_`t"H
H;{ s
H;+t&H
H;>u:I
H;0u3H
H;3t!H
H;H A
H;H s
H;K sKH
H;K@H
H;K`H
H;Q0s
H;S(v
H;sht
H;spt
H;t$@t
H;t$hr
H_^[]
H+w(D
H0H+H(H
H9\$P
H9^@t
H9^Pt
H9_Hs<
H9_Xt"
H9}Pt4H
H9}PtIH
H9~0t:H
H93uDH
H98u(H
H9Ahs
H9C s'L
H9i(r
H9S@t/H
H9T$@H
H9t$x
H9x@D
HA^_^[
hA_A^_^[]
HA_A^_^[]
HA_A^A]A\_[
hA_A^A]A\_[
HA_A^A]A\_^[]
hA_A^A]A\_^[]
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HasFrameworkUpdates
HcD$XD
HcG0E3
HcIXA
HcL$ HcD$$H
HcN`L
Headers
HeadlessApp
HeapAlloc
HeapFree
Height
HHH91H
HL9+H
HResult
HRESULT(initScope)
HRESULT_FROM_WIN32(1317L)
HRESULT_FROM_WIN32(GetLastError())
Http %s response: %s
http:
HttpGetFile
HttpRequest::Open
HttpRequest::Send
HttpRequest::SetBody
HttpRequest::SetOptions
HttpRequestFailure
HttpResponse::Body
HttpResponse::StatusCode
HttpResponse::WriteResponseToFile
https
HTTPS
https://
https://api.cdp.microsoft.com/
https://api-dev.dcat.dsp.mp.microsoft.com/
https://api-int.dcat.dsp.mp.microsoft.com/
https://displaycatalog.mp.microsoft.com/v7.0/products/{productId}/{skuId}?market={marketCode}&languages={language}&fieldsTemplate={fieldsTemplate}
https://displaycatalog.mp.microsoft.com/v7.0/products/lookup?alternateId={idType}&value={productId}&market={marketCode}&languages={language}&fieldsTemplate={fieldsTemplate}
https://displaycatalog.mp.microsoft.com/v7/products?bigIds={productIdsWithCommas}&market={marketCode}&languages={languages}&fieldsTemplate={fieldsTemplate}
https://login.microsoft.com
https://login.windows.local
https://login.windows.net/common
https://onestore.microsoft.com
https://purchase.mp.microsoft.com
https://purchase.mp.microsoft.com/v7.0/users/{userId}/orders/{orderId}
https://storeedgefd.dsx.mp.microsoft.com/v7.0/oemdiscovery?oemId={oemId}&scmId={scmId}&phoneManufacturerName={phoneManufacturerName}&smBiosManufacturerName={smBiosManufacturerName}&phoneDeviceModel={phoneDeviceModel}&smBiosDm={smBiosDm}
https://storeedgefd.dsx.mp.microsoft.com/v8.0/campaigns?type=install&market={marketCode}&cid={cid}&ocid={ocid}&productId={productId}&skuid={skuid}&callercontext={clientid}&caller=InstallAgent
hUserToken != 0 || (flags & 0x00008000)
HXH+HPH
I;F`u
I_E_C
I_RpcBindingInqLocalClientPID
I|$ H
I9~Pt:H
IAPDC: Deactivated PDC activation for ProductID: %s
IAPDC: InstallAgentPdcActivation destroyed with ProductId: %s
IAPDC: InstallAgentPdcActivation::Update called for ProductId: %s at TickCount: %I64u
IAPDC: Pdcv2 Activation registered successfully.
IAPDC: Pdcv2 Activation registration failed.
IAPDC: Pdcv2Activation activated for ProductId: %s at TickCount: %I64u
IAPDC: Pdcv2Activation renewed for ProductId: %s
IAPDC: Pdcv2ActivationClientActivate failed for ProductId: %s
IAPDC: Pdcv2ActivationClientRenewActivation failed for ProductId: %s
IAPDC: Should not renew PDC Activation for ProductId %s. Elapsed ticks since last update: %I64u, max allowed ticks: %I64u
IAPDC: Should not renew PDC Activation for ProductId %s. Error detail indicated renewal was not needed. Error detail: %d
IAPDC: Should renew PDC Activation for ProductId %s. Elapsed ticks since last update: %I64u, max allowed ticks: %I64u
IdType
idType
idType >= AppId::Type_ProductId && idType <= AppId::Type_CategoryId
idType >= Type_ProductId && idType <= Type_CategoryId
Ignoring Duplicate ProductId in BundledSku list: %s
Ignoring licensing failure for Update, content id: %s
Ignoring Product Id %s from the Bundle. Error parsing product document
Ignoring productId = %s from queue ordering. Not in pending queue or active
Ignoring productId = %s from queue ordering. Not valid for user sid = %s
Ignoring work scheduling request. Work Already scheduled with productId = %s, Requested productId = %s
IIDFromString
Image download initialization failed: %s
Image download request: %s
ImagePurpose
Images
ImpersonateLoggedOnUser
ImpersonateSelf
Impersonating Client instead of user. User not logged in. SID: %s
Inconsistent state data size in wnf_query
Indeterminate
initialization failed: 
initialization failed: %s
initialization failed: %s = %s, catalogId = %s, flightId  = %s, CV = %hs
initialization failed: %s = %s, CV = %hs
initialization failed: %s = %s, interactive = %s, catalogId = %s, CV = %hs
initialization failed: %s = (vector), checkApplicability = %hs, CV = %hs
initialization failed: %s, %s
initialization failed: addAsPaused = %s, CV = %hs
initialization failed: CV = %hs
initialization failed: interactive = %s, CV = %hs, clientid = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
initialization failed: productId = %s, CV = %hs
initialization failed: productId = %s, skuId = %s, availabilityId = %s, CV = %hs
initialization failed: productId = %s, skuId = %s, catalogId = %s, CV = %hs
initialization failed: productId = %s, skuId = %s, catalogId = %s, CV = %hs, clientId = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
initialization failed: productid = %s, skuid = %s, catalogId = %s, flightId = %s, CV = %hs, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork = %s, forceUseOfNonRemovableStorage = %s, allowForcedAppRestart = %s, launchAfterInstall = %s
initialization failed: productId = %s, skuId = %s, CV = %hs
initialization failed:: packageFullName = %s, clientId = %s, allowForcedAppRestart = %s, forceUseOfNonRemovableStorage = %s, repair = %s, CV = %hs
InitializeConditionVariable
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSListHead
InitializeSRWLock
Initializing InstallService
InitOnceExecuteOnce
innerValue <= ToastNotificationMode_NoToast
innerValue >= ToastNotificationMode_Default
Install item added: productId = %s
Install item: productId = %s, type = %d, state = %hs(%d), percent complete = %d
Install item: type: %d, state: %hs(%d), percent complete: %d
Install request: productId = %s. Item already found queued up. Updating with VolumePath = %s, Flags = %x
Install Service
Install Starting. Client Sid: %s, User Sid: %s
INSTALL_AGENT_E_MAX_INSTALL_HIERARCHY_REACHED
InstallAgent
InstallAgent_GetAvailableUpdates( user, spView.Get(), applicability, userInteractive, allowCachedResults, nullptr, cvStr, &spResult)
InstallAgent_GetAvailableUpdates(nullptr , spCategoryIds.Get(), true , false , false , nullptr , szCV, &spFilteredIds)
InstallAgent_GetInstallControl(&spAgent)
InstallAgent_Install( nullptr, _spFulfillmentDataInfo.Get(), WindowsUpdate::Internal::InstallType_Restore, 0, identityData.Get(), nullptr, nullptr , szCV, &spInstallItem)
InstallAgent_Install( user, _spFulfillmentDataInfo.Get(), InstallTypeFromAppInstallType(installType), installAgentFlags, identityData.Get(), volumePath, callerApplicationId, szCV, &spInstallItem)
InstallAgent_InstallProducts( user, spProductFulfillmentDataView.Get(), Internal::InstallTypeFromAppInstallType(installType), installAgentFlags, identityData.Get(), volumePath, callerApplicationId, szCV, &spView)
InstallAgent_InstallUpdates( user, fulfillmentData.Get(), IAF_INTERACTIVE | IAF_PAUSE_AFTER_DOWNLOAD | (addAsPaused ? IAF_ADD_PAUSED : 0) | IAF_AUTOMATICALLY_DOWNLOAD_UPDATE_IF_FOUND, true , HStringReference(callerApplicationId).Get(), szCV, &spInstallItems)
InstallAgent_InstallUpdates( user, fulfillmentData.Get(), Utils::GetUpdateFlags(fInteractive, false , false , allowForcedAppRestart, automaticallyDownloadAndInstallUpdateIfFound, fInteractive ), false , clientId , szCV, &spInstallItems)
InstallAgent_InstallWithOfflineUpdateScan( user, _spFulfillmentDataInfo.Get(), InstallTypeFromAppInstallType(installType), installAgentFlags, identityData.Get(), volumePath, callerApplicationId, szCV, &spInstallItem)
InstallAgent-AllowGPOForBlockingStore
InstallAgentPdcActivation::_Activate
InstallAgentPdcActivation::_Deactivate
InstallAgentPdcActivation::_ShouldRenew
InstallAgentPdcActivation::~InstallAgentPdcActivation
InstallAgentPdcActivation::Renew
InstallAgentPdcActivation::Update
InstallAgentPdcManager::Initialize
InstallAgentQueueHanged
Installing
Installing with IsForced = TRUE
InstallOperationRequest
InstallPackages
InstallQueue::_AppendWuCategoryIdIfNotRunning
InstallQueue::_BackgroundRetry
InstallQueue::_ExecuteInstallItem
InstallQueue::_ExecuteInstallItems
InstallQueue::_FindActiveInstallItemToPause
InstallQueue::_FindOrInsertInstallItem
InstallQueue::_FindPendingItem
InstallQueue::_GetNextPendingItem
InstallQueue::_InsertInstallItem
InstallQueue::_InstallUpdates
InstallQueue::_IsItemReadyToExecute
InstallQueue::_LoadCheckpointsWorker
InstallQueue::_LoadHandlers
InstallQueue::_LoadItemsFromCheckpoints
InstallQueue::_ProcessQueueForSmartRetry
InstallQueue::_RemoveInstallItem
InstallQueue::_ResumeQueue
InstallQueue::_ScheduleInstallItem
InstallQueue::_SuspendQueue
InstallQueue::Cancel
InstallQueue::CleanupShared
InstallQueue::GetActiveInstallsForUser
InstallQueue::InstallProductsForUser
InstallQueue::MoveToFrontOfDownloadQueue
InstallQueue::Pause
InstallQueue::Resume
InstallQueue::ResumeWithFlags
InstallQueue::s_ExecuteInstallItem
InstallQueue::SetQueueOrderForUser
InstallQueue::SmartRetry
InstallService
InstallService COM Caller SID: %s
InstallService InProc Caller. Current Thread not impersonating. Using current process (LocalSystem)
InstallService InProc Caller. Using current thread impersonation token SID: %s
InstallService Shutting down
InstallService.dll
InstallService.pdb
InstallServiceCallback::CleanupInterfaces
InstallServiceCallback::InitializeGlobals
InstallServiceCallback::ReleaseNotifier
InstallServiceCallback::UserLogoff
InstallServiceMutableState
InstallServiceTaskHelpers::CreateAppInUseForceRestartTaskIfNecessary
InstallServiceTaskHelpers::EnableSmartRetryTriggerFromHResult
InstallServiceUserBroker::PinToDesktop
InstallServiceUserBroker::PinToShell
InstallServiceUserBroker::PinToShell::<lambda_da3ce4d512d2f76d0d578c2741ef5e4e>::operator ()
InstallServiceUserBroker::PinToStart
InstallServiceUserBroker::PinToTaskbar
installState >= WindowsUpdate::Internal::InstallState_Pending && installState <= WindowsUpdate::Internal::InstallState_RestoringData
internal\onecore\priv_sdk\inc\constrainedimpersonationutil.h
internal\onecoreadmin\inc\appmodel\packagemanager\ideploymentoperation.hpp
internal\onecoreuapbase\inc\userawarecalleridentity.h
internal\sdk\inc\wil/Staging.h
internal\sdk\inc\wil/winrt.h
internal\sdk\inc\wil/wrl.h
internal\sdk\inc\wil\Resource.h
internal\sdk\inc\wil\winrt.h
internal\sdk\inc\wil\wrl.h
InternalFailureSummary
InternalName
InternalProperty_GetStringValue
InternetConnectionState
Interrupting Item productId = %s. Item would no longer be active after reordering.
Intiating Scan as UserSid = %s, cv = %hs
Invalid BigId %s. Ignoring
Invalid checkpoint data: type = %u, state = %u, pct = %u, dloadpct = %u, cv = %hs, hresult = 0x%08x
Invalid enum value!
Invalid FulfillmentData. No ProductId
Invalid identity data: %s
invalid map<K, T> key
Invalid queue object. InstallService might be shutting down or uninitialized
Invalid SmartRetryTriggerType
invalid string position
invalid vector<T> subscript
Invalid/old checkpoint file: Id = '%s'
IsApplicability
IsBundle
IsDebuggerPresent
isDisplayed
IsErrorPropagationEnabled
IsInstalled=%c AND AppCategoryIDs contains '%s'
IsInstalled=0 AND AppCategoryIDs contains '%s'
IsInstalled=1 AND AppCategoryIDs contains '%s'
IsInteractive
IsMandatory
IsOnline
isPIRequired
IsPIREQUIRED_FIELD
IsProcessorFeaturePresent
IsRemediation
IsRestore
IsStoreBlockedByPolicy initialization failed: %s, %s
isSystemVol != 0
IsThreadpoolTimerSet
IsUpdate
IsUpdate()
IsUserRetry
IsWow64Process2
it1 != _activeItems.end()
item: productId = %s, that just finished execution wasnt found in the active items list
items
J[Qinternal\sdk\inc\wil\resource.h
J9\$Pt
J9>tFA
Json_Parse(pszJSON, &spJsonObject)
JTk_S/
K SVWH
K0;D$p@
K0H9{
k8;D$8
kernel32.dll
kernelbase.dll
KEYW`
KH!|$PH
KHH99H
KHL91H
L$ E3
l$ E3
L$ E3
L$ SH
L$ SUVWH
L$ SVWATAUAVAWH
L$ SWH
L$ UH
L$ USVWAVH
L$ UVWATAUAVAWH
l$ VWATAUAWH
l$ VWATAVAWH
l$ VWAVH
L$ WATAVH
l$ WH
L$ WH
l$ WH
L$(E3
L$@9\$@u
L$@9L$ t
L$@E3
L$@fD
L$@H;
L$@H+
L$@H3
L$@I+
L$`D;
L$`E3
L$`H;
L$`H3
L$`xTI
L$0E3
l$0E3
L$0E3
L$0H;
l$0H+.H
L$0H3
L$8D9L$8t
L$8E3
L$8H;
L$8H3
L$hD8l$`
L$hE3
L$hH3
L$HH3
L$hx"H
L$PD9
L$PE3
L$pH;
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$XE3
L$XH+
L$XH3
L$xH3
L;0u2H
L;G8u
L;t$Ht
L+{(D
L9&u>L
L9;uVH
L9\$@t
L9`@A
L9{@u
L9{0t#H
L9a sEL
L9d$Hu-
L9d$X
L9g t
L9g(ub3
L9Ihv'H
L9l$hw
L9nxu
L9o@t
L9t$P
L9t$XuQH
L9v t$H
L9vhu
L9y sEL
language
languages
latencyMs
latest
launch
Launch Url: %s
Launch was not successful for ProductId: %s!
LaunchAfterInstall
LCMapStringEx
LeaveCriticalSection
LegacyWindowsPhoneProductId
LegacyWindowsPhoneSkuId
LegacyWindowsStoreProductId
LegacyXapPackageFamilyName
LegalCopyright
length > 0
li->Deactivate()
License could not be acquired with the client token and user (SID: %s) isnt logged on
LicensingData
Line Number
lineNumber
list<T> too long
ListPrice
LoadStringW
Local\SM0:%d:%d:%hs
LocalAlloc
LocalFree
LocalizedProperties
Lock Screen Not Active, skipping 'package in use': productId = %s
LogHr
LogMessage
LogSimpleMessage
Looking for the next item to start
LowBattery
M H1E
M H9M8
M ttH
M!4$H
M;a s:H
M;X M
M;y s:H
M@H9M
M0H9M
M9}hu=H
M9}pu=H
M9}xu=H
M9B(L
M9X s
MainPackageFamilyNameForDlc
MakeAlternateIdUri
MakeAlternateIdUri(pAppId, szMoId, pszFieldsTemplate, pCV, &spUri)
MakeAndInitialize<Internal::AppData>(&spApp, this, user, pAppId, nullptr , pCV)
MakeBulkHydrateUri
MakePurchaseOrderUri(nullptr, pCV, &spUri)
MakePurchaseOrderUri(strOrderId.GetRawBuffer(nullptr), pCV, &spUri)
map/set<T> too long
mapIt1 != mapIt2
mapIt1->second != mapIt2->second
MapViewOfFile
Market
market
marketCode
MarketProperties
MaxAttemptCountBackQueueRetry
MaxAttemptCountScheduledRetry
MaxConcurrentQueueItems
MaxDaysToRetryBeforeAbandon
MaxDownloadSizeInBytes
MaxElapsedTicksAllowedWithoutUpdate
MaximumGroupLatencyMs
MaxRetriesBeforeAbandon
mbi_ssl
MBI_SSL
MDM policy has blocked the running and updating of all Windows Store apps on this device.
MDPurchase
MDv7AlternateIdLookup
MDv7BulkProductDetails
MDv7ProductDetails
MDv7PurchaseOrder
memcmp
memcpy
memmove
memset
MerchandizingTags
Message
Messages
MHL9!I
Microsoft
Microsoft Corporation
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft.MicrosoftEdge_8wekyb3d8bbwe
Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy
Microsoft.Windows.Kernel.Pdc
Microsoft.Windows.StoreAgent.Telemetry
Microsoft.WindowsStore_8wekyb3d8bbwe
Microsoft.WindowsStore_8wekyb3d8bbwe!App
Microsoft.Xbox.WinHttp
Microsoft\Windows\InstallService
Microsoft-Windows-Install-Agent
Microsoft-Windows-Store/Operational
minATL$__a
minATL$__f
minATL$__m
minATL$__r
minATL$__z
MinimumGroupLatencyMs
MinLatencyMs
MinVersion
Missing a few Products. Requested %d Got back %d
Missing CategoryId from AppData for Product %s. Ignoring it
misssingCV
mO|FW
mobilling.microsoft.com
MOBillingAuthenticationDomain
mode <= 3
mode >= 0
Module Name
ModuleLoaded
ModuleName
Monthly
MoveDownloadToTop: productId = %s, CV = %s
MoveToFrontOfDownloadQueue_Interactive
MoveToFrontOfDownloadQueue_NonInteractive
MSAHW1.0=
MS-CallerApplicationId
MS-CV
Msg:[%ws] 
msvcp_win.dll
ms-windows-store://DownloadsAndUpdates
ms-windows-store://pdp/?productId=%1&skuid=%2&catalogid=%3
MultiByteToWideChar
MXM9n
MXM9o
names
Namespace
namespaces
Need at least 1 Localized Property Object
NetworkDebounce
NetworkErrorCodeList
neutral
No AAD ticket found for private catalog
No applicable packages. Already installed
No Application node had AppListEntry.
No Change in TaskDefinition. Not updating
No CV passed in - generating a new one.
No DSMA token found
No Fulfillable sku found. Trying to choose a sku with BundledSkus
No item found that we can pause. The queue might be in a flux.
No key in at least one kvp in serialized dictionary: %ws
No key/value sep char (%wc) in at least one kvp in serialized dictionary: %ws
No package found during installation, and the product wasn't already installed
No package found during remediation
No queued Work found for WorkId: %s
No sku specified. Trying to find a fulfillable sku
no state
No tickets found for the current user.
No tickets found for the explicitly-specified account.
No Updates Found. Checked %d categoryIds
No user signed into the store.
No value in at least one kvp in serialized dictionary: %ws
Not adding 'package in use' failed item (productId = %s) for User SID: %s - Not logged in
Not interrupting Item productId = %s. Request requires item to still hold an active slot
Not retrying item due to too many previous retries (%d): productId = %s
Not using a config url
Nothing can be started.  Pending: %d, Active: %d, Suspends: %d
Nothing to register for User: %s. Skipping Install
Notification buttons couldn't be shown because package full names are missing
Notification serialiazer Mutex
Notification shown for PFN: %s, SkuId: %s, CatalogId: %s, NotificationType: %d, Progress if needed: %d
NotificationCreator::_CreateSimpleTextNotification
NotificationCreator::_CreateUpdatableNotificationWithProgress
NotificationCreator::_FormatString
NotificationCreator::_GetMatchedPackageFullName
NotificationCreator::_LoadFormattedString
NotificationCreator::_SetNotificationsLaunchAndPinButtons
NotificationCreator::CreateNotification
NotificationCreator::CreateNotificationUpdateData
NotificationHelper::_DisplayNotification
NotificationHelper::_UpdateNotification
NotificationHelper::_UpdateNotificationHistory
NotificationHelper::RuntimeClassInitialize
NotificationHelper::ShowNotification
ntdll.dll
ntelD
NtPowerInformation
NtQueryWnfStateData
NtUpdateWnfStateData
Number
o\$PH
O0;D$@
Object
oD$ f
OemDiscovery
OEMDiscoveryCall
OemId
OEMID
oemId
OemIdentification
OHL9)H
OHL9)I
oL$0f
OldLogMessage
OldMessages
OLEAUT32.dll
onecore\base\appmodel\common\guid.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\packageacquisitioninfo\packageacquisitioninfo.cpp
onecore\shell\lib\calleridentity\calleridentity.cpp
onecoreuap\enduser\winstore\installservice\bookplugin\bookinstallwork.cpp
onecoreuap\enduser\winstore\installservice\bookplugin\bookinstallworkfactory.cpp
onecoreuap\enduser\winstore\installservice\bookplugin\installworkstatusfactory.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\bookdownloadfolder.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\bookpolicies.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\bookservice.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\bookservicerequesturlfactory.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\bookserviceresponseparser.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\bookworkflow.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\dodownloadwrapper.cpp
onecoreuap\enduser\winstore\installservice\contentdelivery\inc\correlationvectorutils.h
onecoreuap\enduser\winstore\installservice\contentdelivery\workflowfactory.cpp
onecoreuap\enduser\winstore\installservice\lib\appdata.cpp
onecoreuap\enduser\winstore\installservice\lib\appinstallcontrol.cpp
onecoreuap\enduser\winstore\installservice\lib\appinstallitem.cpp
onecoreuap\enduser\winstore\installservice\lib\appinstallitem.h
onecoreuap\enduser\winstore\installservice\lib\appinstalloptions.cpp
onecoreuap\enduser\winstore\installservice\lib\AppInstallOptions.h
onecoreuap\enduser\winstore\installservice\lib\appxhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\bufferhelpers.h
onecoreuap\enduser\winstore\installservice\lib\callercontext.cpp
onecoreuap\enduser\winstore\installservice\lib\CallerContext.h
onecoreuap\enduser\winstore\installservice\lib\checkpoint.cpp
onecoreuap\enduser\winstore\installservice\lib\CollectionHelpers.h
onecoreuap\enduser\winstore\installservice\lib\comhelpers.h
onecoreuap\enduser\winstore\installservice\lib\commontelemetry.cpp
onecoreuap\enduser\winstore\installservice\lib\CorrelationVector.h
onecoreuap\enduser\winstore\installservice\lib\discinstall.cpp
onecoreuap\enduser\winstore\installservice\lib\fulfillmentdata.cpp
onecoreuap\enduser\winstore\installservice\lib\httphelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\installagenthelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\installagentpdcmanager.cpp
onecoreuap\enduser\winstore\installservice\lib\installcontrol.cpp
onecoreuap\enduser\winstore\installservice\lib\installcontrol.h
onecoreuap\enduser\winstore\installservice\lib\installitem.cpp
onecoreuap\enduser\winstore\installservice\lib\installitem.h
onecoreuap\enduser\winstore\installservice\lib\jsonparser.h
onecoreuap\enduser\WinStore\installservice\lib\JsonParser.h
onecoreuap\enduser\winstore\installservice\lib\notificationcreator.cpp
onecoreuap\enduser\winstore\installservice\lib\notificationhelper.cpp
onecoreuap\enduser\winstore\installservice\lib\productdocumenthelper.cpp
onecoreuap\enduser\winstore\installservice\lib\progress.h
onecoreuap\enduser\winstore\installservice\lib\purchase.cpp
onecoreuap\enduser\WinStore\installservice\lib\RegHelpers.h
onecoreuap\enduser\winstore\installservice\lib\RegHelpers.h
onecoreuap\enduser\winstore\installservice\lib\service.cpp
onecoreuap\enduser\winstore\installservice\lib\settings.cpp
onecoreuap\enduser\winstore\installservice\lib\shellhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\sls.cpp
onecoreuap\enduser\winstore\installservice\lib\storeappinfo.cpp
onecoreuap\enduser\winstore\installservice\lib\storeappinfopriv.h
onecoreuap\enduser\winstore\installservice\lib\stringhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\stringhelpers.h
onecoreuap\enduser\winstore\installservice\lib\taskhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\taskhelpers.h
onecoreuap\enduser\winstore\installservice\lib\TimeHelpers.h
onecoreuap\enduser\winstore\installservice\lib\tokenhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\TokenHelpers.h
onecoreuap\enduser\winstore\installservice\lib\userhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\utils.cpp
onecoreuap\enduser\winstore\installservice\lib\uwainstallwork.cpp
onecoreuap\enduser\winstore\installservice\lib\uwainstallwork.h
onecoreuap\enduser\winstore\installservice\lib\uwainstallworkfactory.h
onecoreuap\enduser\winstore\installservice\lib\wuhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\wuhelpers.h
onecoreuap\enduser\winstore\installservice\svc\logging.cpp
onecoreuap\enduser\winstore\installservice\svc\svcmain.cpp
onecoreuap\enduser\winstore\servicescommon\lib\httpforservices.cpp
onecoreuap\enduser\winstore\servicescommon\lib\servicemain.cpp
OneStoreAuthenticationDomain
OneStoreAuthenticationPolicy
Only admins are allowed to install for all users. cv = %ws
OPCO 
OpenProcess
OpenProcessToken
OpenSemaphoreW
OpenStateExplicit
OpenThreadToken
operationName
OperationName
orderAdditionalMetadata
orderId
OrderManagement
orderState
organizations
OriginalFilename
OSRevision
OSVersion
oT$@f
Other
OTHER
OutgoingServiceRequestSummary
OutputDebugStringW
p AWH
p WATAUAVAWH
p WAVAWH
PA\_^[]
PA^_]
PA^_^
pA^_^[]
PA^_^[]
PA^_^][
PA^A\_^]
pA_A^_
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^[]
pA_A^A\_^[]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
Package did not contain any application entries.
Package not installed: %s
PackageDownloadUris
PackageFamilyName
packageFamilyName != nullptr
PackageFamilyName: %s, type: %d, ContentId: %s
PackageFamilyNameFromFullName
PackageFormat
PackageFullName
PackageId
PackageIdentityName
PackageNameAndPublisherIdFromFamilyName
PackageRank
Packages
ParentBundleId
PartB_Ms.Qos.OutgoingServiceRequest
PartB_Ms.Telemetry.Error
PathCchAddExtension
PathCchAppend
PathCchCombine
PathCchRemoveExtension
PathFindFileNameW
PathYetAnotherMakeUniqueName
Pause: productId = %s, CV = %hs
Paused
PauseInstallation
Pausing existing update. Will be restarted after a new scan. productId = %s
pContext
PDA2H
pData->pInstallItem
pData->pInstallQueue
PDCAH
PDCAL
PdcCallWdog
PdcClientCallWatchdogFired
PdcClientId
PdcpAlpcProcessMessage
PdcPH
PdcpProcessMessageInternal
PDCt3
PDCV2_ClientCallback
PDCV2_Deactivate
Pdcv2ActivationClientActivate
Pdcv2ActivationClientDeactivate
Pdcv2ActivationClientRegister
Pdcv2ActivationClientRenewActivation
Pdcv2ActivationClientUnregister
Pdcv2pActivationClientCallback
PdcVersion
Pending
percentMax <= 100
pExtendedResult->get_ExtendedErrorCode(hrExtended)
PFamN
phoneDeviceModel
phoneManufacturerName
pInstallItems->get_Size(&cApps)
PinToDesktop(aumid.GetRawBuffer(nullptr))
PinToStart for %s unsuccessful.
PinToStart(HStringReference(packageFamilyName).Get(), appListEntry.Get())
PinToTaskbar for %ws unsuccessful.
PinToTaskbar(HStringReference(packageFamilyName).Get(), aumid.Get(), appListEntry.Get())
pJsonObject->GetNamedArray(HStringReference(L"Products").Get(), &spProducts)
pJsonObject->GetNamedObject(HStringReference(L"Product").Get(), &spProduct)
Placing installation item back to queue for retry: productId = %s
PlatformDependencies
PlatformDependencyXmlBlob
PlatformName
pObj->QueryInterface(IID_PPV_ARGS(&spInternalConfiguration))
PolicyManager_FreeStringValue
PolicyManager_GetPolicyInt
PolicyManager_GetPolicyString
Popped productId = %s from Pending Queue.
pOrder->GetNamedString(HStringReference(L"orderId").Get(), strOrderId.GetAddressOf())
Post Cancel Cleanup Complete
PostBoot
PostCampaignData
PowerClearRequest
PowerCreateRequest
PowerSetRequest
pPackages->get_Count(&cUpdates)
pProductData->GetNamedArray(HStringReference(L"DisplaySkuAvailabilities").Get(), &spSkuArray)
PreviousHResult
PreviousInstallState
Price
PrimaryWebAccountId
Process Name
ProcessExeName
ProcessId
ProcessRefCount::Initialize
ProcessRefCount::QueryInterface
ProcessRefCount::WaitUntilNoReferencesRemain
Product
Product = %ls is interactive. Marking Dependency productId = %ls as interactive too
Product data cache hit: %s
Product data not found for %s = %s
ProductDataFromCatalogResponse
ProductDataFromCatalogResponse(pAppId, spJsonObject.Get(), &spProduct)
ProductHash
ProductId
productId
ProductId
productId = %ls Failed to suspend impersonation. Not updating checkpoint file
productId = %s is a DLC and waiting on its MainPackage productId = %s
productId = %s is not ready to execute, putting it back at the top of the pending queue
productId = %s is ready to install. Scheduling it on a separate thread
ProductId = %s, CV = %s
productId = %s, IsReady = %d, IsResumed = %d, StartExecution = %d
productIdsWithCommas
ProductName
Products
ProductTitle
ProductVersion
ProgressBase<struct IDownloadProgressChangedCallback,struct IDownloadCompletedCallback>::ProgressBase
ProgressBase<struct IInstallationProgressChangedCallback,struct IInstallationCompletedCallback>::ProgressBase
ProgressBase<struct Windows::Foundation::IAsyncOperationProgressHandler<class Windows::Management::Deployment::DeploymentResult *,struct Windows::Management::Deployment::DeploymentProgress>,struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<class Windows::Management::Deployment::DeploymentResult *,struct Windows::Management::Deployment::DeploymentProgress> >::ProgressBase
progressStatus
progressValue
promise already satisfied
Properties
protocol
Protocol
protocol
Protocol
protocol
protocolStatusCode
ProxySettings::Capture
PRVAT
pSearchResult->get_ResultCode(&resultCode)
pSearchResult->get_Updates(&spPackages)
pSession->CreateUpdateDownloader(&spDownloader)
pSession->CreateUpdateInstaller(&spInstaller)
pszAppID && *pszAppID
Public
PublisherCertificateName
pUpdate->get_Categories(&spCategories)
Purchased
PurchaseFreeApp
q0;D$@
Q0;D$0
Q4uPH
quantity
QueryFullProcessImageNameW
QueryPerformanceCounter
Queue Composition - InUse/Restart/UserCreds/Network/NonSpecific - Pending/Active/Other: %d/%d/%d/%d/%d - %d/%d/%d
Queue suspension timer expired - Queue is resuming. Outstanding suspends: %d
Queue: %u active, %u pending, %u inactive
QueueHang
QueueUserWorkItem
R$fA;Z*
RaiseException
RaiseFailFastException
ReadFile
ReadyToDownload
ReadyToInstall
Received Completed Callback (for download), and Streaming Type has not been determined!
Received empty buffer for checkpoint file
Recieved empty buffer for checkpoint file
Recurrence
RefCountedEvent::~RefCountedEvent
RefCountedEvent::Initialize
RefCountedEvent::Release
RefCountedEvent::Wait
RegCloseKey
RegCreateKeyExW
RegCreateKeyW
RegDeleteKeyValueW
RegDeleteValueW
RegEnumValueW
RegGetValueW
Registered handler '%s'
Registering as current user
RegisterServiceCtrlHandlerExW
RegOpenCurrentUser
RegOpenKeyExW
RegSetKeyValueW
RegSetValueExW
RelatedCV
RelatedProductId
RelatedProducts
RelationshipType
Released All InstallService WinRT-Activation-Factory Registrations
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
Releasing InstallAgentPdcActivation
RemoveWindowsStore
Removing Linked Work Item. productId = %s
RenewalUpCounter
request
request:  %s = %s, CV = %hs
request: %s %s
request: %s = %s, catalogId = %s, flightId  = %s, CV = %hs
request: %s = %s, CV = %hs
request: %s = %s, interactive = %s, catalogId = %s, CV = %hs
request: %s = (vector), checkApplicability = %hs, CV = %hs
request: addAsPaused = %s, CV = %hs
request: interactive = %s, CV = %hs, clientid = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
request: packageFullName = %s, clientId = %s, allowForcedAppRestart = %s, forceUseOfNonRemovableStorage = %s, repair = %s, CV = %hs
request: packageIdentityName = %s, publisherCertificateName = %s, CV = %hs
request: PFamN = %s, CV = %hs
request: product = %s, CV = %hs
request: productId = %s
request: productId = %s, CV = %hs
request: productId = %s, skuId  = %s, catalogId = %s, clientId = %s, campaignId = %s, extendedCampaignId = %s, correlationVector = %s
request: productId = %s, skuId = %s, availabilityId = %s, CV = %hs
request: productId = %s, skuId = %s, catalogId = %s, CV = %hs
request: productId = %s, skuId = %s, catalogId = %s, CV = %hs, clientId = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
request: productId = %s, skuId = %s, catalogId = %s, flightId  = %s, volumePath = %s, CV = %hs
request: productId = %s, skuId = %s, catalogId = %s, flightId = %s, volumePath = %s, CV = %hs, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork = %s, forceUseOfNonRemovableStorage = %s, allowForcedAppRestart = %s, launchAfterInstall = %s
request: productId = %s, skuId = %s, clientId = %s, CV = %hs
request: productId = %s, skuId = %s, CV = %hs
Request: storeId = %s, campaignId = %s, useDeviceId = %s, CV = %hs
request: storeId = %s, catalogId = %s, flightId = %s, clientId = %s, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork  =%s, forceUseOfNonRemovableStorage = %s
Requested Offline WU scan. Attempting to get updatecollection
requestMethod
RequestMethod
requestMethod
Required Field missing from Json response: '%ls.%ls'
RequiredContentOnly
ResetEvent
ResolveDelayLoadedAPI
resource
resourceResolver->GetLogoLocalized(pData->logoUrl.GetAddressOf())
ResponseCodeGrouping
responseContentType
responseSizeBytes
RestoreInstallWork
RestoringData
result - OEMId:%s, SCMId:%s
result: %s = %s, CV = %hs
result: %s = %s, interactive = %s, catalogId = %s, CV = %hs
result: %s = (vector), checkApplicability = %hs, CV = %hs
result: %s, %s, blocked = %s
result: addAsPaused = %s, CV = %hs
result: interactive = %s, CV = %hs, clientid = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
result: PFamN = %s, CV = %hs
result: productId = %s
result: productId = %s, CV = %hs
result: productId = %s, fUpdateAvailable = %s, CV = %hs
result: productId = %s, skuId  = %s, catalogId = %s, clientId = %s, campaignId = %s, extendedCampaignId = %s, correlationVector = %s, response: %d
result: productId = %s, skuId = %s, applicable = %s, CV = %hs
result: productId = %s, skuId = %s, availabilityId = %s, CV = %hs
result: productId = %s, skuId = %s, catalogId = %s, CV = %hs, allowed = %s
result: productId = %s, skuId = %s, catalogId = %s, CV = %hs, clientId = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
result: productId = %s, skuId = %s, catalogId = %s, flightId = %s, CV = %hs
result: productId = %s, skuId = %s, catalogId = %s, flightId = %s, CV = %hs, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork = %s, forceUseOfNonRemovableStorage = %s, allowForcedAppRestart = %s, launchAfterInstall = %s
result: productId = %s, skuId = %s, CV = %hs, allowed = %s
Result: storeId = %s, campaignId = %s, useDeviceId = %s, CV = %hs
ResultFromKnownLastError()
Resume: productId = %s, CV = %hs
ResumeByCategoryId
ResumeClientId
ResumeInstallation
ResumeOperationRequest
ResumeWithFlags: productId = %s, setflag = %d, resetflag = %d, CV = %hs
ResumeWithFlags: productId = %s, setflag = %d, resetflag = %d, CV = %hs, Item not found
Resuming
RETAIL
Retrying %d items
Retrying failed install: productId = %s
ReturnHr
RevertToSelf
rMfD9?w
RoActivateInstance
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
RoOriginateError
RoOriginateErrorW
RoOriginateLanguageException
RoRegisterActivationFactories
RoReportFailedDelegate
RoRevokeActivationFactories
RoTransformError
RoUninitialize
RPCRT4.dll
RtlAllocateHeap
RtlCaptureContext
RtlClearAllBits
RtlConvertDeviceFamilyInfoToString
RtlDllShutdownInProgress
RtlFreeHeap
RtlGetDeviceFamilyInfoEnum
RtlInitializeBitMap
RtlInitUnicodeString
RtlIsMultiSessionSku
RtlIsMultiUsersInSessionSku
RtlLookupFunctionEntry
RtlNtStatusToDosErrorNoTeb
RtlSetBit
RtlSubscribeWnfStateChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlVirtualUnwind
RtlWaitOnAddress
RtlWakeAddressAll
RtlWow64IsWowGuestMachineSupported
RunIfTaskIsMissed
s AVH
s WATAUAVAWH
s\fD9
S-1-15-2-1609473798-1231923017-684268153-4268514328-882773646-2760585773-1760938157
SampleCorrelationVector
Sandbox
Scan for Updates (not applicability) returned Update that is not in list of scanned for Apps: categoryId = %s
ScanForUpdates
ScheduledRetry
ScheduledTask::~ScheduledTask
ScheduledTask::CommitChanges
ScheduleForceRestartForUpdateFailures
ScmId
scmId
SCMID
sconecoreuap\enduser\WinStore\inc\RAIIHelpers.h
Scope Timer fired before it went out of scope.
SearchForUpdateOperationRequest
SearchUpdatePackages
SendRequestAndWaitForResponse
Serialized updates streaming install type couldnt be loaded and nothing was returned from a scan. Silently Completing
ServerRecommendedScheduledRetry
service::%s::%s
ServiceContext::ReportStatus
serviceErrorCode
ServiceErrorCode
ServiceMain
ServiceMainImpl
SetContentIdForUAP(pfncidpair.first.GetRawBuffer(nullptr), pfncidpair.second.GetRawBuffer(nullptr))
SetEvent
SetFileAttributesW
SetLastError
SetPackageAcquisitionInfoForPackage failure ignored: PFN = %s, IdentityData = %s
SetProcessReference
SetQueueOrder
SetRestrictedErrorInfo
SetRetryIntervalTriggersOnBackgroundUpdateTask
SetServiceStatus
SetThreadpoolTimer
SetThreadToken
SetTokenInformation
SetUnhandledExceptionFilter
severity
SHCreateItemInKnownFolder
SHGetFolderPathW
SHGetIDListFromObject
SHGetKnownFolderPath
SHGetKnownFolderPath(FOLDERID_LocalAppData, 0, nullptr, &pszAppData)
SHTaskPoolAllowThreadReuse
SHTaskPoolQueueTask
size > 0
SkipForceAuthentication
Skipping already visited node: ProductId %s
SkuId
skuid
SkuId
skuId
SkuId
SkuType
Sleep
SleepConditionVariableCS
SLGetWindowsInformationDWORD
Slow Response From WinStoreAuth::GatherAllStoreTickets
Slow Response From WinStoreAuth::GetTicketsForAccount
SlowResponse
SlowResponseFromTokenBroker
SlsInit
SmartRetry
SmartRetry_InUse
SmartRetry_NoNetwork
SmartRetry_NoUser
SmartRetry_Restart
SmartRetry_Scheduled
SmartRetryAsync
SmartRetryCSP
SmartRetryCSP_InUse
smBiosDm
smBiosManufacturerName
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
Software\Microsoft\Windows NT\CurrentVersion
SOFTWARE\Microsoft\Windows NT\CurrentVersion
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\Configuration
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\InstallEventHandlers
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\InstallWorkFactories
Software\Microsoft\Windows\CurrentVersion\InstallService\OEMDiscovery
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\CategoryCache
Software\Microsoft\Windows\CurrentVersion\Store
Software\Microsoft\Windows\CurrentVersion\Store\Configuration
Software\Microsoft\Windows\CurrentVersion\Store\ContentId
Software\Microsoft\Windows\CurrentVersion\Store\CurrentIdentity
SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsStore\WindowsUpdate
Software\Microsoft\XboxLive
SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\AppModel\StateManager
SOFTWARE\Policies\Microsoft\WindowsStore
Someone added a new SmartRetryTriggerType!
Source
Sources
SourceUri
sourceUri->get_RawUri(sourceUriString.GetAddressOf())
spAgent->get_ActiveInstalls(&spInstallItems)
spAgent->ResumeByCategoryId(categoryId)
spApp->get_PackageFamilyName(appPFN.GetAddressOf())
spAsyncInfo->Cancel()
spCat->get_CategoryID(&bstrCatId)
spCat->get_Type(&bstrCatType)
spCategories->get_Count(&cCategories)
spCategories->get_Item(i, &spCat)
spCategoryCollection->get_Count(&cCategories)
spCategoryIds->IndexOf(categoryId.Get(), &index, &fExists)
spCreateOrderBody->SetNamedValue(HStringReference(L"items").Get(), spItems.Get())
spDownloader->BeginDownload(pProgress, pCompleted, varNull, &spJob)
spDownloader->Download(&spResult)
spDownloader->EndDownload(spJob.Get(), &spResult)
spDownloader->put_ClientApplicationID(sbstrClientApplicationId)
spDownloader->put_IsForced(VARIANT_TRUE)
spDownloader->put_Updates(pFrameworkUpdates)
spDownloader->put_Updates(pPackages)
spDownloader->QueryInterface(IID_PPV_ARGS(&spInternalConfiguration))
spDownloadState->GetDownloadStatus(&dseDownloadStatus)
spFilteredIds->GetAt(i, categoryId.GetAddressOf())
spHistory->RemoveGroupWithId( HStringReference((pData->notificationType == Success_Update) ? GROUP_UPDATE_SUCCESS_GROUPED : GROUP_INSTALL_ERROR_GROUPED).Get(), AppId.Get())
spHistory->RemoveGroupWithId(notificationGroup.Get(), AppId.Get())
spHistory2->GetHistoryWithId(AppId.Get(), &spNotifications)
spInstaller->BeginInstall(pProgress, pCompleted, varNull, &spJob)
spInstaller->EndInstall(spJob.Get(), &spResult)
spInstaller->Install(&spResult)
spInstaller->put_ClientApplicationID(sbstrClientApplicationId)
spInstaller->put_Updates(pFrameworkUpdates)
spInstaller->put_Updates(pPackages)
spInstaller->QueryInterface(IID_PPV_ARGS(&spInternalConfiguration))
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_DOWNLOAD_USERTOKEN, var)
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_INSTALL_USERTOKEN, var)
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_SEARCH_USERTOKEN, var)
spItem->BackgroundRetry()
spItem->CancelWithTelemetry(false, nullptr)
spItems->Append(spT.Get())
spItems->GetAt(i, &spT)
spIterator->get_Current(&spKeyValue)
spIterator->get_HasCurrent(&fHasCurrent)
spIterator->MoveNext(&fHasCurrent)
spJob->CleanUp()
spJob->GetProgress(&spDownloadProgress)
spJsonObject->GetNamedArray(g_jsonPropertyProducts.Get(), &spJsonArray)
spJsonValue->GetObject(&spJsonObject)
spKeyValue->get_Value(&spT)
spOrder->GetNamedBoolean(HStringReference(L"isPIRequired").Get(), &piRequired)
spPackageManager->StageUserDataAsync(packageFullName, options, priority, &spDeploymentOperation)
spPackages->get_Count(&cUpdates)
spProgress->get_TotalBytesToDownload(&cbTotal)
spResult->get_ResultCode(&orc)
spResult->get_Size(&cProducts)
spResult->get_Size(&cResult)
spResult->GetAt(i, &spJsonValue)
spResult->GetUpdateResult(iUpdate, &spUpdateResult)
spSearcher.As(&spInternalConfiguration)
spSearcher->put_ClientApplicationID(sbstrClientApplicationId)
spSearcher->put_Online(fOnline ? VARIANT_TRUE : VARIANT_FALSE)
spSearcher->put_Online(VARIANT_TRUE)
spSearcher->put_ServerSelection(ssOthers)
spSearcher->put_ServiceID(sbstrServiceID)
spSearcher->Search(sbstrQuery, &spSearchResult)
spSearcher3->put_SearchScope(scope)
spSelector->SelectSingleNode(HStringReference(L"/toast").Get(), &spToastNode)
spSelector->SelectSingleNode(HStringReference(L"/toast/visual/binding").Get(), &spBindingNode)
spSelector->SelectSingleNode(hstrToast.Get(), &spToastNode)
spSession
spSession->CreateUpdateDownloader(&spDownloader)
spSession->CreateUpdateInstaller(&spInstaller)
spSession->CreateUpdateSearcher(&spSearcher)
spSLSClient2->GetSLSDataChunk(GUID_StoreFrontServiceID, FALSE, L"//ServiceEnvironment/InstallService", ppszJSON, plastModified, pmarker)
spTickets->GetAt(i, authTicket.GetAddressOf())
spToastNotificationFactory->CreateToastNotification(toastXml, spToastNotification.GetAddressOf())
spToastNotificationManager->get_History(&spHistory)
spToastNotifier->Show(notification)
spUpdate7->get_HandlerPayloadPackageId(&sbstrHandlerPackageId)
spUpdate9->CleanupDownloadData()
spUpdateResult->get_ResultCode(&orc)
spUpdateToastNotifier->UpdateWithTagAndGroup(notification, notificationTag, notificationGroup, &updateResult)
spVector->GetView(&spView)
SrpDoesPolicyAllowAppExecution
SrpDoesPolicyAllowAppExecution(%s, %s)
StageUserData failure ignored. PackageFullName = %s
Start screen does not support pinning. Not pinning %s
StartAppInstalls: request install %d of type %s, CV = %hs
StartDateTime
Starting
Starting Post Cancel Cleanup
Starting UWA Install Work
StartInstallOperation
StartInstallOperation(data->ProductId(), data->PackageFamilyName())
StartStageUserData
Status
status.installState == InstallState_Completed || status.installState == InstallState_Canceled
status->autoDownloadSize == 0 || (status->autoDownloadSize < status->downloadSize)
std::exception: %hs
StoreAADAccountId
StoreAgent
StoreAgentAcquireLicenseFailure1
StoreAgentDownloadFailure1
StoreAgentInstallFailure1
StoreAgentScanForUpdatesFailure0
StoreAgentSearchUpdatePackagesFailure1
storeAppInstall
storeAppInstallation
StoreClient
StoreContentModifier
StoreId
strchr
String
string too long
StringFileInfo
StringFromGUID2
StringHelpers::Join(batchProductIds.Get(), L',', productIdsWithCommas.GetAddressOf())
StringHelpers::TransformAndJoin
strrchr
Subkey : %ws, ValueName :%ws
SubmitThreadpoolWork
SubTask
succeeded
Succeeded
succeeded
Succesfully queued  %d products
Successfully Added ProductId %s to the expanded Bundle Product List
Successfully created SmartRetryCSP task.
Successfully Pinned %s to Desktop.
Successfully Pinned %s to Start.
Successfully Pinned %s to Taskbar.
Successfully removed %s
Suspending
SUVWATAUAVAWH
SUVWATAVAWH
SUVWAUAVAWH
SUVWAVH
SVAVAWH
SVWATAUAVAWH
SVWAVAWH
SVWAVH
Swapping Pending Queue Positions for productId = %s, Index = %ld, with productId = %s, Index = %ld
SWATAUAVAWH
Switching failed install to remediation install
System\CurrentControlSet\Control\SystemInformation
SystemAttemptNumber
SystemManufacturer
SystemProductName
SystemTimeToFileTime
t!D8~
t!fE9>t
t"D8=
t#E9V0t
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ I;
t$ UWATAUAVH
t$ UWATAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(E3
T$(E3
T$@H;
t$`!t$h
T$`H;
T$0E3
t$0E3
T$0E3
T$0H;9ujI
T$8E3
T$8H!\$8
t$8I;
T$hE3
T$HE3
T$hH;T$p
T$HH+
t$hH+
t$HI;
T$hI;
t$pD9e
T$PE3
t$pI+
T$PL;
T$XE3
T$XH;
t$xH9q
t$XI;
t$xL+
t*fA;
t;H;2u'L
t@f90t;H
t@H9P
t^@8=
t{H95
t{H95-
t{H95}8
t{H95}Y
t{H95=
t{H95m
t=H9k8t7H
t0H;w0t*
t1H!}
t1H!}0H
t1I!m
t4!\$xH
t7fD93t1H
t9H9s
TargetHostName
targetUri
TargetUri
targetUri
tCH;2u/H
template
TEMPx
TerminateProcess
tG9^htBH
tG9^HtBH
tG9oHtBH
tG9ohtBH
tGH;>u3H
The queue appears to be hung and isn't processing items
There are 'failed due to network' items in queue, but network availability trigger wasn't enabled.
ThreadId
TicketCount
ticketCount > 0 && "TryGetTickets should return nullptr for empty vector"
tickets->get_Size(&ticketCount)
tickets->GetAt(0, authTicket.GetAddressOf())
TimeoutMs
tlf93tgM;
tlf97tgM;
tMH!}8L
tnfD9
tNH!\$HL
ToastGeneric
toastNotificationManager->CreateToastNotifierWithId(AppId.Get(), &spToastNotifier)
toastNotificationManager->GetTemplateContent(ToastTemplateType::ToastTemplateType_ToastImageAndText02, &spToastTemplate)
tOH!|$0L
TokenHelpers::GetAllLoggedInUserTokens
TotalGroupLatencyMs
TotalLatencyMs
TpAllocAlpcCompletion
TpReleaseAlpcCompletion
TpWaitForAlpcCompletion
tQH!|$0L
TraceLoggingCorrelationVector::Validate(cV)
TraceLoggingCorrelationVector::Validate(szCV)
Translation
trH!2H
TryGetTickets
Trying to install %d products
TryInternalProperty_GetStringValue
tSH!|$`L
TUUUUUU
u D9J
u"H!GHH
u#D9R
u#H9H s
u#H9X s
u#H9y s
u#H9Y s
u)A8y
u*H!H
u/@8u
u@D9R
u@L+3H+
u@L+7H+
U@xPH
U_S_C
u`L9~
u=H9x@u73
u8D9R
UATAUAVAWH
UATAVH
UAVAWH
ub'vb'v
uD9D$Xt>H
uED9R
uFD9R
ugf9|$pt`H
UHL92I
UMgrEnumerateSessionUsers
UMgrFreeSessionUsers
UMgrGetConstrainedUserToken
UMgrGetImpersonationTokenForContext
UMgrOpenProcessTokenForQuery
UMgrQueryDefaultAccountToken
UMgrQueryUserContext
UMgrQueryUserToken
umgrToken.IsValid()
Unable to cache a modern license, ContentId = %s
Unable to delete checkpoint file %s.
Unable to get a modern license ContentId = %ws
Unable to invalidate license for %s
Undetermined
Unexpected checkpoint file size: Id = '%s', size = '%I64d'
Unexpected Error from BookInstallWorkFactory
Unexpected Error from InstallWorkFactory: ClassId:%s
Unexpected error from IUpdateSearcher::Search
Unexpected error trying to convert Json Value to %s
Unexpected Json Value Type Expected %s. Found: %s
unH9A
UnhandledExceptionFilter
Unknown
unknown
Unknown exception
UNKWN
UnmapViewOfFile
Update regulated
Update requested from LocalSystem context. Attempting to register for all logged-on users who have it
Update search returned unrecognized categoryId = %s, cv = %s, cv = %hs
Update;
UpdateAppByPackageFamilyName
UpdateAppOperationRequest
UpdateHasCategory
UpdateIsFramework
UpdatePolicy-UpdateManagementGroup
Updating frameworks, cv = %hs
Updating InstallAgentPdcActivation
Updating Task Definition for : %s
Updating volumePath. OldVolumePath = %s, NewVolumePath = %s
uPercentMax <= 100
uPercentMin <= uPercentMax
uri->get_RawUri(uriString.GetAddressOf())
uriFactory->CreateUri(sourceUriString.Get(), _sourceUri.GetAddressOf())
uriFactory->CreateUri(uriString.Get(), uriCopy.GetAddressOf())
UrlEscapeW
UseDeviceId
User Logoff SessionId: %ld, UserContextToken: %lx
User wasnt logged in. Downloading as LocalSystem
User wasnt logged in. Scanning as LocalSystem
User with SID: %s is not logged in and WU scan returned no updates!
user.auth.xboxlive.com
UserAttemptNumber
UserHelpers::ValidateMultiUserApiCall(user)
userId
UserSid: %ws
USVWATAUAVAWH
USVWATAUAWH
USVWATAVAWH
USVWAUAVAWH
USVWAVAWH
USVWAVH
USVWH
Utils::GetCompletedNotificationFlags
Utils::GetInProgressNotificationFlags
Utils::GetPackageFamilyNameFromFullName
UuidCreate
UVATAVAWH
uvD8mhtp3
UVWATAUAVAWH
UVWATAVH
UVWATAWH
UVWAVAWH
UWAInstallWork::_AcquireLicenseForUpdate
UWAInstallWork::_CleanupAfterCancel
UWAInstallWork::_CleanupDownloadData
UWAInstallWork::_DetermineCollectionTypeIfNeeded
UWAInstallWork::_DoAcquireLicense
UWAInstallWork::_DoDownload
UWAInstallWork::_DoInstall
UWAInstallWork::_DoInstallForAllLoggedOnUsers
UWAInstallWork::_DoNormalInstall
UWAInstallWork::_DoRequiredStreams
UWAInstallWork::_DoScan
UWAInstallWork::_DoStageUserData
UWAInstallWork::_DoStageUserDataForUpdate
UWAInstallWork::_InstallCompleted
UWAInstallWork::_LaunchAppListEntry
UWAInstallWork::_LogState
UWAInstallWork::_RecordAcquisitionIdentity
UWAInstallWork::_RequestAbort
UWAInstallWork::_UninstallPackages
UWAInstallWork::_UpdatePdcActivation
UWAInstallWork::AddFulfillmentTask
UWAInstallWork::Cancel
UWAInstallWork::DoWork
UWAInstallWork::GetTaskStatus
UWAInstallWork::IsStreaming
UWAInstallWork::OnDownloadPaused
UWAInstallWork::OnDownloadTransientError
UWAInstallWork::OnError
UWAInstallWork::OnError Releasing InstallAgentPdcActivation
UWAInstallWork::OnProgress
UWAInstallWork::OnProgress Updating InstallAgentPdcActivation
UWAInstallWork::Pause
UWAInstallWork::ProductIsLaunchable
UWAInstallWork::Resume
UWAInstallWork::s_CleanupAfterCancel
UWAInstallWork::SetStreamingType
UWAInstallWork::UpdateIsRegulated
UWAInstallWork::UpdateProperties
UWAInstallWork::UWAInstallWork
UWATAUAVH
UWATAVAWH
UWAUAVAWH
UWAVH
UWAWH
uXH9_
Value
var.vt == VT_BSTR
VarFileInfo
varIsFramework.vt == VT_BOOL
vDbgPrintEx
vector<T> too long
Vector<Uri *>::Make(dependenciesVector.GetAddressOf())
Verbose
VerifyPackageFullName
Version
versions
Volume path "%s" is not a system volume, but system volume is required; install will be redirected to a system volume.
VolumePath
VS_VERSION_INFO
VWATAUAVAWH
VWATAUAWH
VWATAVAWH
VWAUAVAWH
VWAUH
VWAVH
WaitForMultipleObjects
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitForThreadpoolWorkCallbacks
WaitOnAddress
WakeAllConditionVariable
WakeByAddressSingle
Warning
WATAUAVAWH
WATAUH
WATAVH
WATAWH
WAVAWH
wcschr
wcschr(szUrl, L'?')
wcscmp
wcsncpy
wcsstr
WebAccountId
Weekly
WerReportAddFile
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
WEVT_TEMPLATE
WHI+W(A
WHL9*H
WideCharToMultiByte
Width
WifiRecommended
WifiRequired
WilError_02
WilStaging_02
win:Error
win:Info
win:Informational
win:Verbose
win:Warning
win32
win8xappx
Windows Update is installing apps or updates.
Windows.8828080
Windows.ApplicationModel.AppDisplayInfo
Windows.ApplicationModel.Core.AppListEntry
Windows.ApplicationModel.Core.CoreApplication
Windows.ApplicationModel.Store.Internal.AuthenticationExtension
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManagerItemEventArgs
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallOptions
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus
Windows.ApplicationModel.Store.Preview.InstallControl.AppUpdateOptions
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.OEMHardwareInfo
Windows.Core
Windows.Data.Json.JsonArray
Windows.Data.Json.JsonObject
Windows.Data.Json.JsonValue
Windows.Data.Xml.Dom.XmlDocument
Windows.Desktop
Windows.Foundation.AsyncOperationCompletedHandler`1<Boolean>
Windows.Foundation.AsyncOperationCompletedHandler`1<String>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.OEMHardwareInfo>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, WindowsUpdate.Internal.IInstallItem>>
Windows.Foundation.Collections.IIterator`1<Object>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>
Windows.Foundation.Collections.IIterator`1<Windows.Data.Json.IJsonValue>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, WindowsUpdate.Internal.IInstallItem>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.ContentIdInfo>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.IFulfillmentDataInfo>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IKeyValuePair`2<String, WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IMap`2<String, UInt8>
Windows.Foundation.Collections.IMap`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IMap`2<String, WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IMapView`2<String, UInt8>
Windows.Foundation.Collections.IMapView`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IMapView`2<String, WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IVector`1<Object>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>
Windows.Foundation.Collections.IVector`1<Windows.Data.Json.IJsonValue>
Windows.Foundation.Collections.IVector`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.ContentIdInfo>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.IFulfillmentDataInfo>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IVectorView`1<Object>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>
Windows.Foundation.Collections.IVectorView`1<Windows.Data.Json.IJsonValue>
Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.ContentIdInfo>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.IFulfillmentDataInfo>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Diagnostics.AsyncCausalityTracer
Windows.Foundation.IAsyncAction
Windows.Foundation.IAsyncOperation`1<Boolean>
Windows.Foundation.IAsyncOperation`1<String>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.OEMHardwareInfo>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>>
Windows.Foundation.Uri
Windows.Internal.ApplicationModel.TaskbarPinnableSurface
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Internal.Security.WebAuthentication.AuthenticationManager
Windows.Internal.StateRepository.Application
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PackageResourceResolver
Windows.Internal.StateRepository.PackageUser
Windows.Internal.StateRepository.TargetDeviceFamily
Windows.Internal.StateRepository.User
Windows.Internal.Wil.EventInvocationContext
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.Mobile
Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Storage.Streams.Buffer
Windows.System.Internal.UserManager
Windows.System.Profile.AnalyticsInfo
Windows.System.UserProfile.GlobalizationPreferences
Windows.UI.Notifications.NotificationData
Windows.UI.Notifications.ToastNotification
Windows.UI.Notifications.ToastNotificationManager
Windows.UI.StartScreen.StartScreenManager
Windows.Universal
Windows.Windows8x
Windows.WindowsPhone8x
Windows::ApplicationModel::Store::Preview::InstallControl::_CategoryIdsFromProductData
Windows::ApplicationModel::Store::Preview::InstallControl::_CheckApplicability
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::EnsureDownloadAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::get_CompletedInstallToastNotificationMode
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::get_InstallInProgressToastNotificationMode
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::get_InstallType
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::GetInstallWithoutChildren
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::Initialize
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::RuntimeClassInitialize
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_FindUpdateItems
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetActiveInstalls
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetCurrentActiveUserAccessToken
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetFreeEntitlement
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetFreeEntitlement::<lambda_54c8426ec2a7709236d914eb2cde3476>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIdentityDataSnapshot
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsAppAllowedToInstallForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsAppAllowedToInstallForUserAsync::<lambda_cf698abd40156d6077821b15c1857a10>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsApplicableForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsApplicableForUserAsync::<lambda_e26da184cceff68c74b954a9f155b9f1>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsPackageIdentityAllowedToInstallForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsPackageIdentityAllowedToInstallForUserAsync::<lambda_853d7dd16ad75cddb2d4e25065f9cdc1>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ModifyInstall
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ReadStoreBlockedGPO
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_RecursivelyUpdateParentsOnProgress
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ScanForAllUpdatesWorker
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ScanForSpecificUpdatesWorker
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForAllUpdatesForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForAllUpdatesForUserAsync::<lambda_0aece6e6e1806eaa3b58121d0793daad>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForUpdatesForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForUpdatesForUserAsync::<lambda_67f3d538c1195342c0c4de8f10dd5388>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartBundleProductInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartBundleProductInstallAsync::<lambda_2e90d9a231c2a2e63fb95bb9386fc8e0>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartSingleProductInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartSingleProductInstallAsync::<lambda_4a3ba2bb5a41bb69ec74638c5b1db9e3>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_UpdateAppByPackageFamilyNameForUser
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_UpdateAppByPackageFamilyNameForUser::<lambda_befdba45d71019e708e2851f4bf430d6>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::~AppInstallManagerImpl
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::ConnectAgent
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::FindOrCreateInstallItem
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::get_AppInstallItemsWithGroupSupport
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppData
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataAsync::<lambda_527b0cb2658ad99a3e8dd287b7c24c18>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataAsync::<lambda_c726d8f306ad0e3fdf46cc9d4dc6170f>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataPlural
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementAsync::<lambda_bd14c4c780c089e4759a60480276313f>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementByProductSkuAvailabilityAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementByProductSkuAvailabilityAsync::<lambda_98c0fa778a457b3fe1ec66f0f552d42d>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeUserEntitlementForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetOEMHardwareInfoAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetOEMHardwareInfoAsync::<lambda_8347ab64297e58ca887b40f4a7a67a61>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::InstallPackageByPackageFullNameForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::InstallPackageByPackageFullNameForUserAsync::<lambda_c090cfc235810b7f62c51708dcfd57a2>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::IsStoreBlockedByPolicyAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::IsStoreBlockedByPolicyAsync::<lambda_9478ba09e126affb3ce27b894714bd8d>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::OnResume
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::OnSuspend
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::put_AcquisitionIdentity
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::RegisterCurrentUser
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::ResumeByCategoryId
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesAsync::<lambda_51befd21f2ad27f7f181bffb45198303>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesWithPausedAddAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesWithPausedAddAsync::<lambda_32d2bf70ac0ce4b8ad3a0e24547a82e1>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallAsync::<lambda_05aacc3f3940313f1356a386937f6649>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallForDeviceAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallForDeviceAsync::<lambda_89693cce0c2195b6b8118c8858f494ca>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallsAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallsAsync::<lambda_face37022361a8d04651127451e2cf7f>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppRestoreAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppRestoreAsync::<lambda_966054be8ea6044bc1294db37baa6b9e>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartBundleInstallForDeviceAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallStatus::get_InstallState
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::_DoUpdateSearchForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::_ExpandBundles
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::_StartInstallForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::CheckApplicabilityForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::GetFreeEntitlement
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::GetFreeEntitlementAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::GetIsApplicableAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::RuntimeClassInitialize
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::SearchForUpdatesAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::SearchForUpdatesForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartInstallForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartRestore
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartRestoreAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppImage::DownloadAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppImage::DownloadAsync::<lambda_50aca1b930c5fde7c01c3060360e853c>::operator ()
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_UI_Notifications_ToastNotification).Get(), &spToastNotificationFactory)
Windows::Management::Deployment::WaitForDeploymentOperation
WindowsCompareStringOrdinal
WindowsConcatString
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsGetStringLen
WindowsGetStringRawBuffer
WindowsIsStringEmpty
WindowsPreallocateStringBuffer
WindowsPromoteStringBuffer
WindowsReplaceString
WindowsStoreWindowsUpdate
WindowsStringHasEmbeddedNull
WindowsSubstringWithSpecifiedLength
WindowsUpdate.Internal.ContentIdInfo
WindowsUpdate.Internal.FulfillmentDataInfo
WindowsUpdate.Internal.IInstallWork
WindowsUpdate.Internal.IInstallWorkFactory
WindowsUpdate.Internal.InstallControl
WindowsUpdate.Internal.InstallItem
WindowsUpdate::CommonTelemetry::GenerateIfMissingCorrelationVector
WindowsUpdate::CommonTelemetry::TraceError
WindowsUpdate::Internal::FulfillmentDataInfo::RuntimeClassInitialize
WindowsUpdate::Internal::FulfillmentDataInfo::StoreInContentIdCache
WindowsUpdate::Internal::InstallControl::GetAvailableUpdates
WindowsUpdate::Internal::InstallControl::Invoke
WindowsUpdate::Internal::InstallControl::SmartRetryAsync
WindowsUpdate::Internal::InstallItem::_AttachEventHandler
WindowsUpdate::Internal::InstallItem::_CreateCheckpoint
WindowsUpdate::Internal::InstallItem::BackgroundRetry
WindowsUpdate::Internal::InstallItem::LogState
WindowsUpdate::Internal::InstallItem::ShowNotification
WINHTTP.dll
WinHttpCloseHandle
WinHttpConnect
WinHttpCrackUrl
WinHttpCreateUrl
WinHttpGetDefaultProxyConfiguration
WinHttpGetIEProxyConfigForCurrentUser
WinHttpGetProxyForUrl
WinHttpOpen
WinHttpOpenRequest
WinHttpQueryDataAvailable
WinHttpQueryHeaders
WinHttpReadData
WinHttpReceiveResponse
WinHttpSendRequest
WinHttpSetOption
WinHttpSetTimeouts
WinStoreAuth::_SendTokenRequestAndGetTickets
WinStoreAuth::AuthenticationInternal::CaptureGoldenAccountTicket
WinStoreAuth::AuthenticationInternal::CaptureStorePrimaryAccountId
WinStoreAuth::AuthenticationInternal::CaptureStorePrimaryAccountTicket
WinStoreAuth::AuthenticationInternal::CreateAuthenticationManager
WinStoreAuth::AuthenticationInternal::CreateGoldenAccountTokenRequest
WinStoreAuth::AuthenticationInternal::CreateLegacyTicketRequest
WinStoreAuth::AuthenticationInternal::CreateTokenBroker
WinStoreAuth::AuthenticationInternal::CreateTokenBrokerInternal
WinStoreAuth::AuthenticationInternal::CreateTokenRequestHelper
WinStoreAuth::AuthenticationInternal::ExtractAccountId
WinStoreAuth::AuthenticationInternal::ExtractProviderType
WinStoreAuth::AuthenticationInternal::ExtractTicket
WinStoreAuth::AuthenticationInternal::ExtractTicketFromTokenResponse
WinStoreAuth::AuthenticationInternal::ExtractTicketsFromTokenResult
WinStoreAuth::AuthenticationInternal::FetchStoreAccountIdFromRegistry
WinStoreAuth::AuthenticationInternal::FetchXboxLiveAccountId
WinStoreAuth::AuthenticationInternal::FindAccount
WinStoreAuth::AuthenticationInternal::FindCachedStorePrimaryAccount
WinStoreAuth::AuthenticationInternal::GetAccountProvider
WinStoreAuth::AuthenticationInternal::GetAllAccountTickets
WinStoreAuth::AuthenticationInternal::GetAllTokenBrokerAccounts
WinStoreAuth::AuthenticationInternal::GetAllXTokens
WinStoreAuth::AuthenticationInternal::GetCurrentIUser
WinStoreAuth::AuthenticationInternal::GetDeviceTicketWithBroker
WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountId
WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountTicketForUri
WinStoreAuth::AuthenticationInternal::GetTicketForAccount
WinStoreAuth::AuthenticationInternal::GetXToken
WinStoreAuth::AuthenticationInternal::ManagePropertiesFromTokenResponse
WinStoreAuth::AuthenticationInternal::PrefixTicketForMDollar
WinStoreAuth::GatherAllStoreTickets
WinStoreAuth::GatherAllStoreTickets( WinStoreAuth::AccountProviderType::AAD, &tickets, spWebTokenRequestResults.GetAddressOf())
WinStoreAuth::GetDeviceTicket
WinStoreAuth::GetDeviceTicket(authTicket.GetAddressOf())
WinStoreAuth::GetDeviceTicketWithBroker
WinStoreAuth::GetDeviceTicketWithBroker(true, authTicket.GetAddressOf())
WinStoreAuth::GetStorePrimaryAccountTicket( authTicket.GetAddressOf(), &providerType, spWebTokenRequestResult.GetAddressOf())
WinStoreAuth::GetStorePrimaryAccountTicket(authTicket.GetAddressOf(), &providerType, ppWebTokenRequestResult)
WinStoreAuth::GetStorePrimaryAccountTicketForUser
WinStoreAuth::GetTicketsForAccount(accountId.Get(), providerId.Get(), authority.Get(), &tickets, spWebTokenRequestResult.GetAddressOf())
WinStoreAuth::GetTicketsForAccountForUser
WinStoreAuth::SetProxyBlanket
WinstoreAuth_SendTokenRequestAndGetTickets_Failure
WinstoreAuth_SLSFailure
WinstoreAuth_UserAuthRequired
Wldp.dll
WldpIsAppApprovedByPolicy
WLID1.0=
WorkId
wp8xappx
WriteFile
Writing updated Checkpoint-Blob to file for productId = %s, dataSize = %d
wsH9Q
WSLicenseManager
WSLicensingService-AllowDisablingStoreApps
WU query: "%s"
WU Scan failed due to server load shedding. Requested retry interval = %ld mins
WU scan found %d packages
WU search failed, orc = %d
WuCategoryId
WUContentId
WUProgressBase<struct IDownloadProgressChangedCallback,struct IDownloadCompletedCallback,struct IDownloadJob,struct IDownloadProgress,struct IDownloadProgressChangedCallbackArgs,struct IDownloadCompletedCallbackArgs,struct IUpdateDownloadResult>::Invoke
WUProgressBase<struct IInstallationProgressChangedCallback,struct IInstallationCompletedCallback,struct IInstallationJob,struct IInstallationProgress,struct IInstallationProgressChangedCallbackArgs,struct IInstallationCompletedCallbackArgs,struct IUpdateInstallationResult>::Invoke
wvH9Q
www.microsoft.com
x ATAVAWH
x AUAVAWH
x AVH
x AVI
x AWH
x UATAUAVAWH
x UAVAWH
X_^[]
x}D8u
x4L9u
x86a64
XA_A^^[
xA_A^_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^][
xbox\SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State
xbox\SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\CategoryCache
XboxLiveAuthenticationDomain
XboxUserId
xD8\$0u
xE@8|$xt,H
xeD;}@s_H
xfD9u0u
xG8\$0u
xgD9e0v%H
xH8\$0u
xMH!}
xmlDocument->CreateTextNode(content, &spText)
xmlDocument->GetElementsByTagName(HStringReference(L"text").Get(), &spTextNodes)
xoHcM
xSM9&uN
x-xbl-contract-version:2
xyD9u0u
y dt1kQ
y0;D$`
y8u`H
z0;D$ 
ZwAlpcCancelMessage
ZwAlpcConnectPort
ZwAlpcDisconnectPort
ZwAlpcQueryInformation
ZwAlpcSendWaitReceivePort
ZwClose
