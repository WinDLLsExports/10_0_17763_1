 A^_^
 A_A^_
 A_A^A\
 A_A^A\_^
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!fExisted
!This program cannot be run in DOS mode.
#comment
#document
#text
%I64u
%s\system32\%s
%w^tR
%w`tT
%watU
%wctW
%wetY
%wgt[
&amp;
&apos;
&quot;
(*m_State.ParseState.pfnCompareSpecialString)(&m_State.ParseState, Extent, &ss, pResult, 0)
(_^][
(Count == 0) || (Data != 0)
(D$0H
(D$0L
(Data != 0) || (Count == 0)
(DestinationMaximumLength == 0) || (DestinationBuffer != 0)
(DynamicBuffer == 0) || (DynamicBuffer->Length == 0)
(E7fH
(E'fH
(FixedSizeBuffer != 0) || (DynamicBuffer != 0)
(Flags & ((0x00000002) | (0x00000004))) != ((0x00000002) | (0x00000004))
(Length == 0) || (Buffer != 0)
(LocationHeader->ulFlags & ~((0x00000001) | (0x00000002) | (0x00000003))) == 0
(NamespaceURI == 0) || RtlIsLUtf8StringValid(NamespaceURI)
(Params->InputType == Windows::Microdom::Rtl::CreateMicrodomSource::Binary) || (Params->InputType == Windows::Microdom::Rtl::CreateMicrodomSource::Xml)
(Params->SourceType == Windows::Microdom::Rtl::CreateMicrodomSource::Stream) || (Params->SourceType == Windows::Microdom::Rtl::CreateMicrodomSource::BlobProvider) || (Params->SourceType == Windows::Microdom::Rtl::CreateMicrodomSource::Blob)
(Properties.Elements != 0) && (Results.Elements != 0)
(SourceCount == 0) || (Sources != 0)
(ulElementType == (0x2)) || (ulElementType == (0x3)) || (ulElementType == (0x5)) || (ulElementType == (0x1)) || (ulElementType == (0x6)) || (ulElementType == (0x7)) || (ulElementType == (0x4))
)t$@H
***   Source File: %s, line %ld
*** Assertion failed: %s
*ppvAlloc = RtlAllocateHeap((((PPEB)__readgsqword(((LONG)(LONG_PTR)&(((TEB *)0)->ProcessEnvironmentBlock))))->ProcessHeap), 0, cb)
.?AVbad_alloc@std@@
.?AVexception@@
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$r$brc
.edata
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.w,t*
.xdata
.xdata$x
::BUCL::Rtl::Add<SIZE_T>( *pcElements, 10, NewCapacity)
::BUCL::Rtl::Add<SIZE_T>( cElements, 10, NewCapacity)
::RtlIsLBlobValid(Blob)
::RtlIsLBlobValid(Data)
::RtlIsLBlobValid(Destination)
::RtlIsLBlobValid(Source)
::RtlIsLUnicodeStringValid(Source)
::RtlIsLUtf8StringValid(&Sources[i])
::RtlIsLUtf8StringValid(Candidates[i])
::RtlIsLUtf8StringValid(Destination)
::RtlIsLUtf8StringValid(Source)
::RtlIsLUtf8StringValid(String)
::RtlIsLUtf8StringValid(StringIn)
::RtlXmlExtentToUtf8String( 0, &m_State.ParseState.RawTokenState, &Src, TempString.GetMutablePointer(), &cRequired)
:MdLct
:MdSptG
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??1exception@@UEAA@XZ
??1type_info@@UEAA@XZ
??3@YAXPEAX@Z
?MdDtt
?terminate@@YAXXZ
?w$tU
?what@exception@@UEBAPEBDXZ
?wMtD
?wOtF
?wQtH
@.data
@.reloc
@.rsrc
@8t$T
@A^_^
@A_A^_
@A_A^A\
@A_A^A\_^][
@A_A^A]
@A_A^A]A\_^]
@pD9s
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWATAVH
@SUVWAVH
@SUVWH
@SVWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USWH
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWATAVH
\$ UVWAVAWH
\$ UVWH
\$ WH
\$<Ai
\$pL9s t?D8shu9D8siu3
\\.\PhysicalDrive%lu
\\?\GLOBALROOT\device\harddisk%u\partition%u
_@88t
__C_specific_handler
__CxxFrameHandler3
__rv.NewCursorValue != 0
__rv.UcsCharacter != (0xffffffff)
_amsg_exit
_atoi64
_callnewh
_CxxThrowException
_initterm
_purecall
_vsnprintf
_vsnwprintf
_wcsicmp
_XcptFilter
`.rdata
`A^_^][
`A^A\_^]
`A_A^_^]
`A_A^A]A\_^]
`anonymous-namespace'::CStringBuilder::DecodeAndWrite
`anonymous-namespace'::CStringBuilder::DecodeUtf16LEAndWrite
`anonymous-namespace'::CStringBuilder::DecodeUtf8AndWrite
`anonymous-namespace'::CStringBuilder::Write
`anonymous-namespace'::CUtf8StringBuilder::CreateInterface
{ ATH
{%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
|$ E3
|$ UH
|$(I;
|$dI;
|$X#t&
|$X%u
|$X\u
|$XNu1D
|$X'u%A
|H!T$PL
~08T$!t
<![CDATA[
<?xml version='1.0' encoding='utf-16'?>
<?xml version='1.0' encoding='utf-8'?>
>MdDlt
040904B0
0A^_^
0A_A^_^]
0A_A^A]A\_^]
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
8#u)H
8\$1unE;e
8_^][
8A^A\_^][
8A_A^A]A\_^][
9(t-H
9(tTH
9\$0t
9{ v@L
9D$8u
9MdHdt
9MdSpt
9qPvzH
9s(tEH
9t$Pu
A^_^[]
A_A^_^[]
A_A^_^]
A_A^A\_]
A_A^A\_^[]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A0D!b
A0D!z
AP9Gl
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
ATAVAWH
ATTLIST
bad allocation
Blob->Buffer = (PUCHAR)((*RtlAllocateStringRoutine)(Bytes))
BootKey
BUCL::Rtl::Add(cbReturnSize, cbThisSize, cbReturnSize)
BUCL::Rtl::Add(pCachedInfo->m_ulChildCount, pCachedInfo->m_ulAttributeCount, cNecessary)
BUCL::Rtl::Add<SIZE_T>( cbNecessary, Iter.Key.Length, sizeof(UCHAR), cbNecessary)
BUCL::Rtl::Add<SIZE_T>( sizeof(MICRODOM_HEADER), cbStringPoolSize, cbDomLayoutSize, cbPositionDataSize, cbDoctypeDataSize, cbRequiredSize)
BUCL::Rtl::Add<SIZE_T>(DataLength, OldLength, TempSize)
BUCL::Rtl::AddInPlaceWithOverflowCheck(&cbRequired, (*EncodingSizer)(ucsch))
BUCL::Rtl::AddInPlaceWithOverflowCheck(&MaximumLength, Sources[i].Length)
BUCL::Rtl::ConvertInteger( ((ULONG_PTR)pvWriteCursor) - ((ULONG_PTR)pHeader), pHeader->TotalSize)
BUCL::Rtl::ConvertInteger(Pairs.Length, pHeader->TotalCount)
BUCL::Rtl::ConvertInteger(pObject->m_cChildren, pDocument->usChildNodes)
BUCL::Rtl::ConvertInteger(WriteBlock.Length, pHeader->ulOffsetToDoctypeData)
BUCL::Rtl::ConvertInteger(WriteBlock.Length, pHeader->ulOffsetToDomLayout)
BUCL::Rtl::ConvertInteger(WriteBlock.Length, pHeader->ulOffsetToPositionData)
BUCL::Rtl::ConvertInteger(WriteBlock.Length, pHeader->ulTotalSize)
BUCL::Rtl::Increment(m_NextStringId)
BUCL::Rtl::Multiply(WorkingBufferSize, MultiplicativeGrowthFactor, WorkingBufferSize)
BUCL::Rtl::QuickSort(Pairs, CompareStringSlot)
C8H+9L
cbRequiredSize <= BUCL::CMaximumInteger<ULONG>::Value
cch <= (((((SIZE_T)~((SIZE_T)0)) - (((SIZE_T)~((SIZE_T)0)) % sizeof(WCHAR))) / sizeof(WCHAR)) - 1)
CDATA
CloseHandle
CloserElement = this->AllocateStreamObject()
CMicrodom
CMicrodom_Blob
CMicrodomBuilder::AddString
CMicrodomBuilder::CElementNameToAttributeListTable::MaybeInsert
CMicrodomBuilder::CFourStringIdTable<struct _MICRODOM_XML_ATTDEF const *>::Initialize
CMicrodomBuilder::CFourStringIdTable<unsigned short>::Initialize
CMicrodomBuilder::CNamespaceNameExistenceCheck::AddAndCheckExistence
CMicrodomBuilder::CNamespaceNamePrefixToAttDef::Insert
CMicrodomBuilder::ConstructAndWriteMicrodom
CMicrodomBuilder::ConsumeAttdef
CMicrodomBuilder::ConsumeCData
CMicrodomBuilder::ConsumeComment
CMicrodomBuilder::ConsumeEntityDecl
CMicrodomBuilder::ConsumePCData
CMicrodomBuilder::ConsumeProcessingInstruction
CMicrodomBuilder::DetermineStringTableSize
CMicrodomBuilder::EndAttlist
CMicrodomBuilder::EndElement
CMicrodomBuilder::GetXmlDomSize
CMicrodomBuilder::Initialize
CMicrodomBuilder::InsertDefaultAttributes
CMicrodomBuilder::ProduceStringTable
CMicrodomBuilder::StartAttlist
CMicrodomBuilder::StartDocument
CMicrodomBuilder::StartElement
CMicrodomBuilder::WriteXmlDom
CMicrodomXmlWalker::XmlError
CompanyName
Context->EncodingFunction == 0
Context->MultiEncodingFunction == 0
CoTaskMemFree
CreateFileW
CRtlGrowingList<struct _XMLDOC_ATTRIBUTE,50,4>::Initialize
CRtlSmartUcsEncoderTraitsBase<class CRtlSmartUcsEncoderTraits<struct _LUNICODE_STRING> >::Encode
CRtlSmartUcsEncoderTraitsBase<class CRtlSmartUcsEncoderTraits<struct _LUTF8_STRING> >::Encode
CustomImageAvailable
CustomImageLocation
CXmlCursor::CompareExtents
CXmlCursor::CompareStrings
CXmlCursor::DecodeExtent
CXmlCursor::Next
CXmlCursor::XmlAlloc
CXmlLogicalState::~CXmlLogicalState
CXmlLogicalState::Initialize
CXmlNamespaceManager::Initialize
D!l$@
D$ A;
D$ E3
D$ H#
D$ L#
D$ L9v u
D$(E3
D$(H+
D$(H+G H
D$(I+
D$@E!
D$@E3
D$`D9`
D$`E3
D$`H+
D$`I;
D$0=.
D$0E3
D$0L9
D$0L9l$H
D$0L9m
D$2L;
D$4fD
d$8E3
d$H9]
D$HE3
D$l9G
D$PE3
D$XM;
D;@0t
D;H$u
D;H,u
D;P$u
D;P(u
D;P,u
D;P0t
D;X$u
D;X(u
D;X,u
D;y(t
D8d$\
D8d$\tR
D8d$\u
D8D$3
D8d$hu-
D8n1t
D8n1u
D9#u`H
D9.uV;
D9e@u
D9uHu5A
D9X,u
D9X0t
DbgPrintEx
Decoder != 0
DefaultAttribute.Allocate()
DeleteCriticalSection
DestinationMaximumLength >= SourceLength
DeviceIoControl
DOCTYPE
DownlevelWinreLocation
E H;E(v
E I+F
E(=csm
E(H9E v
E0D!v
E8=csm
E9<$u
E9'ugE3
Eh=csm
EH=csm
ELEMENT
Encoder != 0
encoding
EncodingSizer != 0
ENTITIES
ENTITY
Entity.Length != 0
EPD9uH
EPu/H
Ex=csm
EX=csm
EXD98t
F D8d$\t
F H;F(v
F(H9F v
F0A;P
f99t?f9
f9Xrt
f9YBu
fA9<Bu
fA9Qrv
fA9qxu
fD9 t
fD9!t
fD9@Bt{H
fD9{rr
fE9Qrr
fFound
FileDescription
FileVersion
FindFirstVolumeW
FindNextVolumeW
FindVolumeClose
FIXED
G E9 uuI
G(I9G v
G\9ADu
G`9ALt
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDiskFreeSpaceExW
GetDriveTypeW
GetFileAttributesExW
GetFileSize
GetLastError
GetProcessHeap
GetSystemDirectoryW
GetSystemTimeAsFileTime
GetTickCount
GetVolumeNameForVolumeMountPointW
gfffffffI
H!\$0H
H!\$8E3
H!|$h3
H!0H!p
H!L$83
H!p(H!p0H
H(L9k
H;{(u
H;C$urH
H;C,ueE
H;D$ 
H+} H
H+~ I
H+w H
H9_ t
H9A r
H9D$0t
H9Gxt
H9GXu
H9K u+L;s(u
H9MHt
H9Z0u
HcL$P
HeapAlloc
HeapFree
http://www.w3.org/2000/09/xmldsig#
http://www.w3.org/2000/xmlns/
http://www.w3.org/XML/1998/namespace
IDREF
IDREFS
ImageLocation
IMPLIED
index
InstallState
internal\onecorebase\inc\rtl_object_library.h
InternalName
IsAutoRepairOn
IsServer
IsWimBoot
j < ValidProperties.Length
J0H9J
k VWAVH
L!0L!p
L!p(H
L!t$ H
L!t$ L
l$ E3
L$ H;
L$ SUVWH
L$ SVWH
L$ VWATAVAWH
l$ VWATAVAWH
l$ VWAVH
L$(H3
L$@E3
L$@H3
L$`H+
L$`H3
L$0E3
L$0H3
L$8H3
L$8M;e
L$HH3
l$LE3
L$P!\$(A
L$PE3
L$PfH
L$PH3
L$pH3
L$PH3
L$XD8d$\uV
L$XH3
L;G(u[H9Q
L+~ M
L+u L
L9@ u
L9g u
L9I t
L9l$@u<
L9l$8u
L9l$Pu
L9y u
LcA<E3
LegalCopyright
Locals.Allocate()
LocationHeader != 0
LocationHeader->Signature == ('cLdM')
m.Reserved < m_NamedNodeMaps.Size()
m_AttdefListTable.FindOrInsertIfNotPresent( ulElementName, NewAttdefList, &pAttdefList)
m_AttdefListTable.Initialize()
m_CurrentStreamObject != 0
m_Entries.Allocate(PoolHeader->TotalCount)
m_MicrodomDataBlob.Length >= sizeof(MICRODOM_HEADER)
m_PropertyCache.Allocate(m_LayoutCache.TotalObjectCount())
m_pTargetObject->IsNamedNodeMapValid(NodeMap)
m_StoredTable.FindOrInsertIfNotPresent(p, (USHORT)0, 0, &fExisted)
m_StoredTable.FindOrInsertIfNotPresent(Pair, pAttDef)
m_StoredTable.FindOrInsertIfNotPresent(Pair, Value, 0, pfExisted)
m_StoredTable.Initialize()
M9~ uIM
M9Q uv
malloc
MdDlA
MdDtL
MdHdH
MdSpI
memcmp
memcpy
memcpy_s
memset
MHL!t$ L
MicrodomImplementation::CDomLayoutCache::AdvanceCachedPointer
MicrodomImplementation::CDomLayoutCache::DecodeElementCounts
MicrodomImplementation::CDomLayoutCache::FindObject
MicrodomImplementation::CDomLayoutCache::GetNodeChildren
MicrodomImplementation::CDomPositionCache::AttachToPositionList
MicrodomImplementation::CDomPositionCache::GetLocation
MicrodomImplementation::CMicrodom::CreateInterface
MicrodomImplementation::CMicrodom::DecodeXmlString
MicrodomImplementation::CMicrodom::FindObject
MicrodomImplementation::CMicrodom::GetDocumentNodeSet
MicrodomImplementation::CMicrodom::GetElementById
MicrodomImplementation::CMicrodom::GetElementNodeSet
MicrodomImplementation::CMicrodom::GetElementsByTagName
MicrodomImplementation::CMicrodom::GetElementsByTagNameCommon
MicrodomImplementation::CMicrodom::GetNamedNodeMapItem
MicrodomImplementation::CMicrodom::GetNamedNodeMapLength
MicrodomImplementation::CMicrodom::GetNodeMapNamedItem
MicrodomImplementation::CMicrodom::Initialize
MicrodomImplementation::CMicrodom::IRtlMicrodom_Cast
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::CTempOutputStream::CreateInterface
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttribute
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttributeNode
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttributeNS
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetAttributeNSNode
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetDocument
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetDocumentElement
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetDocumentNodeSet
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementById
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementNodeSet
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementsByTagName
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetElementsByTagNameNS
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetItem
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetMicrodomBinaryRepresentation
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetNamedItem
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetNamedItemNs
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetPropertiesSetup
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::GetXml
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasAttribute
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasAttributeNs
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasAttributes
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::HasChildNodes
MicrodomImplementation::CMicrodom_IRtlMicrodomTearoff::Length
MicrodomImplementation::CreateBinaryMicrodomFromXml
MicrodomImplementation::CStringpoolCache::AttachToStringPool
MicrodomImplementation::CStringpoolCache::FindString
MicrodomImplementation::DecodeXmlCharacterToUcsChar
MicrodomWriterImplementation::CMicrodomWriter::CreateInterface
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::BeginOpenElement
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::CloseElement
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::EmitAttribute
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::EndOpenElement
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteCData
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteComment
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteEscapedString
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteProcessingInstruction
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteRawString
MicrodomWriterImplementation::CMicrodomWriter_IRtlMicrodomXmlWriter::WriteText
Microsoft
Microsoft Corporation
Microsoft Windows Recovery Info DLL
msvcrt.dll
MultiByteToWideChar
NarratorScheduled
NDATA
NewAttdef = this->AllocateStreamObject()
NewAttlist = this->AllocateStreamObject()
NewAttlistClose = this->AllocateStreamObject()
NewAttribute = this->AllocateStreamObject()
NewCData = this->AllocateStreamObject()
NewComment = this->AllocateStreamObject()
NewDocument = this->AllocateStreamObject()
NewElement = this->AllocateStreamObject()
NewEntityDecl = this->AllocateStreamObject()
NewInstance.Allocate()
NewPcData = this->AllocateStreamObject()
NewProcessingInstruction = this->AllocateStreamObject()
NewTearoff.Allocate()
NMTOKEN
NMTOKENS
No more than one flag set check failed: __e
NodeIndex < m_pTargetObject->m_LayoutCache.TotalObjectCount()
NodeMap != Windows::Microdom::Rtl::NamedNodeMap::InvalidValue()
NOTATION
Not-null check failed: Blob
Not-null check failed: ComparisonResult
Not-null check failed: Context
Not-null check failed: Data
Not-null check failed: DataBlock
Not-null check failed: Decoder
Not-null check failed: Destination
Not-null check failed: Document
Not-null check failed: DocumentNode
Not-null check failed: fHasAttribute
Not-null check failed: fHasAttributes
Not-null check failed: fHasChildNodes
Not-null check failed: Interface
Not-null check failed: Length
Not-null check failed: Matches
Not-null check failed: MatchIndex
Not-null check failed: NodeList
Not-null check failed: NodeSet
Not-null check failed: Out
Not-null check failed: Params
Not-null check failed: Params->Source.pBlob
Not-null check failed: Params->Source.pIStream
Not-null check failed: pDocument
Not-null check failed: pOutputStream
Not-null check failed: PseudoKeyOut
Not-null check failed: pStream
Not-null check failed: pStreamToWriteTo
Not-null check failed: pWriter
Not-null check failed: Result
Not-null check failed: Root
Not-null check failed: Source
Not-null check failed: String
Not-null check failed: String1
Not-null check failed: String2
Not-null check failed: StringBuilder
Not-null check failed: StringIn
Not-null check failed: Target
Not-null check failed: Value
Not-null check failed: Writer
Not-null check failed: WritingContext
Not-null check failed: WritingInterface
NtClose
ntdll.dll
NtYieldExecution
ObjectHeader->uElementType == ucObjectType
OemTool
offset
onecore\base\lstring\lblob.cpp
onecore\base\lstring\lblob_encoders.cpp
onecore\base\lstring\lunicode_string.cpp
onecore\base\lstring\lutf8_string.cpp
onecore\base\lstring\stringbuilder.cpp
onecore\base\lstring\ucsdecoders.cpp
onecore\base\xml\udom_builder.cpp
onecore\base\xml\udom_microdom.cpp
onecore\base\xml\udom_writer.cpp
onecore\base\xml\udom_xmlcursor.cpp
onecore\base\xml\udom_xmlwalker.h
onecore\base\xml\xml_writer.cpp
OperationParam
OperationPermanent
OriginalFilename
OsBuildVersion
OsInstallAvailable
OsInstallLocation
p WATAUAVAWH
PA^_]
PA^_^
PA^_^][
pA_A^_^]
pA_A^A\_^[]
pA_A^A]A\_^]
PA_A^A]A\_^]
Pairs.Allocate(m_StringTable.GetEntryCount())
Params->fRequireUtf8
PBRCustomImageLocation
PBRImageLocation
pDoctype->ulSignature == ('tDdM')
pDomLayout->ulSignature == ('lDdM')
pHeader->ulOffsetToDomLayout < pHeader->ulTotalSize
pHeader->ulOffsetToPositionData < pHeader->ulTotalSize
pHeader->ulOffsetToStringPool < pHeader->ulTotalSize
pHeader->ulSignature == ('dHdM')
pHeader->ulTotalSize == m_MicrodomDataBlob.Length
PoolHeader != 0
PoolHeader->Signature == ('pSdM')
ProductName
ProductVersion
Properties.Length == Results.Length
pStringPool->Signature == ('pSdM')
PUBLIC
Q tzL
QueryPerformanceCounter
r!L!v
r9L!b
ReadFile
ReAgent.xml
Recovery
RegCloseKey
RegOpenKeyExW
RegQueryValueExW
ReInfo.dll
reinfo.dll
ReInfo.pdb
REQUIRED
Root != Root.InvalidValue()
RtlAllocateHeap
RtlAllocateLBlob
RtlAppendLBlobToLBlob
RtlAppendLUtf8StringToLUtf8String
RtlAppendUcsCharacterToLUtf8String
RtlCaptureContext
RtlCompareEncodedLBlobs
RtlConcatenateLUtf8Strings
RtlCopyLBlob
RtlCreateMicrodom
RtlCreateUtf8UCSStringBuilder
RtlDuplicateLBlob
RtlDuplicateLUnicodeStringToLUtf8String
RtlDuplicateLUtf8String
RtlDuplicateLUtf8StringToLUnicodeString
RtlFreeHeap
RtlGetCharacterSetDecoder
RtlGUIDFromString
RtlHashEncodedLBlob
RtlInitializeCriticalSection
RtlInitializeGrowingList( this, sizeof(TStoredObject), m_ulElementsPerChunk, (PVOID)m_InternalBuffer, sizeof(m_InternalBuffer), Allocator )
RtlInitializeSmartLBlobWritingContext
RtlInitializeSmartLUnicodeStringWritingContext
RtlInitLUnicodeStringFromNullTerminatedString
RtlIsLBlobValid(BinaryData)
RtlIsLBlobValid(Source)
RtlIsLUtf8StringValid(ElementId)
RtlIsLUtf8StringValid(LocalName)
RtlIsLUtf8StringValid(LocalName) || (LocalName == 0)
RtlIsLUtf8StringValid(Name)
RtlIsLUtf8StringValid(NamespaceURI)
RtlIsLUtf8StringValid(NamespaceURI) || (NamespaceURI == 0)
RtlIsLUtf8StringValid(Source)
RtlIsLUtf8StringValid(TagName) || (TagName == 0)
RtlLookupFunctionEntry
RtlMatchLUtf8StringAgainstPointerList
RtlNsInitialize(this, Comparison, pvCompareContext, Alloc)
RtlNtStatusToDosError
RtlpSmartLBlobWritingContextResizePolicy
RtlRaiseStatus
RtlReAllocateHeap
RtlReallocateLBlob
RtlReallocateLUtf8String
RtlTranscodeLBlobs
RtlVirtualUnwind
RtlWriteDataIntoSmartLBlobWritingContext
RtlWriteDecodedUcsDataIntoSmartLBlobUcsWritingContext
RtlWriteMicrodomXml
RtlWriteUcsDataIntoSmartLBlobUcsWritingContext_NOCFG
RtlXmlDefaultCompareStrings(&m_State.ParseState, Left, Right, pResult)
RtlXmlDestroyNextLogicalThing(this)
RtlXmlDetermineStreamEncoding(&TokenizerState, &EncodingLength)
RtlXmlInitializeNextLogicalThing(this, &Init)
RtlXmlInitializeTokenization(&TokenizerState, &TokenizerInit)
RtlXmlNextLogicalThing( &m_State, &m_Namespaces, &m_CurrentThing, &m_AttributeList )
s WATAUAVAWH
ScheduledOperation
SetEndOfFile
SetLastError
SetUnhandledExceptionFilter
Sleep
SOFTWARE\Microsoft\RecoveryEnvironment
SOFTWARE\Microsoft\Windows\CurrentVersion\Reliability\WinRE
Source.Length >= 2
Source.Length >= 3
SourceWimPath
standalone
state
StringFileInfo
StringId < m_Entries.Length
sX8T$ 
SYSTEM
SYSTEM\CurrentControlSet\Control\MiniNT
system32\
t$ I3
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WAVAWH
t$ WH
T$(E3
t$(E3
T$(H;
T$@9r
t$@D9
T$`I;
t$L9B
t$PH;
t%9X u
t&D9@ u
t/H9k u
t;fD9qBu
t+D9@ u
t0L9y u
tAH9{
tAH9S(u6
TargetOS
Temp = (*RtlReallocateStringRoutine)(Bytes, Blob->Buffer)
Temp = (PUCHAR)((*RtlAllocateStringRoutine)(Bytes))
TempBuilderObject.Allocate()
TempDecoder != 0
TempElements.Allocate(NewCapacity)
TempNodes.Allocate(this->m_LayoutCache.TotalObjectCount())
TempNodes.Allocate(UpperIndex - TheElement.Reserved)
TempTempElements.Allocate(NewCapacity)
TerminateProcess
TheDocument.Reserved == m_pTargetObject->m_LayoutCache.DocumentId()
TheElement != TheElement.InvalidValue()
TheEndElement = this->AllocateStreamObject()
TheNode != TheNode.InvalidValue()
this->m_PositionList.Allocate(LocationHeader->ulItemCount)
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
TmpNodes.Resize(cNecessary)
Translation
u HcA<H
u{D9}
u5L9n
UATAUAVAWH
UCS-2
UCS-4
ugL9I
ulIndex < m_Header->ulTotalNodeCount
ulLocation < m_PositionList.Length
ulValue < MultFactor
ulWhich < TheMap->Length
UnhandledExceptionFilter
uOL9-
USVWATAUAVAWH
UTF-16
UTF-8
uuD9}
UVWATAUAVAWH
UVWAVAWH
UWAVH
uXD9uH
Valid flags check failed: Flags
VarFileInfo
version
VS_VERSION_INFO
VWATAVAWH
VWAUAVAWH
VWAVH
WATAUAVAWH
WAVAWH
wcschr
whichDoc.Reserved == m_pTargetObject->m_LayoutCache.DocumentId()
whichElement != Windows::Microdom::Rtl::Element::InvalidValue()
WimHash
WimValidated
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomImplementation::CMicrodom>::CreateInstance
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomImplementation::CMicrodom>::CreateTearoff
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomWriterImplementation::CMicrodomWriter>::CreateInstance
Windows::Rtl::CRtlObjectTypeDescription<class MicrodomWriterImplementation::CMicrodomWriter>::CreateTearoff
Windows::Rtl::CRtlObjectTypeDescription<class XmlWriterImplementation::CXmlWriter>::CreateInstance
Windows::Rtl::CRtlObjectTypeDescription<class XmlWriterImplementation::CXmlWriter>::CreateTearoff
WindowsRE
Winre.wim
WinreBCD
WinReGetConfig
WinreLocation
WinREStaged
WriteFile
x ATAVAWH
x AUAVAWH
x AVE3
x AVH
x UATAUAVAWH
x^D8E
x3D8d$\u,
xA_A^_^[]
xA_A^A]A\_^[]
xBD8d$\u;
xCD8d$\u<
xm9\$ t]H
xmlns
XmlWriterImplementation::CXmlWriter::CreateInterface
XmlWriterImplementation::CXmlWriter::IRtlXmlWriter_EndOpenElement
XmlWriterImplementation::CXmlWriter::WriteEscapedString
XmlWriterImplementation::RtlCreateDefaultXmlWriter
xSE8e
xZE8e
