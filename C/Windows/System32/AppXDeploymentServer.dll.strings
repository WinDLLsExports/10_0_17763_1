                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
 @8}(t?L
 _^]H
 9\$8t
 A^^]
 A^_]
 A^_^
 A^_^[]
 A^A\_
 A^A\_^]
 A__]
 A__^
 A_A^]
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_]
 A_A^A\_^
 A_A^A\_^][
 A_A^A]_^
 A_A^A]A\_
 A_A^A]A\_^]
 addPackageList:
 D8}xu/
 D8e@tr
 destagePackageList:
 H3E H3E
 Hcy@H
 is updating to 
 Microsoft Corporation. All rights reserved.
 Operating System
 removePackageList:
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT _PackageID FROM Package AS p WHERE (CASE WHEN p.SourceBundle=0 THEN p.PackageType&0x21!=0 ELSE p.PackageType&8!=0 END) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6));
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND pu.DeploymentState=6 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND pu.DeploymentState=6 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 updateList:
 UpstreamDependentPackageFullName
 vT-j
 Windows
!(H!l$ I
!\$ H
!\$(!\$,H!\$03
!\$(E3
!\$(H
!\$`H
!\$0H
!|$ 3
!|$(H!|$ 
!|$0H
!1+tx
!D$0H
!D$8H
!D$8I
!D$8L
!D$pA
!D$PI
!D$XI
!E#H!E'H!E/H
!E(E3
!L$<A
!This program cannot be run in DOS mode.
"[ANtZ)
"5v8Tz
"d?|1q
"q\ pK
#~oH"
#8]Pt\H
#L$<A
#L$0H
#-M~\
#StreamingDataSourcePrefetchCanceled
#text
#XG!A
$#Au+
$$>yR
${}^]^F
$0< u
$0< u;3
$htd$
%;A&;
%|fUN<
%02u%02u%02u %02u%02u%02u.%03u [Error 0x%08X] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%1.8e;%1.8e;%1.8e;%1.8e;%1.8e;%1.8e
%AppRepository%
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
%AppRepository%\StateRepository-Machine.srd
%d.%d.%d.%d
%f,%f,%f
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%d)\%hs!%p: 
%hu.%hu.%hu.%hu
%j&!f
%programdata%\Microsoft\Windows\AppRepository\
%s!%s
%s-%s-
%s-%s%c
%s-%s%c0
%s%s%s%s
%s%s\%s
%s:%s:%s
%s\%s
%s\AC
%s\AppData
%s\LocalCache
%s\LocalState
%s\microsoft.system.package.metadata\%s
%s\resources.pri
%s\RoamingState
%s\Settings
%s\TempState
%s\WpSystem
%s\WpSystem\%s\AppData\Local\Packages
%s\WpSystem\*
%s\WpSystem\AppData\Local\Packages
%s_%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X.%s
%s_%s_%s
%s_%s_%s_%s
%s_32
%s_64
%SystemRoot%\System32\RuntimeBroker.exe
%USERPROFILE%
%windir%\Logs\WindowsUpdate\
%windir%\Temp\
&/.Yx.
&9l$Pt?H
&D8l$@tbH
&fD93u
&L9%g
&L9't
&m+=m
&t5zs
(&,<N
(_^][
(|$@H
(A;;0x120089;;;BU)
(A;;0x1200A9;;;BU)
(A;;0x1200a9;;;RC)
(A;;FR;;;BU)
(A;;GA;;;SY)(A;;0x120089;;;S-1-15-2-2)(A;;0x120089;;;LS)(A;;0x120089;;;NS)(A;;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;0x120089;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)
(A;;GA;;;SY)(A;;0x1200A9;;;S-1-15-2-2)(A;;0x1200A9;;;LS)(A;;0x1200A9;;;NS)(A;;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;0x1200A9;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)
(A;CI;FRFX;;;BA)(XA;;FRFX;;;BU;(exists WIN://SYSAPPID))
(A;OICI;0x120089;;;%s)
(A;OICI;0x120089;;;%s)(A;OICI;0x120089;;;%s)
(A;OICI;0x120089;;;BU)
(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;BU)
(A;OICI;FR;;;BU)
(A;OICI;FRFX;;;BA)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A_A^A]A\_^[]
(caller: %p) 
(D$`H
(D$PH
(D8e8
(D8uhu
(H93u!H
(null)
(query only)
(t$ H
(t$@L
(t$0H
(Unknown)
(XA;;0x120089;;;BU;(exists WIN://PKG))
(XA;;0x1200A9;;;BU;(exists WIN://PKG))
(XA;;0x1200A9;;;BU;(WIN://SYSAPPID Contains "
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPID Contains "%s"))
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))
)%/Gq
)(A;OICI;0x1200a9;;;
)|$@H
)~A}F
)D8t$0u|D
)t$@L
)t$0H
)t$PH
*"J9t
*.rslc
*?7YC
*[local-name()='%s']
*[local-name()='AllowedProduct']
*[local-name()='AppExecutionAlias']
*[local-name()='AppExtension']
*[local-name()='AppExtensionHost']/*[local-name()='Name']
*[local-name()='AppInstaller']/*[local-name()='Dependencies']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='MainBundle']
*[local-name()='AppInstaller']/*[local-name()='MainPackage']
*[local-name()='AppInstaller']/*[local-name()='OptionalPackages']/*[local-name()='Bundle']
*[local-name()='AppInstaller']/*[local-name()='OptionalPackages']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='RelatedPackages']/*[local-name()='Bundle']
*[local-name()='AppInstaller']/*[local-name()='RelatedPackages']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='AutomaticBackgroundTask']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='ForceUpdateFromAnyVersion']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='OnLaunch']
*[local-name()='AppInstaller']/@Uri
*[local-name()='AppInstaller']/@Version
*[local-name()='AppService']
*[local-name()='AppUriHandler']
*[local-name()='BackgroundTasks']/*[local-name()='Task']
*[local-name()='ContentPackageVisualElements']
*[local-name()='DisplayName']
*[local-name()='DriverConstraint']
*[local-name()='EditFlags']
*[local-name()='ExecutionAlias']
*[local-name()='FileTypeAssociation']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='HoloContent']
*[local-name()='Host']
*[local-name()='InfoTip']
*[local-name()='Logo']
*[local-name()='MixedRealityModel']/@*[local-name()='Path']
*[local-name()='Properties']
*[local-name()='Protocol']
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
*[local-name()='SupportedVerbs']/*[local-name()='Verb' and @Id='Open']
*[local-name()='VisualElements']
*[local-name()='VisualElements']/*[local-name()='ApplicationView']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='MixedRealityModel']/*[local-name()='SpatialBoundingBox']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='MixedRealityModel']/@Path
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='ShowNameOnTiles']/*[local-name()='ShowOn']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@ShortName
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@ShowName
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Square310x310Logo
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Tall150x310Logo
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/holo:HoloContent
*[local-name()='VisualElements']/*[local-name()='InitialRotationPreference']/*[local-name()='Rotation']
*[local-name()='VisualElements']/*[local-name()='LockScreen']
*[local-name()='VisualElements']/*[local-name()='LockScreen']/@BadgeLogo
*[local-name()='VisualElements']/*[local-name()='LockScreen']/@Notification
*[local-name()='VisualElements']/*[local-name()='SplashScreen']
*[local-name()='VisualElements']/*[local-name()='SplashScreen']/@*[local-name()='Optional']
*[local-name()='VisualElements']/*[local-name()='VisualGroup']
*[local-name()='VisualElements']/@BackgroundColor
*[local-name()='VisualElements']/@DisplayName
*[local-name()='VisualElements']/@ForegroundText
*[local-name()='XboxLive']
*D8l$@u H
*H;\$`H
'*KF3!1
*u!I;
*Zc2/
, attributes 0x
, could not get user sid
, user SID: 
,\onecore\admin\appmodel\stagingmanager\src\appxpackagestagingsession.cpp
,6M80i
,I[z$E
,IoMS
,p<DR
,wB~>
,xEPg
,Zndrz
... Applicability is offline, because it is not Installed for every user and is offline
... Applicability is offline, because package family is on an offline volume
... Applicability state is Installable because a higher version of the package was found, but the caller is forcing a downgrade.
... Applicability state is Installable because a higher version was found, but lower versions are installable
... Applicability state is Installable because it is a framework and concurrent architecture installs are allowed when neither of them is neutral.
... Applicability state is Installable because it is not already installed and no higher version was found
... Applicability state is Installable because the package is Inbox and a different version is currently installed
... Applicability state is Installed because a higher version of the package was found installed.
... Applicability state is Installed because the exact version, arch and language was found installed.
... Applicability state is Installed but package was not found in mini-repository. Applicability State is RequiresReinstall.
... Applicability state is Installed but this inbox package was not found in the per-user AllUserStore. Applicability State is RequiresReinstall.
... Applicability state is Not Installable
... Applicability state is NotInstallable because it is already installed with a different resourceID
... Applicability state is NotInstallable because the architecture is incompatible with the system
... Applicability state is NotInstallable because the package is incompatible with the system by policy
... Applicability state is RequiresReinstall because the exact version, arch and language was found installed, but it is in a bad status
... Checking Applicability for user
... Package may have been blocked because payload type is unknown
....... Package may have been blocked because payload type is unknown
./*[local-name()='VisualElements']
./m:VisualElements
./m2:VisualElements
./m3:VisualElements
.?AV<lambda_c11cd384dede5ed21b37ab49eb636685>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVResultException@wil@@
.?AVtype_info@@
.00cfg
.appx_
.blockcache
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.emsix
.gfids
.giats
.IcV$H
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.jB%y,
.k!2"
.L9&t
.msix
.pdata
.Ph.$
.rdata
.rdata$brc
.rdata$r
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.recovery
.rslc
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata
.xdata$x
.xn--
/&N^D
/&W~]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and (@EntryPoint="Windows.FullTrustApplication" or @EntryPoint="Windows.PartialTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and ( @Category="windows.fullTrustProcess" or @Category="windows.toastNotificationActivation" or @Category="windows.searchProtocolHandler" or @Category="windows.appPrinter" or @Category="windows.searchFilterHandler" or @Category="windows.searchPropertyHandler" or @Category="windows.mailProvider" or @Category="windows.comServer" or @Category="windows.comInterface" )]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and (@EntryPoint="Windows.FullTrustApplication" or @EntryPoint="Windows.PartialTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @Category="windows.activatableClass.outOfProcessServer"]/*[local-name()="OutOfProcessServer" and (@RunFullTrust="true" or @RunFullTrust="1")]
/*[local-name()="Package"]/*[local-name()="Capabilities"]/*[local-name()="Capability" and @Name="runFullTrust"]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and ( @Category="windows.firewallRules" or  @Category="windows.comInterface"  or  @Category="windows.primaryInteropAssemblies" or  @Category="windows.classicAppCompatKeys" )]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @Category="windows.activatableClass.outOfProcessServer"]/*[local-name()="OutOfProcessServer" and (@RunFullTrust="true" or @RunFullTrust="1")]
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s' and @EntryPoint='Windows.FullTrustApplication']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s' and @EntryPoint='Windows.PartialTrustApplication']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='ApplicationContentUriRules']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.ntServices']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Extensions']/*[local-name()='Extension']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Properties']/*
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='VisualElements']/*[local-name()='DefaultTile']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @StartPage] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @StartPage]
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.localExperiencePack']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.ntServices']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='xbox.live']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='xbox.vui']/*[local-name()='XboxVui']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Ratings']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='VisualElements']/*[local-name()='DefaultTile']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability'][@Name='contentRestrictions']
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='DriverDependency']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='PackageExtension' and @Category='xbox.contentpackage']/*[local-name()='ContentPackage']
/*[local-name()='Package']/*[local-name()='Prerequisites']/*[local-name()='OSName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='*']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PublisherDisplayName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='SupportedUsers']
//*[local-name() = 'Extension' and @Category = 'windows.settingsApp']
/hMik
/qxjj
/t#A+
: could not check access
: could not get attributes
: could not get SDDL
: could not get security descriptor
: owner is 
: SDDL is 
: size 
: user has access 0x
: user has no access
:%|fUu3
:(s$+u(
::GetLastError()
:@8y=tCH
:\t"H
:cK1@
:D8eou
:Ju[q
:lUs3
:memory:
:m'w8u(
:o-(ZA#
:onecore\admin\appmodel\packagemanager\server\iasyncrequest.cpp
:PKCX
:TOC8uWD9B
;.O?5
;\$8r
;|$`r
;|$0r
;|$hr
;8D$@um
;b%"'
;f99t{L+
;l$xu
;m@}+
;PKCXt
;t$@t
;UXyY
?_Xbad_function_call@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?ARI8u
?cu_L
?H;|$0u
?PFun=
?SRjm
@*[local-name()='DdeExecApplication']
@*[local-name()='DdeExecCommand']
@*[local-name()='DdeExecIfExec']
@*[local-name()='DdeExecTopic']
@*[local-name()='ServiceWorker']
@,ruD!x
@.data
@.didat
@.reloc
@:&R0
@6666666\[
@8,1u
@8|$@
@8|$@t4
@8|$@u
@8|$@u_
@8|$`
@8|$0
@8|$0tmH
@8|$0u
@8|$1
@8|$1t
@8|$1tSH
@8|$2
@8|$8t3L
@8|$P
@8|$pt
@8|$pt:L
@8|$Xt
@8|$Xt*
@8|$Xu
'@8}(u
@8}@u
@8}Hts@
@8~(t
@8=yZ&
@8iMu>
@8l$Xu]H
@8pht
@8t$ 
@8t$ u
@8t$@ur
@8t$`t-H
@8t$0t
@8t$0tS@
@8t$8u
@8t$I
@8t$Kt
@8t$Pt/@8p(u)H
@8u u
@8u uD
@8u@t
@8u_tRH
@8u0t
@8u8t
@8uht4
@8uou0
@8uwtYI
@8uwu
@8uwu-
@8uwu>
@8wXt$H
@A^_]
@A^_^
@A^_^[]
@A^_^][
@A^A\_
@A^A\_^]
@A^A]_H
@A__^
@A_A]A\_]
@A_A^]
@A_A^_
@A_A^_^[
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A\_^][
@A_A^A]_^
@A_A^A]A\_
@A_A^A]A\_^]
@Center
@Extents
@FamilyName
@FullName
@IsLOBApp
@MinDate
@MinVersion
@Name
@onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
@onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
@PackageType
@ProvisionSourceIsBundle
@Qm6t
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAUAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVWAVAWH
@SVWH
@tEH9
@Tile
@UATAUAVAWH
@UAVAWH
@USVATAVH
@USVAVAWH
@USVH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAUAWH
@USVWATAVAWH
@USVWATAVH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWATAUAVAWH
@USWAVAWH
@USWAVH
@USWH
@UVWATAUAVAWH
@UVWATAUH
@UVWATAVH
@UVWAUAVH
@UVWAVAWH
@UVWH
@UWAUAVAWH
@UWAVH
@VWATAVAWH
@VWAUAVAWH
@VWAVH
@VWAWH
@WAVAWH
[ UVWH
[%hs(%hs)]
[%hs]
[0D8k@t
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
[DatabaseCache.Add] #%u Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[DatabaseCache.Get(Hit)] #%u DatabaseCache %p: Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Miss)] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[io:xClose] #%u xClose() failed
[IzZG
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
[pre-DatabaseCache.Get] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
[pre-sqlite3_prepare] #%u Database %p : SQL %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[pre-sqlite3_step] #%u Database %p: Statement %p %s
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[sqlite3_close] #%u Database %p: %s
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
[StatementCache.Add(list)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[vfs:xOpen] #%u sqlite3_malloc() failed
\!w+Z
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWATAV
\$ UVWATAVH
\$ UVWAVAW
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$ WH
\$(E3
\$(H;
\$(L!|$ L
\$@H;
\$@L;
\$`E3
\$`H;
\$0;\$4u'D
\$0E3
\$0L;
\$0u;H
\$0uP
\$18D$6tTH
\$8E3
\$8H!\$@
\$DD9
\$HD;
\$HE3
\$hH;]
\$HH9Y8
\$HI;
\$hM9
\$LE3
\$pD8
\$pD8l$HtI
\$PD8t$@tZ
\$PE3
\$PH;
\$pI;
\$PL;
\$Pt2H
\$tI;
\$XH;\$xu
\*.xml
\\?\%s\microsoft.system.package.metadata\%s
\\?\UNC\
\AC\PackageInUseState\
\AppData
\Autogen
\ByteCodeGenerator.exe
\Deleted
\DeletedAllUserPackages
\GV,G
\JSByteCodeCache
\Local
\LocalCache
\LocalState
\LSi&
\Microsoft\Windows\AppxDeploymentClient
\Microsoft\Windows\CurrentVersion\AppModel\StateChange\PackageList\
\Packages
\resources.pri
\Resources\
\RoamingState
\RPC Control
\Schemas
\Settings
\settings.dat
\SharedLimitedTime\
\SharedLocal
\Staging
\TempState
\WcifsPort
],)D9
]|pIX
]0D9} tTH
]HD8}8
]HD9e
]HfA;
]HH9^8t?H
]oD9e
]PD9m
]XHcE
]xr~A
^(Zv([
^-2$k<
^D8|$ t
^Dmeh
^eCa!A{Zl
^HD8{@t
^lBaaAV
^z]m]
__C_specific_handler
__CxxFrameHandler3
__std_terminate
__TlgCV__
_1.0.0.0_neutral_neutral_nopublisherid
_Aonecore\admin\appmodel\packagemanager\server\inventoryhelpers.cpp
_Classes
_cw5n1h2txyewy
_CxxThrowException
_initterm
_initterm_e
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswscanf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__register_onexit_function
_o__seh_filter_dll
_o__set_errno
_o__stricmp
_o__ultow_s
_o__wcsicmp
_o__wcsnicmp
_o__wtoi
_o_free
_o_malloc
_o_qsort
_o_realloc
_o_strncpy_s
_o_strtol
_o_terminate
_o_toupper
_o_towlower
_o_wcscpy_s
_o_wcstoul
` UAVAWH
`.rdata
`\6}l
`A^_^[]
`A^_^][
`A^_^][H
`A_A^^[]
`A_A^_^]
`A_A^A\_]
`A_A^A\_^[]
`A_A^A\_^][
`A_A^A]_^[]
`A_A^A]A\_[]
`A_A^A]A\_^]
{ AVH
{ cu!
{` R'?
{0#r1
{0001376b-930d-50cd-2b29-491ca938cd54}
{072665fb-8953-5a85-931d-d06aeab3d109}
{19c13211-dec8-42d5-885a-c4cfa82ea1ed}
{3C42000F-CC27-48C3-A005-48F6E38B131F}
{3F471139-ACB7-4A01-B7A7-FF5DA4BA2D43}
{5526aed1-f6e5-5896-cbf0-27d9f59b6be7}
{8uOH
{9t$$u
{a)4{
{A89ECE52-7E8E-444F-BBD0-C68B76C2ECA4}#
{aa1b41d3-d193-4660-9b47-dd701ba55841}
{ba44067a-3c4b-459c-a8f6-18f0d3cf0870}
{BFF15E13-81BF-45EE-8B16-7CFEAD00DA86}
{cf7f94b3-08dc-5257-422f-497d7dc86ab3}
{D49918CF-9489-4BF1-9D7B-014D864CF71F}
{EB65A492-86C0-406A-BACE-9912D595BD69}
{F1EF270A-0D32-4352-BA52-DBAB41E1D859}
{fe0ab4b4-19b6-485b-89bb-60fd931fdd56}
{fe762fb1-341a-4dd4-b399-be1868b3d918}
{NoActivityID}
{R)]M
{YX i7
|$ AVH
|$ D+
|$ D8yMu<
|$ E3
|$ fD
|$ H;|$0tVE3
|$ UATAUAVAWH
|$ UATAVH
|$ UAVAWH
|$ UH
|$(E3
|$@D!|$H3
|$@E3
|$@H;}
|$@I;
|$@M;
|$`E3
|$`L;
|$0D8d$Pt#I
|$0D9|$8tVL
|$0E2
|$0E3
|$0H+
|$0L;
|$1@8t$0u
|$8H+
|$8L;v
|$dD8D$et
|$hD9d$8tXA
|$hE3
|$HE3
|$hE3
|$HE3
|$hH;
|$HI9
|$hL;
|$HL;
|$hL;
|$HL;vHr
|$P9|$pt
|$p9}
|$pD!|$xH
|$PE3
|$pE3
|$pL;v
|$tL9y(u%H
|$XE3
|$Xf9t$`t
|$XH;
|$xH;
|$XL!}
|$XL;
|^\SQ
|D8u@u
|D9l$Pt
|Dr\u
-|u6.
} D8}
}(L9{hu
};hfj;
}?k4%;
}@!}HH
}@I9<$t
}`H!}@
}=k-lW
}0D9e tOH
}0H+}(H
}bwu3
}f@bVt
}HD8}8
}HH!EHH9;t
}PH!}@!}0A
}S(xaL
}V,)W
}W8]Ot
}WNb+
}xM9w
}z&z(e==
~0uUH
~A87u
~HM9/
~i,%G(
~Pt/H
+  ^ 
+.//0
+@A">7
+D8|$pt
+dZrp>N
+L$8A
+T$Xt
+y*4o
<$I9t$
<:It3
<?xml version="1.0" encoding="utf-8"?><xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns:m="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns:xs="http://www.w3.org/2001/XMLSchema"><xs:element name="AppxProvisionList">  <xs:complexType>    <xs:all>      <xs:element name="EndOfLife" type="CT_EndOfLife" minOccurs="0"/>      <xs:element name="Provisioned" type="CT_Provisioned" minOccurs="0"/>    </xs:all>  </xs:complexType>  <xs:unique name="Package_FamilyName">    <xs:selector xpath="m:EndOfLife/m:Package"/>    <xs:field xpath="@FamilyName"/>  </xs:unique>  <xs:unique name="Package_FullName">    <xs:selector xpath="m:Provisioned/m:Package"/>    <xs:field xpath="@FullName"/>  </xs:unique></xs:element><xs:complexType name="CT_EndOfLife">  <xs:sequence>    <xs:element name="Package" maxOccurs="unbounded">      <xs:complexType>        <xs:attribute name="FamilyName" type="ST_FamilyName" use="required"/>      </xs:complexType>    </xs:element>  </xs:sequence></xs:complexType><xs:complexType name="CT_Provisioned">  <xs:sequence>    <xs:element name="Package" maxOccurs="unbounded">      <xs:complexType>        <xs:attribute name="FullName" type="ST_FullName" use="required"/>        <xs:attribute name="PackageType" type="ST_PackageType"/>        <xs:attribute name="ProvisionSourceIsBundle" type="xs:boolean"/>        <xs:attribute name="IsLOBApp" type="xs:boolean"/>      </xs:complexType>    </xs:element>  </xs:sequence></xs:complexType><xs:simpleType name="ST_FamilyName">  <xs:restriction base="xs:string">    <xs:minLength value="17"/>    <xs:maxLength value="64"/>  </xs:restriction></xs:simpleType><xs:simpleType name="ST_FullName">  <xs:restriction base="xs:string">    <xs:minLength value="30"/>    <xs:maxLength value="127"/>  </xs:restriction></xs:simpleType><xs:simpleType name="ST_PackageType">  <xs:restriction base="xs:string">    <xs:enumeration value="resource"/>    <xs:enumeration value="framework"/>    <xs:enumeration value="bundle"/>  </xs:restriction></xs:simpleType></xs:schema>
<@\tPL
<8\t&fB
<A\t;
<Error 0x%X converting the user's SID to a string>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in GetPackageFullName>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X in OpenProcessToken>
<Error 0x%X in QueryFullProcessImageNameW>
<Error allocating memory>
<Error message string not found>
<error>
<no-error-message>
<None>
<null>
<O\t:
<O\tN
<Q\u"fD
<sM2d
<String too big>
<t^pQp
<Task xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">            <RegistrationInfo>                <SecurityDescriptor>D:(A;;GA;;;SY)(A;;FRFX;;;LS)(A;;FA;;;BA)</SecurityDescriptor>            </RegistrationInfo>            <Principals>                <Principal id="LocalSystem">                    <UserId>S-1-5-18</UserId>                </Principal>            </Principals>            <Triggers>                <TimeTrigger>                    <Repetition>                        <Interval>PT8H</Interval>                        <StopAtDurationEnd>false</StopAtDurationEnd>                    </Repetition>                    <StartBoundary>2017-01-01T00:00:00Z</StartBoundary>                    <Enabled>true</Enabled>                    <RandomDelay>PT8H</RandomDelay>                </TimeTrigger>            </Triggers>            <Settings>                <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>                <DisallowStartIfOnBatteries>true</DisallowStartIfOnBatteries>                <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>                <AllowHardTerminate>false</AllowHardTerminate>                <StartWhenAvailable>true</StartWhenAvailable>                <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>                <AllowStartOnDemand>true</AllowStartOnDemand>                <Enabled>true</Enabled>                <Hidden>false</Hidden>                <RunOnlyIfIdle>true</RunOnlyIfIdle>                <WakeToRun>false</WakeToRun>                <Priority>8</Priority>                <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>            </Settings>            <Actions Context="LocalSystem">                <Exec>                    <Command>%windir%\system32\rundll32.exe</Command>                    <Arguments>%windir%\system32\AppxDeploymentClient.dll,AppInstallerUpdateAllTask</Arguments>                </Exec>            </Actions>        </Task>
<Unknown>
=,dB5
=[e/]
=A@cr
=K\]>
=L9t$ tHL
> w`Ic
>`onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
>D8l$0u
>QFy*
0$0zb?
0123456789abcdefghjkmnpqrstvwxyz
0123456789abcdefonecore\base\appmodel\common\bytebuffer.cpp
0123456789ABCDEFonecore\base\appmodel\common\sidhelper.cpp
040904B0
07B91411-14FE-4856-8982-C3FA%08x
0A\_]
0A]A\_^]
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A^A\_^]
0A__^
0A_A^]
0A_A^_
0A_A^_^[
0A_A^_^]
0A_A^A\
0A_A^A\_]
0A_A^A\_^
0A_A^A\_^[]
0A_A^A\_^][
0A_A^A]_]
0A_A^A]_^[]
0A_A^A]A\]
0A_A^A]A\_
0A_A^A]A\_^]
0D8l$1
0Jil*
0L!8L
0RP\M
0x%08lx
0xFFFFFFFFFFFF
0XP@SN+
1*+'4pf
1.3.6.1.4.1.311.10.3.6
1.3.6.1.4.1.311.76.3.1
1.3.6.1.4.1.311.76.5.99
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
1onecore\admin\appmodel\datasource\filedatasource\src\fileappxstreamingdatasource.cpp
2%2qY]
2@8|$1
2{.LJ
2CfC3
3*rJ*8
3} D+M
3>pyj
3D$4A
3D$4D
3D$8A
3D$HA
3D8eXt
3L$`D
3L$PA
4>:;+{
5:2$n
5}0J(
5D8egtOM
5Pw3j,8
5ZN87
6!,P^6@
66666
6D8t$0A
6H;t$@
6H93t
6L;t$`
7@UNtQueryWnfStateData
7AmU;0
7e9|h
7o#F6a
7pu)7,
7YI^.
7ze~e
8\$ t
8\$@t9
8\$@tk
8\$@tl
8\$`uS
8\$<ut
'8\$1t
8\$1u
8\$4taH
8\$5tdA8]
8\$HtUH
8\$Pu^H
8] t(L
8]_t}H
8]OtzM
8]Ou.H
8_^][
89:u!
8A^_^[
8A_A^A]A\_^][
8APPXu
8D$0t@
8D$0u
8D$3t:
8D$7u9
8D$Qt
8EAPX
8K|NT
-8O[+s
8RSLCt
8UguV
8Y@t9H
8Y<t9H
8Y0t9H
8Y8un
8Ydt9H
8YHt9H
8YPt9H
8YXt9H
-9%FDR
9/J<*
9\$@u
9\$0u
9\$8t
9\$8v H
9\$Xv
9\tJA
9{Xv)@8
9|$@t
9|$`t
9|$`v,A
9|$0v,A
9|$hv,A
9|$PtsH
9|$PtYH
9} tY
9}0t*H
9}8voH
9}Pu3H
9}PuBH
9~ u.
9~8wJH
90v&H
98veH
9ARI8u&A
9C u I
9C,|*M
9D$0t
9D$Pt#
9D$PujH
9D$PveD
9D$TusE
9e}IG
9EwuXH
9L$4uj3
9M4t[A
9N4t<
9N4tIA
9N4tJ
9O$tE
9O4t<
9O4t2
9O4t6
9onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
9q(t+I
9RSLC
9RSSTu|E
9RSSTuRD
9s$u9
9s@|/3
9SRD1H
9t$@t
9t$`t
9T$`w=9T$`
9t$0u
9t$0ugL
9t$0vI
9T$dt0H
9t$Pt
9t$Pt$H
9t$Xt
9u@vFA
9u@wJD
9-uAH
9uot&H
9uPv%
9W$}'H
9w(v!H
9wHutH
9y<tjH
A !A(H
A!4$I
A(;A,H
A(A;@
A(t&H
A,9A(
A,H;F
A,I9G
A,I9G,
A.Z@ 
A;FTu
A;G uSD
A;z%ue
A^_[]
A^_^[]
A^_^]
A^_^][
A^A\]
A^A\^[]
A^A\_^[]
A^A\_^]
A^A]]
A^A]_^]
A^A]_^]H
A^A]A\^]
A^A]A\_]
A^A]A\_^[]
A__^[]
A_A\]
A_A\_
A_A\_^]
A_A]A\_]
A_A]A\_^[]
A_A^]
A_A^_
A_A^_[]
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A0H9A8u
a7l6y+
A8]8t
A84>u
A8t$@
A9\$Xu2L
A9}0t H
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%u!
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/onecore\base\appmodel\packageacquisitioninfo\packageacquisitioninfo.cpp
Absolute Uri
AbYry0
access
AccessCheck
AccessControlFlags
AccTreeResetNamedSecurityInfo
AcgApi
AcquireSRWLockExclusive
AcquireSRWLockShared
AcquireStateLock
AcquisitionCost
AcquisitionInfo
action
Action
ActionDisplayName
ActivatableClassId
ActivatableClassIdentifier
ActivityError
ActivityFailure
ActivityIntermediateStop
ActivityStoppedAutomatically
AddAccessAllowedAce
AddAccessAllowedAceEx
AddDeprovisionedPackageMarking
AddDirectXFeatureLevelToContext
AddEndOfLifePackageMarking
AddExtensionProgId
AddPackageToFamilyXref
AddPackageToPreinstalledAppsVolume
AddPackageToRegistryStore
AddPrimaryTilesForPackage
AddStagingUriAndEstimateFootprintSize() should only be called once per URI
AddToPurgeList
AddUpgradePackageToPreinstalledVolume
AddUpgradePackageToRegistryStore
AdjustTokenPrivileges
AgeRating
ah8h<
aHH;n`r
ALARM_DEH_KEYWORD
-ald-;
Alias
aliceBlue
All applicable packages are installed for the user, so the bundle is Installed
All Main Packages
allLogos
AllocateAndInitializeSid
AllowDeploymentInSpecialProfiles
AllowedProductId
AllowExecution
allowForWebOnly
AllPackages
AllUserPackageRemediation
AllUsers
Always
AlwaysUnsafe
Analyze
ANALYZE;
antiqueWhite
any publisher
AOWAPP_DEH_KEYWORD
aP?j2
api-ms-win-appmodel-identity-l1-2-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-io-l1-1-1.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-localregistry-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-processthreads-l1-1-3.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-eventing-tdh-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-private-l1-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
ApiSetQueryApiSetPresence
AppActivationManagerFailedToActivate
AppCategory
AppContainerDeriveSidFromMoniker
AppData
AppData\Local\Packages\
AppDataVolume
AppExecutionAlias
AppExecutionAliasUser
AppExtension
AppExtensionHost
AppExtensionName
AppId
AppInstaller
AppInstallerUpdater
Applicability state is Installable because at least one user does not yet have the package installed
Applicability state is Installable because no users with installed packages were found, and the architecture check passed
Applicability state is Installed because some users were found, and every one of them has the package Installed
Applicability state is not installable because the current profile is special, but special deployments are disallowed by policy
Applicability state is NotInstallable
Applicability state is NotInstallable because the architecture is incompatible with the system
Applicability state is NotInstallable because the package is incompatible with the system by policy
Applicability state is RequiresReinstall because at least one user requires a reinstall
Applicability4 results
ApplicabilityBlob
applicabilityState
ApplicabilityState
ApplicabilityStateEnumMap
Applicable Package is in a bad package status so it requires reinstall
Applicable Package is not yet indexed in package repository, so it is installable
Application
application
application/octet-stream
application/vnd.ms-appx.blockmap+xml
application/vnd.ms-appx.bundlemanifest+xml
application/vnd.ms-appx.manifest+xml
application/vnd.ms-appx.signature
application/vnd.ms-appx.streammap+xml
application/vnd.ms-pkiseccat
ApplicationBackgroundTask
ApplicationContentUriRule
ApplicationCount
ApplicationExtension
ApplicationIdentity
ApplicationIndex
ApplicationProperty
Applications
ApplicationUserModelId
applicationUserModelId
ApplicationUserModelId
AppliedACLs
AppListEntry
ApplyBlockCache
APPLYDATA_DEH_KEYWORD
ApplyDeltaW
ApplyInPlace
ApplyInplaceUpdate
ApplyStrongProtection
ApplyUpdatePayloadFiles
APPMODEL_RUNTIME_DMR_KEYWORD
AppModelDeploymentNotifications
AppModelOrigins
AppModelPackageRepository
appOSVersion
AppReadiness
AppReadinessDirectory
AppService
APPSERVICE_DEH_KEYWORD
APPSYNC_DEH_KEYWORD
AppTileMigrationError
AppUriHandler
AppUriHandlerGroup
AppX Deployment Server DLL
APPX_BASE_DEH_KEYWORD
AppxAllUserStore
AppXAllUserStore.dll
AppxApplicabilityEngine.dll
AppXApplyTrustLabelToFolder
AppxBlockMap.xml
appxblockmap.xml
AppxBlockMap.xml
AppxByteCodeQueue
AppxContentGroupMap.xml
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
AppXDelta
AppXDeployment.Perftrack.Task.Uninstall
AppXDeployment.Task.Server.AppxAllUserStore
AppXDeployment.Task.Server.Dependency
AppXDeployment.Task.Server.Deployment
AppXDeployment.Task.Server.Deployment.AllowReset
AppXDeployment.Task.Server.Deployment.AllowService
AppXDeployment.Task.Server.Deployment.AllowService2
AppXDeployment.Task.Server.Deployment.AllowUninstall
AppXDeployment.Task.Server.Deployment.BeginJETSession
AppXDeployment.Task.Server.Deployment.BundleProcessor
AppXDeployment.Task.Server.Deployment.CancelRequest
AppXDeployment.Task.Server.Deployment.CleanupManagerPostDeployment
AppXDeployment.Task.Server.Deployment.CleanupManagerPreDeployment
AppXDeployment.Task.Server.Deployment.ClearPackageStatus
AppXDeployment.Task.Server.Deployment.CreateDatabase
AppXDeployment.Task.Server.Deployment.DataFlushStateHandler
AppXDeployment.Task.Server.Deployment.DeletePackageFiles
AppXDeployment.Task.Server.Deployment.DeStagePackage
AppXDeployment.Task.Server.Deployment.DisablePackage
AppXDeployment.Task.Server.Deployment.EndJETSession
AppXDeployment.Task.Server.Deployment.EvaluateStateHandler
AppXDeployment.Task.Server.Deployment.FileCompressionStat
AppXDeployment.Task.Server.Deployment.FileStat
AppXDeployment.Task.Server.Deployment.FlushMachineRegistration
AppXDeployment.Task.Server.Deployment.FlushUserRegistration
AppXDeployment.Task.Server.Deployment.GetRequestForWNFName
AppXDeployment.Task.Server.Deployment.MRTDataStateHandler
AppXDeployment.Task.Server.Deployment.OptionalDependencyHandler
AppXDeployment.Task.Server.Deployment.OSIMActivate
AppXDeployment.Task.Server.Deployment.OSIMDeactivate
AppXDeployment.Task.Server.Deployment.PackageManagerGetPackageReader
AppXDeployment.Task.Server.Deployment.PackagesInUse
AppXDeployment.Task.Server.Deployment.PackageStateHandler
AppXDeployment.Task.Server.Deployment.PrerequisiteStateHandler
AppXDeployment.Task.Server.Deployment.QueueManagerDequeue
AppXDeployment.Task.Server.Deployment.QueueManagerEnqueue
AppXDeployment.Task.Server.Deployment.QueueManagerGetNext
AppXDeployment.Task.Server.Deployment.ReleaseJETResources
AppXDeployment.Task.Server.Deployment.RepositoryBeginTransaction
AppXDeployment.Task.Server.Deployment.RepositoryCommitTransaction
AppXDeployment.Task.Server.Deployment.RepositoryRollbackTransaction
AppXDeployment.Task.Server.Deployment.RepositoryTerminateSession
AppXDeployment.Task.Server.Deployment.Runtime
AppXDeployment.Task.Server.Deployment.SetPackageState
AppXDeployment.Task.Server.Deployment.SetPackageStatus
AppXDeployment.Task.Server.Deployment.SharedAppsRedirectHandler
AppXDeployment.Task.Server.Deployment.SharedAppsSyncHandler
AppXDeployment.Task.Server.Deployment.SISOptimization
AppXDeployment.Task.Server.Deployment.StagePackage
AppXDeployment.Task.Server.Deployment.StageUserData
AppXDeployment.Task.Server.Deployment.StateRepositoryDownlevel
AppXDeployment.Task.Server.Deployment.StateRepositoryFixIntegrity
AppXDeployment.Task.Server.Deployment.TilesStateHandler
AppXDeployment.Task.Server.Deployment.Trust
AppXDeployment.Task.Server.Deployment.UpdatePackage
AppXDeployment.Task.Server.Deployment.UpdatePackageStatus
AppXDeployment.Task.Server.Deployment.VersionSupercedenceHandler
AppXDeployment.Task.Server.Extensions
AppXDeployment.Task.Server.OSIM
AppXDeployment.Task.Server.Service
AppXDeployment.Task.Server.StagingManager
AppXDeployment.Task.Server.VolumeManager
AppXDeployment.Task.Server.VolumeRequestManager
AppXDeploymentClient.dll
AppxDeploymentFailureBlue
AppXDeploymentServer
AppXDeploymentServer version = 
AppXDeploymentServer.dll
AppxDeploymentServer.dll
AppXDeploymentServer.dll
AppxDeploymentServer.pdb
APPXDEPLOYMENTSERVER_KEYWORD
APPXDEPLOYMENTSERVER_PERF_KEYWORD
AppXDeploymentServer-License-MaxSideloadedPackagesCount
AppxErrorReport
AppxExtension
AppxFileRangesInventoryPopulated
AppxManifest
AppxManifest.xml
AppxMetadata\AppxBundleManifest.xml
AppxMetadata\CodeIntegrity.cat
appxmetadata\codeintegrity.cat
AppXMetadata\CodeIntegrity.Cat
AppxMiniRepository
AppxNewDeploymentOperation
AppxPackageOriginEnumMap
AppxPackageVolumes
AppxPolicies
AppxProvisioning.xml
AppxProvisionList
AppxPurgeList
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
AppxRoot
AppXSetTrustLabelOnPackage
appxsignature.p7x
AppxSignature.p7x
AppxSignatureOriginEnumMap
AppxStagingInfo
appxsvc
APt(H
aPt+H
aquamarine
Architecture
ArchitectureEnumMap
Argument
ARI8D
arm64
ART:OnDemandSyncGroup
Assert
assertVersion
AssertWithArgs
ATAVAWH
ATTACH DATABASE '%s' AS '%s';
Attempting to add an optional package for a main package that's staged from an unsupported scheme %d.
Attempting to add an optional package for a main package that's staged from an unsupported scheme %S
Attribute
AttributeName
AttributeValue
aumid
AuthD
AutomaticDynamicFileRanges must be populated before calling PrioritizeContentGroups.
AUTOPLAY_DEH_KEYWORD
AXEHAXEFAXEBAXPCAXBMAXCI
AXPCAXCDAXCTAXBMAXCI
azure
b"Q)D
B@8}X
BACKGROUND_TASKS_DEH_KEYWORD
BackgroundColor
BackupRestoreOptOut
bad allocation
bad array new length
Badge
BadgeAndTileText
BadgeLogo
BadSecondaryTile
BApplyUpdatePayloadFiles
baseline
baselinePackage
bcrypt.dll
Bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCreateHash
BCryptDestroyHash
BCryptFinishHash
BCryptGetProperty
BCryptHashData
BCryptOpenAlgorithmProvider
BD$PH
BDC_ApplyInfo
BEGIN -> COMMIT;
BEGIN -> ROLLBACK;
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
beige
BiApplicationStateTransition
BiChangeApplicationStateForPackageName
BinaryCount
BinaryDeltaCompression
bisque
black
blanchedAlmond
blockCacheFileComplete
BlockcacheFileDisappeared
BlockCacheFileIsNotComplete
blueViolet
BMAP4
BP!tBI
BPzPN,@Z
brown
BrowserChoice_cw5n1h2txyewy
BUBqbM
bucketArgument1
bucketArgument2
BuildId
BuildVersion
Bundle
bundle
Bundle
Bundle is Installable - bundle is not installed but is most recently staged
Bundle is Installable - Main package is a re-install, but bundle wasn't installed
Bundle is not installed for the user, so it is installable
Bundle is NotInstallable - no Installable main packages.
Bundle processing cost: %I64u ms
Bundle re-install
bundleFullName
BundlePackage
BundlePackageFullName
BundleProcessor::TryFileOperationAndLogAccessFailure for file: 
BundleResource
burlyWood
BusyCount
BusyDelayBetweenRetries
BusyMaxTimeout
BusyTimeout
BX9A4t
ByteCodeGeneration
ByteCodeGeneratorDesktop
ByteCodeGeneratorWinStation
ByteCodeGeneratorWinStation\ByteCodeGeneratorDesktop
C !C(
C !C(H
C 7E't
c AWH
C D8U@u
C H!8H
C H!C(H
C H;{
c#L#f
C&%*et
C(H!C0H
C(L;F
C,I9G,
C0A8h
C0D8c@t
C84>u
C9fD9?u-
cadetBlue
callContext
CallContext:[%hs] 
CallingContext
CallingProcess
CallingProcessPackageFullName
callOrigin
CallOrigin
CancelDeploymentImplementation
CancelIoEx
Cancelling deployment request...
Cancelling request for package for shutdown
CancelSynchronousIo
CancelSynchronousIo failed for idle task
CancelWaitableTimer
cannot start a transaction within a transaction
Capabilities
CapabilityCount
CapabilitySids
Category
CategoryName
CD8}w
CdplIsSupported
CdplProtectFileToLevelWithResult
CertCloseStore
CertFreeCertificateChain
CertFreeCertificateContext
CertGetCertificateChain
CertGetEnhancedKeyUsage
CertGetSubjectCertificateFromStore
CERTIFICATES_DEH_KEYWORD
CertNameToStrW
CertVerifyCertificateChainPolicy
cf|19.
changeid_next_value
changeid_next_value() failed
chartreuse
Check approval cost: %I64u ms
CheckDriverSoftwareDependenciesSatisfied
CheckIfStateChangeNotificationExists
Checking if package is required due to intent or installation status.
CheckPackageRestoreEligibility
Checkpoint
CheckPoint.VPN_cw5n1h2txyewy
CheckpointInterval
CheckpointMaxClockDelta
CheckpointMode
CheckResult
CheckTokenMembership
CHH!CP
CHH!CPI
chocolate
CL9CHw<
Classes\CLSID\{AA00FB1F-4EC7-4b09-BDC1-E5D88D291440}
CleanupByteCodeRpcServer
CleanupSisPath failed
Clear
CloseDesktop
CloseHandle
CloseServiceHandle
CloseState
CloseStateLock
CloseThreadpool
CloseThreadpoolCleanupGroup
CloseThreadpoolCleanupGroupMembers
CloseThreadpoolTimer
CloseThreadpoolWork
CloseWindowStation
CLSID
CLSIDFromString
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstanceFromApp
CoDisconnectContext
CoGetApartmentType
CoInitializeEx
CollectionStagingRootPath
COLLECTOREXTENSION_DEH_KEYWORD
Column
ColumnNumber
com1.
com2.
com3.
com4.
com5.
com6.
com7.
com8.
com9.
combase.dll
commandLine
commit
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
COMMUNICATION_BLOCKING_APP_DEH_KEYWORD
CompanyName
CompareStringOrdinal
CompareStringW
Completed
CompleteDeploymentOperation
Component failure code = 0x
CompressedSizeKB
ConditionalACE
Config
console
Content
ContentGroup
ContentGroupFile
ContentId
ContentType
Context
ContractID
ConvertSecurityDescriptorToStringSecurityDescriptorW
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
CopyFileExW
CopyFileW
CopySid
coral
cornflowerBlue
cornsilk
CoSetProxyBlanket
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not delete existing File %ws, which is to be replaced with a hardlink.
Could not delete hardlink temp file %ws, which failed to replace the existing file %ws. Ignore failure
Could not delete hardlink temp file %ws, which failed to set correct ACLs. Ignore failure.
Could not DeleteFile %ws
Could not expire other users' requests. Force flushing this request
CouldNotDeletePackageFile
CoUninitialize
Count
count
Count
count
Count
CountOfErrorsCorrected
CoWaitForMultipleHandles
Cpu:%d%s Io:%d%s Mem:%d%s
cr.d;
CreateAppContainerProfile
CreateApplicabilityContext
CreateApplicabilityContextFromString
CreateAppxInstallProfile
CreateAppxMetadataProfile
CreateBindCtx
CreateCanonicalPriFileImplementation
CreateDesktopAppXLocalCacheStructure
CreateDesktopAppXTombstoneFile
CreateDesktopW
CreateDirectoryW
createDist
CreateEventExW
CreateEventW
CreateFileA
CreateFileMappingW
CreateFileW
CreateHardLinkW
CreateInstance
CreateMutexExW
createOptions
CreatePrivateObjectSecurityEx
CreateProcessAsUserW
CreateRandomAccessStreamOverStream
CreateRestrictedToken
CreateSemaphoreExW
CreateSemaphoreW
CreateStateLock
CreateTdlMigrator
CreateTdlMigratorForUser
CreateThread
CreateThreadpool
CreateThreadpoolCleanupGroup
CreateThreadpoolTimer
CreateThreadpoolWork
CreateTilesForAllRegisteredPackages
CreateTilesForAllRegisteredPackagesForUser
CreateUri
CreateWaitableTimerExW
CreateWellKnownSid
CreateWindowStationW
CreateWnfStateNameImplementation
CreatingNewStreamingDeploymentRequest
crimson
CRIMX
CRYPT32.dll
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptFindOIDInfo
CryptGetHashParam
CryptHashData
CryptMsgClose
CryptMsgGetParam
CryptQueryObject
CryptReleaseContext
CRYPTSP.dll
cuP"c
currentContextId
currentContextMessage
currentContextName
CurrentDeploymentState
CurrentFilePath
CurrentFileSize
Currently executing item
Currently Installed Related Set
CurrentlyInstalledPackages
currentlyInstalledRelatedSetPackageFamily
CurrentlyInstalledRelatedSetPackages
CurrentOperation
currentPackage
CurrentPackageFullName
currentStatus
Custom.data
cW*q.
d t~L
D!t$0H
D!t$HA
D$ !D$ H
D$ D8
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
D$ f9(t
D$ fD
d$ fD
D$ H;
D$ L;
D$ SRD1E3
D$(!|$ M
D$(!D$0H
D$(!D$0L
D$(@@!
D$(E3
d$(fI
D$(H!X
d$(H;\$8L
D$(H9
D$(I;
D$(L!t$ 
D$@!D$HH
D$@!D$HL
D$@!U
D$@;E
D$@D3
D$@D8
d$@E3
D$@E3
D$@fD
D$@H!\$@H
d$@H;
D$@H;
D$@H;~
D$@I;
D$@L!l$8H
D$@L9
D$\D3
d$\fD
D$`!D$hH
D$`!D$hL
D$`A3
D$`E3
d$`E3
D$`E3
D$`H!|$8H
D$`H;
D$<A3
D$<E3
D$0!D$8H
D$0!U
D$0D9
D$0E3
d$0E3
D$0E3
D$0fD
D$0H!\$0H
D$0H;
D$0H;E
D$0L;
D$4E3
D$4H;
D$8!D$@H
d$8@8|$0
d$8D!d$@2
D$8D3
D$8E3
D$8H!|$8D
D$8H;
D$8I;
d$8L;
D$8L;
D$8L;g8r
D$8L9t$0u
D$d=C
D$DD!t$@L
d$DD;d$@
D$DDtRH
D$H!D$P8
D$H!D$PH
D$h!D$pH
D$H!D$PH
D$h;E
D$H@tVD
D$H0u
D$H9D$4
D$HD+
D$HD3
d$HD8d$pt'I
d$hD8e
D$HE3
D$hE3
D$HE3
d$HE3
D$HE3
D$hE3
D$HH;
d$HH9
D$hH9H,r
D$hL;
d$hL;
D$HL;e
D$hL9 
D$LD3
D$lE3
D$p!D$xH
D$P!D$XL
D$P@@
D$PD8
D$pE3
D$PE3
d$pE3
D$PE3
D$pE3
D$PE3
D$PH;
d$pH;
D$PH;
D$PI;
d$pI96t
D$PIc
d$pL;
d$PL;
D$PL;
D$PL9
D$pLcI
d$pM;`
D$RfD
D$T9p
D$TD+
D$TD3
D$X!D$`H
D$X!D$`I
D$X!D$`L
D$x!E
D$x;D$pu
D$x;E
d$x@2
D$x0u
D$X9F4
D$X9G4
d$XD8d$0
D$XD9\$PvsD
D$XD9p
D$XE3
d$XE3
D$xE3
D$XE3
D$XH!D$XH
D$XL;
D(mgQ
D:(A; OICI; GA;;; SY)(A; OICI; GR;;; BU)(A; OICI; GR;;; AC)
D:(A;;CC;;;%ls)
D:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;SY)(A;;0xF0087;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;;0xF0087;;;AC)
D:(A;;GA;;;%s)
D:(A;;GA;;;SY)(A;;GA;;;%ls)(A;;GA;;;%ls)
D:(A;;GA;;;SY)(A;;GR;;;BU)(A;;GR;;;AC)
D:(A;CROICI;GA;;;SY)(A;CROICI;GA;;;%s)(A;CROICI;GA;;;BA)
D:(A;OICI;GA;;;SY)(A;OICI;GR;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;OICI;GR;;;AC)
D:(A;OICI;KA;;;CO)(A;OICI;KA;;;SY)(A;OICI;KA;;;%ls)(A;OICI;KA;;;BA)
D:(A;OICIIO;GA;;;SY)(A;NP;0xf037f;;;SY)(A;OICI;0x20022;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;OICI;0x20022;;;AC)
D:AI(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)S:AI(ML;OICI;NW;;;LW)
D:AI(A;OICI;0x1200A9;;;%s)
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)S:AI(ML;OICI;NW;;;LW)
D:AI(A;OICI;GA;;;%s)S:PAI
D:AI(A;OICI;GA;;;%s)S:PAI(ML;OICI;NW;;;LW)
D:PAI(A;;FA;;;SY)(A;;FA;;;BA)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x120089;;;BA)(A;CI;0x120089;;;BA)(A;OICI;0x120089;;;BA)(A;OICI;0x120089;;;LS)(A;OICI;0x120089;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x1200a9;;;BA)(A;CI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;LS)(A;OICI;0x1200a9;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;;FRFX;;;BU)(A;;FRFX;;;AU)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;%s)
D;\$Pr
D;]`t
D;|$T
D;|$X
D;}(r
D;A,sOA
D;d$8
D;d$H
D;G,s)H
D;H$t^H
D;l$`
D;t$$
D;t$`
D;t$P@
D;T$Pr
D;t$Pt
D;u@r
D;v(r
d\%:QQ
D+](E3
D+M@D3
D+U D+
D3\$HD3
D3]\D3]
D3]LA
D3]XA
D3}\A
D3D$`A
D3D$PA
D3E\A
D3ELA
D3eLD3d$lD
D8.u$
D8.u3
D8@Ptw3
D8`huu
D8|$ t
D8|$ uxH
D8|$@u
D8|$0
D8|$1
D8|$1u>
D8|$8u*H
D8|$8uKH
D8|$xt
D8}0t
D8}gA
D8}Gu
D8}ot
D8}XtQD8}
D8=^Y&
D8a u
D8a!t
D8cQu
D8cRt9
D8cRts
D8d$ 
D8d$ t
-D8d$ u
D8d$ u9I
D8d$@t.H
D8d$@t^D
D8d$@t6H
D8d$@u3D
D8d$0
D8d$0@
D8d$0t
D8d$0t*H
D8d$0t3
D8d$0tLH
D8d$0u
D8d$0u_D
D8d$1
D8d$1t
D8d$Au
D8d$Pt
D8d$X
D8d$Xt
D8d$Xt.L
D8e`t
D8egt
D8eHu
D8Eot
D8ePt
D8ePtP
D8ePu
D8ewt
D8ewt)L
D8eXt
D8eXt8D
D8eXtr
D8eXu
D8f<t
D8hit
D8l$ t
D8l$@t)H
D8l$@tRH
D8l$`t
D8l$0
D8l$0A
D8l$0t
D8L$0tB
D8l$0u"
D8l$0u.H
D8l$0uLH
D8l$1
-D8l$1t>H
D8l$1t9L
D8l$2
D8l$2t
D8l$bt
D8l$H
D8l$J
D8l$p
D8l$pt2I
D8l$Ptp
D8l$Pu
D8l$Qt%E
D8l$x
D8l$y
D8m0u>H
D8mgt
D8mgtNM
D8mgue
D8mHt
D8mHus
D8mwtjH
D8t$@
D8t$@t2H
D8t$0
D8t$0t
D8t$0t2
D8t$0t4
D8t$1
D8t$1t
D8t$1u@H
D8t$2u;
D8t$3t9
D8t$4t;
D8t$8t6L
D8t$a
D8t$Ht%3
D8t$pu
D8u(trL
D8u@t^H
D8u0t
D8ugt
D8ugu
D8uot
D8uotqL
D8uouBH
D8y$t
D8yMuD
D9?u.H
D9|$ t
D9|$@
D9|$@t
D9|$0
D9|$0H
D9|$0t'
D9|$4
D9|$8t
D9|$H
D9|$ht
D9|$P
D9|$T
D9|$Xt
D9}(v+3
D9}@@
D9}@|*I
D9~hv@A
D90v(H
D9d$ 
D9d$ t
D9d$@
D9d$`
D9d$`t
D9d$0
D9d$0t
D9d$4
D9d$8
D9d$8t8A
D9d$Ht
D9d$P
D9d$P|'H
D9d$pt
D9d$T
D9d$X
D9e t
D9e@u
D9e_t
D9egt
D9ePA
D9ePu
D9ewu
D9eWw
D9ex}:H
D9f u
D9K(t
D9l$@t
D9l$@u
D9l$`
D9l$4
D9l$8t
D9l$8t!H
D9l$8tBH
D9l$8teH
D9l$8tEH
D9l$D
D9l$Ht
D9l$hu
D9l$L
D9l$Lug
D9l$p
D9l$Pt
D9l$Pv%H
D9l$X
D9l$Xt H
D9mHu|H
D9mPu
D9n@vbL
D9phu
D9qL|
D9s tVH
D9'sOH
D9t$$
D9t$`uaH
D9t$0
D9t$D
D9t$H
D9t$Xt
D9u8u
D9u8u"
D9ugt
D9v tVH
D9w tVH
D9yL|
darkBlue
darkCyan
darkGoldenrod
darkGray
darkGreen
darkKhaki
darkMagenta
darkOliveGreen
darkOrange
darkOrchid
darkRed
darkSalmon
darkSeaGreen
darkSlateBlue
darkSlateGray
darkTurquoise
darkViolet
Data flush cost: %I64u ms
Database.Checkpoint
DatabaseCache.Add
DatabaseCache.Get
DatabaseConnection
DatabaseCorruptionFirstDetectedUptime
DatabaseCorruptionFirstDetectedWhen
DatabaseCorruptionLastReported
DatabasePtr
DatabaseStatisticsUpdateInterval
DatabaseStatisticsUpdateMaxClockDelta
DataFlush
DATAPACKAGEHOST_DEH_KEYWORD
DataSourceErrorCode
DataSourceErrorCount
DataSourceErrorFile
DataSourceErrorPhase
dC`L*+$
DD$(H
DD$HL
ddeexec
DebugBreak
deepPink
deepSkyBlue
DefaultApp_cw5n1h2txyewy
DefaultIcon
DefaultSize
DefaultTile
DefaultVolumeKey
DeferredRoamingStatus
DeferRoamingDataAcquisition
DehName
DELETE
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExecutionAlias WHERE _AppExecutionAliasID IN ( SELECT aea._AppExecutionAliasID FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension WHERE ae.Application=? AND aea._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExecutionAlias WHERE _AppExecutionAliasID IN ( SELECT aea._AppExecutionAliasID FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension WHERE ae.Application=?1 AND (aea._WorkId=0 OR aea._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtension WHERE _AppExtensionID IN ( SELECT ape._AppExtensionID FROM AppExtension AS ape INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=ape.Extension WHERE ae.Application=? AND ape._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExtension WHERE _AppExtensionID IN ( SELECT ape._AppExtensionID FROM AppExtension AS ape INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=ape.Extension WHERE ae.Application=?1 AND (ape._WorkId=0 OR ape._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtensionHost WHERE _AppExtensionHostID IN ( SELECT aeh._AppExtensionHostID FROM AppExtensionHost AS aeh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aeh.Extension WHERE ae.Application=? AND aeh._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExtensionHost WHERE _AppExtensionHostID IN ( SELECT aeh._AppExtensionHostID FROM AppExtensionHost AS aeh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aeh.Extension WHERE ae.Application=?1 AND (aeh._WorkId=0 OR aeh._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppInstaller WHERE _AppInstallerID IN ( SELECT ai._AppInstallerID FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=? AND pai._WorkId=0 AND ai._WorkId=0);
DELETE FROM AppInstaller WHERE _AppInstallerID IN ( SELECT ai._AppInstallerID FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2) AND (ai._WorkId=0 OR ai._WorkId=?2));
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Application WHERE _ApplicationID=? AND _WorkId=0;
DELETE FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Application WHERE Package=? AND _WorkId=0;
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM ApplicationBackgroundTask WHERE _BackgroundTaskID IN ( SELECT abt._BackgroundTaskID FROM ApplicationBackgroundTask AS abt INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=abt.Extension WHERE ae.Application=? AND abt._WorkId=0 AND ae._WorkId=0);
DELETE FROM ApplicationBackgroundTask WHERE _BackgroundTaskID IN ( SELECT abt._BackgroundTaskID FROM ApplicationBackgroundTask AS abt INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=abt.Extension WHERE ae.Application=?1 AND (abt._WorkId=0 OR abt._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationContentUriRule WHERE _ApplicationContentUriRuleID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationContentUriRule WHERE _ApplicationContentUriRuleID=? AND _WorkId=0;
DELETE FROM ApplicationContentUriRule WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationContentUriRule WHERE Application=? AND _WorkId=0;
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationExtension WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationExtension WHERE Application=? AND _WorkId=0;
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive));
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationProperty WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationProperty WHERE Application=? AND _WorkId=0;
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppService WHERE _AppServiceID IN ( SELECT "as"._AppServiceID FROM AppService AS "as" INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID="as".Extension WHERE ae.Application=? AND "as"._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppService WHERE _AppServiceID IN ( SELECT "as"._AppServiceID FROM AppService AS "as" INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID="as".Extension WHERE ae.Application=?1 AND ("as"._WorkId=0 OR "as"._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandler WHERE _AppUriHandlerID IN ( SELECT auh._AppUriHandlerID FROM AppUriHandler AS auh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auh.Extension WHERE ae.Application=? AND auh._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppUriHandler WHERE _AppUriHandlerID IN ( SELECT auh._AppUriHandlerID FROM AppUriHandler AS auh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auh.Extension WHERE ae.Application=?1 AND (auh._WorkId=0 OR auh._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandlerGroup WHERE _AppUriHandlerGroupID IN ( SELECT auhg._AppUriHandlerGroupID FROM AppUriHandlerGroup AS auhg INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auhg.Extension WHERE ae.Application=? AND auhg._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppUriHandlerGroup WHERE _AppUriHandlerGroupID IN ( SELECT auhg._AppUriHandlerGroupID FROM AppUriHandlerGroup AS auhg INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auhg.Extension WHERE ae.Application=?1 AND (auhg._WorkId=0 OR auhg._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
DELETE FROM AppxExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE Package=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE Package=? AND _WorkId=0;
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Bundle WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Bundle WHERE Package=? AND _WorkId=0;
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM BundlePackage WHERE Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND (_WorkId=0 OR _WorkId=?2));
DELETE FROM BundlePackage WHERE Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND _WorkId=0);
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
DELETE FROM BundleResource WHERE BundlePackage IN (SELECT bp._BundlePackageID FROM BundlePackage AS bp WHERE bp.Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND (_WorkId=0 OR _WorkId=?2)));
DELETE FROM BundleResource WHERE BundlePackage IN (SELECT bp._BundlePackageID FROM BundlePackage AS bp WHERE bp.Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND _WorkId=0));
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ContentGroup WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ContentGroup WHERE Package=? AND _WorkId=0;
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM ContentGroupFile WHERE ContentGroup IN (SELECT _ContentGroupID FROM ContentGroup WHERE Package=?) AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ContentGroupFile WHERE ContentGroup IN (SELECT _ContentGroupID FROM ContentGroup WHERE Package=?) AND _WorkId=0;
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM DefaultTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM DefaultTile WHERE Application=? AND _WorkId=0;
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Dependency WHERE _DependencyID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Dependency WHERE _DependencyID=? AND _WorkId=0;
DELETE FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM DependencyGraph WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM DependencyGraph WHERE DependentPackage=? AND _WorkId=? AND _ShadowId<>0;
DELETE FROM DependencyGraph WHERE DependentPackage=? AND _WorkId=0;
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
DELETE FROM File WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM File WHERE _FileID=? AND _WorkId=0;
DELETE FROM File WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM File WHERE Package=? AND _WorkId=0;
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM FileTypeAssociation WHERE _FileTypeAssociationID IN ( SELECT fta._FileTypeAssociationID FROM FileTypeAssociation AS fta INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=fta.Extension WHERE ae.Application=? AND fta._WorkId=0 AND ae._WorkId=0);
DELETE FROM FileTypeAssociation WHERE _FileTypeAssociationID IN ( SELECT fta._FileTypeAssociationID FROM FileTypeAssociation AS fta INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=fta.Extension WHERE ae.Application=?1 AND (fta._WorkId=0 OR fta._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM MrtApplication WHERE Application IN (SELECT _ApplicationID FROM Application WHERE Package=?) AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtApplication WHERE Application IN (SELECT _ApplicationID FROM Application WHERE Package=?) AND _WorkId=0;
DELETE FROM MrtApplication WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtApplication WHERE Application=? AND _WorkId=0;
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
DELETE FROM MrtDefaultTile WHERE _MrtDefaultTileID IN ( SELECT mdt._MrtDefaultTileID FROM MrtDefaultTile AS mdt INNER JOIN DefaultTile AS dt ON dt._DefaultTileID=mdt.DefaultTile WHERE dt.Application=? AND mdt._WorkId=0 AND dt._WorkId=0);
DELETE FROM MrtDefaultTile WHERE _MrtDefaultTileID IN ( SELECT mdt._MrtDefaultTileID FROM MrtDefaultTile AS mdt INNER JOIN DefaultTile AS dt ON dt._DefaultTileID=mdt.DefaultTile WHERE dt.Application=?1 AND (mdt._WorkId=0 OR mdt._WorkId=?2) AND (dt._WorkId=0 OR dt._WorkId=?2));
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtPackage WHERE Package=? AND _WorkId=0;
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtSharedPri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtSharedPri WHERE Package=? AND _WorkId=0;
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM OptionalBundle WHERE MainBundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM OptionalBundle WHERE MainBundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=? AND _WorkId=0);
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
DELETE FROM OptionalBundlePackage WHERE OptionalBundle IN (SELECT ob._OptionalBundleID FROM OptionalBundle AS ob INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND (ob._WorkId=0 OR ob._WorkId=?2) AND (b._WorkId=0 OR b._WorkId=?2));
DELETE FROM OptionalBundlePackage WHERE OptionalBundle IN (SELECT ob._OptionalBundleID FROM OptionalBundle AS ob INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND ob._WorkId=0 AND b._WorkId=0);
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
DELETE FROM OptionalBundleResource WHERE OptionalBundlePackage IN (SELECT obp._OptionalBundlePackageID FROM OptionalBundlePackage AS obp INNER JOIN OptionalBundle AS ob ON ob._OptionalBundleID=obp.OptionalBundle INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND (obp._WorkId=0 OR obp._WorkId=?2) AND (ob._WorkId=0 OR ob._WorkId=?2) AND (b._WorkId=0 OR b._WorkId=?2));
DELETE FROM OptionalBundleResource WHERE OptionalBundlePackage IN (SELECT obp._OptionalBundlePackageID FROM OptionalBundlePackage AS obp INNER JOIN OptionalBundle AS ob ON ob._OptionalBundleID=obp.OptionalBundle INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND obp._WorkId=0 AND ob._WorkId=0 AND b._WorkId=0);
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageAppInstaller WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageAppInstaller WHERE Package=? AND _WorkId=0;
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExtension WHERE Package=? AND _WorkId=0;
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUser)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageLocation WHERE Package=? AND _WorkId=0;
DELETE FROM PackageMachineStatus WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageMachineStatus WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageMachineStatus WHERE Package=? AND _WorkId=0;
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackagePolicy WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackagePolicy WHERE Package=? AND _WorkId=0;
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageProperty WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageProperty WHERE Package=? AND _WorkId=0;
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageSourceUri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageSourceUri WHERE Package=? AND _WorkId=0;
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageSuperceded WHERE _PackageSupercededID=?;
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
DELETE FROM PackageUser WHERE _WorkId=0 AND _PackageUserID IN (SELECT pu._PackageUserID FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageType=1 AND p.PackageFamily=?2 AND pu.Package!=?3 AND pu._WorkId=0 AND p._WorkId=0);
DELETE FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE Package=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageUserChangelog WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUserStatus WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTile WHERE _PrimaryTileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTile WHERE _PrimaryTileID=? AND _WorkId=0;
DELETE FROM PrimaryTileUser WHERE (PrimaryTile>0) AND (PrimaryTile NOT IN (SELECT _PrimaryTileID FROM PrimaryTile));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT PrimaryTile AS pt, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND PrimaryTile=pt AND User=usr);
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND _WorkId=0;
DELETE FROM PrimaryTileUser WHERE PrimaryTileUser.User=? AND PrimaryTile IN (SELECT pt._PrimaryTileID FROM PrimaryTile AS pt WHERE pt.Package=?)
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM Protocol WHERE _ProtocolID IN ( SELECT p._ProtocolID FROM Protocol AS p INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=p.Extension WHERE ae.Application=? AND p._WorkId=0 AND ae._WorkId=0);
DELETE FROM Protocol WHERE _ProtocolID IN ( SELECT p._ProtocolID FROM Protocol AS p INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=p.Extension WHERE ae.Application=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM PublisherCacheFolder WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM PublisherCacheFolder WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND _WorkId=0);
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Resource WHERE _ResourceID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Resource WHERE _ResourceID=? AND _WorkId=0;
DELETE FROM Resource WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Resource WHERE Package=? AND _WorkId=0;
DELETE FROM SecondaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SecondaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
DELETE FROM SecondaryTile WHERE _SecondaryTileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM SecondaryTile WHERE _SecondaryTileID=? AND _WorkId=0;
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE _SecondaryTileUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM SecondaryTileUser WHERE _SecondaryTileUserID=? AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE User=? AND SecondaryTile=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM SecondaryTileUser WHERE User=? AND SecondaryTile=? AND _WorkId=0;
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM TargetDeviceFamily WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM TargetDeviceFamily WHERE Package=? AND _WorkId=0;
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserChangelog)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
DELETE FROM WowDependencyGraph WHERE DependentPackage=? AND _WorkId=? AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE SupplierPackage=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM WowDependencyGraph WHERE SupplierPackage=? AND _WorkId=0;
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM XboxPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM XboxPackage WHERE Package=? AND _WorkId=0;
DeleteAce
DeleteAllPackagesFromMainPackageArray
DeleteAllPackagesFromPackageArray
DeleteAppContainerProfile
DeleteAppxInstallProfileEx
DeleteAppxMetadataProfile
DeleteContentsInFolderError
DeleteCriticalSection
DeleteFileError
deleteFileHr
DeleteFileW
DeletePackageInfo
DeleteUpdatedPackageKey
Deleting expired request for
Dependency
DependencyArchitecture
DependencyGraph
DependencyMinVersion
DependencyName
DependencyPaths
DependencyPublisher
DependentPackage
Deployment
Deployment Operation = 
DeploymentDatabase
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseCheckpointThreshold
DeploymentDatabaseFileChunkSize
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseOptions
DeploymentDatabasePageSize
DeploymentDatabaseStatisticsLastUpdated
DeploymentHistory
DeploymentOperation
DeploymentOperationEnumMap
DeploymentOptions
DeploymentOptionsBitMap
DeploymentOptionsHighBitMap
DeploymentPath
DeploymentQueueManage: Conflict comparison for next dequeueable package with operation against executing package with operation
DeploymentQueueManager is at maximum allowed thread count. Treating as conflict
DeploymentQueueManager:
DeploymentQueueManager: Dequeue for operation hit conflict in system wide isolation
DeploymentQueueManager: Executing request is not already resolved. Conflict assumed
DeploymentQueueManager: Framework will be modified. Conflict assumed
DeploymentQueueManager: Max concurrent regular deployment request count breached. Conflict assumed
DeploymentQueueManager: Maximum amount of items executing for this user reached. Conflict assumed
DeploymentQueueManager: Skipping because there are restored items in queue
DeploymentQueueManager: The currently executing item in conflict with operation
DeploymentQueueManager: This item should run isolated and we can't have multiple types of same per user. Conflict assumed
DeploymentQueueManager: Two non-stage operations happening simultaneously with one bringing dependencies. Conflict assumed
DeploymentQueueManager: User SID already at limit. Conflict assumed
DeploymentQueueManager: Validating deployment request from queue
DeploymentRequest::BlockDeploymentIfNeeded
DeploymentRequestRunningStart
DeploymentState
DeploymentStateHandlerEnumMap
DeploymentTrace
DeploymentTrace*
deque<T> too long
Dequeable Package
Dequeuable package operation
Dequeue delay: %I64u ms
DequeuerCount
Dequeuing a request that requires flushing previously run request.
DeriveAppContainerSidFromAppContainerName
Description
desiredStatus
desktop4:Subsystem
desktop4:SupportsMultipleInstances
DeStage
DeStageUserData
DeStaging for rollback: unexpected staging action: %d
DeStaging: : unexpected staging action: %d
Destination Path
DestinationFolderPath
DestinationVolumePath
DestroyPrivateObjectSecurity
DETACH DATABASE '%s';
DetailedMessageInfo
DetectBusySnapshotWalker Database=%p Partition=%d Statement=%p SQL=%s
Developer mode registration package uri is not uri of manifest file.
DevelopmentMode
DEVICEACCESS_DEH_KEYWORD
DeviceAccessVetoReasonMap
DeviceCapabilityHandlerCLSID
DeviceCapabilityName
deviceFamilyName
DeviceId
DeviceIoControl
DeviceName
DIALPROTOCOL_DEH_KEYWORD
DidAppSurviveOSUpgradeForUser
didRead
dimGray
directlyServicedPackagesList
DirtyPackages
DisableTraceLoggingSession
DisplayName
Dkeg<E
dnS& 
dodgerBlue
Donecore\admin\appmodel\packagerepository\staterepository\repository.cpp
DontMigrateSecondaryTiles
DownlevelInstalled
DownlevelInstalledKeyAlreadyExists
downlevelInstalledPackage
DownlevelMachineDatabase
DownlevelMachineDatabaseAutoCheckpoint
DownlevelMachineDatabaseCheckpointThreshold
DownlevelMachineDatabaseFileChunkSize
DownlevelMachineDatabaseJournalSizeLimit
DownlevelMachineDatabaseOptions
DownlevelMachineDatabasePageSize
DownlevelMachineDatabaseStatisticsLastUpdated
DOWNLOAD_DEH_KEYWORD
downloadFileCount
DownloadSize
dpE%m
Dq>qn
dRDGx
DSM_DEH_KEYWORD
Dt(A+
DuplicateHandle
DuplicateToken
DuplicateTokenEx
DurationMS
DVROptOut
DynamicAppUriHandler
DynamicAppUriHandlerGroup
E'!E/H
E(f;0
E(f;0@
E(L9w
E)I;R
E/!E7L
E;o(r
E@@80
E@fD;0
E@H;B@
E_H9M
e`;uX
-e<Gi
E08E t3H
e6msQ
E79Q8I
E8;EH
E8>t,H
E8gPt
E8H9B(v
E8l$)t$H
E8oPt
E9aLu
E9V0u
Ed%|xBH
ED9m0t
EDGEHTML.dll
EditFlags
EditionId
EfsOpenFileRawFailed
EfsOpenFileRawFailedAttemptingRetry
EG!EOL
ehD8{8uoH
EHH;E
EHH9X,r
EhL9c
EhTD{
EkbId
EL$8E
Element
ElementName
ELtZ6
empty
EnableBackupForNonStoreApps
EnableExternalVolumes
EnablePackageStatusSkipped
EnableWebContentEvaluation
encrypted
Encrypted FileName: %ws
EncryptedFilePreallocationFailedIgnoringError
encryptionAlgorithm
EndOfLife
EndOfLifePackage
EndOfLifePackageList
endswith
EndsWith(*string*,suffix) error: Invalid type (%d)
EndsWith(string,*suffix*) error: Invalid type (%d)
Enqueue cost: %I64u ms
EnsureACLOnVolumeAppRoot failed
EnsureRootFolderInheritAclsAreSet
EnsureStoreLicenseForPackageActivation
EnsureStoreLicenseForPackageActivation isn't present, store license check is skipped!
EnterCriticalSection
Enterprise
EnterpriseAppsInstalled
entry.Length
entry.Offset
entry.Tag
entry.Version
EntryPoint
EnumDisplayMonitors
EnumerateExtensionNames
EnumPackagesByUserSidInternal
EnumPackagesByUserSidNamePublisherInternal
EnumPackagesByUserSidPackageFamilyNameInternal
EnumVisibilityByPackageFullNameInternal
en-US
Eonecore\admin\appmodel\osim\src\host\osimrequest.cpp
EqualSid
EraVersion
Error
error
Error
error
Error
error
Error
ErrorCode
ErrorCodeDescription
ErrorContext
ErrorContext1
ErrorContext2
ErrorCount
ErrorDescription
ErrorFileInfo
ErrorMessage
errorString
ErrorString
ErrorText
ET$XI
ETW Event ID = 
EtwEventID
EtwEventRegister
EtwEventUnregister
EtwEventWrite
eUMSYy
EV H)
evaluate
EvaluatedPackageStagingAction
Evaluation cost: %I64u ms
EventActivityIdControl
EventData
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EvtClose
EvtExportLog
EvtGetChannelConfigProperty
EvtOpenChannelConfig
EX;0r
Exception
ExceptionCode
EXCLUSIVE
EXD;0r
Executable
ExecutableName
Executing Package
Executing package operation
ExecutionFlags
ExePath
exFAT
existingPackage
ExitCode
ExitProcess
ExL!0
ExpandedSQL
ExpandedSQL=%hs
ExpandEnvironmentStringsW
expectedFileSize
ExtendedData
Extension
ExtensionHandler
ExtensionName
ExtensionsCategoryNames
ext-ms-onecore-appmodel-tdlmigration-l1-1-0
ext-ms-onecore-appmodel-tdlmigration-l1-1-0.dll
ext-ms-onecore-appmodel-tdlmigration-l1-1-1
ext-ms-onecore-appmodel-tdlmigration-l1-1-1.dll
ext-ms-win-advapi32-ntmarta-l1-1-0
ext-ms-win-advapi32-ntmarta-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-appmodel-deployment-l1-1-1.dll
ext-ms-win-appmodel-deploymentvolumes-l1-1-0
ext-ms-win-appmodel-deploymentvolumes-l1-1-0.dll
ext-ms-win-appmodel-deploymentvolumes-l1-1-1
ext-ms-win-appmodel-deploymentvolumes-l1-1-1.dll
ext-ms-win-com-ole32-l1-1-1.dll
ext-ms-win-core-app-package-registration-l1-1-0
ext-ms-win-core-app-package-registration-l1-1-1
ext-ms-win-core-app-package-registration-l1-1-1.dll
ext-ms-win-core-storelicensing-l1-1-0
ext-ms-win-core-storelicensing-l1-1-0.dll
ext-ms-win-core-storelicensing-l1-2-0
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-0.dll
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-1.dll
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-4.dll
ext-ms-win-newdev-config-l1-1-3.dll
ext-ms-win-ntuser-windowstation-l1-1-0
ext-ms-win-ntuser-windowstation-l1-1-0.dll
ext-ms-win-ntuser-windowstation-l1-1-1
ext-ms-win-ntuser-windowstation-l1-1-2
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-resources-deployment-l1-1-0.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-0.dll
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-security-efswrt-l1-1-0
ext-ms-win-security-efswrt-l1-1-1
ext-ms-win-security-efswrt-l1-1-2
ext-ms-win-security-efswrt-l1-1-2.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-shell-settingsync-l1-1-0
ext-ms-win-shell-settingsync-l1-1-1
ext-ms-win-shell-settingsync-l1-1-2
ext-ms-win-shell-settingsync-l1-1-3
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-1-0.dll
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-wer-reporting-l1-1-0
ext-ms-win-wer-reporting-l1-1-0.dll
ext-ms-win-wer-reporting-l1-1-1
ext-ms-win-wer-reporting-l1-1-2
ext-ms-win-wer-reporting-l1-1-3
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-3
EXTRA
Ez|am07
F !F(H
F A!F(L
F H9F
F H9t$x
F(!F0H!F8H!F@
F(A!F0I!F8I!F@A
F(H;X
F,D8f<t
f;L$`
F@A!FHI
F@H9GH
F`!FhH
F`@tB
F`A!FhI
F0D8#ukD8c
F0D8~@t
F0E8`
F0H9F8u
F0H9F8u&
F4;V,r
f5.vpn.client_cw5n1h2txyewy
F8!F@H
f9,Au
f9,Cu
f9,Fu
f9,Gu
f9,Hu
f9,Ku
f9,Nu
f9,Ou
f9,Pu
f9+t4H
f9<Au
f9<Bu
f9<Cu
f9<Hu
f9<Ju
f9<Nu
f9<Pu
f9<Xu
f92u?
f94Au
f94Cu
f94Hu
f94Ju
f94Ku
f94Ou
f94Qu
f9L$Bt
fA9,Qu
fA9\M
fA9|E
fA9<@u
fA9<^u
fA9<Au
fA9<Bu
fA9<Fu
fA9<Gu
fA9<Hu
fA9<Iu
fA9<Nu
fA9>t
fA94@u
fA94Au
fA94Gu
fA94Nu
fA94Ru
fA96u
fA98t
fA99u
fA9l@,u
fA9LE
fA9T$(H
fA9TE
fA9tE
fA9Z*v$A
Failed component name = 
Failed to apply ACLs for a hardlink from %ws to %ws
Failed to copy error message from GetAppXError.
Failed to copy error message from GetErrorInfo.
Failed to create a hardlink from %ws to %ws
Failed to create hardlink from %ws to %ws
Failed to delete hard linked file %ws
Failed to delete partially created hardlink target placeholder file %ws
Failed to delete stale indicator file %ws
Failed to find resume offset by block hash validation for %ws. Ignore the error and download the whole file instead.
Failed to get current timestamp
Failed to get current timestamp due to
Failed to get Error Description
Failed to get resume offset for baseline file %ws
Failed to initialize ResumeFileInfo for file: %ws
Failed to remove mounted folder %ws. Ignore failure.
Failed to rename hardlink temp file %ws to %ws
Failed to reset machine register state in the State Repository database for package %ws
Failed to set file valid ending for file %ws
Failed to set foldingBundleId for package %ws because parent bundle not yet processed. Parent bundle either does not appear in expandedPackageUris list or appears in the list after this child package
FailedOpeningBaselineForceCopy
FailedToApplyInPlaceUpdateDuringRegisterDueToBlockcacheIncomplete
FailedToCreatePrimaryTiles
FailedToQIIApplicationActivationClient2
FailedToRegisterTile
FailedToSetUserActivationInfo
FailFast
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
FailIfNeedsRemediation
Failure
failureCount
FailureHresult
failureId
failureType
FallbackError
false
FamilyName
FAT32
fB9<Bu
fB9<su
fB94Cu
fB94Ku
fB94Su
fC9<Au
fC9<Cu
fD; u
fD;0@
fD;0u
fD;8u
fD9 t
fD9 u!
fD9!t
fD9!t"
fD9#t
fD9#u
fD9$~u
fD9$Au
fD9$Bu
fD9$Cu
fD9$Fu
fD9$Gu
fD9$Gu?I
fD9$Hu
fD9$Ju
fD9$Ku
fD9$Nu
fD9$OtX
fD9$Qu
fD9$qu
fD9$Xu
fD9$zu
fD9&t
fD9(t
fD9)t
fD9,^u
fD9,_u
fD9,Au
fD9,Bu
fD9,Cu
fD9,Fu
fD9,Gu
fD9,Hu
fD9,Ju
fD9,nu
fD9,Nu
fD9,Qu
fD9,qu
fD9,Vu
fD9.t
fD9/t
fD9:t
fD9:t2
fD9?u
fD9|$0t
fD9|$0uWH
fD9<^u
fD9<~u
fD9<Au
fD9<Bu
fD9<Cu
fD9<Fu
fD9<Gu
fD9<Hu
fD9<Ju
fD9<Ku
fD9<Ou
fD9<Vu
fD9<Wu
fD9<Xu
fD9<yu
fD9>u$H
fD90t
fD90t,
fD91t#f
fD93t
fD94Au
fD94Cu
fD94Fu
fD94Gu
fD94Hu
fD94Ju
fD94Nu
fD94Qu
fD94Xu
fD94Yu
fD94zu
fD96t
fD97u
fD98t
fD98t1f
fD98u
fD99t
fD9d]
fD9dU
fD9't
fD9t]
fD9u@u
fD9u0ucH
fE;l$
fE9!t
fE9"t
fE9$@u
fE9$~u
fE9$Fu
fE9$Gu
fE9$Nu
fE9$Ou
fE9$Pu
fE9$qu
fE9$wu
fE9&u
fE9,Du
fE9,F
fE9,Fu
fE9,Gu
fE9,Nu
fE9,wu
fE9\E
fE9|E
fE9<@u
fE9<Au
fE9<Du
fE9<Fu
fE9<Lu
fE9<Nu
fE9<vu
fE9>L
fE94@u
fE98t
fE98u
fE9LE
fF9,Bu
fF9,pu
fF9<Au
fF9<Cu
fF9<Gu
fF9<Ju
fF9<qu
fF94{u
fF94Bu
ffO'mkGw
fG9$Hu
fG9|u
fHD+a
FHH9E
File 
File: %ws
file://
file:///
fileAccess
FileDescription
FileIntegrityStateLessThanFull
FileInUse
FileManager_cw5n1h2txyewy
filename
fileName
FileName
fileName
FileName
fileName
filename
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
Filename
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
filename
fileName
filename
fileName
FileName
fileName
FileName
fileName
FileName
fileName
filename
fileName
FileName
fileName
Filename
FileName
Filename
FileName
Filename
FileName
Filename
FileName
Filename: %ws
FilePath
filePath
FilePath
filePath
FilePath
filePath
FilePath: %ws
Files
FileSize
fileSize
FileSize
fileSizeValid
FileSystemType
FILETYPE_DEH_KEYWORD
FileTypeAssociation
FileVersion
FilterAttach
FilterConnectCommunicationPort
FilterSendMessage
Finalize
FinalizeDeploymentPath
FindClose
FindFirstFileNameW
FindFirstFileW
FindNextFileNameW
FindNextFileW
FindPackageByUserSidPackageFullNameInternal
FindPackagesByPackageFamily
FindPackagesByPackageFamilyResult
firebrick
FirstBusySQL
FirstLine
FixAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
Flags
FlagsHigh
floralWhite
FLTLIB.DLL
FlushFileBuffers
Flushing and closing files cost: %I64u ms
Flushing request for packager due to an overlapping force-flush operation.
Fml`Y
folder
Folder %ws.
FolderPath
Fonecore\admin\appmodel\common\pathhelpers.cpp
ForceCopyFileResult
ForegroundText
forestGreen
forInPlaceUpdate
FormatApplicationUserModelId
FormatMessageW
ForMove
found
Found a request from a different user that requires force flushing.
Found an expired request in lazy flush queue. Deleting from the list.
Found package in related set
FoundUnmatchingOptionalBundleVersion
FP!FXH
Framework
framework
FrameworkList
FrameworkPackage
FreeApplicabilityContext
FreeApplicablePackages
FreeLibrary
FreeSid
FreeUserTokensForMultiUserSession
FSetContentGroupState
fuchsia
FullFilePath
FullName
FullTrust
fullValidation
function
Function
function
FunctionType
FX9G$tEA
FX9G4t/
G !G,!G0
G(H;h
G(H9F(
G(H9F(u
G,H9A,H
G,H9C,u&H
G,I9E,
G@H9D$0t
G\$@H
G09F0t
G0E8x
G5,*}
G6?lYi
g8D$@
G8I+G0H
gainsboro
Gap: %I64u ms
GCChangelogsInterval
GE?eR+P
GenerateBytecodeForPackageImplementation
GenerateBytecodeForPackagesImplementation
GEOLOCATION_DEH_KEYWORD
GetAce
GetAgeRating
GetAllInboxPackages
GetAllNonInboxPackagesFromRegistryStore
GetAllPackagesToBeInstalledForSetupPhase
GetAllUpdatedPackages
GetApplicability called for bundle
GetApplicability5 called
GetApplicability5Implementation
GetApplicabilityEx called
GetApplicabilityFactory
GetApplicabilityForSpecificVersion called
GetApplicabilityImplementation
GetApplicablePackages
GetApplicablePackagesForUserWithAppChosenResources
GetApplicationUserModelIdFromToken
GetAppModelVersion
GetAppxDataRootPath
GetAppXError failed with error
GetAppXLogMessageFromDataFailure
GetByteCodeCachePath
GetCanonicalMergedPriFileNameForPackages
GetCategories
GetCategoryIsGame
GetChanges() called but !db.IsOpen()
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDeltaInfoW
GetDeploymentError
GetDeploymentVolumeFlagsForPackageRoot
GetDriveTypeW
GetEffectivePackageStatusForUser
GetEncryptedStreamingReader
GetErrorInfo
GetErrorInfo failed with undocumented error
GetErrorInfo reports there is no error object to return
GetExitCodeProcess
GetExtensionProperty
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandleEx
GetFileSecurityW
GetFileSizeEx
GetFileTime
GetFileType
GetFileVersionInfoExW
GetFileVersionInfoSizeExW
GetHivePath
GetLastError
GetLastInsertRowID() called but !db.IsOpen()
GetLegacyTargetPlatformInfo
GetLengthSid
GetLocalTime
GetMergedSystemPriEx
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetNamedSecurityInfoW
GetNonExactManifestReader
GetOptOutOfBackupRestore
GetOptOutOfDVR
GetOptOutOfSD
GetOrCreatePriFileForAvailablePackages
GetOutgoingAppTileUniqueId
GetOverlappedResult
GetPackageFilesDiskUsageImplementation
GetPackageFilesDiskUsagePerVolumeImplementation
GetPackageFullName
GetPackageFullNameFromToken
GetPackagesByPackageFamily
GetPackageStatus
GetPackageStatusForUser
GetPackageStatusForUserSid
GetPackagesThatMayNeedPreinstallPackageStatusMarked
GetPackageTypeImplementation
GetPackageVolumeSisPath
GetPersistedRegistryLocationW
GetProcAddress
GetProcessHeap
GetProcessMitigationPolicy
GetProcessWindowStation
GetProfileType
GetPublisherRootFolder
GetScaleFactorForMonitor
GetSecureSystemAppDataFolder
GetSecurityDescriptorDacl
GetSecurityDescriptorOwner
GetSecurityDescriptorSacl
GetSecurityInfo
GetSessionIdsOwnedByUser
GetSessionUserSidQueryTokenFailed
GetSharedLocalFolder
GetSidSubAuthority
GetSidSubAuthorityCount
GetStagedPackageOrigin
GetStagedPackagePathByFullName
GetStateFolder
GetStateRootFolder
GetStorageDeviceInfo
GetStorageInstanceCount
GetSystemAppDataFolder
GetSystemAppDataKey
GetSystemDirectoryW
GetSystemInfo
GetSystemMetadataPathForPackage
GetSystemMetadataPathForPackageFamily
GetSystemPreferredUILanguages
GetSystemTimeAsFileTime
GetSystemWow64DirectoryW
GetTempFileNameW
GetTempPathW
GetThirdPartyAppRating
GetThirdPartyAppRatingCount
GetThreadInformation
GetTickCount
GetTickCount64
Getting Main Package indexed row failed
Getting related set
GetTokenInformation
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUpgradePackageVolumeKey
GetUserTokensForMultiUserSession
GetVersionExW
GetVolumeInformationByHandleW
GetVolumeInformationW
GetVolumeMediaId
GetVolumeMountPointForVolume
GetVolumeNameForVolumeMountPointW
GetVolumePathNamesForVolumeNameW
GetVolumePathNameW
GetWindowsDirectoryW
gfffA
GHH9E(
ghostWhite
Global\
GlobalCollection
goldenrod
gonecore\admin\appmodel\packagemanager\server\xupdatesessionmanager.cpp
GP9CPt8H
GqN,f
green
greenYellow
group
GZ?\A
H !X M
H SUVWATAVAWH
H SVWH
H UATAUAVAWH
H UAVAWH
h UAVAWH
H USVWAVH
H UVWATAUAVAWH
H UVWAUAVH
H UVWAVAWH
H UWAVH
h VWATAVAWH
h VWAVH
H WAVAWH
H!\$ E3
H!\$ L
H!\$`L
H!\$0D
H!\$0H
H!\$0H!\$(H!\$ 3
H!\$8
H!\$83
H!\$8E3
H!\$p
H!] H
H!]@L
H!]0H!] H
H!]0I
H!]0L
H!]8H
H!]PH
H!]pH
H!]PL
H!]wH
H!]wH!]oH
H!_@3
H!|$(E3
H!|$@H
H!|$`
H!|$0H
H!|$0H!|$(H!|$ 3
H!|$8E3
H!}@E3
H!}0H
H!~(H!~0H!~8H!~@3
H!5IC'
H!8!x
H!8H!x
H!D$ L
H!D$`I
H!D$03
H!D$hI
H!D$PH
H!E8I
H!EgH
H!E'H!E/!EKH
H!M0H!M H
H!s H!s(H
H!s H!s(H!s0H
H!S(H
H!t$0H
H!T$8H
H!t$8H!t$0H!t$(H!t$ 3
H!uX2
H!uX3
H!X 3
H!XhH
H(9J8u
H(A;M8u
H)n8A
H,H9K,
H;\$@tSH;\$8u
H;\$@u
H;\$`r
H;\$0r
H;\$0u
H;\$8r
H;\$hr
H;\$pt
H;]`r
H;_`r
H;_hr
H;_Pr
H;{ r
H;{(r
H;{@r
H;{0r
H;{8r
H;{Hr
H;{hr
H;{Pr
H;{pr
H;{Xr
H;|$(H
'H;|$(u
H;|$0r
H;|$HI
H;|$hr
H;|$X
H;|$Xr
H;}@u
H;}`r
H;A(u
H;E`w
H;Eou
H;F u
H;Fhr
H;FHr
H;Ghv=
H;H r
H;H`r
H;Jhr
H;K@H
H;K`H
H;l$8
H;L$8t
H;MPu
H;N`r
H;n`s)
H;NHr
H;Npr
H;o8r
H;o8r4E3
H;Ohr
H;p@r
H;q sOH
H;Q0s
H;S(v
H;s@sbH
H;s8r
H;Spr
H;T$0r
H;t$8t
H;t$Hu
H;u(r
H;u(s"
H;w`r
H;wPr
H;x r
H;X@r
H;x@r
H;y r
H;Y@r
h}X[%W
H+D$ u
H+D$(H
H+GhH
H+L$XH;
H+MXH;
H+O0H;
H+T$P
H+T$PA
H+WhH
h5!wE
H89L$`umH
H9(u(H
H9)t*H
H9\$0t
H9\$8
H9\$8v
H9\$X
H9]@u,H
H9]gu
H9^hH
H9_`v,H
H9_`v.H
H9_Hs<
H9_hv,H
H9_Ptb8_htHH
H9{(v!H
H9{(v"H
H9{@v!H
H9{0v*H
H9{0v2H
H9{0vEH
H9{8v!H
H9{8v-H
H9{hv"H
H9{Hv=H
H9{Pv!H
H9{pv+H
H9{Pv2H
H9{Xv!H
H9|$`
H9|$0v6L
H9|$P
H9|$PA
H9|$X
H9|$XtDI
H9|$Xu H
H9~ u%H
H9~0t:H
H90uiH9
H92u+H;
H98uhI
H98veH
H9C0se
H9D$@t
H9D$`
H9D$H
H9D$ht(H
H9D$Xu
H9Egr
H9Ext
H9FPu
H9FXu
H9G0w:
H9Ghs}
H9H(t
H9L$@
H9l$0t
H9L$8
H9L$HtE8L$`t5
H9L$Hu
H9l$X@
H9L$Xv,H
H9Npv!H
H9p w
H9q`vDH
H9qpu
H9s`u=
H9s8v7H
H9t$@u"H
H9T$0v%I
H9t$8t
H9T$x
H9u`v,H
H9w8vb
H9wPv
H9x veH;x r
H9X,v
H9Y H
H9Y(v
H9Y(w'I9Y@v-M;A@s'I
H9y8v
H9y8v>H;y8r
H9yHv0H
hA^A\_^[]
hA_A^_^[]
HA_A^_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
hAa6#4
hardlinkCost
HardLinkedCount
HardLinkedSizeKB
Hardlinking evaluation cost: %I64u ms
hasBlockCacheFile
HasCentennial
HasDevLicense
HashDigestLength
HasSyncedInitialPayloads
HcL$ HcD$$H
HcP$I
HeaderAddr
HeapAlloc
HeapFree
hH:g-$
HH;\$(u
hh<Cx
h'iBhRf
Hko|y
hMZ7y
honeydew
HostingModel
hotPink
HoursBetweenUpdateChecks
hresult
HRESULT
hresult
HRESULT
hresult
HRESULT
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HRESULT
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
HRESULT
hresult
HRESULT
hresult
HRESULT
HResult
hsRH;Ohr
http://schemas.microsoft.com/appx/2013/appxprovisionpackage
HV@k>
hXTwx
i$D!uoJ
I;^`r
I;~`r
I;F u
I;N`r
I;n`r
i\!JA
I^=(o
I_QueryTagInformation
I_RpcExceptionFilter
i0q$4
I5J:7jhd
i8\$Hta
I9^`t
I91tNA8q
I9D$,I
I9v`u
I9vhu
IcN8H
i-Di2L
IdleTaskInProgress
if9u@u
ifexec
ignoredPackageFullName
Ignoring optional package - did not find an indexed package row
Ignoring optional package - failed to get package row
Ignoring optional package -- unable to get optional package row
Ignoring package because of invalid related set update, picking another package instead
Ignoring paused optional package
Ignoring paused package
Ignoring protection level %u for %ws.
Ignoring unsupported protection level %u for %ws.
IH;\$8u
IIDFromString
IM#Uo
Image
imageName
ImagePath
imageSize
ImpersonateLoggedOnUser
ImpersonateSelf
ImplementsContentRestrictions
InboxApplications
include
incomingPackageFullName
IncomingPackageName
IncrementPackageStatusVersion
Index
INDEXEDDB_DEH_KEYWORD
Indexing cost: %I64u ms
indianRed
indigo
Indirections
indirectlyServicedPackagesList
InfoTip
InitialInstallTime
Initialize
InitializeAcl
InitializeCriticalSectionEx
InitializeProcThreadAttributeList
InitializeSecurityDescriptor
InitializeSListHead
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
inPackage
InPlaceFileInfo
InPlaceUpdate
InPlaceUpdateStatus
inProcessMediaExtension
INSERT INTO AppExecutionAlias (_Revision, _WorkId, Alias, Extension, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO AppExtension (_Revision, _WorkId, Name, Id, PublicFolder, DisplayName, Description, Extension, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO AppExtensionHost (_Revision, _WorkId, Extension, Name, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO AppInstaller (_Revision, _WorkId, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO Application (_Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationBackgroundTask (_Revision, _WorkId, Type, Extension, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO ApplicationContentUriRule (_Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationExtension (_Revision, _WorkId, Application, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, _LocalizedDictionary, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationProperty (_Revision, _WorkId, Application, "Index", Name, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO AppService (_Revision, _WorkId, Name, Extension, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO AppUriHandler (_Revision, _WorkId, HostName, Extension, ProgID, AppUriHandlerGroup, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO AppUriHandlerGroup (_Revision, _WorkId, Name, Extension, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO AppxManifest (_Revision, _WorkId, Package, Xml, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO Bundle (_Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO BundlePackage (_Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO BundleResource (_Revision, _WorkId, BundlePackage, Language, Scale, DXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO ContentGroup (_Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO ContentGroupFile (_Revision, _WorkId, ContentGroup, File, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO DefaultTile (_Revision, _WorkId, Application, UpdateRecurrence, UpdateUriTemplate, ShowNameOnTiles, ShortName, DefaultSize, HoloContentChoice, MixedRealityModel, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO Dependency (_Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT INTO DeploymentHistory (_Revision, _WorkId, PackageIdentity, User, HResult, WhenOccurred, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO Enterprise (_Revision, EnterpriseId, _Dictionary) VALUES(?,?,?);
INSERT INTO File (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO FileTypeAssociation (_Revision, _WorkId, FileType, ContentType, Extension, "Index", ProgID, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO MrtApplication (_Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO OptionalBundle (_Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO OptionalBundlePackage (_Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO OptionalBundleResource (_Revision, _WorkId, OptionalBundlePackage, Language, Scale, DXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO Package (_Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageAppInstaller (_Revision, _WorkId, Package, AppInstaller, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
INSERT INTO PackageLocation (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, Volume, InstalledLocation, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO PackagePolicy (_Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO PackageProperty (_Revision, _WorkId, Package, "Index", Name, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO PackageSourceUri (_Revision, _WorkId, Package, Uri, Kind, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO PackageSuperceded (_Revision, PackageIdentity, User, _Dictionary) VALUES(?,?,?,?);
INSERT INTO PackageUser (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
INSERT INTO PrimaryTile (_Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO PrimaryTileUser (_Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO Protocol (_Revision, _WorkId, ProtocolName, ReturnResults, Extension, "Index", ProgID, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO Resource (_Revision, _WorkId, Package, "Index", Language, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO SecondaryTile (_Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO SecondaryTileUser (_Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT INTO XboxPackage (_Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
Installed and Applicable resource package sets do not match, so it is installable
InstalledPackagedAppsRevision
installedPackageFullName
InstallPackageList
integrityResult
integrityState
intentPackageFamilyOrFullName
IntentPackageFamilyOrFullName
intentPackageFullName
InterfaceIdentifier
InterlockedPopEntrySList
InterlockedPushEntrySList
internal\onecorebase\inc\appmodel\common\fileinuse.hpp
internal\onecorebase\inc\appmodel\common\registrykey.hpp
internal\onecorebase\inc\appmodel\package\PackageMoniker.hpp
internal\onecorebase\inc\appmodel\package\processorarchitecture.hpp
internal\onecorebase\inc\appmodel\staterepository\dal/Database.hpp
internal\onecorebase\inc\appmodel\staterepository\dal/Statement.hpp
internal\onecorecom\inc\deployment\RegistrationStore.hpp
internal\onecoreuapbase\inc\TdlMigration.h
internal\sdk\inc\wil/resultmacros.h
internal\sdk\inc\wil\Resource.h
internal\sdk\inc\wil\Result.h
internal\sdk\inc\wil\staging.h
internal\sdk\inc\wil\tokenhelpers.h
InternalName
Inventory
IO|j-!
iot2:Subsystem
iot2:SupportsMultipleInstances
is_triggers_enabled
IsAppx
isCacheFileTailBlockResult
IsCentennial
IsCleanupTaskComplete
isCoServicedSet
IsCurrentProfileSpecial
IsDebuggerPresent
IsDeveloperModeEnabled
isDiffusionEnabled
isEncrypted
IsEvtExportLogPresent = 
isForSpecificUser
IsImpersonating
IsInAutoCommitMode() called but !db.IsOpen()
IsInboxPackage
IsInPlaceUpdate
IsInRelatedSet
IsInstalled
IsLaunchByteCodeRpcServerImplemented
IsLOBApp
IsLocalExperiencePackReadyForRemoval
IsMain
isMigration
IsNonInboxAllUserPackage
IsNonInboxAllUserPackageSpecificPackage
isOnSystemVolume
IsOptional
IsPackageDowngrade
IsPackageEncrypted
IsPackageEndOfLife
IsPackageInDownlevelInstalledKey
IsPackageInEndOfLifeKey
IsPackageInStagedKey
IsPackageInstalledInternal
IsPackageInUpgradeKey
IsPackageOnPreinstalledVolume
isPackageRequired
IsPackageUsingBDC
IsPreThresholdDesktop
IsPreThresholdPhone
IsProcessorFeaturePresent
IsProvisioningAllowed
IsQueueEmpty
isRequired
isSessionLocked
IsSideloadingEnabled
IsStreamingPackage
IsValidSecurityDescriptor
IsValidSid
IsWellKnownSid
IsWPStoreSigningAllowed
IsWPTestEkuSigningAllowed
IsXap
ivory
j*>Y(
j:jSVS
J}@s#
J'~rhn
J9>tFA
JHND/?
Jjz~-
jOb!r
jonecore\admin\appmodel\packagemanager\server\generatepreinstalledprifiles.cpp
journal_mode
journal_size_limit
Jr7F*
JuniperNetworks.JunosPulseVpn_cw5n1h2txyewy
jy $Q
K SUVWH
K SVWH
K*Nh@
k;<QT
k{~MX
K32EnumProcesses
K9wdtU
kD8d$@uaD
kernelbase.dll
keyId
KeyID
keyIdSize
KeyName
KEYW\
KfD9u0uvH
khaki
KN)]k
L!|$0E3
L!}gH
L!}HH
L!}XH
L!7L!w
L!d$`L9d$XtGH
L!d$8L
L!mXH
L!t$ I
L!t$0%
L!u@3
L!u@H
L!uoH
L$ !8
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ SUVWH
L$ SVWH
L$ SWH
L$ UH
L$ USVWAVAWH
L$ USWATAUAVAWH
L$ UVWATAUAVAWH
L$ UVWAVAWH
l$ VWAUAVAWH
l$ VWAVH
L$ VWAVH
l$ VWAVH
L$ VWAVH
l$ VWAVH
l$ WH
L$ WH
L$(!L$ !L$03
L$(E3
l$(E3
L$(I;
L$@E3
l$@E3
L$@E3
l$@E3
L$@H3
L$@Hc
L$@I+
L$\H;
L$`9L$Pu
L$`D;
L$`E3
l$`E3
l$`E8
L$`H;
L$`H;D$h
L$`H3
L$`I;
L$|E3
L$<D3
L$0!E
l$0E3
L$0E3
l$0E3
L$0E3
L$0H;
L$0H;A t
L$0H;A(t
L$0H;M
L$0H3
L$0H9
L$4A3
L$8E3
l$8E3
L$8E3
L$8H;
L$8H3
L$8I;
L$8L;
l$8M9n
l$cE3
L$DA;
L$DE3
L$H!L$PH
l$hE3
l$HE3
l$hE3
L$HE3
L$hE3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$hI;
l$HsoL
l$Ht:H
L$PA;
L$PD8l$ uPI
L$PD9
L$PD99u
L$pE3
L$PE3
l$PE3
L$PE3
l$pfD
L$PH;
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$PH9]
L$PI;
L$PL+
L$pL9y
l$pM9
L$TA+
L$TE3
L$xA3
L$XE3
L$xE3
l$XE3
L$XE3
l$XE3
L$XE3
l$XE3
L$XH;
L$XH+
L$XH3
L$xH3
L$XH3
L$XI;
l$XL!|$`
L$XL;e
L$XM;
L;~`r
L;5T<
L;d$X
L;fHr
L;g8r
L;t$h
L;t$hr
L;t$X
L;v`r
L;vHr
L+|$h
L9#t&H
L9(u(M
L9.u)
L9/u+H
L9/u4H
L9\$8u:
L9\$8ue
L9\$8uI
L9\$8uN
L9\$8uO
L9\$Xu
L9\$Xu:
L9\$Xu@
L9\$Xu[
L9\$Xu>
L9\$Xu9
L9\$XuC
L9\$Xuh
L9\$XukD
L9\$XuOA
L9\$XuS
L9\$XuZ
L9]@u
L9` w
L9{@u
L9{0t#H
L9|$(t
L9|$@t
L9|$0t
L9|$Ht
L9|$p
L9|$X
L9|$x
L9}wt&H
L97uqH
L98u$L
L9b t
L9Cpv/3
L9d$ t
L9d$@w
L9d$`
L9d$8
L9d$8t4D8d$Pt#I
L9d$8uD
L9d$h
L9d$hv
L9D$p
L9d$pu!f
L9d$X
L9d$x
L9d$X
L9d$Xt8D8d$pt'I
L9eHu"H
L9eot
L9G`H
L9i u%H
L9iXu
L9k0v1H
L9khu
L9l$@
L9l$0s
L9l$8t
L9l$Ht
L9l$P
L9l$xt`D8m
L9l$XuC
L9mXu
L9o@t
L9ohtiH
L9p v:I
L9p vNI
L9p@v=L;p@r
L9p`vDI
L9p`vKI
L9shu
L9t$@t
L9t$0tMH
L9t$0v
L9t$8t
L9t$h
L9u0u"
L9vhu
L9vhv(E
L9whu
L9x@vHH;X@r
L9y u"H
LA&&%Nq
Landscape
LandscapeFlipped
LastInventoryTime
LastLine
LastOrphanBackupManifestCleanupTime
LastOrphanPackageCleanupTime
lastState
LaunchByteCodeRpcServer
lavender
lavenderBlush
lawnGreen
LazyFlushQueueLength
LcD$0E
LCMapStringEx
LD8egu%3
LeaveCriticalSection
LegalCopyright
lemonChiffon
Level %u for %ws.
LICENSING_DEH_KEYWORD
lightBlue
lightCoral
lightCyan
lightGoldenrodYellow
lightGray
lightGreen
lightPink
lightSalmon
lightSeaGreen
lightSkyBlue
lightSlateGray
lightSteelBlue
lightYellow
limeGreen
linen
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LinkDestinationPath
LinkTargetIsPartOfAutomaticContentGroup
LM9t$
LoadCategoryNameTable
LoadExtensionRegistrationTable
LoadLibraryExA
LoadLibraryExW
Local AppData
Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
Local\SM0:%d:%d:%hs
LocalAlloc
LocalExperiencePackage
LocalFree
Location
locking_mode
LogFileInUse Telemetry failed: No valid provider tag.
LogHr
logoOnly
lookingFor
LookupAccountSidW
lpacAppExperience
lpt1.
lpt2.
lpt3.
lpt4.
lpt5.
lpt6.
lpt7.
lpt8.
lpt9.
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupOpenLocalPolicy
lstrcmpiW
lstrcmpW
LTtw3X
LXP_DEH_KEYWORD
LyncMXE2ETool-0ee8b9d7-73ed-477e-9624-4c7f903dec5b_t84ne4vpwezv8
m 9"+
M D3M$L
M D3u$L
M H1E
M"Q{f1
M(D3M,L
M(D3U,L
m:AppxProvisionList
m:AppxProvisionList/m:EndOfLife/m:Package/@FamilyName
m:AppxProvisionList/m:Provisioned/m:Package/@FullName
m:EndOfLife
m:EndOfLife/m:Package
m:Package
m:Provisioned
m:Provisioned/m:Package
m:VisualElements/@Logo | *[local-name()='VisualElements']/@Square150x150Logo
m:VisualElements/@SmallLogo | m2:VisualElements/@Square30x30Logo | *[local-name()='VisualElements']/@Square44x44Logo
m:VisualElements/m:DefaultTile/@WideLogo | *[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Wide310x150Logo
m:XboxLive | mx:XboxLive
M;f`r
M;u`r
M;w8r
m@8t$0
M0H9M
m0ueL
m2:VisualElements/m2:DefaultTile/@Square70x70Logo | *[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Square71x71Logo
m4H+L$(H
m4H+U
m6-CM
M7H!}
M8D81u(H
M9,$t
M9} w
M9n0u%H
Machine
Machine register cost: %I64u ms
MACHINE\
MachineArchitecture
MachineDatabase
MachineDatabaseAutoCheckpoint
MachineDatabaseCheckpointThreshold
MachineDatabaseFileChunkSize
MachineDatabaseJournalSizeLimit
MachineDatabaseOptions
MachineDatabasePageSize
MachineDatabaseStatisticsLastUpdated
magenta
Main or Optional Package could not be found!
Main or Optional Package is in a bad package status, so it requires reinstall
Main or Optional Package is installed and in a good package status
main package
mainBundle
MainBundle
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
mainPackage
MainPackageFamilyName
MainPackageFullName
MainPackageMoniker
MainParameter
MaintenanceInterval
MaintenanceMaxClockDelta
MakeSelfRelativeSD
ManifestCacheOptions
ManifestLogo
ManifestPath
ManifestPath %ws
ManifestReaderFound
ManifestSmallLogo
ManifestWideLogo
MapViewOfFile
MarkStatusOfMainPackageForUser
maroon
Match
MaxConcurrentStageCountForCoServicingPackages
MaxCount
MaxDynamicBatchSize
MaxInstallOrder
MaxUnsignedApp
MaxVersion
MdilBindPackageEstimate
MdilBindPackageEx
MediaId
mediumAquamarine
mediumBlue
mediumOrchid
mediumPurple
mediumSeaGreen
mediumSlateBlue
mediumSpringGreen
mediumTurquoise
mediumVioletRed
memcmp
memcpy
memmove
MEMORY
memset
MergeRelatedPriFiles
MergeSystemResourceFilesImplementation
message
Message
message
Message
message
Message
message
Message
message
Message
message
metadataStageCost
mHL;m
mHu#L
mHuQH
Microsoft
Microsoft Corporation
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy
Microsoft.CloudExperienceHost_8wekyb3d8bbwe
Microsoft.LyncMX_8wekyb3d8bbwe
Microsoft.MicrosoftEdge_8wekyb3d8bbwe
Microsoft.MicrosoftEdgeBeta_8wekyb3d8bbwe
Microsoft.MicrosoftEdgeDevToolsClient_8wekyb3d8bbwe
Microsoft.MoCamera_cw5n1h2txyewy
microsoft.system.package.metadata
microsoft.system.package.metadata\
microsoft.system.package.metadata\blockcache
Microsoft.VCLibs.110.00.Debug_8wekyb3d8bbwe
Microsoft.VCLibs.110.00_8wekyb3d8bbwe
Microsoft.VCLibs.120.00.Debug_8wekyb3d8bbwe
Microsoft.VCLibs.120.00_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.CP_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Debug.CP_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Debug.Preview_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Preview_8wekyb3d8bbwe
Microsoft.Windows.ApplicationModel.DesktopAppx
Microsoft.Windows.AppModel.Tiles
Microsoft.Windows.AppxDeploymentFallback
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.CloudExperienceHost_cw5n1h2txyewy
Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy!App
Microsoft.Windows.Cortana_cw5n1h2txyewy!CortanaUI
Microsoft.Windows.ShellExperienceHost_cw5n1h2txyewy!App
Microsoft.Windows.StateRepository.Core
Microsoft.Windows.StateRepository.Service
Microsoft.WindowsReadingList_8wekyb3d8bbwe
Microsoft.WindowsStore_8wekyb3d8bbwe
Microsoft.WinJS.2.0_8wekyb3d8bbwe
Microsoft.XboxIdentityProvider_8wekyb3d8bbwe
Microsoft.ZDebugMenu_wmyngzxja4wtg
Microsoft.zMicrosoftEdge_8wekyb3d8bbwe
Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\
Microsoft-Windows-AppReadiness/Admin
Microsoft-Windows-AppReadiness/Operational
Microsoft-Windows-AppXDeployment-Server
Microsoft-Windows-AppXDeploymentServer/Debug
Microsoft-Windows-AppXDeploymentServer/Diagnostic
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer/Restricted
Microsoft-Windows-AppXPackaging/Operational
Microsoft-Windows-SettingSync/Debug
Microsoft-Windows-SettingSync/Operational
Microsoft-Windows-StateRepository/Operational
Microsoft-Windows-Store/Operational
Microsoft-Windows-WindowsUpdateClient/Operational
midnightBlue
migrate
MigrateSecondaryTile
MigrateSecondaryTilesFromTdl
MigrationRequired
MigratorPatch
MinimumDaysBeforeForceUpdate
mintCream
MinWidth
MissingPackageFamily
MissingParameter
mistyRose
MkParseDisplayName
Mm<E3
Mncyq<
moccasin
MOCOM_HELPER_KEYWORD
ModifiedFile
module
Module
module
ModuleCollection
MofFile
MoH!]
MountPoint
MoveAndShrink
MovedPackages
MoveFileExW
MoveFileW
mp8U`uKH
mpI!]
MrmCoreR.dll
mrmdeploy.dll
MRT_DEH_KEYWORD
MrtApplication
MRTDataHandlerRemove
MrtDefaultTile
MrtPackage
MrtSharedPri
MrtUserPri
ms:Measures
MS3B\
MSAC_SIGNOUT_DEH_KEYWORD
msdelta.dll
Msg:[%ws] 
MSIXInBundle
msvcp_win.dll
ms-xbl-%08x
Mu4E3
MultiByteToWideChar
multiple
Multiple frameworks with same version found, choosing not yet installed package
Multiple intent package full names not supported.
m'w8Z
MwH;E
mx:Rating
MX9E@uvH
MXH9A,
n I;^
N(9H(u
N@D8|$ ueH
n|@gQ
N~u3JK
N<unknown>
navajoWhite
ncalrpc
ND9t$xtD
Ndr64AsyncServerCallAll
NdrAsyncServerCall
NdrClientCall3
NdrServerCall2
NdrServerCallAll
needsTrimming
neutral
newFilePointer
NewMainPackageFullName
newPackage
NewParser
NewPrimaryTile
NextDeploymentState
NextVolumeIndex
nL9]hu
No Applicable TargetPlatform
No main package found for main bundle
NoContentGroupMapForPackage
NoManifest
Non-Encrypted FileName: %ws
Non-fatal, webplat storage server fails to detach databases.
NoReRegisterOnUpgrade
NORMAL
not empty
not in
Notification
NotificationSemaphores
NotifyObject
NotifyPrelaunchServce
NoUIEntryPoints
NoUIEntryPoints-DesignMode
nS#,C
NtAccessCheck
NtClose
NtCompareSigningLevels
NtCreateFile
NtCreateSection
NtCreateWnfStateName
NtDeleteWnfStateName
ntdll.dll
ntelD
NtFsControlFile
NtGetCachedSigningLevel
NtMapViewOfSection
NTMARTA.dll
NtOpenDirectoryObject
NtOpenFile
NtQueryInformationFile
NtQueryInformationProcess
NtQueryInformationThread
NtQueryInformationToken
NtQuerySecurityObject
NtQuerySystemInformation
NtSetInformationFile
NtSetInformationThread
NtSetInformationVirtualMemory
NtSetSecurityObject
NTStatus
NtUnmapViewOfSection
NtUpdateWnfStateData
numAttempts
NumberOfFiles
NumberOfInventories
NumberOfPagesCheckpointed
o(L9fhu
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)(A;;0x1;;;LS)
O:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464D:PAI(A;OICI;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
O:SYG:SYD:P(A;OICI;KA;;;SY)(A;OICI;KRKX;;;BA)(A;OICI;KRKX;;;%s)
o\$PH
o`jsB(s
O6uWt
O8D99t
ObjectLength
ObjectNum
oD$ f
OD9eg
oE9~0
Offset
oL$0f
oldLace
OldMainPackageFullName
oldPackage
OldPrimaryTile
oldRoot
OLEAUT32.dll
olive
oliveDrab
OnDemandRegisterPackageFound
onecore\admin\appmodel\appxsignatureorigin\appxsignatureorigin.cpp
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
onecore\admin\appmodel\common\accesshelpers.cpp
onecore\admin\appmodel\common\actionlist.cpp
onecore\admin\appmodel\common\admincheck.cpp
onecore\admin\appmodel\common\alluserstorepaths.cpp
onecore\admin\appmodel\common\alluserstoresetupphase.cpp
onecore\admin\appmodel\common\applicabilityhelper.cpp
onecore\admin\appmodel\common\appxdeletefile.cpp
onecore\admin\appmodel\common\centennial.cpp
onecore\admin\appmodel\common\configuration.cpp
onecore\admin\appmodel\common\contentgrouphelpers.cpp
onecore\admin\appmodel\common\deferappdataacquisition.cpp
onecore\admin\appmodel\common\directoryacls.cpp
onecore\admin\appmodel\common\directorypaths.cpp
onecore\admin\appmodel\common\downlevelhelper.cpp
onecore\admin\appmodel\common\encryption.cpp
onecore\admin\appmodel\common\fileinusetelemetry.cpp
onecore\admin\appmodel\common\fspolicy.cpp
onecore\admin\appmodel\common\hardlinkingacls.cpp
onecore\admin\appmodel\common\impersonateself.cpp
onecore\admin\appmodel\common\manifestcache.hpp
onecore\admin\appmodel\common\manifestreader.cpp
onecore\admin\appmodel\common\mergedpricreator.cpp
onecore\admin\appmodel\common\metadata.cpp
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\mrthelper.cpp
onecore\admin\appmodel\common\multiuser.cpp
onecore\admin\appmodel\common\optionalpackagehelper.cpp
onecore\admin\appmodel\common\packagefullnameutilities.cpp
onecore\admin\appmodel\Common\PackageID.inl
onecore\admin\appmodel\common\packageinfo.cpp
onecore\admin\appmodel\common\packagestatus.cpp
onecore\admin\appmodel\common\prefetchfile.cpp
onecore\admin\appmodel\common\privilege.cpp
onecore\admin\appmodel\common\progid.hpp
onecore\admin\appmodel\common\removeregistrytree.cpp
onecore\admin\appmodel\common\scheduledtaskhelper.cpp
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
onecore\admin\appmodel\common\sessionutilities.cpp
onecore\admin\appmodel\common\signaturetools.cpp
onecore\admin\appmodel\common\statepaths.cpp
onecore\admin\appmodel\common\takeownership.cpp
onecore\admin\appmodel\common\targetplatformutilities.cpp
onecore\admin\appmodel\common\threadpriority.cpp
onecore\admin\appmodel\common\utilities.cpp
onecore\admin\appmodel\Common\Utilities.hpp
onecore\admin\appmodel\common\utilities.hpp
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\volumemanager.cpp
onecore\admin\appmodel\common\xmltools.cpp
onecore\admin\appmodel\datasource\filedatasource\src\fileappxrangerequestjob.cpp
onecore\admin\appmodel\dependencymanager\bundleactionlists.cpp
onecore\admin\appmodel\dependencymanager\deferredregistrationsresolver.cpp
onecore\admin\appmodel\dependencymanager\dependencylist.cpp
onecore\admin\appmodel\dependencymanager\dependencymanager.cpp
onecore\admin\appmodel\dependencymanager\dependencyresolver.cpp
onecore\admin\appmodel\dependencymanager\dependencyrules.cpp
onecore\admin\appmodel\deploymentmanager\inc\exceptionawarehelpers.hpp
onecore\admin\appmodel\deploymentmanager\src\actionlistutilities.cpp
onecore\admin\appmodel\deploymentmanager\src\appreputationhelpers.cpp
onecore\admin\appmodel\deploymentmanager\src\approvalstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\bundledataloader.cpp
onecore\admin\appmodel\deploymentmanager\src\bundleprocessor.cpp
onecore\admin\appmodel\deploymentmanager\src\commonregistration.cpp
onecore\admin\appmodel\deploymentmanager\src\dataflushingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\deindexingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\deploymentmanager.cpp
onecore\admin\appmodel\deploymentmanager\src\destageuserdatastatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\destagingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\evaluatestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\exceptionawarehelpers.cpp
onecore\admin\appmodel\deploymentmanager\src\indexingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\ipackagepolicydataparameters.cpp
onecore\admin\appmodel\deploymentmanager\src\machineregistrationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\mrtdatastatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\ondemandregisterhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\optionaldependencyhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicydataparametersviaapplicability.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicydataparametersviastaterepository.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicyhelpers.cpp
onecore\admin\appmodel\deploymentmanager\src\packagesinusehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\plmsessioninfo.cpp
onecore\admin\appmodel\deploymentmanager\src\plmsessionlist.cpp
onecore\admin\appmodel\deploymentmanager\src\preapprovalhelper.cpp
onecore\admin\appmodel\deploymentmanager\src\prerequisitestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\registerpackageonlogonhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\registrationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\restartpackagesinusehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sessionutil.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedappsredirecthandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedappssynchandler.cpp
onecore\admin\appmodel\deploymentmanager\src\stageuserdatastatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\stagingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\tilesstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\versionsupercedencehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\xboxdatastatehandler.cpp
onecore\admin\appmodel\enterprisemodernappmanagement\inc\maintainprocessorarchitectureonupdate.h
onecore\admin\appmodel\fixintegrity\lib\fixintegrity.cpp
onecore\admin\appmodel\fixintegrity\lib\fixmorethanonemainpackageperuser.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefile.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilebundlestreamingreader.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilehelper.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilepackagestreamingreader.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilerawdatareceiver.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilerequesthandler.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilesenumerator.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\extensionbundle.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\longfilepath.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\package.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\tools.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\activationcatalogverifier.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\collectors.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\extensioncatalogcollector.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\ExtensionCatalogCollector.hpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\packagedcomregistration.cpp
onecore\admin\appmodel\osim\src\host\appxosimextensiondlls.cpp
onecore\admin\appmodel\osim\src\host\host.cpp
onecore\admin\appmodel\osim\src\host\host.hpp
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
onecore\admin\appmodel\packagemanager\rpcinterface\packagemanagerrpc.cpp
onecore\admin\appmodel\packagemanager\server\addparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\addvolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\appinstallerprocessor.cpp
onecore\admin\appmodel\packagemanager\server\appxdownloadprogresshandler.cpp
onecore\admin\appmodel\packagemanager\server\argumenthelpers.cpp
onecore\admin\appmodel\packagemanager\server\commandprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deletepackagefilesparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deletevolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\dependentrequesttracker.cpp
onecore\admin\appmodel\packagemanager\server\deploymentnotification.cpp
onecore\admin\appmodel\packagemanager\server\deploymentoperationarguments.cpp
onecore\admin\appmodel\packagemanager\server\deploymentoperationparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuemanager.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuestore.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuestore.inl
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorereader.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorewriter.cpp
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorewriter.inl
onecore\admin\appmodel\packagemanager\server\deploymentrequest.cpp
onecore\admin\appmodel\PackageManager\Server\DeploymentRequest.hpp
onecore\admin\appmodel\packagemanager\server\endoflifelist.cpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbypackagevolumekey.cpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbyusersidfilter.cpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbyusersidnamepublisherfilter.cpp
onecore\admin\appmodel\packagemanager\server\errorhelpers.cpp
onecore\admin\appmodel\packagemanager\server\faultinjection.cpp
onecore\admin\appmodel\packagemanager\server\helpers.cpp
onecore\admin\appmodel\PackageManager\Server\IEnumPackagesFilter.hpp
onecore\admin\appmodel\packagemanager\server\moveparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\ondemandregisterparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\packageapplicability.cpp
onecore\admin\appmodel\packagemanager\server\packageoperation.cpp
onecore\admin\appmodel\packagemanager\server\prioritypolicy.cpp
onecore\admin\appmodel\packagemanager\server\provisionpackageparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\removeparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\resetparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\resetsingleparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\rpcmemorymanagement.inl
onecore\admin\appmodel\packagemanager\server\serversidediskusage.cpp
onecore\admin\appmodel\packagemanager\server\serversiderpc.cpp
onecore\admin\appmodel\packagemanager\server\service.cpp
onecore\admin\appmodel\packagemanager\server\setvolumestaterequest.cpp
onecore\admin\appmodel\packagemanager\server\specificvolumehelper.cpp
onecore\admin\appmodel\packagemanager\server\stageuserdataparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\statelocations.cpp
onecore\admin\appmodel\packagemanager\server\syncvolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\tilesrequest.cpp
onecore\admin\appmodel\packagemanager\server\tilesstorepreviewtile.cpp
onecore\admin\appmodel\packagemanager\server\volumerequestbase.cpp
onecore\admin\appmodel\packagemanager\server\volumerequestmanager.cpp
onecore\admin\appmodel\packagemanager\server\wnfpublisherstatename.cpp
onecore\admin\appmodel\packagemanager\server\wnfpublisherstatenamecache.cpp
onecore\admin\appmodel\packagemanager\server\xupdatesessionmanagerrpc.cpp
onecore\admin\appmodel\packagerepository\common\applicationextras.cpp
onecore\admin\appmodel\packagerepository\common\extensions.cpp
onecore\admin\appmodel\packagerepository\common\localizationdictionary.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
onecore\admin\appmodel\packagerepository\common\tools.cpp
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
onecore\admin\appmodel\packagerepository\staterepository\applicationcontenturiruletable.cpp
onecore\admin\appmodel\packagerepository\staterepository\applicationtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\filetable.cpp
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
onecore\admin\appmodel\packagerepository\staterepository\resourcetable.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
onecore\admin\appmodel\packagerepository\staterepository\tablehelper.cpp
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\precompilation\bytecodequeuemanager\bytecodequeuemanager.cpp
onecore\admin\appmodel\precompilation\client\bytecodegenerationengine.cpp
onecore\admin\appmodel\precompilation\client\bytecodegenerationrequest.cpp
onecore\admin\appmodel\precompilation\client\rpcserverhelper.cpp
onecore\admin\appmodel\recovery\recovery.cpp
onecore\admin\appmodel\stagingmanager\inc\stagingmanagerfaultinjection.hpp
onecore\admin\appmodel\StagingManager\Inc\StagingManagerFaultInjection.hpp
onecore\admin\appmodel\stagingmanager\inc\stagingsession.hpp
onecore\admin\appmodel\stagingmanager\src\applyinplaceupdate.cpp
onecore\admin\appmodel\stagingmanager\src\appxbundlestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxdatareceiver.cpp
onecore\admin\appmodel\stagingmanager\src\appxdynamicfilerangecollection.cpp
onecore\admin\appmodel\stagingmanager\src\appxloosefilebundlestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxloosefilepackagestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxmountedfolderconfiguration.cpp
onecore\admin\appmodel\stagingmanager\src\appxpayloadduplicatefinder.cpp
onecore\admin\appmodel\stagingmanager\src\appxpayloadfilehasher.cpp
onecore\admin\appmodel\stagingmanager\src\appxrequestfilerangesinventory.cpp
onecore\admin\appmodel\stagingmanager\src\contentgroupstaginghelpers.cpp
onecore\admin\appmodel\stagingmanager\src\encryptionstaginghelpers.cpp
onecore\admin\appmodel\stagingmanager\src\faultinjection.cpp
onecore\admin\appmodel\stagingmanager\src\fileinfo.cpp
onecore\admin\appmodel\stagingmanager\src\mountedfolderhelper.cpp
onecore\admin\appmodel\stagingmanager\src\resumefileinfo.cpp
onecore\admin\appmodel\stagingmanager\src\staginghelpers.cpp
onecore\admin\appmodel\stagingmanager\src\stagingmanager.cpp
onecore\admin\appmodel\stagingmanager\src\stagingsession.cpp
onecore\admin\appmodel\statecreation\lib\statecreation.cpp
onecore\admin\appmodel\telemetry\deploymentsession.cpp
onecore\admin\appmodel\Telemetry\DeploymentSession.hpp
onecore\admin\appmodel\telemetry\repositoryinventorysession.cpp
onecore\admin\appmodel\telemetry\sqmhelpers.cpp
onecore\admin\appmodel\telemetry\traceloggingsession.cpp
onecore\admin\appmodel\telemetry\userglobalsession.cpp
onecore\admin\appmodel\trust\filevalidationhelper.cpp
onecore\admin\appmodel\trust\trusthelper.cpp
onecore\admin\appmodel\trust\walktreetrusthelpers.cpp
onecore\base\appmodel\appxminirepository\lib\appxminirepository.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionpackage.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionpackageenumerator.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionreader.cpp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionwriter.cpp
onecore\base\appmodel\appxprovisionpackage\src\commonhelpers.cpp
onecore\base\appmodel\common\appxuninstallblocklist.cpp
onecore\base\appmodel\common\autocotaskmemstring.cpp
onecore\base\appmodel\common\autostring.cpp
onecore\base\appmodel\common\base32encoding.cpp
onecore\base\appmodel\common\base64encoding.cpp
onecore\base\appmodel\common\cryptoprovider.cpp
onecore\base\appmodel\common\guid.cpp
onecore\base\appmodel\common\impersonationcontext.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\common\signatureorigins.cpp
onecore\base\appmodel\common\stateschema.cpp
onecore\base\appmodel\common\stateseparation.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\stringset.cpp
onecore\base\appmodel\common\userprofile.cpp
onecore\base\appmodel\common\widestring.cpp
onecore\base\appmodel\package\packagesid.cpp
onecore\base\appmodel\packageinuse\packageinusehelper.cpp
onecore\base\appmodel\runtime\src\monikerinternal.cpp
onecore\base\appmodel\runtime\src\packagestatusinternal.cpp
onecore\base\appmodel\StateRepository\Common\Inc\ResourcePriority.hpp
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryreader.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryserialization.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtreader.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtwriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileview.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\LongRunningTransaction.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
onecore\base\appmodel\trust\trustlabelacehelpers.cpp
onecore\base\appmodel\trust\trustlabelhelpersbase.cpp
onecore\printscan\appxpackaging\lib\core\src\streamhelper.hpp
onecore\printscan\appxpackaging\lib\crypto\src\appxindirectdatareader.cpp
onecore\printscan\appxpackaging\lib\crypto\src\hashengine.cpp
onecore\printscan\appxpackaging\lib\crypto\src\hashprovider.cpp
onecore\printscan\appxpackaging\lib\crypto\src\signaturecheckhelper.cpp
onecoreuap\base\appmodel\statemanager\helpers\stateversion.cpp
onecoreuap\base\appmodel\statemanager\roamingrpc\stateapis.cpp
onecoreuap\base\appmodel\statemanager\roamingrpc\stateroamingrpcclient.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\appxtileshandler.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\appxvisualelementsparser.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\staterepositoryutils.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tdlmigrationhelper.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tilesstorehandler.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tilestorepackageinfo.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\xmlqueryhelper.cpp
onecoreuap\inetcore\Wwa\AppModelCommon\AutoPtr.hpp
onecoreuap\inetcore\Wwa\AppModelCommon\GenericMap.hpp
onecoreuap\inetcore\wwa\bytecode\lib\automapviewoffilehandle.cpp
onecoreuap\inetcore\wwa\bytecode\lib\bytecodecache.cpp
Online
OOBEApp_cw5n1h2txyewy
OPCOx
openError
OpenEventW
OpenIsSafe
OpenProcess
OpenProcess() failed on %u of %u for %hs
OpenProcessToken
OpenSCManagerW
OpenSemaphoreW
OpenServiceW
OpenStateExplicit
OpenStateExplicitForUserSid
OpenStateExplicitForUserSidString
OpenThread
OpenThread failed for idle task
OpenThreadToken
operation
Operation
Optional
Optional Package %ws not found in related set for %ws .
optionalBundle
OptionalBundle
optionalBundle
OptionalBundlePackage
OptionalBundleResource
optionalPackage
optionalPackageFamilyName
OptionalPackageFullName
Options
options
orange
orangeRed
orchid
OriginalFilename
OriginalUser
originatingBinary
originatingContextId
originatingContextMessage
originatingContextName
OSDATA\Software\
OSIM Host
OSIM state = 
OSIM_KEYWORD
OSIMListTypeEnumMap
OsimState
OSIntegration.DEH.ActivationCatalogCollector
OSIntegration.DEH.ActivationCatalogCollectorForUser
OSIntegration.DEH.Collectors
OSIntegration.DEH.ComExeClassRegistration
OSIntegration.DEH.ComExeServerRegistration
OSIntegration.DEH.ComInterfaceRegistration
OSIntegration.DEH.ComProgIdRegistration
OSIntegration.DEH.ComProxyStubRegistration
OSIntegration.DEH.ComSurrogateClassRegistration
OSIntegration.DEH.ComSurrogateServerRegistration
OSIntegration.DEH.ComTreatAsClassRegistration
OSIntegration.DEH.ComTypeLibRegistration
OSIntegration.DEH.ExtensionCatalogCollector
OSIntegration.DEH.PackagedComCatalogCollector
OSIntegration.DEH.PackagedComCatalogCollectorForUser
OSMaxVersionTested
OSMinVersion
OSName
OSRollbackPackages
OSVersionAppModel
OSVersionBuild
OSVersionMajor
OSVersionMinor
OSVersionRevision
oT$@f
oT8(G
outgoingPackageFromUpdateList
outgoingPackageFullName
OutgoingPackageName
outPackage
OutputDebugStringW
Overall time: %I64u ms
OverAllTime
ovR3^
ovv(>I5{
ozJ*i
p AWH
p WATAUAVAWH
p WAVAWH
p!;&^
p*X3A
P:\WindowsApps
p<uYEUH
p3"qdc5R
P3>,R
PA^_]
pA^_]
PA^_^
PA^_^[]
pA^_^[]
PA^_^[]
pA^_^[]
pA^_^][
PA^A\_^]
pA^A]_^]
PA_A^_[]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^A\_^[]
PA_A^A\_^[]
pA_A^A\_^][
PA_A^A]_^][
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Package
package
Package
package
Package
package
Package
package
Package
package
Package
package
Package
Package does not exist for current user
Package full name = 
Package is end of lifed and is thus not installable
Package is not installable because architecture preservation requirement is not satisfied
Package is not installed for the user, so it is not a reinstall
Package is not required by the specified user, but query is not only for specific user--check to see if it is required for machine.
Package is not yet indexed in package repository, so it is not a reinstall
Package is paused, so it cannot be registered yet
Package is required because it is already installed for that user.
Package is required because it is Installable for other user that has this package family
Package Manager State = 
Package rows w/no PackageUser references
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
PackageAppInstaller
PackageArchitecture
packageBaseKey
PackageChangelog
packageCount
PACKAGED_COM_DEH_KEYWORD
PackagedFullTrustEnabled
PackageExtension
PackageFamily
PackageFamilyName
packageFamilyName
PackageFamilyName
packageFamilyName
PackageFamilyNameFromFullName
PackageFamilyNameFromId
PackageFamilyPolicy
PackageFamilyUser
PackageFamilyUserResource
PackageFolder
PackageFolderOld
PackageFound
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullname
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName: %ws
PackageFullNameFromId
PackageFullNameFromProductId
PackageFullNames
PackageId
PackageIdentity
PackageIdFromFullName
PackageIndex
packageInplacePending
PackageKey
PackageLocation
PackageMachineStatus
PackageManagerAction
PackageManagerError
PackageManagerMainPackageSuccess
PackageManagerPerfSummary
PackageManagerStartDeployment
PackageManagerState
PackageManagerSuccess
PackageManagerSummaryError
PackageManagerUninstall
PackageMoniker
PackageMoniker2
PackageMonikerNew
PackageMonikerOld
PackageName
PackageNameAndPublisherIdFromFamilyName
PackageNameOne
PackageNameTwo
PackageOrigin
PackagePolicy
PackageProperty
PackageRelativeApplicationId
packageRelativeFilePath
PackageRepository.edb
PackageRepositoryAllocate
PackageRepositoryFree
PackageRepositoryRoot
PackageRollBackResult
packageRoot
PackageRootFolder
packageRootOld
Packages
PackageSID
PackageSid
PackageSidFromFamilyName
PackageSize
packageSource
PackageSourceUri
PackageStaging
PackageState
packageStatus
PackageStatus
packageStatus
PackageStatusOperationImplementation
PackageStatusUpdateBad_ModifiedPackage
PackagesToBeInstalled
PackageSuperceded
PackageTableRowKey
PackageType
PackageUpdateFailed
PackageUpdateFailedAttemptingRestage
PackageUri
PackageUser
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
PackageUserChangelog
PackageUserStatus
PackageVersion
PackageVersion2
PackageVolumeStatusImplementation
PackgeFullName
PackgeLocation
PAI(A;;0x120089;;;AC)
PAI(A;;0x1200A9;;;AC)
paleGoldenrod
paleGreen
paleTurquoise
paleVioletRed
papayaWhip
ParseApplicationUserModelId
Partition
Path %ws
Path %ws level %u protectResult %u
Path %ws level %u.
Path: %ls
Path: %ls -> %ls
Path: %ws
PathAllocCanonicalize
PathAllocCombine
PathCchAppend
PathCchCombine
PathCchRemoveBackslash
PathCchSkipRoot
PathCreateFromUrlW
PathFileExistsW
PathFindFileNameW
PathFindNextComponentW
PathName
PathOne
PathStripPathW
PathTwo
Pause
PausedandInstalledPackage
PauseEvent
PauseOnFailure
pCeP!a
pD8|$0
PD9l$8t*H
peachPuff
Percentage
PeriodicUpdateRecurrence
PerPackageEntries
PerPackageFamilyEntries
PERSIST
PerSystemEntries
PH9]h
Phase
PhaseError
Phone package not installable on desktop
PHONECALLORIGIN_DEH_KEYWORD
PlatformPolicyBlockReasonMap
Policies\Microsoft\Windows\Appx\EnterpriseUninstallBlockList
Policy.Aggressive.ConnectionMaxAge
Policy.Aggressive.ConnectionMaxCount
Policy.Aggressive.ConnectionMinCount
Policy.Aggressive.GCInterval
Policy.Aggressive.StatementMaxAge
Policy.Aggressive.StatementMaxCount
Policy.Aggressive.StatementMinCount
Policy.Normal.ConnectionMaxAge
Policy.Normal.ConnectionMaxCount
Policy.Normal.ConnectionMinCount
Policy.Normal.GCInterval
Policy.Normal.StatementMaxAge
Policy.Normal.StatementMaxCount
Policy.Normal.StatementMinCount
PolicyReason
ponecore\admin\appmodel\stagingmanager\src\destagingsession.cpp
Portrait
PortraitFlipped
PostDeploymentOperationCheck cost: %I64u ms
PostDowngradeVersion
PostFixAllCascadingInMachinePartition
powderBlue
PPTP00
PPTP00onecore\admin\appmodel\telemetry\inventorysession.cpp
PRAGMA %s;
PRAGMA %s=%I64d;
PRAGMA %s=%s;
PRAGMA optimize;
Preallocating file %ws failed. Ignoring the error as the file on disk already has full size %llu bytes
PreDowngradeVersion
Preference
PREINSTALLED_CONFIG_TASK_DEH_KEYWORD
PrepareDeploymentPath
PreRegisterOptionsBitMap
PreviousAppVersion
PrimaryBaseTile
PrimaryServiceConfigId
PrimaryTile
primaryTileId
PrimaryTileUser
PrimaryTileUserChangelog
PriPaths
Problem
ProcessCount
ProcessDeferredRequestStatesBegin
ProcessDeferredRequestStatesEnd
ProcessId
processId
ProcessIdToSessionId
ProcessIndex
ProcessInformation
ProcessingPackageFullName
ProcessingSQL
ProcessorArchitecture
ProductId
ProductName
ProductVersion
profapi.dll
ProfileImagePath
Progress
progress
PropertyId
Protocol
PROTOCOL_DEH_KEYWORD
ProviderDisplayName
Provisioned
ProvisionedPackage
ProvisionedPackageDeleted
ProvisionedPackageExclude
ProvisionForAppInstall
ProvisionSourceIsBundle
PRVAd
PublicFolder
publisher
Publisher
PublisherCacheFolder
PublisherDisplayName
PublisherFolders
PublisherName
purple
'PX6P#
Q%,wE
Q(9P(t$
Q8VI4
QD(7J
Qf'((
QH9|$8t
qPt&H
qPt(H
QueryActiveSession
QueryFullProcessImageNameW
QueryPerformanceCounter
QueryServiceStatus
QueryUnbiasedInterruptTime
QueryUserToken
QueueLength
QueueRegistrationForRepairActivity
QuirkIsEnabledForPackage
r#ZO'
R$fA;Z*
r,L;vHr
r:L;v
r;appxapplicabilityblob.dll
R]^F=
r+H;~
r<H!T$0
r=H;~
r0H;~
r0H;X@r
r1H;~
r4H;~
r5H;~
r6H;~
RaiseException
RaiseFailFastException
rAPfY+
Ratings
RatingsCategory
RDSAppXNotifyRecoveryTrigger
RDSRecoverRequestsImplementation
ReadFile
readFileGLE
readFileResult
readiedInPlaceChanges
ReapplyAcls
reason
ReattemptCount
ReconnectTilesForPackage
RedirectMrtResources
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumKeyW
RegEnumValueW
RegFlushKey
RegGetKeySecurity
RegGetValueW
RegisterAppPrimaryTileForUser
RegisterPackageOnLogon packagetype %d is not supported
RegisterPreviewTilesForPackage
RegisterPrimaryTilesForUser
RegisterServiceCtrlHandlerExW
RegisterStateChangeNotification
RegisterStateLock
RegisterTile
RegisterTraceGuidsW
RegisterUpdatedTilesForUser
Registration cost: %I64u ms
RegistryKeyName
RegistrySubKeyName
RegLoadAppKeyW
RegOpenCurrentUser
RegOpenKeyExW
RegOpenUserClassesRoot
RegQueryInfoKeyW
RegQueryValueExW
RegSetKeySecurity
RegSetKeyValueW
RegSetValueExW
RelatedSetValidationResult
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
ReleaseStateLock
Remaining cost: %I64u ms
RemediationFromInplaceUpdate
RemoveDeprovisionedPackageMarking
RemoveDesktopAppXMetadataForFolder
RemoveDirectoryW
RemoveDownlevelInstalledPackagesFromRegistryStore
RemoveExtensionProgIds
RemoveInboxInstalledStatusOfPackageForUser
RemovePackageFromFamilyXref
RemovePackageFromRegistryStore
RemovePackageStatus
RemovePIIfromPath
RemovePrimaryTileForUser
RemovePrimaryTilesForPackage
RemoveSecondaryTilesForUser
RemoveStatusOfMainPackageForAllUsers
RemoveUpgradePackagesFromRegistryStore
RemoveWindowsStore
RepairAppDataACLForPackage
RepairGhostMinimumAgeForDeletion
RepairResourcesPriAclsImplementation
ReplacedOutgoingPackage
request
RequestCount
Requested
RequestedPackageFullName
RequestedVersionAppModel
RequestedVersionBuild
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionRevision
RequestPackageOperationImplementation
Required
Required configuration data not found: %ws
RequiredFileNotYetComplete
ResetEvent
ResiliencyCurrentState
ResiliencyFilePath
ResiliencyRecoverRequestFailed
Resolve dependency cost: %I64u ms
ResolveAppInstallerUri
Resource
resource
ResourceGroup
ResourceId
ResourceName
ResourcePackage
Resources
resources.pri
RestartEvent
RestartHandlerEnableStatus
RestartHandlerFinishedServicing
RestartPackagesInUseSkipped
RestartStatus
RestrictAppDataToSystemVolume
RestrictAppToSystemVolume
RESTRICTED_LAUNCH_DEH_KEYWORD
RestrictedToSystemVolume
result
Result
result
Result code = 0x
ResumeThread
returnCode
ReturnHr
ReturnResults
ReturnVal
returnValue
ReturnValue
RevertToSelf
r'H;_
rMfD9?w
RoActivateInstance
RoamingDataStatus
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
RollbackRequest
ronecore\admin\appmodel\packagemanager\server\argumenthelpers.hpp
RoOriginateError
RoOriginateErrorW
RootFolder: %ws
rosyBrown
RoTransformError
RoUninitialize
royalBlue
RpcAsyncCompleteCall
RpcBindingBind
RpcBindingCreateW
RpcBindingFree
RpcBindingFromStringBindingW
RpcBindingSetAuthInfoExW
RpcBindingVectorFree
RpcEpRegisterW
RpcEpUnregister
RpcImpersonateClient
RpcRaiseException
RpcRevertToSelf
RPCRT4.dll
RpcServerInqBindings
RpcServerInqCallAttributesW
RpcServerRegisterIf3
RpcServerRegisterIfEx
RpcServerUnregisterIf
RpcServerUseProtseqW
RpcStringBindingComposeW
RpcStringFreeW
rQH;}
RSLCI
RSSTt"
RSTSI
RtlAcquireSRWLockExclusive
RtlAcquireSRWLockShared
RtlAddAce
RtlAddFunctionTable
RtlAddProcessTrustLabelAce
RtlAllocateAndInitializeSid
RtlAllocateHeap
RtlCaptureContext
RtlCaptureStackBackTrace
RtlCompareUnicodeString
RtlConvertSidToUnicodeString
RtlCopySid
RtlCreateAcl
RtlCreateAndSetSD
RtlCreateSecurityDescriptor
RtlDeleteCriticalSection
RtlDeleteElementGenericTableAvl
RtlDeleteFunctionTable
RtlDeleteSecurityObject
RtlDeriveCapabilitySidsFromName
RtlDetermineDosPathNameType_U
RtlDllShutdownInProgress
RtlDosPathNameToNtPathName_U_WithStatus
RtlDosPathNameToRelativeNtPathName_U_WithStatus
RtlDowncaseUnicodeString
RtlEnterCriticalSection
RtlEnumerateGenericTableAvl
RtlEnumerateGenericTableWithoutSplayingAvl
RtlEqualSid
RtlEqualUnicodeString
RtlExpandEnvironmentStrings
rTLfd
RtlFindAceByType
RtlFreeHeap
RtlFreeSid
RtlFreeUnicodeString
RtlGetAppContainerNamedObjectPath
RtlGetDeviceFamilyInfoEnum
RtlGetPersistedStateLocation
RtlInitializeCriticalSection
RtlInitializeGenericTableAvl
RtlInitUnicodeString
RtlInsertElementGenericTableAvl
RtlIsGenericTableEmptyAvl
RtlIsMultiSessionSku
RtlIsMultiUsersInSessionSku
RtlIsStateSeparationEnabled
RtlLeaveCriticalSection
RtlLengthSid
RtlLookupElementGenericTableAvl
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlNtStatusToDosErrorNoTeb
RtlNumberGenericTableElementsAvl
RtlPublishWnfStateData
RtlQueryPackageClaims
RtlQueryWnfStateData
RtlReleaseRelativeName
RtlReleaseSRWLockExclusive
RtlReleaseSRWLockShared
RtlReportException
RtlSetSaclSecurityDescriptor
RtlSubscribeWnfStateChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlUpcaseUnicodeChar
RtlValidSid
RtlVirtualUnwind
RtlWaitForWnfMetaNotification
RtlWow64IsWowGuestMachineSupported
RunAsSystem
runFullTrust
runningAppsList
RUNTIME_DEH_KEYWORD
RuntimeType
s WATAUAVAWH
s WAVAWH
S%8d"8
s/sg]
s/Tox6
S:(ML;OICI;NW;;;LW)D:(A;OICI;GA;;;S-1-1-0)(A;OICI;FA;;;%ls)
S:PAI
S}"Yb
s=UU#T
S0H!S8H!S@H!SH
S-1-1-0
S-1-2-1406295995-2538229729-1264070048-2919177457
S-1-5-18
s2D8(u
s8!{(!{,!{0H!{8
saddleBrown
salmon
sandyBrown
Schemas
seaGreen
SEARCHINDEXER_EXTENSION_KEYWORD
seaShell
SecondaryTile
secondaryTile
SecondaryTileUser
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
SecondaryTileUserChangelog
Section
SELECT _AppInstallerID, _Revision, _WorkId, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary FROM AppInstaller WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppInstallerID, _Revision, _WorkId, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary FROM AppInstaller WHERE _WorkId=0;
SELECT _AppInstallerID, _Revision, _WorkId, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary FROM AppInstaller WHERE Uri=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppInstallerID, _Revision, _WorkId, Uri, Version, LastChecked, CheckUpdateInterval, Flags, _Dictionary FROM AppInstaller WHERE Uri=? AND _WorkId=0;
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE _WorkId=0;
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY "Index";
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE Application=? AND _WorkId=0 ORDER BY "Index";
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE Package=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxManifestID, _Revision, _WorkId, Package, Xml, _Dictionary FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxManifestID, _Revision, _WorkId, Package, Xml, _Dictionary FROM AppxManifest WHERE Package=? AND _WorkId=0;
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND _WorkId=0;
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND _WorkId=0;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND _WorkId=0;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND Name=? AND _WorkId=0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE (_WorkId=0 OR _WorkId=?);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND Name=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND Name=? AND _WorkId=0;
SELECT _EnterpriseID, _Revision, EnterpriseId, _Dictionary FROM Enterprise WHERE EnterpriseId=?;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE (_WorkId=0 OR _WorkId=?1) AND Digest IN (SELECT Digest FROM File WHERE (_WorkId=0 OR _WorkId=?1) GROUP BY Digest HAVING (COUNT(*) > 1)) ORDER BY Size;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _WorkId=0 AND Digest IN (SELECT Digest FROM File WHERE _WorkId=0 GROUP BY Digest HAVING (COUNT(*) > 1)) ORDER BY Size;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _WorkId=0;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Digest=? AND (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Digest=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _FileID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND _WorkId=0;
SELECT _MrtApplicationID, _Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary FROM MrtApplication WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _MrtApplicationID, _Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary FROM MrtApplication WHERE Application=? AND _WorkId=0;
SELECT _MrtPackageID, _Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary FROM MrtPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _MrtPackageID, _Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary FROM MrtPackage WHERE Package=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND Publisher=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND Publisher=? AND _WorkId=0;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND _WorkId=0;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE AppInstaller=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE AppInstaller=? AND _WorkId=0;
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE Package=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, Flags, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, Flags, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
SELECT _PackageFamilyUserResourceID, _Revision, PackageFamilyUser, ResourceId, _Dictionary FROM PackageFamilyUserResource WHERE PackageFamilyUser=?;
SELECT _PackageID FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle<>0 AND SourceBundle NOT IN (SELECT _BundleID FROM Bundle WHERE (_WorkId=0 OR _WorkId=?1)) AND (_WorkId=0 OR _WorkId=?1)
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle<>0 AND SourceBundle NOT IN (SELECT _BundleID FROM Bundle WHERE _WorkId=0) AND _WorkId=0
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON p.PackageFullName=pi.PackageFullName WHERE p._PackageID=? AND (p._WorkId=0 OR p._WorkId=?);
SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON p.PackageFullName=pi.PackageFullName WHERE p._PackageID=? AND p._WorkId=0;
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
SELECT _PackageLocationID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, Volume, InstalledLocation, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageLocationID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, Volume, InstalledLocation, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND "Index"=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND _WorkId=0;
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND Kind=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND Kind=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, _Created, _Modified, Package, User, PackageIdentity, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND TileId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND TileId=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Package=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE PrimaryTile=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE PrimaryTile=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE TileUniqueId=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE TileUniqueId=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND PrimaryTile=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, PrimaryTile, User, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND PrimaryTile=? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND _WorkId=0;
SELECT _ResourceID, _Revision, _WorkId, Package, "Index", Language, _Dictionary FROM Resource WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ResourceID, _Revision, _WorkId, Package, "Index", Language, _Dictionary FROM Resource WHERE _WorkId=0;
SELECT _ResourceID, _Revision, _WorkId, Package, "Index", Language, _Dictionary FROM Resource WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY "Index";
SELECT _ResourceID, _Revision, _WorkId, Package, "Index", Language, _Dictionary FROM Resource WHERE Package=? AND _WorkId=0 ORDER BY "Index";
SELECT _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, _Created, _Modified, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, Package, RelativeFilePath, Size, Digest, _Dictionary FROM File WHERE _FileID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Application, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Application, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE _OptionalBundlePackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE _OptionalBundlePackageID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, _Dictionary FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, Flags, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Category, Executable, Entrypoint, RuntimeType, StartPage, Flags, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND _WorkId=0;
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
SELECT _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE _PackageIdentityID=?;
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
SELECT _SecondaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM SecondaryTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SecondaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM SecondaryTile WHERE Application=? AND _WorkId=0;
SELECT _SecondaryTileID, _Revision, _WorkId, Application, Package, Flags, TileType, TileTemplate, TileId, Arguments, EditionId, _Dictionary, _SecondaryTileUserID, _SecondaryTileUser_Revision, _Created, _Modified, User, State, TileUniqueId, RefCount FROM SecondaryTileView WHERE User=? AND Application=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SecondaryTileID, _Revision, _WorkId, Application, Package, Flags, TileType, TileTemplate, TileId, Arguments, EditionId, _Dictionary, _SecondaryTileUserID, _SecondaryTileUser_Revision, _Created, _Modified, User, State, TileUniqueId, RefCount FROM SecondaryTileView WHERE User=? AND Application=? AND _WorkId=0;
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary FROM SecondaryTileUser WHERE SecondaryTile=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary FROM SecondaryTileUser WHERE SecondaryTile=? AND _WorkId=0;
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary FROM SecondaryTileUser WHERE TileUniqueId=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary FROM SecondaryTileUser WHERE TileUniqueId=? AND _WorkId=0;
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary FROM SecondaryTileUser WHERE User=? AND SecondaryTile=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, State, TileUniqueId, RefCount, _Dictionary FROM SecondaryTileUser WHERE User=? AND SecondaryTile=? AND _WorkId=0;
SELECT _UserID FROM User WHERE UserSid=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE EditionId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE EditionId=? AND _WorkId=0;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE Package=? AND _WorkId=0;
SELECT a._ApplicationID FROM Application AS a WHERE a.Package=? AND (a._WorkId=0 OR a._WorkId=?);
SELECT a._ApplicationID FROM Application AS a WHERE a.Package=? AND a._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE a.PackageRelativeApplicationId=?2 AND p.PackageFullName=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE a.PackageRelativeApplicationId=?2 AND p.PackageFullName=?1 AND a._WorkId=0 AND p._WorkId=0;
SELECT ae._AppExtensionID, ae._Revision, ae._WorkId, ae.Name, ae.Id, ae.PublicFolder, ae.DisplayName, ae.Description, ae.Extension, ae._Dictionary FROM AppExtension AS ae INNER JOIN ApplicationExtension AS ae2 ON ae2._ApplicationExtensionID=ae.Extension INNER JOIN Application AS a ON a._ApplicationID=ae2.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND (ae._WorkId=0 OR ae._WorkId=?2) AND (ae2._WorkId=0 OR ae._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2)
SELECT ae._AppExtensionID, ae._Revision, ae._WorkId, ae.Name, ae.Id, ae.PublicFolder, ae.DisplayName, ae.Description, ae.Extension, ae._Dictionary FROM AppExtension AS ae INNER JOIN ApplicationExtension AS ae2 ON ae2._ApplicationExtensionID=ae.Extension INNER JOIN Application AS a ON a._ApplicationID=ae2.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae._WorkId=0 AND ae2._WorkId=0 AND a._WorkId=0 AND p._WorkId=0
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application WHERE ae.Flags & ?2 != 0 AND a.ApplicationUserModelId=?1 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application WHERE ae.Flags & ?2 != 0 AND a.ApplicationUserModelId=?1 AND ae._WorkId=0 AND a._WorkId=0;
SELECT ai._AppInstallerID, ai._Revision, ai._WorkId, ai.Uri, ai.Version, ai.LastChecked, ai.CheckUpdateInterval, ai.Flags, ai._Dictionary FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON pai.AppInstaller=ai._AppInstallerID WHERE pai.Package=? AND pai._WorkId=0 AND ai._WorkId=0;
SELECT ai._AppInstallerID, ai._Revision, ai._WorkId, ai.Uri, ai.Version, ai.LastChecked, ai.CheckUpdateInterval, ai.Flags, ai._Dictionary FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON pai.AppInstaller=ai._AppInstallerID WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2) AND (ai._WorkId=0 OR ai._WorkId=?2);
SELECT b._BundleID, b._Revision, b._WorkId, b.Package, b.UniqueLanguage, b.UniqueScale, b.UniqueDXFeatureLevel, b._Dictionary FROM Bundle AS b INNER JOIN Package AS p ON p.SourceBundle=b._BundleID WHERE p.PackageFullName=?1 AND (b._WorkId=0 OR b._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT b._BundleID, b._Revision, b._WorkId, b.Package, b.UniqueLanguage, b.UniqueScale, b.UniqueDXFeatureLevel, b._Dictionary FROM Bundle AS b INNER JOIN Package AS p ON p.SourceBundle=b._BundleID WHERE p.PackageFullName=?1 AND b._WorkId=0 AND p._WorkId=0;
SELECT COUNT(*) FROM Application WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Application WHERE _WorkId=0;
SELECT COUNT(*) FROM ApplicationContentUriRule WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM ApplicationContentUriRule WHERE _WorkId=0;
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT COUNT(*) FROM Dependency WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Dependency WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM File WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM File WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT COUNT(*) FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT COUNT(*) FROM Resource WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Resource WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(DISTINCT(dh.WhenOccurred / ?4)) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh.HResult=?3   AND dh.WhenOccurred > (SELECT IFNULL(MAX(dh.WhenOccurred), 0) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1 AND pf.PackageFamilyName=?2 AND dh.HResult>=0 AND (dh._WorkId=0 OR dh._WorkId=?5))   AND (dh._WorkId=0 OR dh._WorkId=?5);
SELECT COUNT(DISTINCT(dh.WhenOccurred / ?4)) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh.HResult=?3   AND dh.WhenOccurred > (SELECT IFNULL(MAX(dh.WhenOccurred), 0) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1 AND pf.PackageFamilyName=?2 AND dh.HResult>=0 AND dh._WorkId=0)   AND dh._WorkId=0;
SELECT d._DependencyID, d._Revision, d._WorkId, d.DependentPackage, d."Index", d.DependencyType, d.Name, d.Publisher, d.MinVersion, d.MaxVersion, d.Flags, d._Dictionary FROM Dependency as d INNER JOIN PackageUser AS pu ON pu.Package=d.DependentPackage WHERE pu.DeploymentState=? AND d._WorkId=0 AND pu._WorkId=0;
SELECT d._DependencyID, d._Revision, d._WorkId, d.DependentPackage, d."Index", d.DependencyType, d.Name, d.Publisher, d.MinVersion, d.MaxVersion, d.Flags, d._Dictionary FROM Dependency as d INNER JOIN PackageUser AS pu ON pu.Package=d.DependentPackage WHERE pu.DeploymentState=?1 AND (d._WorkId=0 OR d._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT DISTINCT Name FROM AppExtension WHERE (_WorkId=0 OR _WorkId=?3) AND Extension IN ( SELECT _ApplicationExtensionID FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Package AS p ON p._PackageID=a.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (a._WorkId=0 OR a._WorkId=?3) AND (ae._WorkId=0 OR ae._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3))
SELECT DISTINCT Name FROM AppExtension WHERE _WorkId=0 AND Extension IN ( SELECT _ApplicationExtensionID FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Package AS p ON p._PackageID=a.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND a._WorkId=0 AND ae._WorkId=0 AND pu._WorkId=0 AND p._WorkId=0)
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pf.PackageFamilyName=?1 AND pu.DeploymentState=?2 AND u.UserSid!=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pf.PackageFamilyName=?1 AND pu.DeploymentState=?2 AND u.UserSid!=?3 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppExtension WHERE _AppExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppExtension WHERE _AppExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppInstaller WHERE _AppInstallerID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppInstaller WHERE _AppInstallerID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND a._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE ApplicationUserModelId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE ApplicationUserModelId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND Category=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND Category=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.ContentGroupType=2 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.ContentGroupType=2 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.ContentGroupType=2 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.ContentGroupType=2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.Status<>3 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.Status<>3 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup WHERE _ContentGroupID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup WHERE _ContentGroupID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DefaultTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DefaultTile WHERE Application=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundle WHERE Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundle WHERE Name=? AND Publisher=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE _PackageID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageAppInstaller WHERE _PackageAppInstallerID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageAppInstaller WHERE _PackageAppInstallerID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE _PackagePolicyID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE _PackagePolicyID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueNumber=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueNumber=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueString IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueString IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSourceUri WHERE Package=? AND Kind=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSourceUri WHERE Package=? AND Kind=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID WHERE pi.PackageFullName=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID WHERE ps.User=? AND pi.PackageFamily=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON pu.User=u._UserID WHERE pu.Package=? AND u.UserSid NOT IN (?,?) AND (pu._WorkId=0 OR pu._WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON pu.User=u._UserID WHERE pu.Package=? AND u.UserSid NOT IN (?,?) AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND DeploymentState=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND DeploymentState=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Application=? AND TileId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Application=? AND TileId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE User=? AND PrimaryTile=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE User=? AND PrimaryTile=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM SecondaryTileView WHERE User=? AND Application=? AND TileId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM SecondaryTileView WHERE User=? AND Application=? AND TileId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM User WHERE UserSid=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM XboxPackage WHERE _XboxPackageID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM XboxPackage WHERE _XboxPackageID=? AND _WorkId=0 LIMIT 1);
SELECT LastValue FROM Sequence WHERE Id=?;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN DependencyGraph AS dg ON p._PackageID=dg.SupplierPackage INNER JOIN User AS u ON dg.User=u._UserID INNER JOIN Package AS p2 ON dg.DependentPackage=p2._PackageID INNER JOIN PackageFamily AS pf ON p2.PackageFamily=pf._PackageFamilyID WHERE dg.DependencyType=3 AND pf.PackageFamilyName=?1 AND u.UserSid=?2 AND (p._WorkId=0 OR p._WorkId=?3) AND (dg._WorkId=0 OR dg._WorkId=?3) AND (p2._WorkId=0 OR p2._WorkId=?3)
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN DependencyGraph AS dg ON p._PackageID=dg.SupplierPackage INNER JOIN User AS u ON dg.User=u._UserID INNER JOIN Package AS p2 ON dg.DependentPackage=p2._PackageID INNER JOIN PackageFamily AS pf ON p2.PackageFamily=pf._PackageFamilyID WHERE dg.DependencyType=3 AND pf.PackageFamilyName=?1 AND u.UserSid=?2 AND p._WorkId=0 AND dg._WorkId=0 AND p2._WorkId=0
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?2) 
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND p._WorkId=0 
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2) ;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0 ;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0 ;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0 ;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND pu.DeploymentState=?2  AND p.PackageType & ?3 !=0 AND p.PackageOrigin!=?4  AND ?5 > pu.OSVersionWhenInstalled AND p.OSMaxVersionTested > CASE WHEN pu.OSVersionWhenInstalled > 0 THEN pu.OSVersionWhenInstalled ELSE ?6 END AND (p._WorkId=0 OR p._WorkId=?7) AND (pu._WorkId=0 OR pu._WorkId=?7);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND pu.DeploymentState=?2  AND p.PackageType & ?3 !=0 AND p.PackageOrigin!=?4  AND ?5 > pu.OSVersionWhenInstalled AND p.OSMaxVersionTested > CASE WHEN pu.OSVersionWhenInstalled > 0 THEN pu.OSVersionWhenInstalled ELSE ?6 END AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE p.PackageType & ?1 !=0 AND p.PackageOrigin!=?2 AND ?3 > p.OSVersionWhenIndexed AND p.OSMaxVersionTested > CASE WHEN p.OSVersionWhenIndexed > 0 THEN p.OSVersionWhenIndexed ELSE ?4 END AND (p._WorkId=0 OR p._WorkId=?5);
SELECT p._PackageID, p._Revision, p._WorkId, p._Created, p._Modified, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE p.PackageType & ?1 !=0 AND p.PackageOrigin!=?2 AND ?3 > p.OSVersionWhenIndexed AND p.OSMaxVersionTested > CASE WHEN p.OSVersionWhenIndexed > 0 THEN p.OSVersionWhenIndexed ELSE ?4 END AND p._WorkId=0;
SELECT p._PackageID, p.PackageFullName, MAX(p.Version) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFamily=?2 AND p.PackageType=1 AND pu._WorkId=0 AND p._WorkId=0;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND (p._WorkId=0 OR p._WorkId=?2) ;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND p._WorkId=0 ;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND (p._WorkId=0 OR p._WorkId=?3)   AND (pu._WorkId=0 OR pu._WorkId=?3)   ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND p._WorkId=0  AND pu._WorkId=0  ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND pu.DeploymentState=?3 AND (p._WorkId=0 OR p._WorkId=?4)   AND (pu._WorkId=0 OR pu._WorkId=?4)   ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND pu.DeploymentState=?3 AND p._WorkId=0  AND pu._WorkId=0  ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=1 AND pf.PackageFamilyName=?2 AND p.IsInbox=1 AND (p._WorkId=0 OR p._WorkId=?3)  UNION ALL SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x21 !=0 AND pf.PackageFamilyName=?2 AND p.IsInbox=0 AND (p._WorkId=0 OR p._WorkId=?3)  AND p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?1) ORDER BY p.Version DESC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=1 AND pf.PackageFamilyName=?2 AND p.IsInbox=1 AND p._WorkId=0  UNION ALL SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x21 !=0 AND pf.PackageFamilyName=?2 AND p.IsInbox=0 AND p._WorkId=0  AND p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?1) ORDER BY p.Version DESC LIMIT 1;
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT pfu._PackageFamilyUserID, pfu._Revision, pfu.PackageFamily, pfu.User, pfu.WhenInstalled, pfu._Dictionary FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pfu.PackageFamily WHERE pfu.User=?1 AND pf.PackageFamilyName=?2;
SELECT ps._PackageSupercededID, ps._Revision, ps.PackageIdentity, ps.User, ps._Dictionary FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily INNER JOIN User AS u ON u._UserID=ps.User WHERE u.UserSid=? AND pf.PackageFamilyName=?;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.PrimaryTile, ptu.User, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN PrimaryTile AS pt ON ptu.PrimaryTile=pt._PrimaryTileID INNER JOIN Application AS a ON pt.Application=a._ApplicationID WHERE ptu.User=? AND a.ApplicationUserModelId=? AND ptu._WorkId=0 AND pt._WorkId=0;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.PrimaryTile, ptu.User, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN PrimaryTile AS pt ON ptu.PrimaryTile=pt._PrimaryTileID INNER JOIN Application AS a ON pt.Application=a._ApplicationID WHERE ptu.User=? AND pt.Package=? AND a.ApplicationUserModelId=? AND ptu._WorkId=0 AND pt._WorkId=0;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.PrimaryTile, ptu.User, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN PrimaryTile AS pt ON ptu.PrimaryTile=pt._PrimaryTileID INNER JOIN Application AS a ON pt.Application=a._ApplicationID WHERE ptu.User=?1 AND a.ApplicationUserModelId=?2 AND (ptu._WorkId=0 OR ptu._WorkId=?3) AND (pt._WorkId=0 OR pt._WorkId=?3) ORDER BY ptu._WorkId DESC;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.PrimaryTile, ptu.User, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN PrimaryTile AS pt ON ptu.PrimaryTile=pt._PrimaryTileID INNER JOIN Application AS a ON pt.Application=a._ApplicationID WHERE ptu.User=?1 AND pt.Package=?2 AND a.ApplicationUserModelId=?3 AND (ptu._WorkId=0 OR ptu._WorkId=?4) AND (pt._WorkId=0 OR pt._WorkId=?4) ORDER BY ptu._WorkId DESC;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu._ShadowId, pu._IsMarkedForDeletion, pu._Created, pu._Modified, pu.Package, pu.User, pu.PackageIdentity, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.PackageStatus, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu._ShadowId, pu._IsMarkedForDeletion, pu._Created, pu._Modified, pu.Package, pu.User, pu.PackageIdentity, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.PackageStatus, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND pu._WorkId=0 AND p._WorkId=0 ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu._ShadowId, pu._IsMarkedForDeletion, pu._Created, pu._Modified, pu.Package, pu.User, pu.PackageIdentity, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.PackageStatus, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu._ShadowId, pu._IsMarkedForDeletion, pu._Created, pu._Modified, pu.Package, pu.User, pu.PackageIdentity, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.PackageStatus, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu._WorkId=0 AND p._WorkId=0;
SELECT pu.User, p.PackageFamily FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=? AND p.PackageType=1 AND pu._WorkId=0 AND p._WorkId=0   GROUP BY p.PackageFamily HAVING COUNT(*)>1;
SELECT st._SecondaryTileID, st._Revision, st._WorkId, st.Application, st.Package, st.Flags, st.TileTemplate, st.TileId, st.Arguments, st.EditionId, st._Dictionary FROM SecondaryTile AS st INNER JOIN SecondaryTileUser AS stu ON st._SecondaryTileID=stu.SecondaryTile WHERE stu.User=? AND st.Package=? AND st._WorkId=0 AND stu._WorkId=0;
SELECT st._SecondaryTileID, st._Revision, st._WorkId, st.Application, st.Package, st.Flags, st.TileTemplate, st.TileId, st.Arguments, st.EditionId, st._Dictionary FROM SecondaryTile AS st INNER JOIN SecondaryTileUser AS stu ON st._SecondaryTileID=stu.SecondaryTile WHERE stu.User=?1 AND st.Package=?2 AND (st._WorkId=0 OR st._WorkId=?3) AND (stu._WorkId=0 OR stu._WorkId=?3);
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
SELECT ValueNumber FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT ValueNumber FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND "Index"=? AND _WorkId=0;
SelectedUpdateBaseline
SelectionNamespaces
Serive Control flags
Server
SERVER_EXTENSION_KEYWORD
ServerCore
Server-Gui-Shell
ServerName
ServerSideRequestContentGroupsImplementation
Service
ServiceIdleTimeout
ServiceMain
ServiceStatus
Session:%d!clsid:%s
session\
sessionId
SessionId
sessionId
SessionId
SessionKey
Set CPU priority failed for idle task
Set IO priority failed for idle task
SetContentGroupState
SetDeploymentError
SetDesktopAppXMetadataForFolder
SetDesktopAppXMetadataForPackage
SetEndOfFile
SetEntriesInAclW
SetEvent
SetExtensionProperty
SetFileAttributesW
SetFileInformationByHandle
SetFileIntegrityInfoFailed
SetFilePointer
SetFilePointerEx
setFilePointerGLE
setFilePointerResult
SetLastError
SetNamedSecurityInfoW
SetPackageStatusBlockingForUserImplementation
SetProcessWindowStation
SetProtocolProperty
SetRestrictedErrorInfo
SetSecurityAccessMask
SetSecurityDescriptorControl
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetSecurityInfo
SetServiceStatus
SetThreadInformation
SetThreadpoolThreadMaximum
SetThreadpoolThreadMinimum
SetThreadpoolTimer
SetThreadPriority
SetThreadToken
Settings
SettingsApp_cw5n1h2txyewy
SettingSyncEnabled
SetTokenInformation
SetUnhandledExceptionFilter
SetupPhase
SetWaitableTimer
sfI;v
SHA256
shareAccess
SharedAppsBlockedByPolicy
SharedAppsEnabled
SharedLocalIsEnabled
SHCORE.dll
SHCreateMemStream
SHCreateStreamOnFileEx
ShortName
ShouldCreatePackageRootMetadata
ShowPrompt
SHTaskPoolQueueTask
shutdown
sidType %u
sienna
signatureOrigin
SignatureOrigin
silver
SimilarPackageFullName
single
sinternal\sdk\inc\wil\winrt.h
SisPath
SizeInPages
SizeKB
sizeof(entry)
sjf"(t
SkipDestageForInbox
SkipDestageForResourcePack
SkippingDeferredStaging
skyBlue
slateBlue
slateGray
Sleep
SmallLogo
SOFTWARE
Software
Software\
Software\Classes\ActivatableClasses\Package
Software\Classes\Extensions\ContractId\Windows.Launch\PackageId
Software\Classes\Local Settings
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Deployment
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\PackageRepository
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Families
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Families\%s\%s
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
Software\Microsoft\DeviceReg\Install
Software\Microsoft\Windows NT\CurrentVersion\ProfileList
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels
Software\Microsoft\Windows NT\CurrentVersion\SoftwareProtectionPlatform
SOFTWARE\Microsoft\Windows NT\CurrentVersion\TileDataModel\Migration
Software\Microsoft\Windows\CurrentVersion\AppHost
Software\Microsoft\Windows\CurrentVersion\AppModel\Origins
Software\Microsoft\Windows\CurrentVersion\AppModel\StagingInfo
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
Software\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
Software\Microsoft\Windows\CurrentVersion\AppReadiness
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\ByteCodeQueue
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\DeploymentExtensionModules
Software\Microsoft\Windows\CurrentVersion\Appx\NewDeploymentOperation
Software\Microsoft\Windows\CurrentVersion\AppX\PackageSidRef
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
Software\Microsoft\Windows\CurrentVersion\Mrt
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\OSIntegration
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\PackageManager
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\StagingManager\FaultInjection
Software\Microsoft\Windows\CurrentVersion\Search
Software\Microsoft\Windows\CurrentVersion\SettingSync\SyncData
Software\Microsoft\Windows\CurrentVersion\SettingSync\SyncData\CollectionStaging
Software\Microsoft\Windows\CurrentVersion\Store\ContentId
Software\Policies\Microsoft\Windows\Appx
SOFTWARE\Policies\Microsoft\Windows\Appx\MaintainProcessorArchitectureOnUpdate
SOFTWARE\Policies\Microsoft\Windows\SettingSync
Software\Policies\Microsoft\WindowsStore
SonicWALL.MobileConnect_cw5n1h2txyewy
Source Path
SourceBundle
SourceFilePath
sourceFilePath
SourceFileSize
SourceFolderPath
SourceVolumePath
Specific package already exists on the machine, still marking as required for per-machine co-serviced package.
Specific version applicability called for all users is not supported
springGreen
sqlite3_bind_blob
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_null
sqlite3_bind_text16
sqlite3_busy_timeout
sqlite3_changes
sqlite3_clear_bindings
sqlite3_close
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_text16
sqlite3_column_type
sqlite3_config
sqlite3_create_function_v2
sqlite3_db_config
sqlite3_db_filename
sqlite3_db_handle
sqlite3_enable_shared_cache
sqlite3_errcode
sqlite3_errmsg
sqlite3_exec
sqlite3_expanded_sql
sqlite3_extended_errcode
sqlite3_extended_result_codes
sqlite3_file_control
sqlite3_finalize
sqlite3_free
sqlite3_get_autocommit
sqlite3_initialize
sqlite3_last_insert_rowid
sqlite3_log
sqlite3_malloc
sqlite3_next_stmt
sqlite3_open_v2
sqlite3_prepare_v2
sqlite3_profile
sqlite3_reset
sqlite3_result_error_code
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_int
sqlite3_result_int64
sqlite3_shutdown
sqlite3_snprintf
sqlite3_sql
sqlite3_step
sqlite3_stmt_busy
sqlite3_trace
sqlite3_user_data
sqlite3_value_text16
sqlite3_value_type
sqlite3_vfs_find
sqlite3_vfs_register
sqlite3_vfs_unregister
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
Square150x150Logo
square150x150Logo
Square310x310Logo
Square44x44Logo
Square71x71Logo
SRD1t
SRJournal
SRJournalArchive
sroptions
srpapi.dll
SrpIsAllowed
Stage required cost: %I64u ms
Stage user data cost: %I64u ms
stageCost
Staged
StageForInPlace
StageInplaceUpdate
StageUpdatePayloadFiles
StageUserDataStateHandler
Staging
Staging PackageSourceUri not found for package %ws in order to stage %ws .
Staging PackageSourceUri not found for package %ws.
StagingHelpers::AreStreamsEqual() failed.
StagingSessionsReadyForContentGroupReorderingEventSet
StartDeploymentImplementation
StartDeploymentOperation
StartDeploymentOperationForRemove
StartDeploymentOperationForResume
StartPage
state
State
State repository CommitTransaction cost: %I64u ms
STATE_DEH_KEYWORD
STATE_LEFT_FROM_LAST_UNINSTALL
StateCreation
StatementCount
StatementPtr
StatePaths
StateRepository*
StateRepository.BusySnapshotDetected
StateRepository.Core.dll
StateRepository.FailFastBusySnapshot
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.FirstBusySQL
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.StatementInProgress
StateRepository.log
StateRepositoryDownlevelReadFailed
StateRepositoryStatus
StateSchema
static_cast<DWORD>(integrityState)
static_cast<DWORD>(origin)
STATUS
StatusToClear
statusToClear
StatusToClear
statusToSet
StatusToSet
std::exception: %hs
steelBlue
stopping service
StorageId
StoreName
STPackage
strchr
strcmp
StreamingDataSourcePrefetchCanceled
StreamingDeploymentRequestFound
StreamingDeploymentRequestNotFoundExitingGracefully
StreamingRequestPackageMoniker
StreamingStatusGetFileSizeError
StreamingStatusUnavailableForLinkTarget
String
string too long
String1
String2
String3
StringFileInfo
StringFromCLSID
StringFromGUID2
StrRChrW
StrStrIW
Subkey
SubmitThreadpoolWork
SuccessfullyConvertedCentennialTokenToUserToken
Summary
SummaryError
SupercedeAllUsers
SupercededPackageInfosNotFound
SupplierPackage
SupportedExternalFSTypes
SupportedInternalFSTypes
SupportedUsers
supportsEAIntegrity
SUVWATAUAVAWH
SUVWAVH
svchost.exe
SvchostPushServiceGlobals
SVWAVAWH
SVWAVH
sxwqr
synchronous
Sysmain
System
SYSTEM\Setup
SYSTEM\Setup\Upgrade\Appx\Applications
SystemAppData
SystemTimeToFileTime
SystemVolume
T -!qb
t D9Y
t f90t
t!fA9u
t!fD98t
T"<2P
t"D8=
t"E9g
t#@8t$ u
t#E9V0t
t#HcK
t$ D+
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ H;|$0r
T$ H9
t$ UATAUAVAWH
t$ UAVAWH
t$ UH
t$ UWATAUAWH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(!t$ !t$03
T$(E3
t$(E3
T$(H;
T$(H;W
t$@!t$HH
T$@!T$HH9P
t$@D!t$HH
t$@E3
T$@E3
t$@E3
T$@H;
t$@H;t$P
T$`A3
t$`E3
T$`E3
t$`E3
T$`fA;
t$`H;
T$`H;
T$`I;
t$`M;
T$0!\$0E3
t$0A;
t$0D;
T$0E3
t$0E3
T$0E3
t$0E3
t$0H;
t$0I;
t$1@8
t$4E3
T$4E3
T$8E3
t$8E3
T$8E3
t$8E3
T$8H!\$8
T$8L;
t$DE8
t$fD9 t
T$H!D$XH
t$h@2
T$HA3
T$HD3
t$hE3
T$hE3
t$HE3
T$HH!D$HH
t$HL9e
t$HuEI
T$LE3
T$PA3
t$PD;
T$PE3
t$PE3
T$pE3
T$PE3
t$PE3
T$pH;
T$PH;O`r
T$pH;U
t$PI;
T$PL;
t$PL;t$`
T$PM;
t$tE;
T$tI;
t$X!t$`H;
T$xE3
t$XE3
t$xE3
t$XE3
T$XK<S
T$xL;
T$xrDA
t%D8i
t%H98t L
t&9t$@t 
t&D8q
t(@81t#H
t(D89t#H
t(D8c@u
t(D8o@u
T(y `
t)D8i
t)fD9?t#H
t)H;K
t)Lc@
t,D8m
t.D8t$Ht
t.HcC<
t:D8q
t;D8q
t-@8t$Xt
t@D8m
t@L;w
t@M;w
t[D8m
t]D9p
t^!\$`8
t^@8=
t^L9x
t_D8e0u
t_fD9"tYH
t_H!|$ E3
t|D9:v
t+=D{
t+D8q
t+D8t$Ht
t+H;_0r
t+H;{
t<D8q
t>D8m
t>H;|$hr
t0@8u
t0D8u
t0H;_
t0H;w
t0H9^hu
t0H9~(t*H
t1D8e
t1D8q
t2D8d$Xt
t2D8t$8t"I
t2H;~
t2L;v
t3D8e
t4A9~
t4fD9/t.H;
t4H;_
t4H;w
t5H;_
t6D8p
t6D8q
t6D9Y u
t79p,t2H
t7D8q
t7L;ehu1H
t8D8m
t8H!\$0D
t8L;vHr
t9D8m
t9L;vHr
tAB7V(?
taD8}0u
Target MaxVersion lower than 10.0.14000.0 Not Applicable on Xbox
TargetDeviceFamily
TargetFilePath
TargetFileSize
targetInBaseline
TargetPackageFullName
TargetPlatform
TargetPlatformEnumMap
targetSize
tBH;_
tBI;w
tCD8q
tCD9|$<t<
tCH;|$hr
tCH;s
t-D8a
t-D8i
t'D8q
tDD8}
tdh.dll
tDH;C r
tdH;u0r
TdhEnumerateProviderFieldInformation
TdhFormatProperty
TdhGetEventInformation
TdhGetEventMapInformation
tdlAppIdentifier
t'E9g
teD8m
tEh\,
tEL9t$p
TelemetryAssert
TelemetryAssertDiagTrack
TEMP 
TEMP$
TEMP(
TEMP,
TEMP.xml
TEMP@
TEMP\
temp_store
TEMP`
TEMP|
TEMP<
TEMP0
TEMP4
TEMP8
TEMPD
TEMPd
TEMPD
TEMPH
TEMPh
TEMPH
TEMPh
TEMPH
tempHr
TEMPL
TEMPl
TEMPL
TEMPP
TEMPp
TEMPP
TEMPp
TEMPP
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPX
TEMPx
TEMPX
TerminateProcess
text()
tF9oHtAH
tfD8}Gu
tfH;o8r
tg8Wiub
tG9oHtBH
tGfA98tAI
tGfD99tAL
tGH;u
tH1:Q
The number of installed resource packages differ from the applicable resource packages, so it is installable
The uri [%ws] is not found in data source cache
tHf3I
thfD9&tbH
tHH;^
thH;o
ThirdPartyRatingLevel
ThirdPartyRatingSystem
This user has insufficient rights to enqueue this request
thistle
tHL;w
Thread Id
threadId
tID8mHuCH
tIH;G
Tile Store
TileAlreadyExists
tileId
TileStore
timestamp
TitleId
tJ!T$\H
tK!T$\!T$lH
tKH;~
tlD8u0t_L
tLH;]
tlH;^
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
tmfD;k
tML9vhu
tnfD9"thH
To Be Installed Related Set
toBeInstalledRelatedSetPackageFullName
TOC8I
toD8~
toH;~
tomato
topic
Total estimated footprint size must not be 0
totalChangedSize
totalFileSize
totalHits
tPD9}
tqD9m
tqI;}
TraceMessage
TrackServicingTerminatedAppFailed
Translation
transparent
TreeResetNamedSecurityInfoW
tRH;s
tRL9u
'tRTC4*
TRUNCATE
TRUST_DEH_KEYWORD
TrySubmitThreadpoolCallback
tsD8mgtfH
tSI9Y v!M;A s
ttH!}PH
tTM9h
turquoise
TUVLw
tvD8a
tVH;^pr
tW!T$0H
tWH;C@r
tXH;w
tyH;n
tYI;^
tYM;A
tzH;_
u!H9s`u
u"H!GHH
u"H98u
u#D9R
u&D8w
u)D9l$T|
u,!]0H
u/9t$@u)H
u;\$8tm
u;A9WPu5H
u@H!E@H
u|f;i
u~H9u
u14;!
u7H9w
U89Q(
u8D9R
u8fD;q
uap7:Name
UATAUAVAWH
UATAWH
UAUAVH
UAVAWH
uD!EwH
udH9A
uffA9q
UH3:=
UHH!|$pL
uHI9^
uII;]
UInt32Value
uJ9]w
uK9|$0vEH9;t@H
UMgrQueryDefaultAccountToken
UMgrQuerySessionUserToken
UMgrQueryUserContext
UMgrQueryUserToken
Unable to stage pending writes to activation catalog.
UncompressedSizeKB
unD8\$<t^L
Unexpected: optional package %ws has %llu main packages and is in a related set
unH9A
UnhandledExceptionFilter
UninstallSuccess
UniqueKey
Universal TargetDeviceFamily Not Applicable on Xbox
unknown
Unknown error
Unknown exception
UnknownUser
UnmapViewOfFile
UnregisterStateChangeNotification
UnregisterStateLock
UnregisterTraceGuids
Unsupported
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE AppExtension SET _Revision=?, _WorkId=?, Name=?, Id=?, PublicFolder=?, DisplayName=?, Description=?, Extension=?, _Dictionary=? WHERE _AppExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppExtension SET _Revision=?, _WorkId=?, Name=?, Id=?, PublicFolder=?, DisplayName=?, Description=?, Extension=?, _Dictionary=? WHERE _AppExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE AppInstaller SET _Revision=?, _WorkId=?, Uri=?, Version=?, LastChecked=?, CheckUpdateInterval=?, Flags=?, _Dictionary=? WHERE _AppInstallerID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppInstaller SET _Revision=?, _WorkId=?, Uri=?, Version=?, LastChecked=?, CheckUpdateInterval=?, Flags=?, _Dictionary=? WHERE _AppInstallerID=? AND _Revision=? AND _WorkId=0;
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=?, _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=?, _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND _WorkId=0;
UPDATE Bundle SET Package=? WHERE _BundleID=? AND _WorkId=?;
UPDATE ContentGroup SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, ContentGroupType=?, Status=?, _Dictionary=? WHERE _ContentGroupID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE ContentGroup SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, ContentGroupType=?, Status=?, _Dictionary=? WHERE _ContentGroupID=? AND _Revision=? AND _WorkId=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE File SET Size=? WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE File SET Size=? WHERE _FileID=? AND _WorkId=0;
UPDATE Package SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, PackageFamily=?, ResourceId=?, Architecture=?, Version=?, PackageFullName=?, IsInbox=?, PackageType=?, Flags=?, DisplayName=?, PublisherDisplayName=?, Description=?, Logo=?, OSMinVersion=?, OSMaxVersionTested=?, TargetDeviceFamily=?, Capabilities=?, SupportedUsers=?, SignatureOrigin=?, PackageOrigin=?, Enterprise=?, SourceBundle=?, EditionId=?, OSVersionWhenIndexed=?, InPlaceUpdateBaseline=?, _Dictionary=? WHERE _PackageID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, PackageFamily=?, ResourceId=?, Architecture=?, Version=?, PackageFullName=?, IsInbox=?, PackageType=?, Flags=?, DisplayName=?, PublisherDisplayName=?, Description=?, Logo=?, OSMinVersion=?, OSMaxVersionTested=?, TargetDeviceFamily=?, Capabilities=?, SupportedUsers=?, SignatureOrigin=?, PackageOrigin=?, Enterprise=?, SourceBundle=?, EditionId=?, OSVersionWhenIndexed=?, InPlaceUpdateBaseline=?, _Dictionary=? WHERE _PackageID=? AND _Revision=? AND _WorkId=0;
UPDATE Package SET Enterprise=?, _Revision=_Revision+1 WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Enterprise=?, _Revision=_Revision+1 WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=~0x80&Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~0x80&Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=~8&FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=~8&FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=~8&Flags WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~8&Flags WHERE PackageFullName=? AND _WorkId=0;
UPDATE Package SET Flags=0x80|Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=0x80|Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=8|FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=8|FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6)) AND _WorkId=0);
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
UPDATE Package SET InPlaceUpdateBaseline=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET InPlaceUpdateBaseline=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET IsInbox=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET IsInbox=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET OSMinVersion=?, OSMaxVersionTested=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET OSMinVersion=?, OSMaxVersionTested=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET OSVersionWhenIndexed=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET OSVersionWhenIndexed=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET SignatureOrigin=?, PackageOrigin=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SignatureOrigin=?, PackageOrigin=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SupportedUsers=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SupportedUsers=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageAppInstaller SET _Revision=?, _WorkId=?, Package=?, AppInstaller=?, _Dictionary=? WHERE _PackageAppInstallerID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageAppInstaller SET _Revision=?, _WorkId=?, Package=?, AppInstaller=?, _Dictionary=? WHERE _PackageAppInstallerID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageLocation SET _Revision=?, _WorkId=?, _ShadowId=?, _IsMarkedForDeletion=?, Package=?, Volume=?, InstalledLocation=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, _ShadowId=?, _IsMarkedForDeletion=?, Package=?, Volume=?, InstalledLocation=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
UPDATE PackagePolicy SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, ValueString=?, ValueNumber=?, _Dictionary=? WHERE _PackagePolicyID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackagePolicy SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, ValueString=?, ValueNumber=?, _Dictionary=? WHERE _PackagePolicyID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET _Revision=?, _WorkId=?, _ShadowId=?, _IsMarkedForDeletion=?, _Created=?, _Modified=?, Package=?, User=?, PackageIdentity=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, PackageStatus=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, _ShadowId=?, _IsMarkedForDeletion=?, _Created=?, _Modified=?, Package=?, User=?, PackageIdentity=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, PackageStatus=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET AppDataVolume=? WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET AppDataVolume=? WHERE _PackageUserID=? AND _WorkId=0;
UPDATE PackageUser SET DeploymentState=? WHERE User=? AND _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET DeploymentState=? WHERE User=? AND _PackageUserID=? AND _WorkId=0;
UPDATE PackageUser SET DeploymentState=?1 WHERE DeploymentState IN ( SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.PackageFullName=?2  AND p.PackageType=1 AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) UNION ALL SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?2 AND PackageType=8) AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4));
UPDATE PackageUser SET DeploymentState=?1 WHERE DeploymentState IN (SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.PackageFullName=?2 AND p.PackageType=1 AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0 UNION ALL SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?2 AND PackageType=8) AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0);
UPDATE PackageUser SET OSVersionWhenInstalled=? WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET OSVersionWhenInstalled=? WHERE _PackageUserID=? AND _WorkId=0;
UPDATE PrimaryTileUser SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, PrimaryTile=?, User=?, State=?, TileUniqueId=?, _Dictionary=? WHERE _PrimaryTileUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PrimaryTileUser SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, PrimaryTile=?, User=?, State=?, TileUniqueId=?, _Dictionary=? WHERE _PrimaryTileUserID=? AND _Revision=? AND _WorkId=0;
UPDATE Sequence SET LastValue=? WHERE Id=?;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE XboxPackage SET _Revision=?, _WorkId=?, Package=?, EditionId=?, BuildId=?, DeviceId=?, BuildVersion=?, ContentId=?, ProductId=?, MediaId=?, PackageSize=?, TitleId=?, PrimaryServiceConfigId=?, EraVersion=?, EscrowedKeyBlobId=?, _Dictionary=? WHERE _XboxPackageID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE XboxPackage SET _Revision=?, _WorkId=?, Package=?, EditionId=?, BuildId=?, DeviceId=?, BuildVersion=?, ContentId=?, ProductId=?, MediaId=?, PackageSize=?, TitleId=?, PrimaryServiceConfigId=?, EraVersion=?, EscrowedKeyBlobId=?, _Dictionary=? WHERE _XboxPackageID=? AND _Revision=? AND _WorkId=0;
UPDATE_MIGRATION_TASK_DEH_KEYWORD
UpdateBlocksActivation
updateCost
UpdateCost
UpdatePackageInRegistryStore
UpdatePackageStatus
UpdatePackageStatusForUser
UpdatePackageStatusForUserSid
UpdatePrimaryTileUser
UpdateProcThreadAttribute
UpdateSecondaryTilesForUser
UpdateSize
UpdateStatistics
UpdateUpgradePackageInRegistryStore
Upgrade
uPL;t$Xu
uPL+uPL;
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
URichK
UrlCreateFromPathW
urlmon.dll
User %ws
User %ws 0x%0x
user_version
user32.dll
USERDATAACCESS_EXTENSION_KEYWORD
UserDatabaseStatisticsLastUpdated
UserDomain
USERENV.dll
userId
UserId
userId
UserId
userId
UserName
USERS\
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSid
userSid
UserSID
UserSid
userSid
userSidString
UseSystemMetadataPath
USVWATAUAVAWH
USVWATAUAWH
USVWATAVAWH
USVWAUAVAWH
USVWAVAWH
USVWAVH
USVWAWH
USVWH
USWAVH
uUH;\$`r
UuidCreate
UuidFromStringW
UuidToStringW
UVATAUAVH
UVAVH
UVWATAUAVAWH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAVAWH
UVWAVH
UWATAUAVH
UWATAUAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAUH
UWAVH
UWAWH
uWH9_
ux\]H4_
uXD;uPu
uXE8l$(u$H
uXH9_
uXL+}XL;
uYauH
v(H;C r
v.I;H
v.L;A
v;H;C@r
v@8t$0uUH
v{v#X^W
v+H;X
v<WF55j
V8I;^
va;q }\
Vabc(
validUpdate
Value
ValueName
ValueValue
VarFileInfo
vector<T> too long
vEL;u
VerifyPackageFamilyName
VerifyPackageFullName
VerQueryValueW
Version
version
version="1.0" encoding="utf-8"
VetoReason
v-H;X
violet
VirtualAlloc
VirtualFree
VirtualProtect
VirtualQuery
VISUALELEMENTS_EXTENSION_KEYWORD
VMAP$
VMAP<
VMAP4
VMAPD
VMAPL
VmX%AXRS
Volume
VolumeKey
VolumeMountPoint
VolumeName
vQTe'# 
VS_VERSION_INFO
vt;s@}o
vU+s%
VuiAlm
VuiPron
VWATAVAWH
VWAUAVAWH
VWAVH
VWAWH
vXH;s
VY/w.
W(WP@
w:85E
W;\$8tO
W;rHK
W[-'ta
W3^+`x
W8;Q(u
WaitForMultipleObjects
WaitForRequestsInUseTimeout
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
waitResult
WATAUAVAWH
WATAVH
WATAWH
WAUAVH
WAVAWH
wcifs
wcifs Instance
wcschr
wcscmp
wcsncmp
wcsrchr
wcsstr
WEB_ACCOUNT_PROVIDER_DEH_KEYWORD
WerRegisterCustomMetadata
WerReportAddFile
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
WEVT_TEMPLATE
WEVT4
wheat
white
whiteSmoke
Wide310x150Logo
wide310x150Logo
WideCharToMultiByte
WideLogo
wideLogoOnly
width320
width500
wilActivity
WilError_02
wilResult
WilStaging_02
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Verbose
win:Warning
win32
win32-longpath
win32-noimpersonation
win8xappx
Windows.7067329
Windows.8828080
windows.aowApp
windows.appExecutionAlias
windows.appExtension
windows.appExtensionHost
windows.appService
windows.appUriHandler
windows.autoPlayHandler
windows.backgroundTasks
windows.barcodeScannerProvider
Windows.Core
Windows.Desktop
Windows.DesktopServer
windows.devicesflow_cw5n1h2txyewy
Windows.DockingController_cw5n1h2txyewy
windows.fileTypeAssociation
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComProgIdRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComTypeLibRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComProgIdRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComTypeLibRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.Security.SmartScreen.IAppxPackage>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IKeyValuePair`2<String, Object>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComProgIdRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.IComTypeLibRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComClassRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>
Windows.Foundation.Collections.IMap`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMap`2<String, Object>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.IComProgIdRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.IComTypeLibRegistration>
Windows.Foundation.Collections.IMap`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComClassRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComInterfaceRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComProxyStubRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.IComTreatAsClassRegistration>
Windows.Foundation.Collections.IMapView`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMapView`2<String, Object>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.IComProgIdRegistration>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.IComTypeLibRegistration>
Windows.Foundation.Collections.IMapView`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVector`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVector`1<Windows.Internal.Security.SmartScreen.IAppxPackage>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVectorView`1<Windows.Internal.Security.SmartScreen.IAppxPackage>
Windows.Foundation.Collections.PropertySet
Windows.Foundation.PropertyValue
Windows.Foundation.Uri
Windows.FullTrustApplication
Windows.Holographic
windows.immersivecontrolpanel_cw5n1h2txyewy
Windows.Internal.Security.SmartScreen.AppReputationService
Windows.Internal.Security.SmartScreen.IAppxPackage
Windows.Internal.Security.SmartScreen.IWindow
Windows.Internal.SecurityMitigationsBroker
Windows.Internal.StateRepository.Management.RepositoryManager
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
Windows.IoT
Windows.IoTHeadless
windows.localExperiencePack
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.MiracastView_cw5n1h2txyewy
Windows.Mobile
Windows.MtcUvc_cw5n1h2txyewy
Windows.PartialTrustApplication
windows.preInstalledConfigTask
Windows.PrintDialog_cw5n1h2txyewy
Windows.PrintDialog3D_cw5n1h2txyewy
windows.protocol
windows.publisherCacheFolders
windows.searchFilterHandler
windows.searchProtocolHandler
Windows.Server
Windows.Team
Windows.Universal
windows.updateTask
windows.webAccountProvider
Windows.Windows8x
Windows.Xbox
Windows.XboxERA
Windows.XboxSRA
WindowsApps
WindowsCompareStringOrdinal
WindowsConcatString
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsGetStringLen
WindowsGetStringRawBuffer
WindowsPreallocateStringBuffer
WindowsPromoteStringBuffer
WindowsRuntimeAccess
WindowsStringHasEmbeddedNull
WindowsUpdate*
WINERROR
WinSqmAddToStream
WinSqmAddToStreamEx
WinSqmEndSession
WinSqmIncrementDWORD
WinSqmIsOptedIn
WinSqmSetDWORD
WinSqmSetDWORD64
WinSqmSetString
WinSqmStartSession
winternal\onecorecom\inc\deployment\RegistrationStoreApiTypes.hpp
WINTRUST.dll
WinVerifyTrust
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, PackageStatus, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
Wldp.dll
WldpIsAppApprovedByPolicy
WMIPROVIDER_EXTENSION_KEYWORD
WofShouldCompressBinaries
wofutil.dll
workid
WowDependencyGraph
wp8xappx
WPDeveloperAppAllowed
WPEnterpriseAppAllowedGetEnterpriseId
WPSetEABitsForPackage
WrcM:
WriteFile
WSHasValidDevLicense
WTSEnumerateSessionsW
WTSFreeMemory
WTSQuerySessionInformationW
WTSQueryUserToken
wwahost.exe
x  uV3
x 9\$`t
x ATAVAWH
x AVH
x AWH
x UATAUAVAWH
x UATAVH
x UAVAWH
X VWAVH
x#H9E
x&9\$@u
x(D8m@t+E
x)H9E
x+D8m@t.M
x28\$@t,A
X4D9S
x7;o(r
x7D8eHu
x86a64
XA^_[]
XA_A^_^[]
xA_A^_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^][
xA_A^A]A\_^][
XA_A^A]A\_^][
XapState
Xbox.DisplayTroubleshooter_cw5n1h2txyewy
Xbox.KinectTuner_cw5n1h2txyewy
xbox.live
xbox.live.
Xbox.NetworkTroubleshooter_cw5n1h2txyewy
Xbox.Oobe_cw5n1h2txyewy
Xbox.SystemUpdate_cw5n1h2txyewy
Xbox\PackageRegistration\
Xbox\UWAKeyIds\
XboxPackage
XbVS>
xc9}0t1
xCD8|$Pu
xCH;_
xF8\$0u
xG8\$0u
x-H;{
xID9d$t
xKD8ugtEH
xmlns:m="http://schemas.microsoft.com/appx/2013/appxprovisionpackage"
xonecore\admin\appmodel\dependencymanager\dependencyutilities.cpp
-xP1@
xPD8|$P
xpD8k<t
xPpoXl[
xT8]g
xTw-ta
xUHcN
x-updateagent://%s:%s:%I64u
xWH!]PI
x-windowsupdate
xZ@8upt
xzD87uuH
y RSTS
y@8|$0
Y\f9(t
y<FQ1
y68\$`t
yellow
yellowGreen
yF1;'
yf93tZH
yJ{qU
yonecore\admin\appmodel\stagingmanager\src\appxdeltahandler.cpp
yP t{
Yv1,`A
yvGA3
yvonecore\admin\appmodel\packagemanager\server\packageinventory.cpp
yZ;#B
Z"tn2M
z"x5.5
z~dm{
Z7_?^
ZD8}GtnD9
ZD8d$@
ZDpPQN
zH&rzH
zPnPA6
zPtNL
'ZuJ"W
ZwFlushBuffersFileEx
zz5qW
