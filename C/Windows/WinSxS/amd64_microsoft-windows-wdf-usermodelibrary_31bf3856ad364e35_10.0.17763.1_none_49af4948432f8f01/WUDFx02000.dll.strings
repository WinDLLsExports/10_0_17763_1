 @8|$`t
 @8|$Ht
 @8|$Pt
 @8l$`t
 @8l$Ht
 @8l$pt
 @8l$Pt
 @8l$Xt
 @8t$@t
 @8t$Pt
 8U@t
 A^_^
 A^_^H
 A_A^_
 A_A^A\
 A_A^A\_^
 A_A^A\_^[]
 A_A^A]A\_
 D8} t
 D8}@t
 D8}0t
 D8}8t
 D8e@t
 D8egt
 D8eHt
 D8m@t
 D8m0t
 D8mHt
 D8u(t
 D8u0t
 D8u8t
 H3E H3E
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 TRACINGFULL TRACINGERROR TRACINGDBGPRINT TRACINGFRAMEWORKS TRACINGAPI TRACINGAPIERROR TRACINGRESOURCES TRACINGLOCKING TRACINGCONTEXT TRACINGPOOL TRACINGHANDLE TRACINGPNP TRACINGIO TRACINGIOTARGET TRACINGDMA TRACINGREQUEST TRACINGDRIVER TRACINGDEVICE TRACINGUSEROBJECT TRACINGOBJECT TRACINGPNPPOWERSTATES TRACINGIFRCAPTURE
 Windows
!D8|$`t
!D8|$ht
!D8|$Pt
!D8|$pt
!D8|$Pt
!D8d$`t
!D8d$pt
!D8t$`t
!D8t$pt
!t$8!t$0!t$(H
!This program cannot be run in DOS mode.
"D8e@t
"H9{pt
"Microsoft Time Source Master Clock0
"Microsoft Window
"V((&
#(imp_WdfGetTriageInfo
#gVtZ
#S_KD
$`2X`F
$0< u
$Microsoft Ireland Operations Limited1
$minkernel\wdf\framework\shared\core\um\fxmessagedispatchum.cpp
%ActivityId should not be NULL
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%s:%u(%S)
&M:0~;
&minkernel\wdf\framework\umdf\fxlib\companion\fxcompanion.cpp
(Unknown)
)?aB[
)D8}8t
)Microsoft Root Certificate Authority 20100
* Actual function table count  : %d 
* DDI function table mismatch detected in UMDF driver. The 
* driver will not load until it is re-compiled using a 
* Expected function table count: %d 
* newer version of the Windows Driver Kit (WDK). 
* Service name                 : %wZ
************************* 
*************************** 
*DeviceInit should not be NULL
*KZ]w
*njkH
,3Avpq0azeUXJv0lC435DgZTSCW6KzmDr+SwYX6uP6Ns=0Z
,NjN!
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIZ
.data
.data$brc
.edata
.FxDriver::~FxDriver
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata
/Gksc
:\u2H
:D8u0t
;Xt%E
@.data
@.reloc
@.rsrc
@=Z,5
@8.ta
@8.tI
@8{ht
@8|$@teH
@8} tbH
@8}0t
@8i]vaH
@8j,t$
@8q]vzH
@8s`t
@8t$Xt
@8u t
@8uot
@8y]v.Hc
@A^^]
@A^_^
@A^_^][
@A^A\_
@A^A]_^]
@A^A]A\_^][
@A__^
@A_A^]
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A\_^][
@A_A^A]A\_^]
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAVH
@SUVWH
@SUWATAUAVAWH
@SVWH
@USVWATAUAVAWH
@USVWATAUAWH
@USVWATAVAWH
@USVWATH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
@USWATAUAVAWH
@USWH
[ UVWH
[r}%!
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ WH
\$0f9]
\$0fD9f
\$8f9{
\$8fD9o
\$8fD9z
\$HD8
\Callback\PowerState
\fD9k
\Registry\Machine\System\CurrentControlSet\Control\Wdf
\z2me
]_fA9
]pL[-qN
]WDFOBJECT
__C_specific_handler
_initterm
_initterm_e
_lf9O"u
_purecall
_SynchronizeExecution
_vsnwprintf_s
` UAVAWH
`""Z]
`.rdata
`A^A\_^]
`A_A^_^]
`A_A^A]A\_^]
`PAGEWdfVu"
{ ATAUAVH
{ ATAVAWH
{ ATH
{ AUAVAWH
{ AUH
{ AVH
{ AWH
{ UATAUAVAWH
{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
{lf9K"te
|$ ATAVAWH
|$ AVH
|$ E3
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(E3
|$0f9k
|$0f9s
|$8E3
|$8f9h
|$8f9i
|$8fD9r
|$hD8
|$XL9
|hK,_
}`fA9~
}HfA9~
}Snx,
}XfA9~
~0fE;
+imp_WdfInterruptCreate
<no typename given>
<NULL>
<Q0q8
=0uD/i|
=57A4
=Ddk t
=Unexpected
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
02.027.0
040904B0
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A__^
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A\_^][
0A_A^A]A\_
0A_A^A]A\_^]
0u:L9
1(0&0
1/0-0
1@8|$`t
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
100701213655Z
111019184142Z
180606185755Z
180823202717Z
190529185755Z0p1
191123202717Z0
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
20180914213407Z
20180915012826.697Z0
20180915213407Z0w0=
232770+4362250
250701214655Z0|1
261019185142Z0
26Bimp_WdfRegistryOpenKey
3D*>:gN
4!N,?
4,&mz
4oimp_WdfWaitLockCreate
5<N_X|;L
6Ifa!]
7fD9|H
8\t-H
8_^][
9fD9g
9jXtl
9Y0u1H
A UMDF driver reported a fatal error
A\_^[]
A]A\_
A^_^[]
A^A\_
A^A\_^]
A^A]_
A^A]A\
A^A]A\_]
A^A]A\_^
A_A\_
A_A\_^]
A_A]A\_^
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^H
A_A^A\H
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_][
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_H
AcknowledgeInterrupt message to reflector returned failure. Check UMDF log for failure reason. 
AddEventHooksWdfDeviceCreate
AddEventHooksWdfIoQueueCreate
adS0Idle
advapi32
Ae3':
ApiIndex
ApiMissing
api-ms-win-core-crt-l1-1-0.dll
api-ms-win-core-crt-l2-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-libraryloader-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0
api-ms-win-eventing-provider-l1-1-0.dll
attachedDevice should be NULL
Attempt to do multiple mapping of same resource, or multiple mapping in same resource range
AUMDF completion routine can't be invoked selectively on Success/Error/Cancel
B8T#1rDH
B8T#1rhH
B8T#1rlH
B8T#1rVH
B8T#1rZH
B8T;1r
B8T;1r7H
B8T;1rMH
B8T+1rhH
Buffer should be NULL
Buffer should not be NULL
BusEnumerator
C FxODH
C"imp_WdfDeviceGetDriver
c\D8c]v>H
C]8C\u
C0D8c]
CacheType incorrect
Callback should not be NULL
Cannot get initiator process ID from a file object that doesn't have a WDM file object
Cannot increment process keep alive count from a file object that doesn't have a WDM file object
Cannot increment process keep alive count unless UmdfFsContextUsePolicy INF directive is set to WdfCannotUseFsContexts
CapabilityBuffer should not be NULL
CensusCommonV1
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CloseHandle
CloseThreadpool
CloseThreadpoolTimer
CloseThreadpoolWait
CloseThreadpoolWork
CnclA
Collection should not be NULL
CompA
Companion should not be NULL
CompanionEventCallbacks should not be NULL
CompanyName
CompH
Config should not be NULL
ConfigDescriptorLength should not be NULL
Configuration should not be NULL
Count
Count should be > 0
Count should be 0
CreateEventW
CreateFileW
CreateThreadpool
CreateThreadpoolTimer
CreateThreadpoolWait
CreateThreadpoolWork
CxDeviceInit should not be NULL
CxFileObjectConfig should not be NULL
CxPnpPowerCallbacks should not be NULL
D$ E3
D$ uR
D$(E3
d$(E3
D$(fD
D$(H9h
D$(Lk
D$@dll
D$@E3
D$`dll
D$0E3
D$0f9{
D$0fD9o
D$8@8
D$8E3
D$8f9^
D$8f9k
d$DE3
D$hdll
D$Hdll
D$hdll
D$Hdll
D$hE3
D$HE3
D$hE3
D$HE3
D$hE3
D$HL+
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$pdll
D$Pdll
D$PE3
D$pE3
D$PE3
d$pfD9c
D$Xdll
D$xdll
D$Xdll
D$xdll
D$Xdll
D$xdll
D$Xdll
D$xE3
D$XE3
D$xE3
D$XE3
D$xE3
D8|$`t
D8|$p
D8|$Pt
D8d$`t
D8d$pt
D8ght
D8l$`t,
D8l$hu,D8
D8l$x
D8m@tQD8
D8s^tV
D8s5t
D9\$xtB
D9|$\
D9|$`
D9|$LH
D9|$PH
D9|$T
D9|$X
D95M:
D9e$u
D9e0u%
D9eP|KE
D9G(t
D9t$`u
D9t$HL
Data should not be NULL
DbgBreakOnDeviceStateError
DbgBreakOnError
DbgBreakPoint
DbgPrintEx
DbgWaitForSignalTimeoutInSec
DbgWaitForWakeInterruptIsrTimeoutInSec
DCRCA
DD$xA;
DebugBreak
DecodePointer
DeleteCriticalSection
Device should not be NULL
DeviceD1
DeviceD2
DeviceGroupId
DeviceInit should not be NULL
DeviceProperty should not be NULL
DeviceState should not be NULL
dimp_WdfStringCreate
DirectHardwareAccess
disable
Disabled
DisableThreadLibraryCalls
Disconnect message to reflector returned failure. 
DispatchContext should not be NULL
DockDevice
DontDisplayInUI
Driver attempted to read from invalid port address or address range
Driver attempted to read from invalid register address or address range
Driver attempted to unmap incorrect register address, or provided incorrect size
Driver attempted to write to invalid port address or address range
Driver attempted to write to invalid register address or address range
Driver called an unavailable API
Driver did not unmap its register resources
Driver provided incorrect base address
Driver Version: %d.%d Umdf Lib. Version: %d.%d
DriverConfig should not be NULL
DriverConfigInfo
DriverImage
DriverInfo
DriverName
DriverNoDispatchOverride
DriverNonPnP
DriverObject should not be NULL
DriverService
DriverServiceName
DriverVersionMajor
DriverVersionMinor
DsfOn
E dll
E(dll
E;0s:I
E@dll
E_dll
E`L9<
E0dll
E0fD9`
E8dll
E8f`t
E9FXt)A
Egdll
EHdll
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EjectSupported
enable
EncodePointer
EndpointInfo should not be NULL
EnhancedVerifierOptions
EnterCriticalSection
entry->m_EndSystemVa should be NULL
entry->m_EndSystemVa should not be NULL
entry->m_StartUsermodeVa should be NULL
entry->m_StartUsermodeVa should not be NULL
Eodll
EP@88t
EPdll
ERROR: RtlStringCchPrintfW failed with Status 0x%x
EventActivityIdControl
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EvLq(
EvtDeviceWdmIrpDispatch should not be NULL
EvtRequestCancel should not be NULL
Ewdll
EXdll
ExpectedCount
F H9C tAH
f!A H
f!C H
f!E D8
f9{"D
f9l$@u%
f9Z0t
f9Z2u
f9Zxu
f9Zzt
fA9?u
fA9LE
fA9Z*v$A
Failed
Failed to assign interrupt resource to interrupt objectbecause interrupt resource is for level-triggered interruptwhich is not supported on this platform. See the docs for info onsupported platforms.
Failed to initialize tracing for WDF
Failed to validate loader interface parameters, status 0x%x
FAILED(hr)
FALSE
False
fD9 t
fD9$Au
fD9$Cu
fD9&u
fD9{"D
fD9<Bu
fD90t
fD91t
fD93u
fD98t
fD9dF
fE9|D
fE9<@u
fE9<Au
fE9<Bu
fE9>L
FileDescription
FileObject should not be NULL
FileObjectConfig should not be NULL
FileObjectPolicy
FileVersion
flusA
FlushQueuedDpcs message to reflector returned failure
ForceLogsInMiniDump
FrameworkName
FreeLibrary
FsContextUsePolicy
function  count: client %lu, library %lu
FunctionCount
FWdf1000
FwdPA
FxCallbackMutexLock::Lock
FxCallbackSpinLock::Lock
FxChildList
FxCmResList
FxCmResList::MapIoSpaceWorker
FxCmResList::ValidateAndClearMapping
FxCmResList::ValidatePortAddressRange
FxCmResList::ValidateRegisterPhysicalAddressRange
FxCmResList::ValidateRegisterSystemAddressRange
FxCmResList::ValidateRegisterSystemBaseAddress
FxCmResList::ValidateResourceUnmap
FxCollection
FxCompanion
FxDefaultIrpHandler
FxDevice
FxDevice::_GetDeviceProperty
FxDevice::~FxDevice
FxDevice::CreateDevice
FxDevice::FdoInitialize
FxDevice::FxValidateInterfacePropertyData
FxDevice::GetDeviceStack2
FxDevice::ReadRegister
FxDevice::ReadRegisterBuffer
FxDevice::WriteRegister
FxDevice::WriteRegisterBuffer
FxDeviceInterface::GetSymbolicLinkName
FxDisposeList
FxDriver
FxEnhancedVeriferOptions
FxFileObject
FxFileObject::GetInitiatorProcessId
FxFileObject::SetFileObjectContext
FxFileObject::UpdateProcessKeepAliveCount
FxFrameworkEntryUm
FxInterrupt
FxInterrupt::AssignResourcesInternal
FxInterrupt::DisconnectInternal
FxInterrupt::FlushQueuedDpcs
FxInterrupt::ResetInternal
FxInterrupt::RevokeResourcesInternal
FxInterrupt::SetPolicyInternal
FxInterrupt::ThreadpoolWaitCallback
FxInterruptThreadpool::_CreateAndInit
FxInterruptWaitblock::_CreateAndInit
FxIoContext::CopyParameters
FxIoQueue
FxIoQueue::FatalError
FxIoResList
FxIoResReqList
FxIoTarget
FxIoTarget::SubmitLocked
FxIoTarget::Vf_VerifySubmitLocked
FxIoTargetRemote::CreateWdfFileObject
FxIoTargetRemote::GetTargetHandle
FxIoTargetRemote::Open
FxIoTargetRemote::OpenTargetHandle
FxIoTargetSelf
FxIrp::AllocateIrp
FxIrp::CopyParameters
FxIrp::GetDeviceObject
FxIrp::GetFileObject
FxIrp::GetIoIrp
FxIrp::GetMajorFunction
FxIrp::GetMinorFunction
FxIrp::GetOutputBuffer
FxIrp::GetParameterQDRType
FxIrp::GetParameterQueryInterfaceInterface
FxIrp::GetParameterQueryInterfaceInterfaceSpecificData
FxIrp::GetParameterQueryInterfaceSize
FxIrp::GetParameterQueryInterfaceType
FxIrp::GetParameterQueryInterfaceVersion
FxIrp::GetParameterUsageNotificationInPath
FxIrp::GetParameterUsageNotificationType
FxIrp::GetPnpIrp
FxIrp::GetSystemBuffer
FxIrp::SendIrpSynchronously
FxIrp::SetCompletionRoutine
FxIrp::SetMajorFunction
FxIrp::SetNextStackParameterOthersArgument1
FxIrp::SetParameterAllocatedResources
FxIrp::SetParameterAllocatedResourcesTranslated
FxIrp::SetParameterIoctlCode
FxIrpQueue
FxIrpQueue::Vf_VerifyRemoveIrpFromQueueByContext
FxLibraryCommonRegisterClient
FxLookasideList
FxMemoryBufferPreallocated
FxMemoryObject
FxMessageDispatch::DispatchPnP
FxMpDevice
FxObject
FxObject::~FxObject
FxObjectHandleGetPtr
FxObjectHandleGetPtrQI
FxPkgFdo
FxPkgFdo::DispatchDeviceSetPower
FxPkgGeneral
FxPkgIo
FxPkgPdo
FxPkgPnp::DispatchWaitWake
FxPkgPnp::SetPendingPnpIrp
FxRegKey
FxRelatedDevice
FxRequest
FxRequest::CompleteInternal
FxRequest::Impersonate
FxRequest::Vf_VerifyCompleteInternal
FxRequestMemory
FxResourceCm
FxResourceIo
FxSpinLock
FxSpinLock::ReleaseLock
FxString
FxSystemThread
FxSystemWorkItem
FxTaskQueue
FxTimer
FxUsbDevice
FxUsbInterface
FxUsbPipe
FxUsbTargetDeviceCreate
FxUsbUmFormatRequest
FxUserObject
FxVerifierDriverReportedBugcheck
FxVerifierLock
FxVerifierOn
FxWaitLock
FxWatchdog::_WatchdogDpc
FxWmiProvider
FxWorkItem
G4FxDr
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetLastError
GetModuleHandleExW
GetModuleHandleW
GetProcAddress
GetProcessHeap
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
ggHpA
gTJp6Dtc
h UAVAWH
h VWAVH
H!{PH
H-" waiting for the queue to be deleted, WDFQUEUE
H;s(t
H9\$xu
H9{pu
H9|$Xt
H9+u<
H90uJH
H9h tbH
H9l$pt
H9L$pu
H9L$xu
H9o(H
H9t$xH
H9x tsH
H9X8H
H9Z u-D
H9Z8t
hA_A^A]A\_^][
Handle should not be NULL
Hardware access not allowed. Set the INF directive UmdfDirectHardwareAccess to AllowDirectHardwareAccess in driver's INF file to enable direct hardware access
HardwareDisabled
HardwareId
HeapAlloc
HeapFree
hGAu3
HoldA
HoldH
HostFile should not be NULL
HostProcessSharingEnabled
hu:L9
I;j8tB
I0G1-0+
I9^ t
I9^8t
I94~IA
IdleInWorkingState
ImagePath
imp_WdfCmResourceListGetDescriptor
imp_WdfCollectionAdd
imp_WdfCollectionCreate
imp_WdfCollectionGetCount
imp_WdfCollectionGetFirstItem
imp_WdfCollectionGetItem
imp_WdfCollectionGetLastItem
imp_WdfCollectionRemove
imp_WdfCollectionRemoveItem
imp_WdfCompanionCreate
imp_WdfCompanionCreateTaskQueue
imp_WdfCompanionWdmGetSecureDeviceHandle
imp_WdfCxDeviceInitAllocate
imp_WdfCxDeviceInitSetFileObjectConfig
imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
imp_WdfCxDeviceInitSetRequestAttributes
imp_WdfDeviceAllocAndQueryInterfaceProperty
imp_WdfDeviceAllocAndQueryProperty
imp_WdfDeviceAllocAndQueryPropertyEx
imp_WdfDeviceAssignInterfaceProperty
imp_WdfDeviceAssignProperty
imp_WdfDeviceAssignS0IdleSettings
imp_WdfDeviceAssignSxWakeSettings
imp_WdfDeviceConfigureRequestDispatching
imp_WdfDeviceConfigureWdmIrpDispatchCallback
imp_WdfDeviceCreate
imp_WdfDeviceCreateDeviceInterface
imp_WdfDeviceCreateSymbolicLink
imp_WdfDeviceGetDefaultQueue
imp_WdfDeviceGetDeviceStackIoType
imp_WdfDeviceGetDeviceState
imp_WdfDeviceGetFileObject
imp_WdfDeviceGetHardwareRegisterMappedAddress
imp_WdfDeviceGetIoTarget
imp_WdfDeviceGetSelfIoTarget
imp_WdfDeviceGetSystemPowerAction
imp_WdfDeviceHidNotifyPresence
imp_WdfDeviceInitAllowSelfIoTarget
imp_WdfDeviceInitEnableHidInterface
imp_WdfDeviceInitSetCompanionEventCallbacks
imp_WdfDeviceInitSetFileObjectConfig
imp_WdfDeviceInitSetIoType
imp_WdfDeviceInitSetIoTypeEx
imp_WdfDeviceInitSetPnpPowerEventCallbacks
imp_WdfDeviceInitSetPowerPolicyEventCallbacks
imp_WdfDeviceInitSetPowerPolicyOwnership
imp_WdfDeviceInitSetReleaseHardwareOrderOnFailure
imp_WdfDeviceInitSetRequestAttributes
imp_WdfDeviceMapIoSpace
imp_WdfDeviceOpenDevicemapKey
imp_WdfDeviceOpenRegistryKey
imp_WdfDevicePostEvent
imp_WdfDeviceQueryInterfaceProperty
imp_WdfDeviceQueryProperty
imp_WdfDeviceQueryPropertyEx
imp_WdfDeviceReadFromHardware
imp_WdfDeviceResumeIdleActual
imp_WdfDeviceResumeIdleNoTrack
imp_WdfDeviceRetrieveDeviceDirectoryString
imp_WdfDeviceRetrieveDeviceInterfaceString
imp_WdfDeviceSetDeviceInterfaceState
imp_WdfDeviceSetDeviceState
imp_WdfDeviceSetFailed
imp_WdfDeviceSetPnpCapabilities
imp_WdfDeviceSetPowerCapabilities
imp_WdfDeviceSetStaticStopRemove
imp_WdfDeviceStopIdleActual
imp_WdfDeviceStopIdleNoTrack
imp_WdfDeviceUnmapIoSpace
imp_WdfDeviceWdmDispatchIrp
imp_WdfDeviceWdmDispatchIrpToIoQueue
imp_WdfDeviceWriteToHardware
imp_WdfDriverCreate
imp_WdfDriverErrorReportApiMissing
imp_WdfDriverGetRegistryPath
imp_WdfDriverIsVersionAvailable
imp_WdfDriverOpenParametersRegistryKey
imp_WdfDriverOpenPersistentStateRegistryKey
imp_WdfDriverRetrieveDriverDataDirectoryString
imp_WdfDriverRetrieveVersionString
imp_WdfFdoInitAllocAndQueryProperty
imp_WdfFdoInitAllocAndQueryPropertyEx
imp_WdfFdoInitOpenRegistryKey
imp_WdfFdoInitQueryProperty
imp_WdfFdoInitQueryPropertyEx
imp_WdfFdoInitSetFilter
imp_WdfFileObjectGetDevice
imp_WdfFileObjectGetFileName
imp_WdfFileObjectGetInitiatorProcessId
imp_WdfFileObjectGetRelatedFileObject
imp_WdfInterruptAcquireLock
imp_WdfInterruptDisable
imp_WdfInterruptEnable
imp_WdfInterruptGetDevice
imp_WdfInterruptGetInfo
imp_WdfInterruptQueueDpcForIsr
imp_WdfInterruptQueueWorkItemForIsr
imp_WdfInterruptReleaseLock
imp_WdfInterruptSetExtendedPolicy
imp_WdfInterruptSetPolicy
imp_WdfInterruptSynchronize
imp_WdfInterruptTryToAcquireLock
imp_WdfIoQueueCreate
imp_WdfIoQueueDrain
imp_WdfIoQueueDrainSynchronously
imp_WdfIoQueueFindRequest
imp_WdfIoQueueGetDevice
imp_WdfIoQueueGetState
imp_WdfIoQueuePurge
imp_WdfIoQueuePurgeSynchronously
imp_WdfIoQueueReadyNotify
imp_WdfIoQueueRetrieveFoundRequest
imp_WdfIoQueueRetrieveNextRequest
imp_WdfIoQueueRetrieveRequestByFileObject
imp_WdfIoQueueStart
imp_WdfIoQueueStop
imp_WdfIoQueueStopAndPurge
imp_WdfIoQueueStopAndPurgeSynchronously
imp_WdfIoQueueStopSynchronously
imp_WdfIoTargetClose
imp_WdfIoTargetCloseForQueryRemove
imp_WdfIoTargetCreate
imp_WdfIoTargetFormatRequestForIoctl
imp_WdfIoTargetFormatRequestForRead
imp_WdfIoTargetFormatRequestForWrite
imp_WdfIoTargetGetDevice
imp_WdfIoTargetGetState
imp_WdfIoTargetOpen
imp_WdfIoTargetPurge
imp_WdfIoTargetSelfAssignDefaultIoQueue
imp_WdfIoTargetSendIoctlSynchronously
imp_WdfIoTargetSendReadSynchronously
imp_WdfIoTargetSendWriteSynchronously
imp_WdfIoTargetStart
imp_WdfIoTargetStop
imp_WdfMemoryAssignBuffer
imp_WdfMemoryCopyFromBuffer
imp_WdfMemoryCopyToBuffer
imp_WdfMemoryCreate
imp_WdfMemoryGetBuffer
imp_WdfObjectAcquireLock
imp_WdfObjectAllocateContext
imp_WdfObjectCreate
imp_WdfObjectDelete
imp_WdfObjectDereferenceActual
imp_WdfObjectGetTypedContextWorker
imp_WdfObjectQuery
imp_WdfObjectReferenceActual
imp_WdfObjectReleaseLock
imp_WdfRegistryAssignMemory
imp_WdfRegistryAssignMultiString
imp_WdfRegistryAssignString
imp_WdfRegistryAssignULong
imp_WdfRegistryAssignUnicodeString
imp_WdfRegistryAssignValue
imp_WdfRegistryClose
imp_WdfRegistryCreateKey
imp_WdfRegistryQueryMemory
imp_WdfRegistryQueryMultiString
imp_WdfRegistryQueryString
imp_WdfRegistryQueryULong
imp_WdfRegistryQueryUnicodeString
imp_WdfRegistryQueryValue
imp_WdfRegistryRemoveKey
imp_WdfRegistryRemoveValue
imp_WdfRegistryWdmGetHandle
imp_WdfRequestCreate
imp_WdfRequestFormatRequestUsingCurrentType
imp_WdfRequestGetCompletionParams
imp_WdfRequestGetParameters
imp_WdfRequestMarkCancelable
imp_WdfRequestMarkCancelableEx
imp_WdfRequestRetrieveActivityId
imp_WdfRequestRetrieveInputBuffer
imp_WdfRequestRetrieveInputMemory
imp_WdfRequestRetrieveOutputBuffer
imp_WdfRequestRetrieveOutputMemory
imp_WdfRequestReuse
imp_WdfSpinLockAcquire
imp_WdfSpinLockRelease
imp_WdfStringGetUnicodeString
imp_WdfTimerCreate
imp_WdfTimerGetParentObject
imp_WdfTimerStart
imp_WdfTimerStop
imp_WdfUsbInterfaceGetConfiguredPipe
imp_WdfUsbInterfaceGetConfiguredSettingIndex
imp_WdfUsbInterfaceGetDescriptor
imp_WdfUsbInterfaceGetEndpointInformation
imp_WdfUsbInterfaceGetInterfaceNumber
imp_WdfUsbInterfaceGetNumConfiguredPipes
imp_WdfUsbInterfaceGetNumEndpoints
imp_WdfUsbInterfaceGetNumSettings
imp_WdfUsbInterfaceSelectSetting
imp_WdfUsbTargetDeviceAllocAndQueryString
imp_WdfUsbTargetDeviceCreate
imp_WdfUsbTargetDeviceCreateWithParameters
imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
imp_WdfUsbTargetDeviceFormatRequestForString
imp_WdfUsbTargetDeviceGetDeviceDescriptor
imp_WdfUsbTargetDeviceGetInterface
imp_WdfUsbTargetDeviceGetNumInterfaces
imp_WdfUsbTargetDeviceQueryString
imp_WdfUsbTargetDeviceQueryUsbCapability
imp_WdfUsbTargetDeviceResetPortSynchronously
imp_WdfUsbTargetDeviceRetrieveConfigDescriptor
imp_WdfUsbTargetDeviceRetrieveInformation
imp_WdfUsbTargetDeviceSelectConfig
imp_WdfUsbTargetDeviceSendControlTransferSynchronously
imp_WdfUsbTargetPipeAbortSynchronously
imp_WdfUsbTargetPipeConfigContinuousReader
imp_WdfUsbTargetPipeFormatRequestForAbort
imp_WdfUsbTargetPipeFormatRequestForRead
imp_WdfUsbTargetPipeFormatRequestForReset
imp_WdfUsbTargetPipeFormatRequestForWrite
imp_WdfUsbTargetPipeGetInformation
imp_WdfUsbTargetPipeGetType
imp_WdfUsbTargetPipeIsInEndpoint
imp_WdfUsbTargetPipeIsOutEndpoint
imp_WdfUsbTargetPipeReadSynchronously
imp_WdfUsbTargetPipeResetSynchronously
imp_WdfUsbTargetPipeSetNoMaximumPacketSizeCheck
imp_WdfUsbTargetPipeWriteSynchronously
imp_WdfWaitLockAcquire
imp_WdfWaitLockRelease
imp_WdfWorkItemCreate
imp_WdfWorkItemEnqueue
imp_WdfWorkItemFlush
imp_WdfWorkItemGetParentObject
in EvtCleanupCallback of the miniport framework device object
in EvtDeviceD0Exit callback
Incorrect register access mode. Register mapping to user-mode is not enabled. Set the INF directive UmdfRegisterAccessMode to RegisterAccessUsingUserModeMapping in driver's INF file to enable Register mapping to user-mode
Incorrect Size parameter
Incorrect Type parameter
INFNITE wait failed
Info should not be NULL
Information should not be NULL
InitializeCriticalSectionAndSpinCount
Integer overflow occurred when computing length of read access
Integer overflow occurred when computing length of write access
Integer overflow occurredwhen computing port address range
Integer overflow occurredwhen computing register address range
InterfaceClassGUID should not be NULL
InterfaceDescriptor should not be NULL
InternalName
Interrupt should not be NULL
Invalid bind info. Target version %lu, minimum required version %lu
Invalid physical address or number of bytes provided
INVALID_HANDLE_VALUE == m_pRemoteDispatcher->GetHandle()
IoControlIoType should not be NULL
ioIrp should be NULL
ioIrp should not be NULL
IoTarget should not be NULL
-ipYx
iRequest should not be NULL
Irp should not be NULL
IsDebuggerPresent
IsDirectHardwareAccessAllowed
IsFilter
IsKernelModeClientAllowed
IsMethodNeitherActionCopy
IsNullFileObjectAllowed
IsPoolingDisabled
IsPowerPolicyOwner
IsS0IdleEnabled
IsS0IdleSystemManaged
IsS0IdleUsbSSEnabled
IsS0IdleWakeFromS0Enabled
IsSxWakeEnabled
IsUsingDirectIoForIoctl
IsUsingDirectIoForReadWrite
IsUsingDriverWppRecorder
IsUsingEdgeTriggeredLineInterrupt
IsUsingLevelTriggeredLineInterrupt
IsUsingMsi22MultiMessageInterrupt
IsUsingMsiXOrSingleMsi22Interrupt
IsUsingMultipleInterrupt
IsUsingUserModemappingAccessMode
It is illegal to invoke this DDI while thread is impersonated
K SUVWH
k VWATAVAWH
K VWATAVAWH
k:xL_
KernelModeClientPolicy
Key should not be NULL
KeyName should not be NULL
KmdfTraceGuid
L$ E3
L$ UH
L$ USVWATAUAVAWH
L$ UVWATAUAVAWH
l$ VWATAUAVH
l$ VWATAVAWH
L$ VWAVH
l$ VWAVH
l$ VWAWH
l$ WAVAWH
L$(E3
l$(E3
L$(E3
l$(fD
L$(H3
L$@E3
L$`E3
L$`H9K
L$0f9{
L$0f9V
L$0fD9f
l$0fD9n
L$0H3
L$8E3
L$8H+
L$8H3
l$HE3
L$HE3
L$HH3
L$pE3
L$PE3
L$pH3
L$PH3
L$xE3
L$XH3
L9`(u
L9{(t
L9|$pt
L9}@t
L9}@u
L9}HA
L9}Pu
L90u]L
L9cpu
L9d$8tdH
L9d$8tWfD9c
L9h0u
L9w H
LBsH{
LeaveCriticalSection
Legal_Policy_Statement
LegalCopyright
LoaderInterface->pIWudfHost should not be NULL
Lock should not be NULL
LockSupported
LogPages
LPiS+?
M.f9o
M@fD9a
M@fD9o
M0K0I
M9$$M
M9$$t6L
M9$$tKL
M9$$u!H
M9<$u
M96t.H
ManufacturerString
Mapped length not zero
memcpy
Memory should not be NULL
memset
MethodNeitherAction
MFfD9k
Microsoft
Microsoft America Operations1&0$
Microsoft America Operations1'0%
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1%0#
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Microsoft.Wdf.UMDF.Fx
Microsoft_WDF_UMDF_Version
minkernel\wdf\framework\shared\core\fxcxdeviceinitapi.cpp
minkernel\wdf\framework\shared\core\fxdevice.cpp
minkernel\wdf\framework\shared\core\fxdeviceapi.cpp
minkernel\wdf\framework\shared\core\fxdevicebase.cpp
minkernel\wdf\framework\shared\core\fxdeviceinitapi.cpp
minkernel\wdf\framework\shared\core\fxdriver.cpp
minkernel\wdf\framework\shared\core\fxdriverapi.cpp
minkernel\wdf\framework\shared\core\fxfileobjectapi.cpp
minkernel\wdf\framework\shared\core\fxirpqueue.cpp
minkernel\wdf\framework\shared\core\fxmemorybufferapi.cpp
minkernel\wdf\framework\shared\core\fxmemorybufferfromlookaside.cpp
minkernel\wdf\framework\shared\core\fxmemorybufferpreallocatedapi.cpp
minkernel\wdf\framework\shared\core\fxrequest.cpp
minkernel\wdf\framework\shared\core\fxrequestapi.cpp
minkernel\wdf\framework\shared\core\fxrequestbase.cpp
minkernel\wdf\framework\shared\core\fxrequestcontext.cpp
minkernel\wdf\framework\shared\core\fxsyncrequest.cpp
minkernel\wdf\framework\shared\core\fxtimer.cpp
minkernel\wdf\framework\shared\core\fxtimerapi.cpp
minkernel\wdf\framework\shared\core\fxworkitem.cpp
minkernel\wdf\framework\shared\core\fxworkitemapi.cpp
minkernel\wdf\framework\shared\core\um\fxdeviceapium.cpp
minkernel\wdf\framework\shared\core\um\fxdeviceinitapium.cpp
minkernel\wdf\framework\shared\core\um\fxdeviceum.cpp
minkernel\wdf\framework\shared\core\um\fxdriverapium.cpp
minkernel\wdf\framework\shared\core\um\fxfileobjectapium.cpp
minkernel\wdf\framework\shared\core\um\fxfileobjectum.cpp
minkernel\wdf\framework\shared\core\um\fxirpum.cpp
minkernel\wdf\framework\shared\core\um\fxmessagedispatchum.cpp
minkernel\wdf\framework\shared\core\um\fxrequestapium.cpp
minkernel\wdf\framework\shared\core\um\fxrequestum.cpp
minkernel\wdf\framework\shared\core\verifierapi.cpp
minkernel\wdf\framework\shared\enhancedverif\verifier.cpp
minkernel\wdf\framework\shared\inc\private\common\fxcallbackmutexlock.hpp
minkernel\wdf\framework\shared\inc\private\common\fxcallbackspinlock.hpp
minkernel\wdf\framework\shared\inc\private\common\FxCollection.hpp
minkernel\wdf\framework\shared\inc\private\common\fxhandle.h
minkernel\wdf\framework\shared\inc\private\um\FxDeviceUm.hpp
minkernel\wdf\framework\shared\inc\private\um\fxdeviceum.hpp
minkernel\wdf\framework\shared\inc\private\um\fxiotargetum.hpp
minkernel\wdf\framework\shared\irphandlers\io\fxioqueue.cpp
minkernel\wdf\framework\shared\irphandlers\io\fxioqueueapi.cpp
minkernel\wdf\framework\shared\irphandlers\io\fxpkgio.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fdopower.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fxinterruptapi.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fxpkgfdo.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\fxpkgpnp.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\interruptobject.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\um\fxinterruptthreadpoolum.cpp
minkernel\wdf\framework\shared\irphandlers\pnp\um\interruptobjectum.cpp
minkernel\wdf\framework\shared\object\fxobject.cpp
minkernel\wdf\framework\shared\object\fxobjectapi.cpp
minkernel\wdf\framework\shared\object\fxobjectstatemachine.cpp
minkernel\wdf\framework\shared\object\fxuserobjectapi.cpp
minkernel\wdf\framework\shared\object\fxverifierbugcheck.cpp
minkernel\wdf\framework\shared\object\fxverifierlock.cpp
minkernel\wdf\framework\shared\object\handleapi.cpp
minkernel\wdf\framework\shared\primitives\um\mxgeneralum.cpp
minkernel\wdf\framework\shared\support\fxcollectionapi.cpp
minkernel\wdf\framework\shared\support\fxdeviceinterfaceapi.cpp
minkernel\wdf\framework\shared\support\fxregistryapi.cpp
minkernel\wdf\framework\shared\support\fxresourceapi.cpp
minkernel\wdf\framework\shared\support\fxspinlock.cpp
minkernel\wdf\framework\shared\support\fxspinlockapi.cpp
minkernel\wdf\framework\shared\support\fxstringapi.cpp
minkernel\wdf\framework\shared\support\fxtransactionedlist.cpp
minkernel\wdf\framework\shared\support\fxwaitlockapi.cpp
minkernel\wdf\framework\shared\support\um\fxdeviceinterfaceum.cpp
minkernel\wdf\framework\shared\support\um\fxresourcecollectionum.cpp
minkernel\wdf\framework\shared\targets\general\fxiotarget.cpp
minkernel\wdf\framework\shared\targets\general\fxiotargetapi.cpp
minkernel\wdf\framework\shared\targets\general\fxiotargetremote.cpp
minkernel\wdf\framework\shared\targets\general\um\fxiotargetremoteum.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbdeviceapi.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbinterface.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbinterfaceapi.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbpipe.cpp
minkernel\wdf\framework\shared\targets\usb\fxusbpipeapi.cpp
minkernel\wdf\framework\shared\targets\usb\usbutil.cpp
minkernel\wdf\framework\umdf\fxlib\companion\fxcompanionapi.cpp
minkernel\wdf\framework\umdf\fxlib\librarycommon\fxlibrarycommon.cpp
minkernel\wdf\framework\umdf\fxlib\version\framework.cpp
MK&4;
Multiple interrupt connection attempts
Must be Passive Interrupt
Mx::MxBugCheckEx
N0L0J
nCipher NTS ESN:2665-4C3F-C5DE1+0)
NoDisplayInUI
Non Io Irp passed to CopyParameters
Not expected
NotDisableable
ntdll.dll
NumberOfBytes should be > 0
NumCharacters should not be NULL
O0M0K
Object should not be NULL
ObjectLeakDetectionLimit
ObjectsForLeakDetection
oK0D$"<
oOS<z
OpenParams should not be NULL
OriginalFilename
OutRequest should not be NULL
p WATAUAVAWH
p WATAVH
p WAVAWH
PA^_^[]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^[]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
PAGEWdfV
Parameters should not be NULL
Parameters\Wdf
Params should not be NULL
PassiveHandling not set to TRUE in WDF_INTERRUPT_CONFIG structure
PhysicalAddress.QuadPart should not be NULL
pIoIrp should be NULL
PipeInformation should not be NULL
pIrp should not be NULL
PMemory should not be NULL
PnpCapabilities should not be NULL
PnpPowerEventCallbacks should not be NULL
poweA
power stopping (Drain) in progress,
PowerCapabilities should not be NULL
PowerPolicyEventCallbacks should not be NULL
ppThreadpool should not be NULL
PPTP00
ProductName
ProductVersion
PropertyBuffer should not be NULL
PropertyData->InterfaceClassGUID should not be NULL
PropertyMemory should not be NULL
PropertyType should not be NULL
propKey should not be NULL
PseudoBaseAddress should not be NULL
PWDF_BIND_INFO
PWDF_BIND_INFO->FuncTable
PWDF_DRIVER_GLOBALS *
q_]}I
qimp_WdfSpinLockCreate
QueryPerformanceCounter
QueuA
QueuD
QueuH
R!s4Z
R$fA;Z*
R(f9w
r(L9}@t
r~akow
ReadWriteIoType should not be NULL
Redmond1
RegCloseKey
RegCreateKeyExW
RegisterAccessMode
RegisterLibrary failed, status 0x%x
RegisterTraceGuidsW
RegistryPath should not be NULL
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
Removable
Removed
RemoveLockOptionFlags
ReportDdiFunctionCountMismatch
RequestAttributes should not be NULL
RequestParentOptimizationOn
RequiredSize should not be NULL
ResetEvent
ResourcesChanged
Restart
ResultLength should not be NULL
ReuseParams should not be NULL
RichY4
RJPN%\
RPCRT4.dll
RSDS<
RtlAnsiStringToUnicodeString
RtlCaptureContext
RtlCaptureStackBackTrace
RtlCompareMemory
RtlCompareUnicodeString
RtlGetVersion
RtlInitAnsiString
RtlInitUnicodeString
RtlLookupFunctionEntry
RtlQueryRegistryValues
RtlQueryRegistryValuesEx
RtlVerifyVersionInfo
RtlVirtualUnwind
s AWH
s WATAUAVAWH
s WAVAWH
ServiceName
SessionGUID
SetEvent
SetThreadpoolThreadMaximum
SetThreadpoolThreadMinimum
SetThreadpoolTimer
SetThreadpoolWait
Settings should not be NULL
SetUnhandledExceptionFilter
SetupClass
SetupPacket should not be NULL
should
should not
SilentInstall
SleepEx
SpinLock should not be NULL
StartAchieved
StartTime
StatA
StatH
String should not be NULL
StringFileInfo
StringMemory should not be NULL
StringsCollection should not be NULL
StrtA
structure count: client %lu, library %lu
SubmitThreadpoolWork
SurpriseRemovalOK
SUVWATAUAVH
SUVWATAVAWH
SxWake
SymbolicLinkName should not be NULL
t"fD9
t#f9s
t$ E3
t$ fE
t$ UWATAUAVH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAVH
t$ WATAWH
t$ WAVAWH
t$ WH
t$(E3
T$(E3
t$(fD
T$@E3
T$@H!l$ E3
T$`E3
T$0E3
T$0fD9k
T$8f9V
t$8fD9k
t$fA9
T$HE3
T$hE3
T$HE3
T$pE3
T$PE3
t%8HPt 
t%D!D$DH
t%fD9`
t%L9g t
t&L9f
t(fD9k
t(fD9w
t(M9't#D8
t*fD9{
t*fD9s
t,D9a0u"H
t,f9s
t,fD9k
t,fD9s
t.fD9g
t.fD9k
t/D8wht
t/fD9g
t/fD9N
t:H9X
t;fD9k
t;H9X
t\f9y
t|fD9F
t}@85
t>fE;
t0fD9s
t1f9{
t1fD9c
t1fD9k
t3D9h$t-
t3L9}@t
t5@8xXt/f9y
t5fD9k
t6fD9c
t8fD9k
t8fD9w
t8M9.t3H
t99o$u
TargetAddress should not be NULL
tCD8|$`v<L
tcf9o
tcH9W
tcUnsupported Major version %lu. Expect %lu
TerminateProcess
t'fD9{
tFxInterrupt::ConnectInternal
tGfD9s
t-H9X
Thales TSS ESN:12E7-3064-61121%0#
The DDI WdfDeviceGetFileObject is not supported for UMDF
The request type is not expected
This function must be called from within a EVT_WDFDEVICE_WDM_IRP_DISPATCH callback
Thread 0x%p is %s 0x%p
Thread 0x%p is waiting on WDFWORKITEM 0x%p
Timer should not be NULL
tjf9o
tLL9;uGI;
TlP0X
tMD8s
tminkernel\wdf\framework\umdf\fxlib\companion\fxcompaniondispatch.cpp
tnfE9>E
To be implemented
TODO: Write something interesting here
tP@8=
tP@85
tR;Glu
TraceMessageVa
TrackDriverForMiniDumpLog
TrackHandles
TrackPower
Translation
tRfA9
tt@8=0
Turn on framework verifier for %s.%s to automatically break into the debugger next time it happens.
Type should not be NULL
TypeInfo should not be NULL
tzf9o
u"fD9k
u"L9A
u&D8{yu 
u)f9{
u*fD9u
u.L9}@t
u/D9~$u"D8
U@fD9j
u^D9t$`
u<L9A
u0H9N
u0H9Z
U0S0Q
u6H9Z
UATAUAVAWH
UAVAWH
uhfD9{
ulL9o ufL9o(u`L9o0uZD
UMDF may only select settings by index.
UMDF verification faults should not call this code path
UMDF_VERSION
UmdfCensusEvtDeviceStart
UmdfClientFunctionCountMismatch
uminkernel\wdf\framework\shared\targets\usb\um\fxusbpipeum.cpp
Unexpected failure
Unexpected failure in QueryInterface
UnhandledExceptionFilter
UnicodeString should not be NULL
UniqueID
Unknown
unknown
Unrecognized bind info. Size is %lu
UnregisterTraceGuids
Unsupported Minor version %lu. Expect %lu or smaller
uOL9}@t
Urb should not be NULL
urL9o
UsbDevice should not be NULL
UsbDeviceDescriptor should not be NULL
User Mode Driver Framework (verifier on) version 02.027.0
User Mode Driver Framework version 02.027.0
USVWATAUAVAWH
USVWATAVAWH
USWATAUAVAWH
ut8_^uo
UuidCreate
UVAVH
UVWATAUAVAWH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAVAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAVH
UWAWH
uwt&L
uZFxVerifierLock::Lock
Value should not be NULL
ValueName should not be NULL
VarFileInfo
VerboseOn
verifier.dll
VerifierAllocateFailCount
VerifierOn
VerifyDownLevel
VerifyOn
VerSetConditionMask
Version mismatch detected
Version mismatch detected in function table count. Recompile driver with correct headers
Version mismatch detected when running on old framework
VersionAvailableParams should not be NULL
VersionMajor
VersionMinor
VF_WDFDEVICECREATE_CONTEXT
VF_WDFIOQUEUECREATE_CONTEXT
VfWdfObjectGetTypedContext
VS_VERSION_INFO
VWATAUAVH
VWATAUAWH
VWATAVAWH
VWATH
VWAUAVAWH
VWAVH
VWAWH
w*D8u0u
w=H9J
Waitblock should not be NULL
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitForThreadpoolWaitCallbacks
WaitForThreadpoolWorkCallbacks
waiting for all inflight requests to be acknowledged on WDFQUEUE
waiting for all threads to stop dispatching requests so that queue can be powered off, WDFQUEUE
waiting for continuous reader to finish, WDFUSBPIPE
waiting for queue to drain, WDFQUEUE
waiting for queue to purge, WDFQUEUE
waiting for queue to stop, WDFQUEUE
Wake Interrupt ISR is stuck waiting for the deviceto power back up and driver calllback to be processed
WakeFromD0
WakeFromD1
WakeFromD2
WakeFromD3
WakeFromSleepState
Washington1
WATAUAVAWH
WATAUH
WATAVH
WATAWH
WAUAVH
WAVAWH
wD8u(t
WDF detected potentially invalid device state in %s.%s. Dump the driver log (!wdflogdump %s.$s) for more information.
WDF detected potentially invalid operation by %s.%s Dump the driver log (!wdflogdump %s.%s) for more information.
WDF Violation: Please checktracelog for a description of this error
WDF:UMDF Framework Library
WDF_LIBRARY_COMMISSION
WDF_LIBRARY_DECOMMISSION: enter
WDF_LIBRARY_DECOMMISSION: exit
WDF_LIBRARY_REGISTER_CLIENT: Enhanced Verification is ON 
WDF_LIBRARY_REGISTER_CLIENT: enter
WDF_LIBRARY_REGISTER_CLIENT: exit: status %X
WDF_LIBRARY_REGISTER_CLIENT: Function table count 0x%x doesn't match any previously released framework version table size
WDF_LIBRARY_REGISTER_CLIENT: Invalid ClientInfo received from wudfldr 
WDF_LIBRARY_REGISTER_CLIENT: NULL parameter -- %s
WDF_LIBRARY_REGISTER_CLIENT: version mismatch detected in function table count: clienthas 0x%x,  library has 0x%x
WDF_LIBRARY_REGISTER_CLIENT: WdfFunctions %p
WDF_LIBRARY_UNREGISTER_CLIENT: enter
WDF_LIBRARY_UNREGISTER_CLIENT: exit: status %X
WdfCensusEvtDrvLoad
WDFCHILDLIST
WDFCMRESLIST
WDFCOLLECTION
WDFCOMPANION
WdfDefaultIdleInWorkingState
WdfDefaultWakeFromSleepState
WDFDEVICE
WDFDRIVER
WdfDriverErrorReportApiMissing
WDFFILEOBJECT
WdfGlobalLogsDisabled
WdfGlobalSleepStudyDisabled
WDFINTERRUPT
WDFIORESLIST
WDFIORESREQLIST
WDFIOTARGET
WDFKEY
WDFLOOKASIDE
WDFMEMORY
WDFOBJECT
WDFQUEUE
WDFREQUEST
WDFSPINLOCK
WDFSTRING
WDFTASKQUEUE
WDFTIMER
WDFUSBDEVICE
WDFUSBINTERFACE
WDFUSBPIPE
WdfVersion
WDFWAITLOCK
WDFWMIPROVIDER
WDFWORKITEM
WideCharToMultiByte
Wimp_WdfMemoryCreatePreallocated
without
wNot implemented
Woq}p
WorkItem should not be NULL
wPfE9q
WudfDiagnostics
WudfPowerPolicySettings
Wudfx02000
WUDFx02000.DLL
Wudfx02000.dll
Wudfx02000.pdb
x ATAVAWH
x ATH
x AUAVAWH
x AUH
x AVH
x AWH
x UATAUAVAWH
x UAVAWH
x0fD9o
xA_A^A]A\_^[]
XA_A^A]A\_^[]
Xbpower tag
XfXminkernel\wdf\framework\shared\targets\usb\fxusbdevice.cpp
Xu*L9
y|fD9o
yI5}RYa
z.9Wv
-Z7Q)
zeacc
Zq;$p
ZwDeleteValueKey
