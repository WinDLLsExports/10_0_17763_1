-----------------------------------------------------------------------
    Set-PSReadLineOption -HistorySavePath <Path>
    Set-PSReadLineOption -HistorySaveStyle SaveNothing
 Chord can have at most two keys.
 Scroll the display down one line
 Scroll the display to the cursor
 Scroll the display up one screen
!This program cannot be run in DOS mode.
"Move the cursor back one character
"Scroll the display down one screen
"Undoes all commands for this line.
#Blob
#GUID
#Remove all items from the kill ring
#Strings
$C>}%
$Paste text from the system clipboard
$Search history forward interactively
%Delete the character under the cursor
%Delete the previous word in the line.
%Move the cursor forward one character
%Move to the first item in the history
&Delete the character before the cursor
&Move the cursor to the end of the line
&Move the cursor to the matching brace.
&Repeats the last modification command.
&Search history backwards interactively
(Deletes backwards until given character.
)Display all {0} possibilities? (y or n) _
*Moves the cursor to the prescribed column.
*Repeat the last recorded character search.
,Complete the input using the next completion
,Move the cursor to the beginning of the line
,Starts a new search backward in the history.
.Replaces the character in front of the cursor.
.text
/Accept the line and switch to Vi's insert mode.
/Copy the text of the last argument to the input
/Deletes from the cursor to the end of the line.
/Move the cursor to the end of the current token
/Searches backward for the prescribed character.
/Show the key binding for the next chord entered
:Adjust the current selection to include the next character
:Deletes the current character and switches to insert mode.
:Joins the current multi-line edit mode line with the next.
;Delete the current character and insert the next character.
;Display the possible completions without changing the input
;Move to the previous occurrence of the specified character.
;Place the character at the cursor into the local clipboard.
;Write the contents of the local clipboard after the cursor.
?If the line is empty, exit, otherwise accept the line as input.
?Select the entire line. Moves the cursor to the end of the line
@.reloc
@Move the cursor to the beginning of the current or previous word
@Place the characters before the cursor into the local clipboard.
[Move the text from the start of the current or previous word to the cursor to the kill ring
\Copy selected region to the system clipboard.  If no region is selected, copy the whole line
\Move the text from the cursor to the start of the current or previous token to the kill ring
\Replaces the line left of the cursor and all but one character to the beginning of the line.
]Delete to the beginning of the next word, as delimited by white space, and enter insert mode.
^2oW_t
_CorDllMain
_Parameter must be a ConsoleColor, ANSI escape sequence, or RGB value with optional leading '#'.
`.rsrc
{Search for the previous item in the history that starts with the current input - like PreviousHistory if the input is empty
<Abort the current operation, e.g. incremental history search
<Appends a new multi-line edit mode line to the current line.
<Delete to the end of this word, as delimited by white space.
<fon=
<Module>
<Write the contents of the local clipboard before the cursor.
><}N?
>Adjust the current selection to include the previous character
>Copy the text from the current kill ring position to the input
>Invokes TabCompleteNext after doing some vi-specific clean up.
>Repace the current line with the next set of characters typed.
>Switch to insert mode, appending at the current line position.
040904b0
0Complete the input using the previous completion
0Copy the text of the first argument to the input
0Error reading or writing history file '{0}': {1}
10.0.17763.1
1K$S2Q
2Delete text from the cursor to the end of the line
3Replace the input with the next item in the history
3Unable to translate '{0}' to virtual key code: {1}.
4Delete text from the cursor to the start of the line
5Adjust the current selection to include the next word
5Delete the current word, as delimited by white space.
5Move the cursor forward to the start of the next word
5Moves the cursor forward to the end of the next word.
6Deletes all of the line except for leading whitespace.
6Positions the cursor at the first non-blank character.
6Repeat the last search, but in the opposite direction.
6Replace the current character with only one character.
7Deletes from the cursor to the end of the current word.
7Move to the next occurrence of the specified character.
7Replace the input with the previous item in the history
8Duplicate or invalid modifier token '{0}' for key '{1}'.
8Move to the last item (the current input) in the history
8Swap the current character with the character before it.
9Abort editing the current line and re-evaluate the prompt
9Adjust the current selection to include the previous word
9Start or accumulate a numeric argument to other functions
AbortDescription
Accept the input or move to the next line if input is missing a closing token.
AcceptAndGetNextDescription>
AcceptLineDescription
AddLineDescription
ADeletes all characters between the cursor and the matching brace.
Allows you to select multiple lines from the console using Shift+UpArrow/DownArrow and copy the selected lines to clipboard by pressing Enter.
AMove the cursor to the beginning of the next token or end of line
AMove the cursor to the next line if the input has multiple lines.
BackwardCharDescription
BackwardDeleteCharDescription
BackwardDeleteLineDescription
BackwardDeleteWordDescription
BackwardKillLineDescription
BackwardKillWordDescription
BackwardReplaceCharDescription
BackwardWordDescription
Basic editing functions
BasicGrouping
BeginningOfHistoryDescription
BeginningOfLineDescription
BInverts the case of the current character and advances the cursor.
BInvokes TabCompletePrevious after doing some vi-specific clean up.
BMove the cursor to the end this word, as delimited by white space.
BPlace all characters in the current line into the local clipboard.
BSearches for the prescribed character in the prescribed direction.
CancelLineDescription
CantTranslateKey
CaptureScreenDescription
CDelete selected region placing deleted text in the system clipboard
CharacterSearchBackwardDescription
CharacterSearchDescription
ChordWithTooManyKeys
ClearHistoryDescription
ClearKillRingDescription
ClearScreenDescription
Command '{0}' cannot be found.
CommandNotFoundError
CompanyName
Complete the input if there is a single completion, otherwise complete the input by selecting from a menu of possible completions.
Complete the input if there is a single completion, otherwise complete the input with common prefix for all completions.  Show possible completions if pressed a second time.
CompleteDescription
Completion functions
CompletionGrouping
CopyDescription
CopyOrCancelLineDescription
Copyright (c) Microsoft Corporation. All rights reserved.
CPrompts for a search string and initiates a search upon AcceptLine.
CrP$gs
CThe -ViMode parameter was used, but the current EditMode is not Vi.
Cursor movement functions
CursorMovementGrouping
CustomActionDescription
CustomGrouping
CutDescription
Delete backward to the beginning of the previous word, as delimited by white space and common delimiters, and enter insert mode.
DeleteCharDescription
DeleteCharOrExitDescription
DeleteEndOfWordDescription
DeleteLineDescription
DeleteLineToFirstCharDescription
Deletes the current line.
Deletes the current word.
Deletes until given character.
DeleteToEndDescription
DeleteToEndOfWordDescription
DeleteWordDescription
DigitArgumentDescription
DInserts the entered character at the beginning and accepts the line.
DisplayAllPossibilities
DMoves the cursor to the end of the line and switches to insert mode.
DRepeat the last recorded character search in the opposite direction.
DReplace the current character with the next set of characters typed.
EClear the screen and redraw the current line at the top of the screen
EInserts a new multi-line edit mode line in front of the current line.
EmacsCtrlXDescription
EmacsMetaDescription
eMove the cursor to the beginning of the next word, as delimited by white space and common delimiters.
EMove the cursor to the previous line if the input has multiple lines.
EndOfHistoryDescription
EndOfLineDescription
ETransposes the current character with the next character in the line.
Exception:
ExchangePointAndMarkDescription
Exit the shell.
FileDescription
FileVersion
FMove the text from the cursor to the end of the input to the kill ring
ForwardCharDescription
ForwardDeleteLineDescription
ForwardSearchHistoryDescription
ForwardWordDescription
FPlace all characters at and after the cursor into the local clipboard.
gAccept the current line and recall the next line from history after the current line finishes executing
GAdjust the current selection to include the next word using ForwardWord
Go to matching brace
GotoBraceDescription
GotoColumnDescription
GotoFirstNonBlankOfLineDescription
GPlace the character to the left of the cursor into the local clipboard.
GRemove all items from the command line history (not PowerShell history)
GReplace the characters from the cursor position to the end of the line.
hDelete to the end of the word, as delimited by white space and common delimiters, and enter insert mode.
History functions
HistoryFileErrorFinalMessage
HistoryFileErrorMessage
HistoryGrouping
HistorySearchBackwardDescription
HistorySearchForwardDescription
HMove the cursor to the next line without attempting to execute the input
IAdjust the current selection to include the next word using ShellNextWord
If there are other parse errors, unresolved commands, or incorrect parameters, show the error and continue editing.
IgnoreDescription
Insert the key typed
InsertCharacterDescription
InsertLineAboveDescription
InsertLineBelowDescription
InternalName
Invalid sequence '{0}'.
InvalidColorParameter
InvalidModifier
InvalidSequence
InvertCaseDescription
InvokePromptDescription
iPlace all characters before the cursor and to the 1st non-white space character into the local clipboard.
IReplaces the line left of the cursor and all of the way to the beginning.
I'start' cannot be less than zero or greater than the length of the buffer
jDelete backward to the beginning of the previous word, as delimited by white space, and enter insert mode.
jMove the cursor forward to the end of the current word, or if between words, to the end of the next word. 
JMoves the cursor to the beginning of the line and switches to insert mode.
Key is unbound
KeyIsUnbound
KHandles the processing of a number argument after the first key of a chord.
-Kill the text between the cursor and the mark
KillLineDescription
KillRegionDescription
KillWordDescription
kInvokes the console compatible editor specified by $env:VISUAL or $env:$EDITOR on the current command line.
KMove the text from the cursor to the beginning of the line to the kill ring
LAdjust the current selection to include the next word using ShellForwardWord
Last {0} Keys:
LegalCopyright
length is not valid
LRead a character and move the cursor to the next occurence of that character
lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
Mark the location of the cursor
MenuCompleteDescription
Microsoft (R) Windows (R) Operating System
Microsoft Corporation
Microsoft.Powershell.PSReadLine.PSReadLineResources.en.resources
Microsoft.Powershell.PSReadline.resources
Microsoft.Powershell.PSReadline.resources.dll
Miscellaneous functions
MiscellaneousGrouping
Move to the end of the line.
MoveToEndOfLineDescription
mscoree.dll
NAccept the input or move to the next line if input is missing a closing token.
NAdjust the current selection to include from the cursor to the end of the line
NextHistoryDescription
NextLineDescription
NextWordDescription
NextWordEndDescription
NotInViMode
NSwitches to insert mode after positioning the cursor past the end of the line.
oEither copy selected text to the clipboard, or if no text is selected, cancel editing the line with CancelLine.
OErases the current prompt and calls the prompt function to redisplay the prompt
OMove the cursor to the beginning of the next word, as delimited by white space.
Oops, something went wrong.  Please report this bug with the details below.
OopsAnErrorMessage1
OopsAnErrorMessage2
OopsCustomHandlerException
Or not saving history with:
OriginalFilename
PAdjust the current selection to include from the cursor to the start of the line
PADPADP
PasteAfterDescription
PasteBeforeDescription
PasteDescription
Place all characters from before the cursor to the beginning of the previous word, as delimited by white space and common delimiters, into the local clipboard.
Place all characters from before the cursor to the beginning of the previous word, as delimited by white space, into the local clipboard.
Place all characters from the cursor to the end of the word, as delimited by white space and common delimiters, into the local clipboard.
Place the characters from the cursor to the end of the next word, as delimited by white space and common delimiters, into the local clipboard.
pMove the text from the cursor to the start of the current or previous whitespace delimited word to the kill ring
PossibleCompletionsDescription
pPlace the characters from the cursor to the end of the next white space delimited word into the local clipboard.
PRead a character and move the cursor to the previous occurence of that character
PrependAndAcceptDescription
PreviousHistoryDescription
PreviousLineDescription
ProductName
ProductVersion
QAdjust the current selection to include the previous word using ShellBackwardWord
QAn exception occurred in custom key handler, see $error for more information: {0}
QDelete the character under the cursor, or if the line is empty, exit the process.
QEquivalent to undo all edits (clears the line except lines imported from history)
QReplace the current character until an escape is entered or the line is accepted.
QReplace the previously yanked text with the text from the next kill ring position
RDelete to the end of the word, as delimited by white space, and enter insert mode.
Redo an undo
RedoDescription
Repeat the last search.
RepeatLastCharSearchBackwardsDescription
RepeatLastCharSearchDescription
RepeatLastCommandDescription
RepeatLastSearchDescription
Repeats the last search.
RepeatSearchBackwardDescription
RepeatSearchDescription
Replace the current word.
Replace the previous word.
ReplaceCharDescription
ReplaceCharInPlaceDescription
ReplacementLengthInvalid
Replaces until given character.
Report on GitHub: https://github.com/lzybkr/PSReadLine/issues/new
ReverseSearchHistoryDescription
RevertLineDescription
RMove to he next occurrence of the specified character and then back one character.
RMoves to the end of the previous word, using only white space as a word delimiter.
Scroll the display to the top
Scroll the display up one line
ScrollDisplayDownDescription
ScrollDisplayDownLineDescription
ScrollDisplayToCursorDescription
ScrollDisplayTopDescription
ScrollDisplayUpDescription
ScrollDisplayUpLineDescription
SDelete backward to the beginning of the previous word, as delimited by white space.
Search functions
SearchBackwardCharDescription
SearchCharBackwardDescription
SearchCharBackwardWithBackoffDescription
SearchCharDescription
SearchCharWithBackoffDescription
SearchDescription
SearchForwardDescription
SearchGrouping
SelectAllDescription
SelectBackwardCharDescription
SelectBackwardsLineDescription
SelectBackwardWordDescription
SelectForwardCharDescription
SelectForwardWordDescription
Selection functions
SelectionGrouping
SelectLineDescription
SelectNextWordDescription
SelectShellBackwardWordDescription
SelectShellForwardWordDescription
SelectShellNextWordDescription
SelfInsertDescription
SetMarkDescription
ShellBackwardKillWordDescription
ShellBackwardWordDescription
ShellForwardWordDescription
ShellKillWordDescription
ShellNextWordDescription
Show all key bindings
ShowKeyBindingsDescription
SMove the cursor to the beginning of the previous word, as delimited by white space.
sPlace all characters from the cursor to the end of the word, as delimited by white space, into the local clipboard.
sSearch for the next item in the history that starts with the current input - like NextHistory if the input is empty
StartOutOfRange
String is not used in the UI
StringFileInfo
SwapCharactersDescription
Switch to VI's command mode.
Switches to insert mode.
T=Xmq
TabCompleteNextDescription
TabCompletePreviousDescription
This error will not be reported again in this session. Consider using a different path with:
tPd3v
Translation
UMove the text from the cursor to the end of the current or next word to the kill ring
Undo a previous edit
UndoAllDescription
UndoDescription
UnixWordRuboutDescription
UnrecognizedKey
UReplace all characters between the current brace character and it's matching partner.
User defined action
User defined functions
v4.0.30319
ValidateAndAcceptLineDescription
VarFileInfo
ViAcceptLineDescription
ViAcceptLineOrExitDescription
ViAppendAtEndDescription
ViAppendLineDescription
ViBackwardDeleteGlobDescription
ViBackwardGlobDescription
ViBackwardReplaceGlobDescription
ViBackwardReplaceLineDescription
ViBackwardReplaceLineToFirstCharDescription
ViBackwardReplaceWordDescription
ViBackwardWordDescription
ViCommandModeDescription
ViDeleteBraceDescription
ViDeleteEndOfGlobDescription
ViDeleteGlobDescription
ViDeleteToBeforeCharBackwardDescription
ViDeleteToBeforeCharDescription
ViDeleteToCharBackwardDescription
ViDeleteToCharDescription
ViDigitArgumentInChordDescription
ViEditVisuallyDescription
ViEndOfGlobDescription
ViEndOfPreviousGlobDescription
ViExitDescription
ViGotoBraceDescription
ViInsertAtBeginingDescription
ViInsertAtEndDescription
ViInsertLineDescription
ViInsertModeDescription
ViInsertWithAppendDescription
ViInsertWithDeleteDescription
ViJoinLinesDescription
ViNextGlobDescription
ViNextWordDescription
ViReplaceBraceDescription
ViReplaceEndOfGlobDescription
ViReplaceEndOfWordDescription
ViReplaceGlobDescription
ViReplaceLineDescription
ViReplaceToBeforeCharBackwardDescription
ViReplaceToBeforeCharDescription
ViReplaceToCharBackwardDescription
ViReplaceToCharDescription
ViReplaceToEndDescription
ViReplaceUntilEscDescription
ViReplaceWordDescription
ViSearchHistoryBackwardDescription
ViTabCompleteNextDescription
ViTabCompletePreviousDescription
ViTransposeCharsDescription
ViYankBeginningOfLineDescription
ViYankEndOfGlobDescription
ViYankEndOfWordDescription
ViYankLeftDescription
ViYankLineDescription
ViYankNextGlobDescription
ViYankNextWordDescription
ViYankPercentDescription
ViYankPreviousGlobDescription
ViYankPreviousWordDescription
ViYankRightDescription
ViYankToEndOfLineDescription
ViYankToFirstCharDescription
VMove the cursor to the beginning of the current or previous token or start of the line
VMove the text from the cursor to the end of the current or next token to the kill ring
VS_VERSION_INFO
WhatIsKeyDescription
WInserts a new empty line above the current line without attempting to execute the input
WInserts a new empty line below the current line without attempting to execute the input
wUnrecognized key '{0}'. Please use a character literal or a well-known key name from the System.ConsoleKey enumeration.
XMark the location of the cursor and move the cursor to the position of the previous mark
XPlace all characters between the matching brace and the cursor into the local clipboard.
YankDescription
YankLastArgDescription
YankNthArgDescription
YankPopDescription
YDelete to the end of the current word, as delimited by white space and common delimiters.
ZMove to the previous occurrence of the specified character and then forward one character.
