                level="asInvoker"
                uiAccess="false"
            />
            <requestedExecutionLevel
        </requestedPrivileges>
        <requestedPrivileges>
    </security>
    <security>
    name="Microsoft.Windows.Filesystem.WaitFor"
    processorArchitecture="amd64"
    type="win32"
    version="5.1.0.0"
 \/[]:|<>+=;,?$#()!@^"`{}*%
 A^_^
 A_A^_
 A_A^A]A\_
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!This program cannot be run in DOS mode.
%s %s
%s%s%s%s%s%s
(_^][
(|$PH
(t$ H
)bhA=
)t$ H
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.data
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata
;\$pt\
;|$pu
?terminate@@YAXXZ
@.data
@.reloc
@.rsrc
@A^_^
@USVWAVH
\$ UH
\$(E3
\$0E3
\\%s\%s
\\*\mailslot\WAITFOR.EXE\%s
\\.\mailslot\WAITFOR.EXE\%s
\StringFileInfo\%04x%04x\InternalName
\VarFileInfo\Translation
__C_specific_handler
__CxxFrameHandler3
__iob_func
__set_app_type
__setusermatherr
__wgetmainargs
_amsg_exit
_cexit
_commode
_errno
_exit
_fileno
_fmode
_get_osfhandle
_initterm
_memicmp
_vsnwprintf
_XcptFilter
` AVH
`.rdata
|$ UATAUAVAWH
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
</trustInfo>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity
<description>waitfor - wait/send a signal over a network</description>
<trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
040904B0
0A_A^_^]
0A_A^A]A\_
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
8"t.H
8A^A\_^][
A^_^[]
A^A\]
A_A\_
A_A^A]A\]
A_A^A]A\_
Bt<E3
BUFFER
CharUpperW
CloseHandle
CompanyName
CompareStringA
CompareStringW
CreateFileW
CreateMailslotW
D$ I;
D$@D;
D$@E3
D$0E3
D$HE3
en-US
ExitProcess
f9H\u
fflush
FileDescription
FileVersion
FormatMessageW
fprintf
FreeAddrInfoW
GetAddrInfoW
GetComputerNameExW
GetComputerNameW
GetConsoleMode
GetConsoleOutputCP
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetFileType
GetFileVersionInfoExW
GetFileVersionInfoSizeExW
GetLastError
GetModuleFileNameW
GetModuleHandleW
GetNameInfoW
GetProcessHeap
GetStdHandle
GetSystemTimeAsFileTime
GetThreadLocale
GetTickCount
GetUserNameExW
hA_A^A]A\_^[]
HcA<H
HeapAlloc
HeapFree
HeapReAlloc
HeapSetInformation
HeapSize
HeapValidate
InternalName
KERNEL32.dll
L!D$0I
L$ SUVWATAVH
L$ SUVWAVAWH
L$ SUVWH
L$(H3
L$`H3
L$0H3
LcA<E3
LegalCopyright
LoadStringW
LocalFree
localhost
lstrlenA
lstrlenW
mailslot\WAITFOR.EXE
memset
Microsoft
Microsoft Corporation
MPR.dll
msvcrt.dll
MultiByteToWideChar
NetApiBufferFree
NetServerGetInfo
netutils.dll
ntdll.dll
OriginalFilename
p WATAUAVAWH
PA_A^A]A\_^]
pA_A^A]A\_^]
PARSER2
ProductName
ProductVersion
QueryPerformanceCounter
ReadConsoleW
ReadFile
RichoF{
RtlCaptureContext
RtlLookupFunctionEntry
RtlVerifyVersionInfo
RtlVirtualUnwind
SetConsoleMode
SetLastError
SetThreadUILanguage
SetUnhandledExceptionFilter
SHLWAPI.dll
Sleep
srvcli.dll
SspiCli.dll
StrChrIW
StrChrW
StringFileInfo
StrStrIW
StrStrW
TerminateProcess
Translation
u HcA<H
u*9Q<|%
UnhandledExceptionFilter
USER32.dll
USVWATAUAVAWH
UVWATAUAVAWH
UVWAVAWH
UWAVH
VarFileInfo
VerQueryValueW
VerSetConditionMask
VERSION.dll
VS_VERSION_INFO
VWAVH
waitfor - wait/send a signal over a network
waitfor.exe
waitfor.pdb
WATAUAVAWH
WATAWH
WAVAWH
wcstod
wcstok
wcstol
wcstoul
WideCharToMultiByte
WNetAddConnection2W
WNetCancelConnection2W
WNetGetLastErrorW
WriteConsoleW
WriteFile
WS2_32.dll
x AVH
x UATAVH
XA_A^_^][
