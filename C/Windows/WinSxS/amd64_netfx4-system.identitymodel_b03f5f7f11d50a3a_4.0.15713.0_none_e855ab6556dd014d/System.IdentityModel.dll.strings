           elementFormDefault='qualified' >
           targetNamespace='http://docs.oasis-open.org/ws-sx/ws-trust/200512'
           targetNamespace='http://schemas.xmlsoap.org/ws/2005/02/trust'
           xmlns:trust='http://docs.oasis-open.org/ws-sx/ws-trust/200512'
           xmlns:wst='http://schemas.xmlsoap.org/ws/2005/02/trust'
        </xs:schema>
        <xs:any namespace='##any' processContents='lax' minOccurs='0' maxOccurs='unbounded' />
      <xs:element ref='trust:RequestSecurityTokenResponse' minOccurs='1' maxOccurs='unbounded' />
    (
    )
    </xs:choice>
    </xs:sequence>
    <xs:anyAttribute namespace='##other' processContents='lax' />
    <xs:attribute name='Context' type='xs:anyURI' use='optional' />
    <xs:choice minOccurs='0' maxOccurs='unbounded' >
    <xs:sequence>
    Clause[{0}] = {1}{2}
    Count = {0}{1}
    IsReadOnly = {0},
   ExternalTokenReference: {0}
   InternalTokenReference: {0}
   Token Element: ({0}, {1})
   validFrom: {0}
   validTo: {0}
  </xs:complexType>
  <xs:complexType name='RequestSecurityTokenResponseCollectionType' >
  <xs:complexType name='RequestSecurityTokenResponseType' >
  <xs:complexType name='RequestSecurityTokenType' >
  <xs:element name='RequestSecurityTokenResponseCollection' type='trust:RequestSecurityTokenResponseCollectionType' />
 .NET Framework
 ID0003: The input '{0}' is null.
 ID0019: The value must be a URI.
 krL8;
 Microsoft Corporation.  All rights reserved.
 Microsoft Operations Puerto Rico1
 The public key is not a DSA key.
 W1!Q
!securityTokenHandlerConfiguration
!ServiceName received from client.
!The {0} element is not supported.
!The AcceptSecurityContext failed.
!The private key is not a DSA key.
!The private key is not a RSA key.
!The public key is not an RSA key.
!This program cannot be run in DOS mode.
"></DigestMethod><DigestValue>
"></SignatureMethod>
"><Transforms><Transform Algorithm="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform"><o:TransformationParameters xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod></o:TransformationParameters></Transform></Transforms><DigestMethod Algorithm="
"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="
"Failed to import key material. {0}
"Invalid hexadecimal string format.
"Microsoft Time Source Master Clock0
"Policy with id='{0}' is evaluated.
"SSPI package {0} is not supported.
"The signature verification failed.
#Blob
#default
#GUID
#Mobile telephone number of a person
#Strings
#Vx"&6
$`2X`F
$An AsyncCallback threw an exception.
$f:\dd\tools\devdiv\EcmaPublicKey.snk
$Failed to get the key parameter. {0}
$Failed to set the key parameter. {0}
$ID4002: End has already been called.
$ID6031: The key size cannot be zero.
$Microsoft Root Certificate Authority
$Microsoft Root Certificate Authority0
% moa
%ID2008: The specified request failed.
%Roles or groups the person belongs to
%The value of this argument must be 0.
%The value of this argument must be 1.
&*B(c
&*B(e
&*z  
&^P&W
&'{0}' does not support '{1}' creation.
&Encoding cookie using deflate streamm.
&ID4001: Expected AsyncResult instance.
&ID4038: Signature verification failed.
&ID4250: The ClaimValue cannot be null.
(]W%#
({0}, {1})
-(+;(
(ID0022: The URI cannot be null or empty.
(ID3089: No enveloped signature was read.
(ID6041: The provided RSA key is invalid.
(The argument must be a non-empty string.
(The inner reader must be at the element.
)An electronic mailbox address of a person
)Failed to load the <saml:advice> element.
)ID4090: Cannot read SAML Subject KeyInfo.
)ID4128: The value is not a valid SAML ID.
)Microsoft Root Certificate Authority 20100
)Microsoft Root Certificate Authority 20110
*.rK&
*?*kXIc
*Br'r
*ID0013: The value must be an absolute URI.
*ServiceBinding check at the end of SpNego.
,=yo MBP
,ID0002: The value must be greater than zero.
,ID3249: The attribute '{0}' must be omitted.
,ID4182: The security token is not valid yet.
,Primary or home telephone number of a person
,The <saml:assertion> element failed to load.
,The argument '{0}' is null or empty string. 
,Unable to create a security token reference.
."+&(
.&,&-
.cctor
.ctor
.NETCore
.NETFramework
.Secondary or work telephone number of a person
.Street address component of a physical address
.System.IdentityModel.Selectors.AudienceUriMode
.text
.The '{0}' key wrap algorithm is not supported.
.The <saml:conditions> element failed to load. 
.tq[m
/~+n`
/=aJcY
/Digest verification failed for Reference '{0}'.
/k3tY
/r$u,
:A person's name which is not their surname nor middle name
:ApplicationServiceType
:Default handlers cannot write SecurityToken of type '{0}'.
:ID4100: An unsupported SAML version was encountered: '{0}'
:ID4211: SAML Evidence must contain at least one Assertion.
:ID8025: No event should be set for synchronous completion.
:SecurityTokenServiceType
:System.ServiceModel.Security.X509CertificateValidationMode
;ID0006: The input string parameter is either null or empty.
;ID3063: An error occurred while parsing a WS-Trust message.
;ID4008: '{0}' does not provide an implementation for '{1}'.
;Key length '{0}' is not a multiple of 8 for symmetric keys.
;SecurityToken (type '{0}' and id '{1}') validation started.
;Setting an ClaimsPrincipal on the current EvaluationContext
;The input size ({0} bytes) must be a mulitple of {1} bytes.
;The Transforms element must contain at least one transform.
;U2a>
?CVUV
?http://crl.microsoft.com/pki/crl/products/microsoftrootcert.crl0T
?ID3007: The element '{0}' with namespace '{1}' is unrecognized.
?ID4075: SAML Assertion is missing the required '{0}' Attribute.
?ID4094: SAML Attribute does not contain a valid Attribute Name.
?ID4249: The ClaimProperty key cannot be a null or empty string.
?ID4259: The SecurityKeyIdentifierClause '{0}' is not supported.
?ID6043: Cannot encrypt data because the encryption key is null.
?No clause of type '{0}' was found in the SecurityKeyIdentifier.
?System.IdentityModel.Configuration.IdentityConfigurationElement
?System.ServiceModel, PublicKey=00000000000000000400000000000000
?The {0} X.509 certificate is in an untrusted certificate store.
?The 'assertionId' for a SamlAssertion can not be null or empty.
?The expected '{0}' element with the '{1}' namespace is missing.
?The token's crypto collection does not support algorithm '{0}'.
?This SecurityKeyIdentifierClause does not support key creation.
@.reloc
@002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3
@ID2082: Lifetime must be greater than or equal to TimeSpan.Zero.
@ID3198: An exception occurred while parsing a Metadata document.
@ID4217: The given token '{0}' is not of the expected type '{1}'.
@ID4252: The OriginalIssuer attribute cannot have an empty value.
@ID6046: Cannot sign data because the signing key is public only.
@The AP-REQ is invalid or the system does not have enough memory.
@The element with id '{0}' is required to be signed, but was not.
@The SamlSubjectStatement requires a SamlSubject to be specified.
@The token provider '{0}' was unable to provide a security token.
@The token provider '{0}' was unable to renew the security token.
[ID4088: SAML SubjectConfirmation does not have a valid SubjectConfirmationMethod specified.
[The 'Location' attribute for the SamlAuthorityBinding being read is missing or of length 0.
[This SamlAttribute constructor requires that the resource of the claim is of type 'string'.
\A SamlSubject requires that 'Name' or 'ConfirmationMethod' be specified.  Both were missing.
\ID3135: The element '{0}' with namespace '{1}' has value '{2}' which is not an absolute URI.
\ID4020: A SecurityTokenHandler is not registered to create tokens for type identifier '{0}'.
\ID4208: SAML AuthorizationDecisionStatement contains an unrecognized element ('{0}', '{1}').
\ID7010: Configuration errors. The element '{0}' must contain the following attributes '{1}'.
\ID7026: Security token handler configuration has the element '{0}' specified more than once.
\z/j%
] by 
]ID1066: Replay has been detected for: Token: '{0}', Assertion.Id.Value: '{1}', Issuer: '{2}'.
]ID2051: The request is null. To fix this, make sure the RST contains a valid request message.
]ID3223: The element ('{0}','{1}') has the child element ('{2}','{3}') that is not recognized.
]ID4258: The element '{0}' with Namespace '{1}' does not contain a valid Base64 encoded value.
]The 'Binding' attribute specified on the SamlAuthorityBinding can not be null or of length 0.
]The SamlAudienceRestrictionCondition being read is missing a value in the 'Audience' element.
]The SecurityTokenReference to the SAML assertion contains multiple AuthorityBinding elements.
^ID2012: The type does not match. The runtime is expecting '{0}', and the actual type is '{1}'.
^ID4063: LogonUser failed for the '{0}' user. Ensure that the user has a valid Windows account.
^ID6040: The RSA key used to encrypt the RSA cookie was not found in the given decryption keys.
^ID6047: The length of the decrypted key and IV is '{0}' bytes. Expected more than '{1}' bytes.
^The 'Decison' for the SamlAuthorizationDecisionStatement being read is missing or of length 0.
^Unable to create a KeyedHashAlgorithm for the '{0}' algorithm from the '{1}' symmetric crypto.
__StaticArrayInitTypeSize=20
__StaticArrayInitTypeSize=3
__StaticArrayInitTypeSize=38
__StaticArrayInitTypeSize=9
__TemporaryIssuer__
__TemporaryName__
_actAs
_action
_actor
_additionalContext
_address
_algorithm
_allowRenewal
_appliesToAddress
_assertion
_assertionConsumerServices
_audience
_audienceMode
_authContexts
_authenticationRequestsSigned
_authenticationType
_authorities
_automaticallyReadSignature
_binaryData
_bootStrapToken
_bufferedStream
_byteTokenType
_cancelTarget
_capacity
_carriedName
_certificateValidator
_channelBinding
_checkServiceBinding
_cipherData
_cipherText
_claim
_claimCollection
_claimProperties
_claimProperty
_claimPropertyName
_claimPropertyValue
_claims
_claimsAuthenticationManager
_claimsAuthorizationManager
_claimsPrincipal
_claimTypesOffered
_claimTypesRequested
_code
_company
_computedKeyAlgorithm
_configuredTrustedIssuers
_context
_contextClass
_contextDeclaration
_contextId
_contextItems
_CorDllMain
_created
_dataReferences
_decryptionKeys
_defaultMaxSymmetricKeySizeInBits
_defaultNamespace
_defaultSymmetricKeySizeInBits
_defaultTokenLifetime
_defaultTokenType
_deflatedSize
_delegatable
_delegateTo
_denyOnlySidClaim
_details
_dialect
_dictionaryManager
_disableWsdl
_disposed
_dnsClaim
_dnsName
_EffectiveCredential
_effectiveTime
_elementCount
_elementName
_emailAddresses
_emptyString
_encoding
_encodingType
_encryptingCredentials
_encryption
_encryptionKey
_encryptionMethod
_encryptionMethods
_endFragment
_endpointId
_eventId
_expirationTime
_expires
_expiryTime
_forwardable
_friendlyName
_givenName
_handle
_hash
_hashAlgorithm
_hashClaim
_hashCode
_hashName
_hashStream
_hasSignatureBeenMarkedForInsert
_ID4120: The <saml:Evidence> element must contain at least one assertion or assertion reference.
_ID4224: A SecurityTokenHandler that is registered to write a token of type '{0}' was not found.
_Ida.Suites.Services, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293
_identities
_identity
_identityCollection
_identityConfigurationName
_index
_initialized
_innerReader
_innerWriter
_instance
_internalCache
_isDefault
_isFinal
_isInitialized
_isOptional
_isPersistent
_isReferenceMode
_isSecurityContextSecurityTokenWrapper
_issuedSecurityToken
_issuer
_issuerRef
_item
_items
_keyBytes
_keyEffectiveTime
_keyExpirationTime
_keyExpiryTime
_keyGeneration
_keyIdentifier
_keyInfo
_keyInfoSerializer
_keyLock
_keyReferences
_keys
_keySizeInBits
_label
_logStream
_mailAddressClaim
_mapToWindows
_maxDecompressedSize
_maximumTokenLifetime
_maxKeyIterations
_metadata
_mimeType
_name
_nameClaim
_nameClaimType
_nameFormat
_namespace
_nextPurgeTime
_notOnOrAfter
_nullValue
_okForRenewalAfterExpiration
_onBehalfOf
_onBehalfOfIssuer
_originalIssuer
_originalSize
_parameters
_parent
_participant
_participants
_persistentTrue
_policyEnforcement
_preCanonicalTracingStream
_primary
_principal
_proofEncryption
_properties
_protectionScenario
_purgeInterval
_random
_reader
_readWriteLock
_realToken
_reason
_recipient
_referenceId
_referenceModeTrue
_renewing
_renewTarget
_replyToAddress
_request
_requestedAttachedReference
_requestedProofToken
_requestedSecurityToken
_requestedToken
_requestedTokenCancelled
_requestedUnattachedReference
_requestorWrappingCredentials
_requireSignature
_resolveIntrinsicSigningKeys
_resource
_result
_retainPassword
_retrieval
_roleClaimType
_rsaClaim
_samlSecurityTokenRequirement
_scope
_sctAuthorizationPolicy
_scVersion
_secondaryParameters
_secret
_secureConversationVersion
_securityKey
_securityKeyIdentifier
_securityKeys
_securityToken
_securityTokenHandler
_securityTokenHandlerCollectionManager
_securityTokenHandlers
_securityTokenResolver
_securityTokenServiceConfiguration
_securityTokenServiceType
_securityTokenType
_securityTokenXml
_serviceCertificate
_serviceDescription
_serviceDisplayName
_serviceHandlerConfiguration
_serviceMaxClockSkew
_serviceNameCollection
_sesionToken
_sesionTokenCookie
_session
_sessionId
_shouldTraceDigest
_signatureFragment
_signedXml
_signingCredentials
_signingCreds
_signingKey
_signingTokenResolver
_singleSignOnServices
_sourceEntropy
_spnClaim
_status
_stringTokenType
_subject
_subjectId
_supportedAttributes
_surname
_symmetricKeyEncryptionRequired
_syncObject
_systemClaim
_targetEntropy
_targetScopes
_targetWrappingCredentials
_telephoneNumbers
_The SamlEvidence being read did not contain either a reference to or an embedded SamlAssertion.
_token
_tokenAsXml
_tokenBytes
_tokenDescriptor
_tokenEncryptionRequired
_tokenHandler
_tokenIssuerName
_tokenKey
_tokenLifetime
_tokenResolvers
_tokenSerializer
_tokenString
_tokenType
_tokenTypeIdentifiers
_tokenTypeKey
_tokenTypesOffered
_traceName
_tracingWriter
_transforms
_trustedIssuers
_type
_upnClaim
_uriReference
_urlClaim
_validateTarget
_validFrom
_validTo
_value
_valueType
_verificationKeys
_version
_wantAssertionsSigned
_wantAuthenticationRequestsSigned
_windowsIdentity
_windowsLogonName
_windowsPrincipal
_windowsSidClaim
_wrappedReader
_wrappedTokenResolver
_wrappingCredentials
_writerStream
_wsTrust13RequestSerializer
_wsTrust13ResponseSerializer
_wsTrustFeb2005RequestSerializer
_wsTrustFeb2005ResponseSerializer
_x500DistinguishedNameClaim
_x509ThumbprintClaim
_xmlDictionaryReaderQuotas
`.rsrc
`Ge`@N
`ID2056: The request has a KeySize '{0}' that is greater than the maximum allowed value of '{1}'.
`ID4059: The Username token has the unsupported password type '{0}'. The supported type is '{1}'.
`ID4264: GetTokenTypeIdentifiers for SecurityTokenHandler type '{0}' cannot return null or empty.
`The SamlAssertion is not signed. SamlAssertions can be signed by setting the SigningCredentials.
`Unable to create a signature formatter for the '{0}' algorithm frim the '{1}' asymmetric crypto.
{0:X2}
{0} and {1}
{0}/{1}
{0}: {1}
{0}{1}
{0}{1}{2}
{C5jD0
{ID4082: SAML Assertion is not valid. XmlReader was expected to reference ('{0}', '{1}') but was referencing ('{2}', '{3}').
{ID4225: The SamlSubject '{0}' is different than the SamlSubject present inside another SamlStatement of this SamlAssertion.
{ID7002: Configuration errors. SecurityTokenHandler custom configuration has unrecognized element '{0}' as a child of '{1}'.
{ID8024: Element: name='{0}' namespace='{1}' was encountered in an <EncryptionMethod> element: '{2}' and was not processed. 
|hK,_
|ID3165: The WS-Trust message contains a 'UseKey' element that cannot be read by any of the configured SecurityTokenHandlers.
|ID4046: The SecurityTokenHandler cannot write the token '{0}'. The SecurityTokenHandler can only write tokens of type '{1}'.
|The algorithm '{0}' was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible. 
}$/h!
}\hs@
}ID1029: The custom type is not suitable because it does not extend the correct base class.
}ID3092: The specified UseKey '{0}' cannot be resolved to a token that would prove the client's possession of the private key.
}ID7012: No <identityConfiguration> element with the name '{0}' was found in the <system.identityModel> configuration section.
}The athentication modes using Kerberos do not support the impersonation level '{0}'. Specify identification or impersonation.
}Unable to find X.509 certificate using search criteria StoreName '{0}', StoreLocation '{1}', FindType '{2}', FindValue '{3}'.
~ID1006: The format of the data is incorrect. The encryption key length is negative: '{0}'. The cookie may have been truncated.
~ID1008: The format of the data is incorrect. The encrypted data length is negative: '{0}'. The cookie may have been truncated.
~ID4123: An unrecognized value was encountered for the SAML2:AuthorizationDecisionStatement element's Decision attribute: '{0}'
~The SamlToken is not time valid. The current time '{0}' is outside the Effective '{1}' and Expiration '{2}' time of the token.
+%- &~
+%-*&r
+ID4125: An error occurred reading XML data.
+ID6030: A signature has already been added.
+The empty transform chain is not supported.
+The required xml:lang attribute is missing.
</DigestValue></Reference>
</SignedInfo>
<?xml version='1.0' encoding='utf-8'?>
<>1__state
<>2__current
<>3__claimType
<>3__right
<>4__this
<>7__wrap1
<>9__24_0
<>9__24_1
<>9__27_0
<>9__27_1
<>9__29_0
<>9__30_0
<>9__31_0
<>9__54_0
<>9__56_0
<>9__56_1
<>9__75_0
<>c__DisplayClass32_0
<>c__DisplayClass33_0
<>c__DisplayClass34_0
<>c__DisplayClass35_0
<>c__DisplayClass36_0
<>c__DisplayClass37_0
<>c__DisplayClass40_0`2
<>c__DisplayClass41_0`1
<>l__initialThreadId
<>m__Finally1
<anyClaimType>5__1
<anyClaimType>5__2
<anyRight>5__2
<anyRight>5__3
<Asymmetric>k__BackingField
<Bearer>k__BackingField
<BindGetCapiPrivateKey>b__0
<BindGetCapiPublicKey>b__0
<Cancel>k__BackingField
<CancelResponse>k__BackingField
<CertificateValidationMode>k__BackingField
<CertificateValidator>k__BackingField
<CreateAuthenticationStatement>b__24_0
<CreateAuthenticationStatement>b__24_1
<CreateAuthenticationStatement>b__56_0
<CreateAuthenticationStatement>b__56_1
<Delimiter>k__BackingField
<DisableCaching>k__BackingField
<FindClaims>d__13
<FindClaims>d__29
<FindClaims>d__36
<GetDSAPrivateKey>b__29_0
<GetECDsaPrivateKey>b__31_0
<GetECDsaPublicKey>b__30_0
<GetRSAPrivateKey>b__27_0
<GetRSAPrivateKey>b__27_1
<http://www.microsoft.com/pki/certs/MicrosoftTimeStampPCA.crt0
<i>5__1
<i>5__3
<i>5__4
<Identifier>k__BackingField
<identityConfiguation>
<InitializeTracing>b__54_0
<Issue>k__BackingField
<IssueResponse>k__BackingField
<Module>
<Node>k__BackingField
<OaepSha1Decrypt>b__0
<OaepSha1Encrypt>b__0
<Pkcs1Decrypt>b__0
<Pkcs1Encrypt>b__0
<Pkcs1SignData>b__0
<Pkcs1VerifyData>b__0
<PrivateImplementationDetails>
<Psha1>k__BackingField
<Reference URI="#
<Renew>k__BackingField
<RenewResponse>k__BackingField
<RequestSecurityContextToken>k__BackingField
<RequestSecurityContextTokenCancel>k__BackingField
<RequestSecurityContextTokenResponse>k__BackingField
<RequestSecurityContextTokenResponseCancel>k__BackingField
<RevocationMode>k__BackingField
<Scope>k__BackingField
<securityTokenHandlers>
<Separator>k__BackingField
<SeparatorArray>k__BackingField
<SignedInfo xmlns="http://www.w3.org/2000/09/xmldsig#"><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="
<SuccessfullyInitialized>k__BackingField
<Symmetric>k__BackingField
<TrustedStoreLocation>k__BackingField
<Validate>k__BackingField
<ValidateResponse>k__BackingField
<Value>k__BackingField
<WriteIdentity>b__75_0
<WriteOptionalAttribute>k__BackingField
<xs:element name='RequestSecurityToken' type='trust:RequestSecurityTokenType' />
<xs:element name='RequestSecurityToken' type='wst:RequestSecurityTokenType' />
<xs:element name='RequestSecurityTokenResponse' type='trust:RequestSecurityTokenResponseType' />
<xs:element name='RequestSecurityTokenResponse' type='wst:RequestSecurityTokenResponseType' />
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'
=Abbreviation for state or province name of a physical address
=ID2009: The specified RequestSecurityToken is not understood.
=SecurityToken (type '{0}' and id '{1}') validation succeeded.
=System.IdentityModel.Claims.DefaultClaimSet+<FindClaims>d__13
=System.IdentityModel.Claims.WindowsClaimSet+<FindClaims>d__36
=The collection was modified. The collection cannot be copied.
=The output buffer ({0} bytes) must be greater than {1} bytes.
=The SecurityTokenReference does not contain a KeyIdentifier. 
=The StoreLocation must be either LocalMachine or CurrentUser.
=The token provider '{0}' does not support token cancellation.
=The X.509 certificate {0} is not in the trusted people store.
=XML child node {0} of type {1} is unexpected for element {2}.
>http://www.microsoft.com/pki/certs/MicCodSigPCA_08-31-2010.crt0
>http://www.microsoft.com/pki/certs/MicCodSigPCA_2010-07-06.crt0
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
>SecurityToken (type '{0}' and id '{1}') validation failed. {2}
>System.IdentityModel.Configuration.TimeSpanOrInfiniteConverter
>The cipher mode {0} is not supported.  Only CBC is supported. 
00:00:00
00:00:008
00:00:00T
00:05:00
00:05:00C
00000000000000000400000000000000
002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB
0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9
0123456789
040904B0
06?q)
070403125309Z
0Authorization Context with id= '{0}' is created.
0ID0014: The value '{0}' must be an absolute URI.
0ID4081: Unrecognized SAML Condition found. '{0}'
0ID4091: Cannot write SAML Subject KeyInfo '{0}'.
0ID6037: Cannot create algorithm with name '{0}'.
0O)/;GY
0system.identitymodel.dl
0The '{0}' encryption algorithm is not supported.
0The value of this argument must be non-negative.
1(0&0
1.2.840.10040.4.1
1.2.840.113549.1.1.1
1.3.6.1.5.5.7.1.1
1/0-0
100701213655Z
100706204017Z
100831221932Z
10675199.02:48:05.4775807
10675199.02:48:05.4775807I
110708205909Z
160907175652Z
160907175653Z
160907175844Z
170912180706Z
170912183919Z
180712201119Z
180807090622Z0#
180907175652Z0
180907175653Z0
180907175844Z0
180912180706Z0t1
180912183919Z0t1
190726201119Z0t1
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
1ID2005: The request is not valid or is malformed.
1ID3011: Unrecognized RequestType specified: '{0}'
1ID3020: Unrecognized KeyType element found '{0}'.
1ID3061: The given element ('{0}','{1}') is empty.
1Jv1=+r
1No input is set for writing canonicalized output.
1Retrieval of issuer name from tokenId:{0} failed.
2.5.29.14
2.5.29.17
2.5.29.31
2.5.29.7
200831222932Z0y1
20180806214332Z
20180806214350Z
20180807090630.425Z0
20180807090637.517Z0
20180807214332Z0w0=
20180807214350Z0w0=
210403130309Z0w1
229803+4379500
230217+2423640
230865+2424060
24.20:31:23.6470000
250701214655Z0|1
250706205017Z0~1
260708210909Z0~1
2At least one reference is required in a signature.
2ID4290: Cannot serialize unrecognized Claim '{0}'.
2The ICrypto implementation '{0}' is not supported.
2The value of this argument must be greater than 0.
30319
31bf3856ad364e35
3http://www.microsoft.com/pkiops/docs/primarycps.htm0@
3ID2014: Requested TokenType '{0}' is not supported.
3The length of this argument must be greater than 0.
3The signature is already read in the SamlAssertion.
3Unrecognized encoding while reading key identifier.
4.0.0.0
4.7.3190.0
4.7.3190.0 built by: NET472REL1LAST_C
4An Xml qualified name was expected. '{0}' was found.
4ID4116: NotBefore must be earlier than NotOnOrAfter.
4System.IdentityModel.Configuration.CustomTypeElement
4The '{0}' key derivation algorithm is not supported.
4Unsupported transform or canonicalization algorithm.
5#i^*y
53C35FB7B9AF2450998AA8FDACE9F2E6A983ADB9
5Crypto algorithm '{0}' not supported in this context.
5ID1070: Replay has been detected for a SecurityToken.
5ID3009: Uri Attribute missing from ClaimType element.
5System.IdentityModel.Configuration.AudienceUriElement
5The algorithm {0} is not supported for operation {1}.
5The SamlAssertion entity {0} cannot be null or empty.
6+0@YHF
6An unbound prefix is used in the '{0}' qualified name.
6ID0008: The cache size after purge cannot be negative.
6ID4096: SAML Attribute does not contain a valid value.
6ID6033: The specified key size '{0}' is not supported.
6ID6034: Cannot create a HashAlgorithm with name '{0}'.
6Invalid binary representation of an X.509 certificate.
6The '{0}' value is not found in the dictionary string.
6The private key does not support the exchange KeySpec.
7 :#D%H)L*N-O.P/Q0R3V4W5n6q8
7A mismatch occurred on the algorithm for the transform.
7cec85d7bea7798e
7ID0018: The argument is not of the expected type '{0}'.
7ID6000: No CipherData present in EncryptedData element.
7ID8003: Cache purged: SizeBefore='{0}' SizeAfter='{1}'.
7Postal code or zip code component of a physical address
7The key algorithm for this public key is not supported.
7The localId cannot be empty. Specify a valid 'localId'.
7Z>@B1
8C73BDF31BFE5F8FECEA65DB2926321773B006C7
8http://www.microsoft.com/pki/certs/MicrosoftRootCert.crt0
8ID2000: Expiration time must be after the creation time.
8ID4127: Unexpected ValueType for SAML2 token type: '{0}'
8ID8026: End fragment must not be null or length of zero.
8Retrieval of issuer name:{0} from tokenId:{1} succeeded.
8The '{0}' input type is not supported for the transform.
8The algorithm specified and the public key do not match.
8The debugging information for signature is being traced.
8The key algorithm for this private key is not supported.
8The private key is not present in the X.509 certificate.
8The reverting operation failed with the exception '{0}'.
8The token provider '{0}' does not support token renewal.
8The token requirement does not contain a property '{0}'.
9!0f6
9]mWY
9ID4061: Username token does not contain a valid username.
9ID4073: SAML Action is missing the required Action value.
9ID4086: The given SAML Statement is not recognized. '{0}'
9ID6042: Cannot sign data because the signing key is null.
9ID8027: SecurityTokenHandlerConfiguration cannot be null.
9The '{0}' node type with the '{1}' name is not supported.
9The algorithm specified and the private key do not match.
A private personal identifier
A SamlAssertion requires at least one statement.  Ensure that you have added at least one SamlStatement to the SamlAssertion you are creating.
A14p,C
a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d
AbsoluteUriCollection
AcceptAnonymous
Accepted
AcceptedDateTimeFormats
AcceptExtendedError
AcceptIdentify
AcceptStream
Access
accessDecision
AccessDecision
AcquireCredentialsHandle
AcquireCredentialsHandleW
AcquireDefaultCredential
AcquireReaderLock
AcquireWriterLock
ActAs
action
Action
actionName
actionNamespace
ActionNamespaceAttribute
ActionNamespaces
ActionType
Activator
Actor
actualValue
AddAttribute
AddAuthenticationClaims
AddClaim
AddClaims
AddClaimSet
AddClaimsToList
AddDelegateToAttributes
AddElement
addEnvelopedSignatureTransform
AddFirst
AddHours
AddIdentities
AddIdentity
AddItemName
AdditionalContext
additionalEntries
additionalPackages
AddNonEmptyResolvers
AddNonNegative
AddOrReplace
AddOrUpdate
AddPermission
AddRange
AddReference
AddReferredId
Address
AddressBook
AddSamlClaimTypes
AddSecondDecimalToFirst
AddToDictionaries
AddTransform
AddTrustedIssuer
AddValue
AdjustTokenPrivileges
administrative
Administrative
ADVAPI32
advapi32.dll
advice
Advice
AdviceType
AEB4E325C341F06A496D7296A12D81F666A55325
Aes128Encryption
Aes128KeyWrap
Aes192Encryption
Aes192KeyWrap
Aes256Encryption
Aes256KeyWrap
AESCipherModeNotSupported
AESCryptAcquireContextFailed
AESCryptAcquireContextFailed@
AESCryptDecryptFailed
AESCryptDecryptFailedi
AESCryptEncryptFailed
AESCryptGetKeyParamFailed
AESCryptImportKeyFailed
AESCryptSetKeyParamFailed
AESInsufficientOutputBuffer
AESInvalidInputBlockSize
AESIVLengthNotSupported
AESKeyLengthNotSupported
AESPaddingModeNotSupported
AfterDeflating
AggregateTokenResolver
AID0012: Failed to create an instance of '{0}' from configuration.
aID1033: The token provided to ValidateToken must be a SamlSecurityToken, actual type found '{0}'.
AID3064: Token EncryptingCredentials must specify a symmetric key.
AID3199: EntityID cannot have a value longer than 1024 characters.
AID4005: The AsyncResult.Complete have been called more than once.
AID4087: SAML NameIdentifier does not have a valid Name specified.
aID4130: A Saml2SecurityToken cannot be created from the Saml2Assertion because it has no Subject.
AID4216: The ClaimType '{0}' must be of format 'namespace'/'name'.
aID6044: The cookie transform was passed a byte array of length zero and cannot encode zero bytes.
aID6045: The cookie transform was passed a byte array of length zero and cannot decode zero bytes.
aiKeyAlg
ALG_CLASS_DATA_ENCRYPT
ALG_TYPE_BLOCK
algorithm
Algorithm
AlgorithmAndKeyMisMatch
AlgorithmAndPrivateKeyMisMatch
AlgorithmAndPublicKeyMisMatch
algorithmDelegateDictionary
AlgorithmDictionaryLock
algorithmDictionaryString
AlgorithmMismatchForTransform
algorithmName
algorithmOid
Alloc
AllocateByteArray
AllocateLocallyUniqueId
AllocateMemory
AllocHGlobal
Allow
allow
Allow
allowCrypto
allowedAudienceUris
allowLaxReading
AllowPartiallyTrustedCallersAttribute
allowPostdating
AllowPostdating
Always
aNo attribute values were found. A SamlAttribute attribute must have at least one attribute value.
anonymous
anonymousIdentity
AnyAsnEncoding
anyURI
AOC1'0%
AppContextDefaultValues
AppDomain
AppDomainSetup
Append
AppendFormat
AppendLine
applicationPolicy
applicationService
ApplicationServiceConfigurationElement
ApplicationServiceEndpoint
ApplicationServiceType
appliesTo
AppliesTo
appliesTo
AppliesTo
ApplyTo
ApplyTransforms
appService
appService.Endpoints
appService.PassiveRequestorEndpoints
apreq
ArgumentCannotBeEmptyString
ArgumentInvalidCertificate
ArgumentNullException
ArgumentOutOfRangeException
array
arrayOne
arrayTwo
ArtifactResolutionService
artifactResolutionServices
Asn1IntegerConverter
Asn1IntegerToDecimalString
AsnEncodedData
ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f
ASPBrowserCapsFactory
ASPBrowserCapsPublicKey
AsReadOnly
AssemblyCompanyAttribute
AssemblyCopyrightAttribute
AssemblyDefaultAliasAttribute
AssemblyDelaySignAttribute
AssemblyDescriptionAttribute
AssemblyFileVersionAttribute
AssemblyInformationalVersionAttribute
AssemblyKeyFileAttribute
AssemblyProductAttribute
AssemblyRef
AssemblySignatureKeyAttribute
AssemblyTitleAttribute
assertion
Assertion
AssertionConsumerService
assertionId
AssertionID
assertionId
AssertionID
AssertionIdCannotBeNullOrEmpty
AssertionIdPrefix
AssertionIDRef
AssertionIDReference
AssertionIdReference
AssertionIDReference
assertionIdReferences
assertions
assertionSubject
AssertionType
AssertionURIRef
assertionUriReferences
AssignClaimFromStringResourceSysClaim
AssignClaimFromSysClaim
ASSPIWrapper::EncryptDecryptHelper|'size' is out of range.  [{0}].
asymmetricAlgorithm
AsymmetricKey
AsymmetricKeyBinarySecret
AsymmetricProofDescriptor
AsymmetricSignatureDeformatter
AsymmetricSignatureFormatter
AsyncCallback
AsyncCallbackException
AsynchronousOperationException
AThe binary data was not encrypted with the SSPI security context.
AThe SecurityKeyIdentifier has no key identifier clauses to write.
AThe value of this argument must fall within the range {0} to {1}.
AtLeastOneReferenceRequired
AtLeastOneTransformRequired
attached
attribute
Attribute
-Attribute '{0}' is required on element '{1}'.
AttributeKey
AttributeName
attributeName
AttributeName
attributeNames
AttributeNamespace
attributeNamespace
attributes
AttributeServiceEndpoint
AttributeStatement
AttributeStatementType
AttributeTargets
AttributeType
AttributeUsageAttribute
AttributeValue
attributeValues
attributeValueXsiType
attrName
Audience
Audience: '{0}'
AudienceRestriction
audienceRestriction
AudienceRestriction
AudienceRestrictionCondition
audienceRestrictionCondition
AudienceRestrictionCondition
audienceRestrictions
AudienceRestrictionType
audiences
AudienceUriElement
AudienceUriElementCollection
audienceUriMode
AudienceUriModeValidationHelper
audienceUris
AudienceUriValidationFailedException
authdata
authData
AuthenticatedTelephony
AuthenticatedTelephonyString
authenticatingAuthorities
AuthenticatingAuthority
authentication
AuthenticationBadElements
authenticationContext
AuthenticationContextClasses
authenticationInfo
AuthenticationInformation
AuthenticationInformationLength
AuthenticationInstant
authenticationInstant
AuthenticationInstant
AuthenticationMethod
authenticationMethod
AuthenticationMethods
authenticationPackage
AuthenticationStatement
AuthenticationType
AuthenticationTypeMaps
AuthenticationTypes
Authenticator
AUTH-HASH
authIdentity
AuthIdentityEx
authInfo
AuthnContext
authnContext
AuthnContextClassRef
AuthnContextDecl
AuthnContextDeclRef
AuthnContextType
AuthnInstant
authnInstant
AuthnInstant
AuthnRequestsSigned
AuthnStatement
AuthnStatementType
AuthorityBinding
authorityBinding
AuthorityBinding
authorityBindings
AuthorityKind
authorityKind
AuthorizationContextCreated
authorizationdecision
AuthorizationDecisionStatement
authorizationPolicies
AuthorizationPolicyEvaluated
Authorize
AuthorizeTraceRecord
AuthRoot
authType
AuthTypeAnonymous
AuthTypeBasic
AuthTypeCertMap
AuthTypeKerberos
AuthTypeNegotiate
AuthTypeNTLM
AuthzDecisionStatement
AuthzDecisionStatementType
AutomaticPseudonyms
AvailabilityNotDetermined
aValue
b03f5f7f11d50a3a
B3@O;X@
b77a5c561934e089
b7bd7678b977bd8f
BadContextToken
BadContextTokenFaultCode
BadEncryptionState
BadRequest
base64Buffer
Base64EncodeAndWrite
Base64EncodingType
Base64FormattingOptions
base64WorkBuffer
BaseAdd
BaseClass: '{1}'
baseConfiguration
baseEventSourceName
BaseGet
BaseID
BaseIDAbstractType
Basic
Batch
BCRYPT
bcrypt.dll
BCryptGetFipsAlgorithmMode
BearerConfirmationMethod
BearerKey
BearerKeyOnly
BearerKeyType
BearerString
BeginCancel
BeginCancelToken
BeginCancelTokenCore
BeginGetOutputClaimsIdentity
BeginGetScope
BeginGetToken
BeginGetTokenCore
BeginInvoke
BeginIssue
BeginRenew
BeginRenewToken
BeginRenewTokenCore
BeginValidate
Bhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0
bID1065: Replay detection requires that Saml2SecurityToken.Assertion.Id.Value is not null or empty.
BID3006: ComputedKey element must have a valid algorithm specified.
BID4183: The Security Token failed Audience restriction validation.
BID4242: The SecurityContext Id is missing or the element is empty.
bID6019: The length of the EncryptedData cipher text is '{0}' bytes. Expected at least '{1}' bytes.
bID6029: No 'root' element found. Cannot add signature as the root element in enveloped signatures.
BID6048: Cannot generate a strong triple-DES key in {0} iterations.
Billing
billing
binaryComparer
binaryData
binaryExchange
BinaryExchange
binaryExchange
BinaryExchange
BinaryFormatter
BinaryKeyIdentifierClause
BinaryMatches
BinaryObjectComparer
BinarySecret
binarySecret
BinarySecret
BinarySecretClauseEntry
BinarySecretClauseType
BinarySecretKeyIdentifierClause
BinarySecretTokenEntry
BinarySecurityToken
BinaryTokenEntry
BindCoreDelegate
Binder
BindGetCapiPrivateKey
BindGetCapiPublicKey
Binding
BindingFlags
BindingsLength
BindRsaCryptMethod
BitConverter
BlockCopy
blockSize
blockSizeBits
BlockSizeValue
bodySize
BootStrapToken
BoundedCache`1
BThe {0} bits iv is not supported.  Only 128 bits iv is supported. 
bThe 'resource' specified to the SamlAuthorizationDecisionStatement can not be null or of length 0.
bThe SAML uri specified as part of the SAML security key identifier clause cannot be null or empty.
bThe SamlAssertion passed to the SamlSecurityTokenAuthenticator does not contain a signing token.  
BThe token resolver is unable to resolve the token reference '{0}'.
bType
buffer
BufferedGenericXmlSecurityToken
BufferedOutputStream
BufferIsEqual
bufferLength
bufferManager
BufferManagerOutputStream
BufferNotEnough
BufferQuotaExceededReadingBase64
buffersCount
bufferSize
BufferState
bufferState
BufferType
BuildChain
BuildCryptoList
BuildEventId
BuildRevisionStr
bUnable to create a signature deformatter for the '{0}' algorithm from the '{1}' asymmetric crypto.
bVersion
bytes
C~~U@
CacheEntry
caches
CachingMode
CAD8623838274740D6497489F547CE972C42A942
CALG_AES_128
CALG_AES_192
CALG_AES_256
callback
callbackContext
Cancel
CancelFinalResponse
CancelTarget
CanCreateFrom
CanCreateKeyIdentifierClause
CanCreateLocalKeyIdentifierClause
CanCreateValidUri
canMatchLocalId
Cannot read KeyIdentifierClause from element '{0}' with namespace '{1}'.  Custom KeyIdentifierClauses require custom SecurityTokenSerializers, please refer to the SDK for examples.
Cannot read the token from the '{0}' element with the '{1}' namespace for BinarySecretSecurityToken, with a '{2}' ValueType. If this element is expected to be valid, ensure that security is configured to consume tokens with the name, namespace and value type specified.
CannotFindCert
CannotFindMatchingCrypto
CannotInstall
CannotReadKeyIdentifierClause
CannotReadToken
CannotValidateSecurityTokenType
CanonicalElementString
CanonicalElementString:
CanonicalElementStringLength
CanonicalizationAlgorithm
canonicalizationAlgorithm
CanonicalizationAlgorithm
canonicalizationDriver
canonicalizationMethod
CanonicalizationMethod
canonicalizationMethodDictionaryString
canonicalizationMethodElement
CanonicalOctets
CanonicalOctetsHash
CanonicalOctetsHashLength
CanonicalOctetsLength
canonicalStream
CanReadClause
CanReadFrom
CanReadKeyIdentifier
CanReadKeyIdentifierClause
CanReadKeyIdentifierClauseCore
CanReadKeyIdentifierCore
CanReadToken
CanReadTokenCore
CanValidate
CanValidateTokenCore
CanWriteKeyIdentifier
CanWriteKeyIdentifierClause
CanWriteKeyIdentifierClauseCore
CanWriteKeyIdentifierCore
CanWriteTokenCore
Capabilities
capacity
CaptureSourceData
CardSpaceV1Sha1Thumbprint
CarriedKeyElementName
carriedKeyName
CarriedKeyName
category
cbCertEncoded
cbData
cbSize
cChain
cCreds
CeilingDivide
CERT_CHAIN_CONTEXT
CERT_CHAIN_PARA
CERT_CHAIN_POLICY_BASE
CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG
CERT_CHAIN_POLICY_NT_AUTH
CERT_CHAIN_POLICY_PARA
CERT_CHAIN_POLICY_STATUS
CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT
CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY
CERT_CHAIN_REVOCATION_CHECK_CHAIN
CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT
CERT_CHAIN_REVOCATION_CHECK_END_CERT
CERT_COMPARE_ANY
CERT_COMPARE_NAME_STR_A
CERT_COMPARE_NAME_STR_W
CERT_COMPARE_SHA1_HASH
CERT_COMPARE_SHIFT
CERT_CONTEXT
CERT_ENHKEY_USAGE
CERT_FIND_ANY
CERT_FIND_HASH
CERT_FIND_ISSUER_STR
CERT_FIND_ISSUER_STR_A
CERT_FIND_ISSUER_STR_W
CERT_FIND_SHA1_HASH
CERT_FIND_SUBJECT_STR
CERT_FIND_SUBJECT_STR_A
CERT_FIND_SUBJECT_STR_W
CERT_INFO_ISSUER_FLAG
CERT_INFO_SUBJECT_FLAG
CERT_STORE_ADD_ALWAYS
CERT_STORE_CREATE_NEW_FLAG
CERT_STORE_ENUM_ARCHIVED_FLAG
CERT_STORE_MAXIMUM_ALLOWED_FLAG
CERT_STORE_OPEN_EXISTING_FLAG
CERT_STORE_PROV_MEMORY
CERT_STORE_PROV_SYSTEM
CERT_STORE_READONLY_FLAG
CERT_SYSTEM_STORE_CURRENT_USER
CERT_SYSTEM_STORE_CURRENT_USER_ID
CERT_SYSTEM_STORE_LOCAL_MACHINE
CERT_SYSTEM_STORE_LOCAL_MACHINE_ID
CERT_SYSTEM_STORE_LOCATION_SHIFT
CERT_TRUST_IS_PEER_TRUSTED
CERT_USAGE_MATCH
CertAddCertificateLinkToStore
CertCloseStore
certContext
certContextArray
CertCreateCertificateContext
CertFindCertificateInStore
CertFreeCertificateChain
CertFreeCertificateContext
CertGetCertificateChain
certificate
CertificateEncoding
CertificateExtensions
CertificateLength
certificateRawData
certificateReference
CertificateReference
certificates
certificateThumbprint
certificateValidation
certificateValidationMode
certificateValidator
CertOpenStore
certStoreHandle
CertVerifyCertificateChainPolicy
chain
chainPolicy
chainPolicyOID
chainStatus
ChainTrust
chainTrust
ChainTrust
Channel binding information.
channelbinding
ChannelBindingAllowMissingBindings
ChannelBindingCheck
ChannelBindingData
ChannelBindingNameTraceRecord
ChannelBindingProxyBindings
ChannelBindings
channelBindingUsed
ChannelBindingUsed
chars
CheckAccess
CheckDigest
CheckElement
CheckExternalWrapperMatch
CheckObjectValidity
Chttp://crl.microsoft.com/pki/crl/products/MicrosoftTimeStampPCA.crl0X
Chttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a
chunk
cID3203: An error occurred while writing the metadata document. Required parameter '{0}' is not set.
cID4065: Cannot read SecurityToken. Expected element is ({0}, {1}) the actual element is ({2}, {3}).
CID7009: IdentityConfiguration cannot be initialized multiple times.
CiperReference
CipherData
CipherDataElement
CipherDataElementName
CipherMode
CipherReference
CipherValue
CipherValueElementName
claim
Claim
claim1
claim2
ClaimCollection
ClaimComparer
ClaimDescriptionForClaimType
claimDescriptionMap
ClaimProperties
ClaimProperty
ClaimPropertyName
ClaimPropertyValue
Claims
claims
Claims[
claimsAuthenticationManager
claimsAuthorizationManager
ClaimsConversionHelper
claimset
claimSet
ClaimSet [
claimSets
ClaimSetToString
ClaimsHelper
claimsIdentity
ClaimsIdentity
ClaimsPrincipal
claimsPrincipal
ClaimsPrincipalKey
ClaimsPrincipalTraceRecord
ClaimTagForClaimType
claimTagMap
ClaimType
claimType
ClaimType
ClaimType2009Namespace
claimTypeNamespace
ClaimTypesOffered
ClaimTypesRequested
claimValue
ClaimValueTypeSerializationPrefix
ClaimValueTypeSerializationPrefixWithColon
ClassEncrypt
ClassHash
ClassKeyXch
classReference
ClassSignture
clause
clauseEntries
clauses
clauseType
clear
Clear
ClearItems
ClientMask
Clone
clone
CloneAuthorizationPoliciesIfNecessary
CloneBuffer
cloneBuffer
CloneClaimSetIfNecessary
CloneClaimSetsIfNecessary
cloneHandle
CloneIdentityIfNecessary
CloneWindowsIdentityIfNecessary
CloseInvalidOutSafeHandle
closeReadersAfterProcessing
CloseSection
CloseTarget
cLowerQualityChainContext
CLSCompliantAttribute
cMappers
CngKey
CngLightup
CollectAttributeValues
collection
collections
CollectionType
CollectionWasModified
Combine
CombinedHash
CombinedHashLabel
ComCompatibleVersionAttribute
Comment
Comments
commonPrefix
CompAndContinue
Company
CompanyName
Compare
CompareExchange
CompareNodes
comparer
CompilationRelaxationsAttribute
Compile
CompilerGeneratedAttribute
completed
completedSync
completedSynchronously
CompleteNeeded
CompleteSignatureVerification
compression
CompressionMode
ComputeAndSetDigest
ComputeCombinedKey
computedDigest
ComputeDigest
ComputedKey
computedKey
ComputedKey
ComputedKeyAlgorithm
computedKeyAlgorithm
ComputedKeyAlgorithms
ComputeHash
ComputeHashCode
ComputeReferenceDigests
ComputeSignature
ComputeStringHash
ComVisibleAttribute
conactType
Concat
Condition
condition
ConditionAbstractType
ConditionalAttribute
conditions
Conditions
conditions
ConditionsType
Confidentiality
configElement
configElement.ElementInformation
configElement.ElementInformation.Properties
configuration
ConfigurationBasedIssuerNameRegistry
ConfigurationCollectionAttribute
ConfigurationElementCollectionType
ConfigurationElementInterceptor
ConfigurationErrorsException
ConfigurationManager
ConfigurationProperty
ConfigurationPropertyAttribute
ConfigurationPropertyCollection
ConfigurationPropertyOptions
ConfigurationSection
ConfigurationStrings
ConfigurationValidatorAttribute
ConfigurationValidatorBase
confirmationData
ConfirmationMethod
confirmationMethods
confirmations
Consistency
contactPerson
ContactPerson
contactPerson.EmailAddresses
contactPerson.TelephoneNumbers
contacts
contactType
ContactType
contactType
Contains
ContainsClaim
ContainsKey
ContainsReferredId
contentReader
contentStream
ContentType
context
Context
ContextAttribute
contextAttribute
contextBuffer
ContextExpired
contextHandle
ContextId
contextId
ContextItem
ContinueNeeded
ControlPrincipal
ConvertFrom
ConvertHexDigit
ConvertTo
Cookie
cookie
cookieTransforms
CopyCspParameters
CopyOidsToUnmanagedMemory
Copyright
CopyTo
count
Count
country
Country of a physical address
Country/Region
CountryDescription
CountryText
CreateAdvice
CreateApplicationServiceInstance
CreateAssertion
CreateAttribute
CreateAttributeStatement
CreateAuthenticationStatement
CreateAuthorizationPolicies
CreateBinaryReader
CreateBinaryWriter
CreateBootstrapTokenHandlerCollection
CreateBufferManager
CreateCertificateValidator
CreateChainTrustValidator
CreateClaimFromWcfClaim
CreateClaims
CreateClaimsIdentityFromClaimSet
CreateClaimsPrincipalFromIdentities
CreateClause
CreateConditions
CreateContactPersonInstance
Created
CreateDecryptor
CreateDefaultAuthorizationContext
CreateDefaultSecurityTokenHandlerCollection
CreateDefaultSecurityTokenHandlerCollectionManager
CreateDefaultSecurityTokenResolver
CreateDeformatter
CreateDelegate
CreatedElement
CreateDenyOnlyWindowsSidClaim
CreateDictionaryReader
CreateDictionaryWriter
CreateDigest
CreateDisplayClaimFromClaimType
CreateDnsClaim
CreateEmptyHandle
CreateEmptySecurityTokenHandlerCollectionManager
CreateEncryptor
CreateEntitiesDescriptorInstance
CreateEntityDescriptorInstance
CreateEventDescriptors
CreateFormatter
CreateFromIdentity
CreateFromName
CreateHashAlgorithm
CreateHashClaim
CreateIdentity
CreateIdentityProviderSingleSignOnDescriptorInstance
CreateIndexedProtocolEndpointInstance
CreateInstance
CreateInvalidStateException
CreateIssuerNameIdentifier
CreateIssuerSerialKeyIdentifierClause
CreateKeyDescriptorInstance
CreateLocalizedNameInstance
CreateLocalizedUriInstance
CreateMailAddressClaim
CreateMembershipProviderValidator
CreateNameClaim
CreateNewElement
CreateOrganizationInstance
CreatePeerOrChainTrustValidator
CreatePlaintextReaderFromEncryptedData
CreatePolicy
CreateProtocolEndpointInstance
CreateQuotaExceededException
CreateRandomId
CreateRandomUri
CreateRawDataKeyIdentifierClause
CreateRequest
CreateRequestSecurityToken
CreateResponse
CreateRsaClaim
CreateSafeRsaSecurityToken
CreateSamlSubject
CreateSecurityTokenAuthenticator
CreateSecurityTokenDescriptor
CreateSecurityTokenProvider
CreateSecurityTokenReference
CreateSecurityTokenSerializer
CreateSecurityTokenService
CreateSecurityTokenServiceDescriptorInstance
CreateServiceProviderSingleSignOnDescriptorInstance
CreateSessionSecurityToken
CreateSignature
CreateSignatureForSha256
CreateSpnClaim
CreateStatements
CreateStore
CreateString
CreateSubjectKeyIdentifierClause
CreateSymmetricSecurityKeys
CreateTextReader
CreateTextWriter
CreateThumbprintClaim
CreateToken
CreateTransform
CreateUniqueId
CreateUpnClaim
CreateUriClaim
CreateWindowsIdentity
CreateX500DistinguishedNameClaim
CreateXmlStringFromAttributes
credential
CredentialCache
credentialHandle
credentialsHandle
CredentialsNeeded
CredentialStatus
CredentialUse
CREDUI
credui.dll
CREDUI_INFO
CRYPT_ACQUIRE_SILENT_FLAG
CRYPT_DELETEKEYSET
CRYPT_VERIFYCONTEXT
CRYPT32
crypt32.dll
CryptAcquireContextW
CryptDecrypt
CryptDestroyKey
CryptEncrypt
CryptGetKeyParam
crypto
CryptoAlgorithmIsNotFipsCompliant
CRYPTOAPI_BLOB
CryptoConfig
CryptographicException
CryptoHelper
cryptoList
CryptReleaseContext
CryptSetKeyParam
cspAlgorithm
CspProviderFlags
CSSPIWrapper::EncryptDecryptHelper|'offset' is out of range.  [{0}].
cSupportedAlgs
CThe data reference '{0}' in encryption reference list is not valid.
CThe 'Issuer' specified for a SamlAssertion cannot be null or empty.
CThe length of the symmetric key specified is too short ({0} bytes).
cultureInfo
CUR_BLOB_VERSION
Current time: '{1}'
Current time: '{2}'
CurrentUser
cUsageIdentifier
Custom
customConfigElements
customConfiguration
CustomCryptoAlgorithmIsNotValidHashAlgorithm
CustomCryptoAlgorithmIsNotValidKeyedHashAlgorithm
CustomCryptoAlgorithmIsNotValidSymmetricAlgorithm
customType
CustomType: '{0}'
customTypeElement
CustomTypeElement
CustomUserNameSecurityTokenAuthenticator
D=xz#
DailyBuildNumber
DailyBuildNumberStr
dAn internal error has occurred. The XML buffer is not in the correct state to perform the operation.
DangerousAddRef
DangerousGetHandle
DangerousRelease
data.Method
data.Namespace
DataCipherAlg
DataContractAttribute
DataHashAlg
DataHashKeySize
DataKeySize
DataMemberAttribute
DataProtectionScope
DataReference
datarep
Date of Birth
dateofbirth
DateOfBirthDescription
DateOfBirthText
DateTimeFormatInfo
DateTimeKind
DateTimeStyles
DateTimeUtil
DceInfo
DDBLD438
DEBUG
DebugAssert
DebugEncryptedTokenClearText
DebuggableAttribute
DebuggerHiddenAttribute
DebuggingModes
Decision
decision
Decision
declarationReference
Decode
DecodeHexString
Decrypt
DecryptData
Decrypted
DecryptionSetup
DecryptKey
DecryptMessage
DecryptValue
Deduct
defattr
Default
DefaultAlias
DefaultAsymmetricKeyWrapAlgorithm
DefaultAsymmetricSignatureAlgorithm
DefaultAudienceUriMode
DefaultCertificateValidationMode
DefaultCertificateValidator
DefaultChainPolicyOID
DefaultClaimSet
DefaultCollectionName
defaultComparer
DefaultConfigurationElementName
DefaultCookieElementName
DefaultCookieNamespace
DefaultCookieTransforms
DefaultDerivedKeyLength
DefaultDetectReplayedTokens
DefaultDigestAlgorithm
DefaultDllImportSearchPathsAttribute
DefaultEncryptionAlgorithm
DefaultEvaluationContext
defaultHandlerCollectionCount
DefaultIncludeWindowsGroups
DefaultInstance
defaultIsOptionalToken
DefaultIssuerNameRegistry
DefaultIssuerNameRegistryType
DefaultIssuerTokenResolver
defaultKeySize
DefaultKeySizeInBitsConstant
defaultKeyType
defaultKeyUsage
DefaultLifetime
DefaultMaxClockSkew
DefaultMaxClockSkewString
DefaultMemberAttribute
DefaultPrefix
DefaultPurgeInterval
defaultRequireCryptographicToken
defaultRevocationMode
DefaultRevocationMode
DefaultSaveBootstrapContext
defaultServiceBinding
defaultServiceBindingNameOfServer
DefaultServiceName
defaultStoreLocation
DefaultStoreLocation
DefaultStoreName
DefaultSymmetricKeyLength
DefaultTokenCacheSize
DefaultTokenReplayCache
DefaultTokenReplayCacheCapacity
DefaultTokenReplayCacheExpirationPeriod
DefaultTokenReplayCachePurgeInterval
DefaultTraceListenerName
DefaultTrustedStoreLocation
defaultValidationMode
DefaultValidationMode
DefaultValue
DefaultValueU
DefaultValueU.System.IdentityModel.Selectors.AudienceUriMode
DefaultValueU:System.ServiceModel.Security.X509CertificateValidationMode
DefaultX509CertificateValidationMode
DefaultX509RevocationMode
DefineSwitchDefault
DeflateCookieTraceRecord
DeflateCookieTransform
DeflateStream
deformatter
Delegatable
delegateAlgorithm
delegateData
delegateRsa
delegateSignature
DelegateTo
DelegatingXmlDictionaryReader
DelegatingXmlDictionaryWriter
Delegation
DeleteSecurityContext
Demand
Denormalize
DenormalizeAuthenticationType
denyOnlySid
DenyOnlySidClaim
depadBuffer
depth
DEREncoding
derivationLength
derivationNonce
derivationNone
derivedKeyLength
derivedKeySize
DerivedKeyToken
DerivedKeyTokenType
description
Description
Deserialize
DeserializeElement
DeserializeSysClaim
desiredAccess
DetectReplayedToken
detectReplayedTokens
DetectRsaCngSupport
Diagnostics
DiagnosticStrings
diagnosticTrace
DiagnosticTraceBase
DiagnosticUtility
Dialect
DialectType
dictionary
dictionaryManager
dictionaryManger
dictionaryReader
dictionaryStrings
dictionaryWriter
dID1063: Replay detection requires that SamlSecurityToken.Assertion.AssertionId is not null or empty.
DID2070: MaxClockSkew must be greater than or equal to TimeSpan.Zero.
dID4025: The SamlSecurityTokenRequirement specifies an unrecognized value for AudienceUriMode: '{0}'.
DID4095: SAML Attribute does not contain a valid Attribute Namespace.
dID4121: The SAML2:Action must specify a Resource which is an absolute URI or the empty relative URI.
DID4200: SAML AuthorityBinding is missing the required AuthorityKind.
DID4210: SAML Evidence contains a unrecognized element ('{0}'. '{1}')
dID4248: Cannot map Windows user '{0}' to a UserPrincipalName that can be used for S4U impersonation.
DidNotFindKeyIdentifierInReference
digest
digestAlgorithm
digestMethod
DigestMethod
digestMethodDictionaryString
digestMethodElement
digestText
DigestTrace
DigestTraceRecord
DigestTraceRecordHelper
digestValue
DigestValue
DigestValueElement
digestValueElement
DigestVerificationFailedForReference
digitMap
disableAllPrivileges
disableCngCertificatesString
DisableCngCertificatesString
disabledPolicy
disableMultipleDNSEntriesInSANCertificate
DisableMultipleDNSEntriesInSANCertificateString
disableUpdatingRsaProviderType
DisableUpdatingRsaProviderTypeString
Disallowed
DisplayName
displayNames
displayTag
displayValue
disposable
DisposeAuthorizationPoliciesIfNecessary
DisposeClaimSetIfNecessary
DisposeClaimSetsIfNecessary
DisposeIfNecessary
disposing
dividend
divisor
DllImportSearchPath
DNSAddress
dnsAddress
DnsClaim
dnsComparer
DNSName
doAuthenticate
DoesNotHavePrivateKey
domain
DomainLength
DomainNameMap
DoNotCacheCondition
DoPadding
DSACngTypeName
DSACryptoServiceProvider
DsaOid
DsaSha1Signature
DSASignatureDeformatter
DSASignatureFormatter
dstOffset
DThe 'SamlSubject' element for the SamlAttributeStatement is missing.
DThe SecurityTokenReference contains multiple KeyIdentifier elements.
dummyBytes
dummyStr
DuplicateTokenEx
duplicateTokenHandle
dwAddDisposition
dwAuthError
dwBufLen
dwCertEncodingType
dwCount
dwDataLen
dwError
dwErrorStatus
dwFindFlags
dwFindType
dwFlags
dwInfoStatus
dwLength
dwLogonProvider
dwLogonType
dwMaximumCipherStrength
dwMinimumCipherStrength
dwMsgAndCertEncodingType
dwParam
dwProvType
dwRevocationFreshnessTime
dwSessionLifespan
dwType
dwUrlRetrievalTimeout
DynamicInvoke
e_.,>
E0A927142307F82764A9165BA08D1AF9703DA2DB
E0C1)0'
e4Y/?;
EapKey
ECDsa
EcmaPublicKey
EcmaPublicKeyFull
EcmaPublicKeyToken
effectiveMaxSize
EffectiveTime
effectiveTimeUtc
effectiveWriter
Ehttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_08-31-2010.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_2010-07-06.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0
EID0001: The required attribute '{0}' in the element '{1}' is missing.
EID2016: The SecurityTokenHandler in the FederatedAsyncState was null.
eID2057: Cannot construct a X509SigningCredentials instance for a certificate without the private key.
EID4077: SAML Assertion AssertionId '{0}' is not a valid xsd:ID value.
EID4212: SAML Attribute must contain at least one SAML AttributeValue.
eID7011: Configuration errors. The attribute '{0}' found in element '{1}' does not have a valid value.
element
Element name: '{0}'
Element namespace: '{1}'
elementName
elementNames
elementNamespace
elements
elementValue
ElementWithAlgorithmAttribute
elementXml
email
Email Address
EmailAddress
EmailAddressDescription
EmailAddressString
EmailAddressText
EmailName
emitBspRequiredAttributes
EmitTokenType
Empty
empty
emptyArray
emptyBuffer
EmptyOrNullArgumentString
EmptyReadOnlyCollection`1
EmptyResource
EmptySecurityKeyIdentifierClause
EmptySecurityTokenResolver
EmptyTransformChainNotSupported
Enable
enableCachedEmptyDefaultAuthorizationContext
EnableCachedEmptyDefaultAuthorizationContextString
enabled
enabledEvents
EnableTokenPrivilege
encoded
EncodeDigestAlgorithm
EncodeSignatureAlgorithm
Encoding
EncodingAttribute
encodingBuffer
EncodingType
encodingType
EncodingTypeAttribute
EncodingTypeAttributeString
EncodingTypes
EncodingTypeValueBase64Binary
EncodingTypeValueHexBinary
EncodingTypeValueText
Encountered type name: '{2}'
Encountered type namespace: '{3}'
Encrypt
encrypt
EncryptData
EncryptDecryptHelper
EncryptedAssertion
EncryptedAttribute
encryptedData
EncryptedData
EncryptedDataElement
EncryptedDataTypes
EncryptedElementType
EncryptedHeader
EncryptedID
encryptedKey
EncryptedKey
EncryptedKeyClauseEntry
EncryptedKeyElement
EncryptedKeyEncryptingCredentials
encryptedKeyHash
EncryptedKeyHashIdentifierClause
EncryptedKeyHashIdentifierClause(Hash = {0})
EncryptedKeyHashStrEntry
EncryptedKeyHashValueType
EncryptedKeyIdentifierClause
EncryptedKeyIdentifierClause(EncryptedKey = {0}, Method '{1}')
EncryptedKeyTokenType
EncryptedSecurityToken
EncryptedSecurityTokenHandler
EncryptedString
EncryptedTokenDecryptionFailedException
EncryptedType
EncryptedTypeElement
EncryptedXml
encryptingCredentials
encryptingKeyIdentifier
Encryption
encryption
encryptionAlgorithm
EncryptionAlgorithm
encryptionMethod
EncryptionMethod
EncryptionMethodElement
EncryptionProperties
EncryptionSetup
EncryptKey
EncryptMessage
encryptWith
EncryptWith
end2EndEvents
endCalled
EndCancel
EndCancelToken
EndCancelTokenCore
EndCanonicalization
EndFragment
EndGetOutputClaimsIdentity
EndGetScope
EndGetToken
EndGetTokenCore
Endianness
endianness
EndInvoke
EndIssue
endpoint
EndpointAuthorizationPolicy
endpointId
EndpointId
EndpointIndex
EndpointIsDefault
EndpointReference
endpoints
EndRenew
EndRenewToken
EndRenewTokenCore
EndsWith
EndValidate
enforceAudienceRestriction
EnforceQuota
EnsureAllReferencesVerified
EnsureAndGetPrivateRSAKey
EnsureCapacityToAdd
EnsureClaims
EnsureDigestValidity
EnsureDigestValidityIfIdMatches
EnsureEncryptedKeySetUp
EnsureEtwProviderInitialized
EnsureEventDescriptors
EnsureValidSingletonIndex
Enter
EntitiesDescriptor
entitiesDescriptor
entitiesDescriptor.ChildEntities
entitiesDescriptor.ChildEntityGroups
EntityDescriptor
entityDescriptor
entityDescriptor.Contacts
entityDescriptor.RoleDescriptors
entityGroupCollection
entityGroupList
EntityGroupName
entityID
entityId
entityList
EntityString
entries
entropy
Entropy
entropySizeInBits
entropyString
EnumerateCertificates
EnumeratePackages
EnumerateSecurityPackages
EnumerateSecurityPackagesW
EnumMemberAttribute
enumType
en-US
Enveloped signature transform cannot be the last transform on the transform chain because the last one on the chain needs to be used to compute the digest value which enveloped signature transform is not capable of.
EnvelopedSignature
EnvelopedSignatureReader
EnvelopedSignatureWriter
Environment
EqualsQName
error
Error: '{1}'
ERROR_ACCESS_DENIED
ERROR_BAD_LENGTH
ERROR_INSUFFICIENT_BUFFER
ERROR_NO_TOKEN
ERROR_NONE_MAPPED
ERROR_NOT_ALL_ASSIGNED
ERROR_SUCCESS
ErrorDeserializingKeyIdentifierClause
errorMessage
ErrorOrNtStatus
ErrorSerializingKeyIdentifier
ErrorSerializingKeyIdentifierClause
errorURL
errorUrl
errorURL
ESystem.IdentityModel.Claims.X509CertificateClaimSet+<FindClaims>d__29
eThe 'Location' attribute that is specified on the SamlAuthorityBinding cannot be null or of length 0.
EtwDiagnosticTrace
etwProviderId
evaluationContext
EventDescriptor
eventDescriptors
eventDescriptorsCreated
eventIndex
EventLogger
eventParam0
eventParam1
eventParam2
eventParam3
eventParam4
eventParam5
eventSourceName
EventSourceVersion
eventTraceActivity
eventType
EventWaitHandle
evidence
Evidence
evidence
EvidenceType
example.com
ExcC14N
ExcC14NWithComments
exception
ExceptionTrace
exceptionTrace
exceptionUtility
excludedElement
excludedElementDepth
excludedElementNamespace
ExclusiveC14n
exclusiveC14NDictionary
ExclusiveC14NStrings
ExclusiveC14nWithComments
ExclusiveCanonicalizationTransform
existingTokenHandle
Expected type name: '{0}'
Expected type namespace: '{1}'
ExpectedElementMissing
expectedTypeName
expectedTypeNamespace
ExpirableItem`1
expirationPeriod
ExpiredData
Expires
ExpiresElement
ExpiryTime
expiryTimeUtc
Exponent
ExportCspBlob
ExportParameters
ExportToMemoryStore
Expression`1
EXTENDED_NAME_FORMAT
extendedData
extendedProtectionPolicy
ExtendedProtectionPolicy
ExtendedProtectionPolicy specified a PolicyEnforcement of 'Always' and a ChannelBinding was not found.  This prevents the ExtendedProtectionPolicy from being enforced. Change the binding to make a ChannelBinding available, for StandardBindings use a SecurityMode of TransportWithMessageCredential and a ClientCredential type of Windows. For CustomBindings use SspiNegotiationOverTransport or KerberosOverTransport.  Alternatively, specify a PolicyEnforcement of 'Never'.
ExtendedProtectionPolicyHelper
ExtendedTransformFactory
externalEncryptedKeys
externalTokenReference
Extra
ExtractClaims
ExtractId
ExtractIVAndDecrypt
ExtractReferredId
ExtractSubjectKeyClaimSet
extraStore
FailAcceptSecurityContext
'Failed to acquire the CSP context.  {0}
Failed to decrypt the data. {0}
Failed to encrypt the data. {0}
Failed to load a SamlAttribute.
Failed to load a SamlStatement.
FailedAuthentication
FailedAuthenticationFaultCode
FailedCheck
FailedToDeleteKeyContainerFile
FailInitializeSecurityContext
FailLogonUser
false
faultCodes
FaultCodeValues
fCheckRevocationFreshnessTime
fed:ApplicationServiceType
fed:SecurityTokenServiceType
FederatedAsyncState
federatedAsyncState
FederatedAsyncState
FederatedAuthentication
federatedAuthentication
FederatedClientCredentialsParameters
Federation
FederationID
federationId
FederationMetadata
FederationMetadataHandler
fHasRevocationFreshnessTime
FID0016: The value must specify a time span greater than TimeSpan.Zero.
fID3222: The element '{0}' with namespace '{1}' was expected to have value of type '{2}' but was '{3}'.
FID4010: A SecurityTokenHandler is not registered for token type '{0}'.
FID4159: A Saml2AudienceRestriction must specify at least one Audience.
fID4160: The Saml2SecurityTokenHandler can only write SecurityToken objects of type Saml2SecurityToken.
fID4239: The session cookie must contain an non null Id. The element '{0}' was either empty or missing.
fID8004: The ClaimsPrincipal property key ('{0}') was unavailable to AuthorizationPolicy, PrincipalKey.
FileDescription
FILETIME
FileVersion
FillRandomBytes
final
FindClaims
FindFirst
findType
FindUpn
findValue
FindValue
findValue
FindValue: '{3}'
FIPSAlgorithmPolicy
fipsAlgorithmPolicy
fipsPolicyRegistryKey
first
First Name
FirstByte
Flags
flags
FlagsAttribute
Flavor=Retail
Flush
FlushHash
FlushHashAndGetValue
ForceEncryption
Format
format
FormatException
formatString
Fortezza
Forwardable
found
Found multiple X.509 certificates using the following search criteria: StoreName '{0}', StoreLocation '{1}', FindType '{2}', FindValue '{3}'.  Provide a more specific find value.
FoundMultipleCerts
fragment1
fragment2
fragment3
fragment4
fragment4StrTransform
fragment5
fragment6
fragment7
FragmentBaseAddress
frameworkName
FreeCredentialsHandle
FreeHGlobal
FriendlyName
FromBase64String
FromDays
FromFileTimeUtc
FromHours
FromMilliseconds
FromMinutes
FromXmlString
fSystem.ServiceModel.Friend, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293
fThe assertion id specified as part of the SAML security key identifier clause cannot be null or empty.
fThe 'AuthenticationMethod' specified for a SamlAuthenticationStatement can not be null or of lenght 0.
FThe value of this argument must be one of these two types: {0} or {1}.
Func`1
Func`2
Func`3
Func`4
Func`5
Func`6
FXAssembly
FxTrace
g?{LPl
GA SamlAuthorizationDecisionStatement must have at least one SamlAction.
GCHandle
GCHandleType
gender
Gender
Gender of a person
GenderDescription
GenderText
Generated
GeneratedDateTimeFormat
GenerateDerivedKey
GenerateDESKey
GenerateId
GenerateIV
GenerateIVAndEncrypt
GenerateKey
GenerateMsdnTraceCode
GenerateRandomBytes
GenerateSymmetricKey
generation
Generation
Generic XML token:
GenericIdentity
GenericXmlSecurityKeyIdentifierClause
GenericXmlSecurityKeyIdentifierClauseEntry
GenericXmlTokenEntry
get_AbsoluteUri
get_AccessDecision
get_ActAs
get_Action
get_ActionName
get_ActionNamespace
get_Actions
get_ActivityId
get_Actor
get_AddEnvelopedSignatureTransform
get_AdditionalContext
get_Address
get_Advice
get_Algorithm
get_AlgorithmDictionaryString
get_Allow
get_AllowedAudienceUris
get_AllowPostdating
get_AllowRenewal
get_Anonymous
get_AnonymousIdentity
get_AppDomainFriendlyName
get_ApplicationPolicy
get_ApplicationService
get_AppliesTo
get_AppliesToAddress
get_ArtifactResolutionServices
get_ASCII
get_Assembly
get_AssemblyQualifiedName
get_Assertion
get_AssertionConsumerServices
get_AssertionId
get_AssertionIdReferences
get_Assertions
get_AssertionUriReferences
get_Asymmetric
get_AsyncState
get_AsyncWaitHandle
get_AttachedReference
get_AttributeCount
get_Attributes
get_AttributeValues
get_AttributeValueXsiType
get_AudienceMode
get_AudienceRestriction
get_AudienceRestrictions
get_Audiences
get_AudienceUriMode
get_AudienceUris
get_AuthenticatingAuthorities
get_Authentication
get_AuthenticationBadElements
get_AuthenticationContext
get_AuthenticationInfo
get_AuthenticationInstant
get_AuthenticationMethod
get_AuthenticationRequestsSigned
get_AuthenticationType
get_Authorities
get_AuthorityBindings
get_AuthorityKind
get_AuthorizationContexts
get_AuthorizationDecision
get_AuthorizationPolicies
get_BadRequest
get_BaseURI
get_Bearer
get_BinaryData
get_BinaryExchange
get_BinaryLength
get_BinarySecret
get_Binding
get_BlockSize
get_BootstrapContext
get_BootstrapToken
get_BufferSize
get_Build
get_CacheLock
get_Caches
get_CanCanonicalize
get_Cancel
get_CancelResponse
get_CancelTarget
get_CanCreateKey
get_CanonicalizationAlgorithm
get_CanonicalizationMethod
get_CanonicalStream
get_CanRead
get_CanReadBinaryContent
get_CanReadValueChunk
get_CanReuseTransform
get_CanSeek
get_CanTransformMultipleBlocks
get_CanValidateToken
get_CanWrite
get_CanWriteSourceData
get_CanWriteToken
get_Capacity
get_CarriedKeyName
get_CarriedName
get_Certificate
get_CertificatePolicy
get_Certificates
get_CertificateValidation
get_CertificateValidationMode
get_CertificateValidator
get_ChainElements
get_ChainPolicy
get_ChainStatus
get_ChainTrust
get_ChannelBinding
get_Chars
get_ChildEntities
get_ChildEntityGroups
get_ChildNodes
get_CipherData
get_CipherValue
get_Claim
get_ClaimCollection
get_ClaimProperties
get_ClaimProperty
get_ClaimPropertyName
get_ClaimPropertyValue
get_Claims
get_ClaimsAuthenticationManager
get_ClaimsAuthorizationManager
get_ClaimSets
get_ClaimsPrincipal
get_ClaimType
get_ClaimTypesOffered
get_ClaimTypesRequested
get_ClassReference
get_ClauseType
get_CloseReadersAfterProcessing
get_Code
get_Company
get_CompletedSynchronously
get_ComputedKey
get_ComputedKeyAlgorithm
get_Conditions
get_Configuration
get_ConfiguredTrustedIssuers
get_ConfirmationMethods
get_Contacts
get_ContainingCollection
get_Context
get_ContextClass
get_ContextDeclaration
get_ContextId
get_CookieElementName
get_CookieNamespace
get_Count
get_Country
get_Created
get_Crypto
get_CspKeyContainerInfo
get_Culture
get_CurrentCulture
get_CurrentDomain
get_CurrentManagedThreadId
get_CurrentVersion
get_CustomServiceNames
get_DataReferenceCount
get_DataReferences
get_DateOfBirth
get_Decision
get_DeclarationReference
get_DecryptionKeys
get_Default
get_DefaultComparer
get_DefaultEncodingType
get_DefaultEtwProviderId
get_DefaultIdentityConfigurationElement
get_DefaultIdNamespacePrefix
get_DefaultIdNamespaceUri
get_DefaultMaxSymmetricKeySizeInBits
get_DefaultNetworkCredentials
get_DefaultPolicy
get_DefaultSymmetricKeySizeInBits
get_DefaultTokenLifetime
get_DefaultTokenType
get_Delegatable
get_DelegateTo
get_Delimiter
get_DenyOnlySid
get_DenyOnlySidClaim
get_Depth
get_DerivationLength
get_Description
get_Details
get_DetectReplayedTokens
get_DiagnosticTrace
get_Dialect
get_Dictionary
get_DictionaryManager
get_DigestAlgorithm
get_DigestMethod
get_DigestMethodDictionaryString
get_DisableCaching
get_DisableCngCertificates
get_DisableMultipleDNSEntriesInSANCertificate
get_DisableUpdatingRsaProviderType
get_DisableWsdl
get_DisplayNames
get_DisplayTag
get_DisplayValue
get_Dns
get_DnsAddress
get_DnsClaim
get_DnsName
get_DocumentElement
get_Domain
get_EffectiveTime
get_EffectiveTimeUtc
get_ElementAsXml
get_ElementInformation
get_Elements
get_Email
get_EmailAddresses
get_EmailName
get_EmailNamespace
get_EmitBspRequiredAttributes
get_Empty
get_EmptyBuffer
get_EmptyString
get_EnableCachedEmptyDefaultAuthorizationContext
get_Enabled
get_Encoding
get_EncodingType
get_EncryptedKey
get_EncryptingCredentials
get_EncryptingKeyIdentifier
get_Encryption
get_EncryptionAlgorithm
get_EncryptionKey
get_EncryptionMethod
get_EncryptionMethodDictionaryString
get_EncryptionMethods
get_EncryptWith
get_EndpointId
get_Endpoints
get_EntityId
get_Entropy
get_EnumType
get_EOF
get_ErrorUrl
get_EtwProvider
get_EventId
get_EventLog
get_EventSourceName
get_EventTraceActivity
get_Evidence
get_Exception
get_ExceptionUtility
get_ExcludedElement
get_ExcludedElementNamespace
get_ExclusiveC14NDictionary
get_ExpectedWrapper
get_ExpirationPeriod
get_ExpirationTime
get_ExpirationTimeUtc
get_ExpiredData
get_Expires
get_ExpiryTime
get_ExpiryTimeUtc
get_Extensions
get_ExternalEncryptedKeys
get_ExternalTokenReference
get_ExtraStore
get_FailedAuthentication
get_FaultCodes
get_FederationId
get_First
get_FirstChild
get_Flags
get_Format
get_Forwardable
get_FriendlyName
get_FullName
get_Gender
get_Generation
get_GivenName
get_Groups
get_Handle
get_HardwareDevice
get_HasChildNodes
get_Hash
get_HashClaim
get_HashName
get_HashSize
get_HasPrivateKey
get_HasValue
get_HaveListeners
get_HolderOfKey
get_HomePhone
get_HostReference
get_Identifier
get_Identities
get_IdentityCollection
get_IdentityConfigurationElements
get_IgnoreKeyGeneration
get_IncludeComments
get_InclusiveNamespacesPrefixList
get_Index
get_InnerReader
get_InnerSecurityTokenSerializer
get_InnerText
get_InnerWriter
get_InnerXml
get_InputBlockSize
get_InResponseTo
get_Instance
get_InternalBufferManager
get_InternalTokenReference
get_InvalidHandle
get_InvalidRequest
get_InvalidScope
get_InvalidSecurityToken
get_InvalidTimeRange
get_InvariantCulture
get_InvariantInfo
get_IPAddress
get_IsAbsoluteUri
get_IsAllocated
get_IsClosed
get_IsCompleted
get_IsConfigured
get_IsDefault
get_IsDisposable
get_IsEmptyElement
get_IsEnd2EndActivityTracingEnabled
get_IsEnum
get_IsEtwProviderEnabled
get_IsFinal
get_IsInitialized
get_IsInvalid
get_IsOptional
get_IsOptionalToken
get_IsOptionalTokenProperty
get_IsPersistent
get_IsReferenceMode
get_IsSecurityContextSecurityTokenWrapper
get_Issuances
get_Issue
get_IssuedSecurityToken
get_IssueInstant
get_IssueResponse
get_IssuerName
get_IssuerNameRegistry
get_IssuerRef
get_IssuerSerialNumber
get_IssuerToken
get_IssuerTokenResolver
get_IsValidContext
get_IsZero
get_Item
get_ItemOf
get_Items
get_IV
get_Kerberos
get_Key
get_KeyContainerName
get_KeyEffectiveTime
get_KeyEncryptionAlgorithm
get_KeyExchangeAlgorithm
get_KeyExpirationTime
get_KeyExpiryTime
get_KeyGeneration
get_KeyIdentifier
get_KeyIdentifiers
get_KeyInfo
get_KeyInfoSerializer
get_KeyName
get_KeyNumber
get_KeyReferences
get_Keys
get_KeySize
get_KeySizeInBits
get_KeySizeProperty
get_KeyType
get_KeyTypeProperty
get_KeyTypes
get_KeyUsage
get_KeyUsageProperty
get_KeyWrapAlgorithm
get_Kind
get_KnownIssuerCertificates
get_Label
get_Language
get_Last
get_Length
get_Level
get_Lifetime
get_LineNumber
get_LinePosition
get_LocalId
get_Locality
get_LocalName
get_Location
get_MachineKeyStore
get_MailAddressClaim
get_Major
get_MajorVersion
get_MajorVersionValue
get_MapCertificateToWindowsAccount
get_MapToWindows
get_Max
get_MaxClockSkew
get_MaxDecompressedSize
get_MaximumClockSkew
get_MaximumSize
get_MaximumTokenLifetime
get_MaxUtcDateTime
get_MaxValue
get_MaxValueString
get_Message
get_Method
get_Milliseconds
get_MimeType
get_Minor
get_MinorVersion
get_MinorVersionValue
get_MinUtcDateTime
get_MinValue
get_MinValueString
get_MobilePhone
get_Mode
get_Name
get_NameClaim
get_NameClaimType
get_NameFormat
get_NameId
get_NameIdentifier
get_NameIdentifierFormats
get_NameQualifier
get_Names
get_Namespace
get_NamespaceURI
get_NamespaceUri
get_NameTable
get_NeedsInclusiveContext
get_NetworkCredential
get_NewLine
get_Node
get_NodeType
get_None
get_NotAfter
get_NotBefore
get_NotOnOrAfter
get_Now
get_NTAuthChainTrust
get_NullValue
get_Offset
get_OffsetToStringData
get_Oid
get_OK
get_OkForRenewalAfterExpiration
get_OnBehalfOf
get_OneTimeUse
get_OpeningElementName
get_Optional
get_Ordinal
get_OrdinalIgnoreCase
get_Organization
get_OriginalIssuer
get_OriginalString
get_OSVersion
get_OtherPhone
get_OuterXml
get_OutputBlockSize
get_OwnerType
get_Parameters
get_ParentDictionary
get_Participant
get_Participants
get_PassiveRequestorEndpoints
get_Password
get_PeerAuthenticationMode
get_PeerOrChainTrust
get_PeerTrust
get_PersistentTrue
get_PolicyEnforcement
get_Position
get_PossessProperty
get_PostalCode
get_PPID
get_Prefix
get_Primary
get_PrimaryIdentity
get_Principal
get_PrivateKey
get_Proof
get_ProofEncryption
get_ProofToken
get_Properties
get_ProtectedKey
get_ProtectionScenario
get_ProtocolsSupported
get_ProviderName
get_ProviderType
get_ProxyRestriction
get_Psha1
get_PublicKey
get_PublicOnly
get_PurgeInterval
get_Quotas
get_QuoteChar
get_RandomNumberGenerator
get_RawData
get_ReaderProvider
get_ReadState
get_Reason
get_Recipient
get_ReferenceCount
get_ReferenceList
get_ReferenceModeTrue
get_ReferenceXml
get_RefreshState
get_Renew
get_Renewing
get_RenewNeeded
get_RenewResponse
get_RenewTarget
get_ReplyTo
get_ReplyToAddress
get_Request
get_RequestedAttachedReference
get_RequestedProofToken
get_RequestedSecurityToken
get_RequestedTokenCancelled
get_RequestedUnattachedReference
get_RequestFailed
get_RequestKeySize
get_RequestorEncryptingCredentials
get_RequestSecurityContextToken
get_RequestSecurityContextTokenCancel
get_RequestSecurityContextTokenResponse
get_RequestSecurityContextTokenResponseCancel
get_RequestSecurityToken
get_RequestSecurityTokenResponse
get_RequestSecurityTokenResponseCollection
get_RequestType
get_RequestTypes
get_RequireCryptographicToken
get_RequireCryptographicTokenProperty
get_RequiresFipsCompliance
get_Resource
get_ResourceManager
get_ResourcePool
get_Resources
get_ResponseLocation
get_Result
get_RetainPassword
get_RetrievalMethod
get_RevocationFlag
get_RevocationMode
get_Right
get_Rijndael
get_RoleClaimType
get_RoleDescriptors
get_Rsa
get_RsaClaim
get_Saml
get_SamlActions
get_SamlAuthorityBindings
get_SamlDictionary
get_SamlSecurityTokenRequirement
get_SamlSubject
get_SamlUri
get_SaveBootstrapContext
get_Scope
get_SctAuthorizationPolicy
get_SecondaryParameters
get_SecondaryParamters
get_SectionCount
get_SecureConversationDec2005Dictionary
get_SecureConversationFeb2005Dictionary
get_SecureConversationVersion
get_SecurityAlgorithmDec2005Dictionary
get_SecurityAlgorithmDictionary
get_SecurityContextToken
get_SecurityJan2004Dictionary
get_SecurityJanXXX2005Dictionary
get_SecurityKey
get_SecurityKeyIdentifier
get_SecurityKeys
get_SecurityPackages
get_SecurityToken
get_SecurityTokenDescriptor
get_SecurityTokenHandler
get_SecurityTokenHandlerCollectionManager
get_SecurityTokenHandlerCollections
get_SecurityTokenHandlerConfiguration
get_SecurityTokenHandlers
get_SecurityTokenHandlerSets
get_SecurityTokenSerializer
get_SecurityTokenService
get_SecurityTokenServiceConfiguration
get_SecurityTokenServiceEndpoints
get_SecurityTokenXml
get_SecurityXXX2005Dictionary
get_SenderVouches
get_SendSide
get_Separator
get_SeparatorArray
get_SerializerDictionary
get_SerialNumber
get_ServiceCertificate
get_ServiceDescription
get_ServiceDisplayName
get_ServiceName
get_ServiceNameCollection
get_ServicePrincipalName
get_ServiceTokenResolver
get_Session
get_SessionId
get_SessionIndex
get_SessionKey
get_SessionNotOnOrAfter
get_SessionSecurityTokenCache
get_SessionToken
get_SessionTokenCookie
get_SetupInformation
get_ShouldCheckServiceBinding
get_ShouldLogPii
get_ShouldReadXmlReferenceKeyInfoClause
get_ShouldTraceCritical
get_ShouldTraceCriticalToTraceSource
get_ShouldTraceDigest
get_ShouldTraceError
get_ShouldTraceErrorToTraceSource
get_ShouldTraceInformation
get_ShouldTraceInformationToTraceSource
get_ShouldTraceVerbose
get_ShouldTraceVerboseToTraceSource
get_ShouldTraceWarning
get_ShouldTraceWarningToTraceSource
get_ShouldUseActivity
get_Sid
get_Signature
get_SignatureAlgorithm
get_SignatureMethod
get_SignatureMethodDictionaryString
get_SignatureReaderProviderCallbackContext
get_SignatureValue
get_SignatureVerificationKey
get_SignedInfo
get_SigningCredentials
get_SigningKey
get_SigningKeyIdentifier
get_SigningToken
get_SignWith
get_SingleLogoutServices
get_SingleSignOnServices
get_Size
get_Source
get_Spn
get_SPNameQualifier
get_SpnClaim
get_SPProvidedId
get_SspiNegotiation
get_State
get_Statements
get_StateOrProvince
get_Status
get_StatusInformation
get_StoreLocation
get_StoreName
get_StreetAddress
get_StrEntries
get_Subject
get_SubjectConfirmationData
get_SubjectConfirmations
get_SubjectId
get_SubjectLocality
get_SubjectName
get_SuccessfullyInitialized
get_SupportedAttributes
get_SupportsTokenCancellation
get_SupportsTokenRenewal
get_Surname
get_Symmetric
get_SymmetricKeyEncryptionRequired
get_System
get_SystemClaim
get_TargetEncryptingCredentials
get_TargetFrameworkName
get_TargetScopes
get_TelephoneNumbers
get_ThisLock
get_ThrowOnDuplicate
get_Thumbprint
get_Ticks
get_Token
get_TokenBytes
get_TokenEncryptionRequired
get_TokenImpersonationLevel
get_TokenIssuerName
get_TokenLifetime
get_TokenReplayCache
get_TokenReplayCacheExpirationPeriod
get_TokenReplayDetection
get_TokenResolver
get_TokenResolvers
get_TokenSerializer
get_TokenType
get_TokenTypeIdentifiers
get_TokenTypeProperty
get_TokenTypes
get_TokenTypesOffered
get_TokenTypeUri
get_TokenXml
get_TokenXmlBuffer
get_Trace
get_TraceSource
get_TracingEnabled
get_TransformChain
get_TransformCount
get_TransformFactory
get_Transforms
get_TripleDES
get_Trust13
get_TrustDec2005Dictionary
get_TrustedIssuers
get_TrustedStoreLocation
get_TrustFeb2005
get_TrustFeb2005Dictionary
get_Type
get_UnableToRenew
get_UnattachedReference
get_Unicode
get_Upn
get_UpnClaim
get_Uri
get_UrlClaim
get_UrlRetrievalTimeout
get_Urls
get_Use
get_UseKey
get_UseKeyTokenResolver
get_User
get_UserName
get_UserNameNamespace
get_UtcNow
get_UTF8
get_Utility
get_UtilityDictionary
get_Validate
get_ValidateResponse
get_ValidateTarget
get_ValidatorInstance
get_ValidFrom
get_ValidTo
get_ValidUntil
get_Value
get_ValueOrigin
get_Values
get_ValueType
get_ValueTypeUri
get_VerificationFlags
get_VerificationKeys
get_VerificationTime
get_Verified
get_Version
get_WantAssertionsSigned
get_WantAuthenticationRequestsSigned
get_Webpage
get_Windows
get_WindowsIdentity
get_WindowsLogonName
get_WindowsPrincipal
get_WindowsSidClaim
get_WrappedClause
get_WrappedTokenResolver
get_WrappingAlgorithm
get_WrappingCredentials
get_WrappingSecurityKey
get_WrappingToken
get_WrappingTokenReference
get_WriteOptionalAttribute
get_WriteState
get_WriteXmlDSigDefinedClauseTypes
get_WSTrust13RequestSerializer
get_WSTrust13ResponseSerializer
get_WSTrustFeb2005RequestSerializer
get_WSTrustFeb2005ResponseSerializer
get_WsuId
get_X500DistinguishedName
get_X500DistinguishedNameClaim
get_X509Certificate
get_X509NTAuthChainTrustValidator
get_X509ThumbprintClaim
get_XmlEncryptionDictionary
get_XmlLang
get_XmlSignatureDictionary
get_XmlSpace
get_XmlTokens
GetAlgorithmFromConfig
GetAll
GetAsymmetricAlgorithm
GetAttribute
GetAttributeAsUniqueId
GetBase64EncodedChannelBindingData
GetBinaryForm
GetBuffer
GetByte
GetBytes
GetCachedSwitchValue
GetCachedSwitchValueInternal
GetCertHash
GetCertificateId
GetCertificateIssuerName
GetChainStatusInformation
GetChar
GetClaim
GetClaimsAuthenticationManager
GetClaimsFromCertificate
GetClause
GetComparer
GetConfiguredDriver
GetConstantsAdapter
GetContactPersonType
GetCultureInfo
GetCurrentProcess
GetCurrentThread
GetDecryptionTransform
GetDefaultAlgorithm
GetDerivationNonce
GetDerivedKey
GetDigestValue
GetDnsClaims
GetDSAPrivateKey
GetDSAPublicKey
GetECDsaPrivateKey
GetECDsaPublicKey
GetElement
GetElementKey
GetEncryptedKey
GetEncryptedKeyHash
GetEncryptingCredentials
GetEncryptionTransform
GetExceptionUtility
GetExponent
GetFipsAlgorithmPolicyKeyFromRegistry
GetFromThreadOrCreate
GetHash
GetHashAlgorithmForSignature
GetId
GetIdentities
GetInclusivePrefixes
GetInternalBufferManager
GetIssuerName
GetIssuerNameFailure
GetIssuerNameFailureIsEnabled
GetIssuerNameRegistry
GetIssuerNameSuccess
GetIssuerNameSuccess3
GetIssuerNameSuccessIsEnabled
GetIssuerTokenResolver
GetIVSize
GetKerberosTicketHash
GetKeyBytes
GetKeyBytesFromProtectedKey
GetKeyDescriptorType
GetKeyedHashAlgorithm
GetKeyForItem
GetLastWin32Error
GetLeftPart
GetLength
GetLoader
GetLocalizedString
GetLocalTokenTypeUri
GetMaxValue
GetMemoryStream
GetMetadata
GetMetadataSigningCertificate
GetMethod
GetMinValue
GetModulus
GetName
GetNamedItem
GetNameInfo
GetNamespaceForInclusivePrefix
GetNextId
GetNonZeroBytes
GetObject
GetObjectData
GetOrCreateSessionSecurityTokenHandler
GetOutgoingBlob
GetPrefix
GetProofToken
GetRandomUuid
GetRawBuffer
GetRawCertData
GetRawData
GetReader
GetReferredId
GetRemoteIdentityName
GetRequest
GetRequestClaimNamespace
GetRequestClaimPrefix
GetRequestorProofEncryptingCredentials
GetResponse
GetRSAPrivateKey
GetRSAPublicKey
GetSection
GetSecurityContextToken
GetSecurityKeyIdentifier
GetSecuritySpecifications
GetSecurityToken
GetSecurityTokenHandler
GetSerializedPayload
GetSerialNumber
GetServiceTokenResolver
GetSignatureBytes
GetSignatureDeformatter
GetSignatureDeFormatterForSha256
GetSignatureFormatter
GetSignatureFormatterForSha256
GetSigningCredentials
GetSkiRawData
GetSourceEntropy
GetString
GetSymmetricAlgorithm
GetSymmetricKey
GetSystemCoreType
GetTargetEntropy
GetThreadToken
GetTokenInformation
GetTokenLifetime
GetTokenReplayCacheEntryExpirationTime
GetTokenType
GetTokenTypeIdentifiers
GetTokenTypes
GetTokenTypesCore
GetTokenTypeUri
GetType
GetTypeFromHandle
GetUpn
GetUtility
GetValidIssuerName
GetValueOrDefault
GetVerifyPackageInfo
GetWhiteSpace
GetWindowsIssuerName
GetWrappedKey
GetWrappingCredentialsFromProtectedKey
GetWriter
GetX509RawData
GetX509SubjectKeyIdentifier
GetX509Thumbprint
GetXmlElements
GetXsiType
GhppString
gID1012: The format of the data is incorrect. The data is too small. The cookie may have been truncated.
gID4080: The XmlReader is positioned at element ('{0}', '{1}') which is not a recognized SAML condition.
GID4257: X.509 certificate '{0}' validation failed by the token handler.
GID4291: The security token '{0}' is not scoped to the current endpoint.
GID7013: Cannot cast the input ConfigurationElement to a ServiceElement.
GivenName
givenname
GivenNameDescription
GivenNameText
Gk-K7
Gppu4
grbitEnabledProtocols
GroupCount
Groups
groups
GroupSidClaimCollection
GThe 'Name' specified for a SamlAttribute cannot be null or of length 0.
GThe size necessary to buffer the XML content exceeded the buffer quota.
GUnable to resolve the '{0}' URI in the signature to compute the digest.
H0F0D
HA SamlAuthorityBinding must contain an 'AuthorityKind' that is not null.
hAdditionalStore
HandleHi
HandleLo
handlePtr
handler
handlers
handlersByIdentifier
handlersByType
handleTemplate
handleType
HardwareToken
HardwareTokenString
hashAlgorithmName
HashAlgorithmNameTypeName
HashClaim
hashComparer
hashNeedsReset
HasLineInfo
HasUnverifiedReference
hbmBanner
HBXv6&
HCCE_CURRENT_USER
HCCE_LOCAL_MACHINE
hCertStore
hChainEngine
hCryptProv
header
HexBinaryEncodingType
hexString
HHN&z
hID1036: The SAML Assertion contains a malformed AudienceRestrictionCondition which contains no Audience.
hID1067: The token provided to DetectReplayedTokens must be a SamlSecurityToken, actual type found '{0}'.
HID2011: The computed key algorithm '{0}' is not valid or is unsupported.
hID3032: Unexpected element '{0}' in namespace '{1}' found. Expected element '{2}' under namespace '{3}'.
hID3200: An error occurred while reading the metadata document. Required parameter '{0}' was not present.
HID4003: An unhandled exception occurred during an asynchronous callback.
HID4079: SAML Advice AssertionIdReference cannot be null or empty string.
hID4227: The token Id '{0}' found in the cookie, does not match the token Id '{1}' found in the envelope.
hID4265: The issuer certificate Thumbprint '{0}' already exists in the set of configured trusted issuers.
highChar
HighPart
hlxMG
HMACSHA1
HmacSha1Signature
hmacSha1Signature
HMACSHA256
HmacSha256Signature
HolderOfKeyString
Home Phone
homephone
HomePhoneDescription
HomePhoneText
hPubKey
HSystem.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
HThe custom crypto algorithm '{0}'obtained using CryptoConfig is invalid.
HThe length of the array to convert to an integer must be greater than 0.
HThe string that is read for the SamlAction is missing or is of length 0.
HThe string that represents the SamlAction cannot be null or of length 0.
http://docs.oasis-open.org/wsfed/authorization/200706
http://docs.oasis-open.org/wsfed/authorization/200706/authclaims
http://docs.oasis-open.org/wsfed/authorization/200706/claims/action
http://docs.oasis-open.org/wsfed/federation/200706
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#HexBinary
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Text
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#UsernameToken
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3
http://docs.oasis-open.org/wss/2004/xx/oasis-2004xx-wss-soap-message-security-1.1#ThumbprintSHA1
http://docs.oasis-open.org/wss/2004/xx/oasis-2004xx-wss-x509-token-profile-1.1
http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ
http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ1510
http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5APREQSHA1
http://docs.oasis-open.org/wss/oasis-wss-rel-token-profile-1.0.pdf#license
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0
http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1
http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#EncryptedKey
http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#EncryptedKeySHA1
http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#ThumbprintSHA1
http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd
http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512
http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/dk
http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/dk/p_sha1
http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct
http://docs.oasis-open.org/ws-sx/ws-trust/200512
http://docs.oasis-open.org/ws-sx/ws-trust/200512#BinarySecret
http://docs.oasis-open.org/ws-sx/ws-trust/200512/AsymmetricKey
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/CK/PSHA1
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Nonce
http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Renew
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Renew
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/SCT
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/SCT/Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/SCT/Renew
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/SCT-Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Validate
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/CancelFinal
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Issue
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Renew
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/RenewFinal
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/SCT
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/SCT/Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/SCT/Renew
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/SCT-Cancel
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Validate
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/ValidateFinal
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal
http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Validate
http://docs.oasis-open.org/ws-sx/ws-trust/200512/ws-trust-1.3.xsd
http://docs.oasis-open.org/ws-sx/ws-trust/200802
http://microsoft.com0
http://schemas.microsoft.com/2006/08/ServiceModel/
http://schemas.microsoft.com/2006/08/ServiceModel/AuthorizeTraceRecord
http://schemas.microsoft.com/2006/08/ServiceModel/ClaimsPrincipalTraceRecord
http://schemas.microsoft.com/2006/08/ServiceModel/DeflateCookieTraceRecord
http://schemas.microsoft.com/idfx/computedkeyalgorithm/psha1
http://schemas.microsoft.com/idfx/keytype/asymmetric
http://schemas.microsoft.com/idfx/keytype/bearer
http://schemas.microsoft.com/idfx/keytype/symmetric
http://schemas.microsoft.com/idfx/requesttype/cancel
http://schemas.microsoft.com/idfx/requesttype/getMetadata
http://schemas.microsoft.com/idfx/requesttype/issue
http://schemas.microsoft.com/idfx/requesttype/issueCard
http://schemas.microsoft.com/idfx/requesttype/renew
http://schemas.microsoft.com/idfx/requesttype/validate
http://schemas.microsoft.com/net/2004/07/secext/TLSNego
http://schemas.microsoft.com/net/2004/07/secext/WS-SPNego
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/IsOptionalTokenProperty
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/KeySize
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/KeyType
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/KeyUsage
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/PeerAuthenticationMode
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/RequireCryptographicToken
http://schemas.microsoft.com/ws/2006/05/identitymodel/securitytokenrequirement/TokenType
http://schemas.microsoft.com/ws/2006/05/identitymodel/tokens
http://schemas.microsoft.com/ws/2006/05/identitymodel/tokens/Kerberos
http://schemas.microsoft.com/ws/2006/05/identitymodel/tokens/Rsa
http://schemas.microsoft.com/ws/2006/05/identitymodel/tokens/Saml
http://schemas.microsoft.com/ws/2006/05/identitymodel/tokens/UserName
http://schemas.microsoft.com/ws/2006/05/identitymodel/tokens/X509Certificate
http://schemas.microsoft.com/ws/2006/05/security
http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation
http://schemas.microsoft.com/ws/2008/06/identity
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/hardwaretoken
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/kerberos
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/password
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/pgp
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/secureremotepassword
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/signature
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/smartcard
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/smartcardpki
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/spki
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/tlsclient
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/unspecified
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/windows
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/x509
http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/xkms
http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant
http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod
http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarygroupsid
http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarysid
http://schemas.microsoft.com/ws/2008/06/identity/claims/dsa
http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid
http://schemas.microsoft.com/ws/2008/06/identity/claims/primarygroupsid
http://schemas.microsoft.com/ws/2008/06/identity/claims/primarysid
http://schemas.microsoft.com/ws/2008/06/identity/claims/role
http://schemas.microsoft.com/ws/2008/06/identity/claims/serialnumber
http://schemas.xmlsoap.org/2005/02/trust/spnego#GSS_Wrap
http://schemas.xmlsoap.org/2005/02/trust/tlsnego#TLS_Wrap
http://schemas.xmlsoap.org/ws/2004/08/addressing
http://schemas.xmlsoap.org/ws/2004/09/mex
http://schemas.xmlsoap.org/ws/2004/09/policy
http://schemas.xmlsoap.org/ws/2004/09/transfer/Get
http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse
http://schemas.xmlsoap.org/ws/2005/02/sc
http://schemas.xmlsoap.org/ws/2005/02/sc/dk
http://schemas.xmlsoap.org/ws/2005/02/sc/dk/p_sha1
http://schemas.xmlsoap.org/ws/2005/02/sc/sct
http://schemas.xmlsoap.org/ws/2005/02/trust
http://schemas.xmlsoap.org/ws/2005/02/trust#BinarySecret
http://schemas.xmlsoap.org/ws/2005/02/trust/Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/CK/PSHA1
http://schemas.xmlsoap.org/ws/2005/02/trust/Issue
http://schemas.xmlsoap.org/ws/2005/02/trust/Nonce
http://schemas.xmlsoap.org/ws/2005/02/trust/PublicKey
http://schemas.xmlsoap.org/ws/2005/02/trust/Renew
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Renew
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/SCT
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/SCT/Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/SCT/Renew
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/SCT-Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Validate
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/SCT
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/SCT/Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/SCT/Renew
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/SCT-Cancel
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate
http://schemas.xmlsoap.org/ws/2005/02/trust/spnego
http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey
http://schemas.xmlsoap.org/ws/2005/02/trust/tlsnego
http://schemas.xmlsoap.org/ws/2005/02/trust/Validate
http://schemas.xmlsoap.org/ws/2005/02/trust/ws-trust.xsd
http://schemas.xmlsoap.org/ws/2005/05/identity
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/attributename
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/displayname
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/format
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/namequalifier
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/spnamequalifier
http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/spprovidedid
http://schemas.xmlsoap.org/ws/2005/05/identity/claims
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/anonymous
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authorizationdecision
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/denyonlysid
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dns
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/gender
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/hash
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/homephone
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/locality
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mobilephone
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/otherphone
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/postalcode
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/privatepersonalidentifier
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/rsa
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/sid
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/spn
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/stateorprovince
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/system
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/thumbprint
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/uri
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/webpage
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/x500distinguishedname
http://schemas.xmlsoap.org/ws/2005/05/identity/NoProofKey
http://schemas.xmlsoap.org/ws/2005/05/identity/right
http://schemas.xmlsoap.org/ws/2005/05/identity/right/identity
http://schemas.xmlsoap.org/ws/2005/05/identity/right/possessproperty
http://schemas.xmlsoap.org/ws/2009/09/identity/claims
http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor
http://www.docs.oasis-open.org/wss/2004/07/oasis-000000-wss-kerberos-token-profile-1.0
http://www.example.com
http://www.w3.org/2000/09/xmldsig#
http://www.w3.org/2000/09/xmldsig#DSAKeyValue
http://www.w3.org/2000/09/xmldsig#dsa-sha1
http://www.w3.org/2000/09/xmldsig#enveloped-signature
http://www.w3.org/2000/09/xmldsig#hmac-sha1
http://www.w3.org/2000/09/xmldsig#RSAKeyValue
http://www.w3.org/2000/09/xmldsig#rsa-sha1
http://www.w3.org/2000/09/xmldsig#sha1
http://www.w3.org/2000/xmlns/
http://www.w3.org/2001/04/xmldsig-more#hmac-sha256
http://www.w3.org/2001/04/xmldsig-more#rsa-sha256
http://www.w3.org/2001/04/xmlenc#
http://www.w3.org/2001/04/xmlenc#aes128-cbc
http://www.w3.org/2001/04/xmlenc#aes192-cbc
http://www.w3.org/2001/04/xmlenc#aes256-cbc
http://www.w3.org/2001/04/xmlenc#Content
http://www.w3.org/2001/04/xmlenc#des-cbc
http://www.w3.org/2001/04/xmlenc#Element
http://www.w3.org/2001/04/xmlenc#EncryptedKey
http://www.w3.org/2001/04/xmlenc#kw-aes128
http://www.w3.org/2001/04/xmlenc#kw-aes192
http://www.w3.org/2001/04/xmlenc#kw-aes256
http://www.w3.org/2001/04/xmlenc#kw-tripledes
http://www.w3.org/2001/04/xmlenc#ripemd160
http://www.w3.org/2001/04/xmlenc#rsa-1_5
http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p
http://www.w3.org/2001/04/xmlenc#sha256
http://www.w3.org/2001/04/xmlenc#sha512
http://www.w3.org/2001/04/xmlenc#tripledes-cbc
http://www.w3.org/2001/10/xml-exc-c14n#
http://www.w3.org/2001/10/xml-exc-c14n#WithComments
http://www.w3.org/2001/XMLSchema
http://www.w3.org/2001/XMLSchema#base64Binary
http://www.w3.org/2001/XMLSchema#dateTime
http://www.w3.org/2001/XMLSchema#string
http://www.w3.org/2001/XMLSchema-instance
http://www.w3.org/2005/08/addressing
http://www.w3.org/XML/1998/namespace
hwndParent
I0G0E
IAsyncResult
IAuthorizationComponent
IAuthorizationPolicy
ICanonicalWriterEndRootElementCallback
ICollection
ICollection`1
ICryptoTransform
ICspAsymmetricAlgorithm
ICustomIdentityConfiguration
ID0001
ID0002
ID0003
ID0005
ID0006
ID0008
ID0009
ID0011
ID0012
ID0013
ID0014
ID0016
ID0018
ID0019
ID0021
ID0022
ID0023
ID0023: Failed to create an instance of '{0}' from configuration. A custom configuration element was specified, but the method LoadCustomConfiguration was not implemented. Override LoadCustomConfiguration to handle custom configuration loading.
ID1001
ID1002
ID1005
ID1006
ID1007
ID1007: The format of the data is incorrect. The encryption key is larger than the corresponding data. The cookie may have been truncated.
ID1008
ID1009
ID1009: The format of the data is incorrect. The encrypted data is larger than the corresponding data. The cookie may have been truncated.
ID1012
ID1013
ID1013: The format of the data is incorrect. The signature is larger than the corresponding data. The cookie may have been truncated.
ID1014
ID1024
ID1025
ID1025: Cannot find a unique certificate that matches the criteria.
ID1029
ID1032
ID1032: At least one 'audienceUri' must be specified in the SamlSecurityTokenRequirement when the AudienceUriMode is set to 'Always' or 'BearerKeyOnly'. Either add the valid URI values to the AudienceUris property of SamlSecurityTokenRequirement,  or turn off checking by specifying an AudienceUriMode of 'Never' on the SamlSecurityTokenRequirement.
ID1033
ID1034
ID1035
ID1035: The SAML Assertion did not contain any AudienceRestrictionConditions. To accept assertions without AudienceRestrictionConditions, set SecurityTokenHandlerConfiguration.AudienceRestriction.AudienceMode to AudienceUriMode.Never.
ID1036
ID1037
ID1037: The AudienceRestrictionCondition was not valid because it contains multiple Audiences none of which is present in AudienceUris.
ID1038
ID1038: The AudienceRestrictionCondition was not valid because the specified Audience is not present in AudienceUris.
ID1039
ID1039: The certificate's private key could not be accessed. Ensure the access control list (ACL) on the certificate's private key grants access to the application pool user.
ID1043
ID1053
ID1053: The ClaimsIdentity contained multiple UPN Claims. The automatic Windows identity mapping feature does not support this scenario.
ID1054
ID1054: The ClaimsIdentity did not contain a valid UPN Claim. The automatic Windows identity mapping feature requires exactly one non-empty UPN Claim to be provided.
ID1062
ID1063
ID1064
ID1065
ID1066
ID1067
ID1068
ID1068: The decompressed cookie exceeds the maximum size of '{0}' bytes. If this is expected, increase the MaxDecompressedSize property of DeflateCookieTransform.
ID1069
ID1069: Replay detection requires that token's expiration period, '{0}', does not exceed the expiration period configured with '{1}' on the TokenReplayCache.
ID1070
ID1072
ID1072: The security token cannot be added to the replay cache because it has an infinite lifetime. Either the token must specify a validity period or the expirationPeriod attribute on the tokenReplayDetection configuration element must be set.
ID1073
ID1073: A CryptographicException occurred when attempting to decrypt the cookie using the ProtectedData API (see inner exception for details). If you are using IIS 7.5, this could be due to the loadUserProfile setting on the Application Pool being set to false. 
ID1074
ID1074: A CryptographicException occurred when attempting to encrypt the cookie using the ProtectedData API (see inner exception for details). If you are using IIS 7.5, this could be due to the loadUserProfile setting on the Application Pool being set to false. 
ID2000
ID2001
ID2002
ID2002: The AppliesTo address of the relying party was not a valid absolute URI. Override the SecurityTokenService.GetScope() method and populate Scope.AppliesToAddress with an appropriate AppliesTo address.
ID2003
ID2003: SecurityTokenService.SecurityTokenDescriptor was null. Initialize the SecurityTokenDescriptor on the STS in your SecurityTokenService implementation with an appropriate value.
ID2004
ID2004: IAsyncResult must be the AsyncResult instance returned from the Begin call. The runtime is expecting '{0}', and the actual type is '{1}'.
ID2005
ID2008
ID2009
ID2011
ID2012
ID2013
ID2013: SecurityTokenService.GetScope returned null. Return a suitable Scope instance from SecurityTokenService.GetScope to issue a token.
ID2014
ID2015
ID2015: DefaultTokenType must be supported by the existing TokenHandlers. Try to add a TokenHandler which can handle '{0}' to the TokenHandlers first.
ID2016
ID2050
ID2050: When the KeyType is bearer, it is not valid to have a KeySize element with a value other than zero in the request. To fix this, change the key type or set the key size to zero.
ID2051
ID2052
ID2053
ID2055
ID2055: The RelyingPartyParameters property on the RequestSecurityToken instance must not contain another RelyingPartyParameters. To fix this, make sure the RelyingPartyParameters property does not contain another RelyingPartyParameters instance.
ID2056
ID2057
ID2058
ID2059
ID2059: The request has a KeySizeInBits that has no value. If you have overridden SecurityTokenService.ValidateRequest, make sure it has a valid value.
ID2064
ID2064: The object passed as parameter named 'elementValue' must be of type 'RequestSecurityToken' when 'elementName' is '{0}'.
ID2069
ID2070
ID2072
ID2072: The RequestSecurityToken contains an element with name '{0}' that cannot be processed. You will need to provide a custom WSTrustRequestSerializer to process this element.
ID2073
ID2073: SecurityTokenServiceConfiguration.SecurityTokenService is either null or does not have a base type of SecurityTokenService.
ID2074
ID2075
ID2075: The computed lifetime has a creation time of '{0}' and an expiration time of '{1}'. The expiration time is before than the current time of '{2}'. If you need to specify such a lifetime, you will need to override SecurityTokenService.GetTokenLifetime and provide custom verification.
ID2076
ID2076: The computed lifetime has a creation time of '{0}' and an expiration time of '{1}'. This creation time is more that 1 day in the future. UtcNow = '{2}'. If you need to specify such a lifetime, override SecurityTokenService.GetTokenLifetime and provide custom verification.
ID2077
ID2077: The computed lifetime has a creation time of '{0}' and an expiration time of '{1}'. The expiration time is before or equal to the creation time. If you need to specify such a lifetime, override SecurityTokenService.GetTokenLifetime and provide custom verification.
ID2078
ID2078: The computed lifetime has a creation time of '{0}' and an expiration time of '{1}'. This produces a time span greater than the maximum allowed token lifetime '{2}' as specified in SecurityTokenServiceConfiguration.MaximumTokenLifetime. If you need to specify such a lifetime, SecurityTokenServiceConfiguration.MaximumTokenLifetime is a settable property or you can override SecurityTokenService.GetTokenLifetime and provide custom verification.
ID2079
ID2079: SecurityTokenService.SecurityTokenDescriptor.SigningCredentials is null. Specify a valid credential to sign the issued token with, in the Scope that is returned by SecurityTokenService.GetScope. If you need to issue unsigned tokens, you will need to override SecurityTokenService.Issue.
ID2080
ID2080: Cannot resolve the SecurityKeyIdentifier to a SecurityKey with the given SecurityTokenResolver. SecurityTokenResolver: '{0}', SecurityKeyIdentifier: '{1}'.
ID2081
ID2081: SecurityTokenService does not implement asynchronous behavior. Override BeginGetOutputClaimsIdentity/EndGetOutputClaimsIdentity and BeginGetScope/EndGetScope methods to provide valid asynchronous behavior.
ID2082
ID2083
ID2083: IssuerName cannot be null or empty. Create SecurityTokenServiceConfiguration with a valid TokenIssuerName or override SecurityTokenService.GetIssuerName to provide it.
ID2084
ID2084: Cannot create EncryptingCredentials from the specified proof encryption token '{0}'. Override SecurityTokenService.GetRequestorProofEncryptingCredentials to return a valid proof EncryptingCredentials.
ID2100
ID3006
ID3007
ID3009
ID3010
-ID3010: Unrecognized KeyType specified: '{0}'
ID3011
ID3012
ID3013
ID3013: Cannot write element '{0}' of type '{1}'. Add your custom WSTrustResponseSerializer in SecurityTokenServiceConfiguration to write this element.
ID3017
ID3017: The token contained in the UseKey object is not recognized as a writeable token by any of the configured SecurityTokenHandlers.
ID3020
ID3021
ID3025
ID3025: Cannot read 'RequestedProofToken' element. The 'RequestedProofToken' element must either contain a 'EncryptedKey' element or a 'BinarySecret' element or a 'ComputedKeyAlgorithm' as its child element.
ID3026
ID3026: Cannot read 'Entropy' element. The 'Entropy' element must either contain a 'EncryptedKey' element or a 'BinarySecret' element as its child element.
ID3027
ID3027: The key needed to decrypt the encrypted key could not be resolved. Ensure that '{0}' is populated with the required key.
ID3032
ID3057
ID3061
ID3063
ID3064
ID3089
ID3091
ID3092
ID3130
ID3135
ID3136
ID3141
ID3141: The RequestType '{0}', is not supported. If you need to support this RequestType, override the corresponding virtual method in your SecurityTokenService derived class.
ID3151
ID3151: The WS-Trust message has an empty 'RenewTarget' element. The 'RenewTarget' element must either contain a valid SecurityToken as its child element.
ID3152
ID3152: The WS-Trust message has an empty 'OnBehalfOf' element. The 'OnBehalfOf' element must either contain a SecurityToken or SecurityTokenReference as its child element.
ID3153
ID3153: The WS-Trust message has an empty 'ActAs'. The element must have a SecurityToken or SecurityTokenReference as its child element.
ID3154
ID3154: The WS-Trust message has an empty 'KeySize' element. The element must specify a valid key size for the requested token.
ID3155
ID3155: The WS-Trust message has an empty 'UseKey' element. The element must specify a valid SecurityTokenReference to the client's public key.
ID3158
ID3158: The WS-Trust message has an empty 'RequestedSecurityToken'. The element must contain a valid SecurityToken as its child element.
ID3159
ID3159: The WS-Trust message has an empty 'RequestedAttachedReference'. The element must contain a valid SecurityKeyIdentifierClause as its child element.
ID3160
ID3160: The WS-Trust message has an empty 'RequestedUnattachedReference'. The element must contain a valid SecurityKeyIdentifierClause as its child element.
ID3161
ID3161: The WS-Trust message has an empty 'Lifetime'. The element must contain 'Created' and 'Expires' elements as its child element.
ID3162
ID3164
ID3165
ID3166
ID3166: The 'UseKey' token contained in the WS-Trust message is not able to create an RsaKeyIdentifierClause or an X509RawDataSecurityKeyIdentifierClause, which are the only SecurityKeyIdentifierClause types supported by default.
ID3198
ID3199
ID3200
ID3201
ID3202
ID3203
ID3207
ID3207: An error occurred while reading the metadata document. Attribute '{0}' of element '{1}' has a value '{2}' that is not supported.
ID3215
ID3215: The encoding type '{0}' specified in element '{1}' with namespace '{2}' is not supported. The supported encoding types are '{3}'.
ID3216
ID3217
ID3218
ID3218: WS-Trust message has an empty 'ProofEncryption'. The element must have a SecurityToken or SecurityTokenReference as its child element.
ID3219
ID3219: WS-Trust message has an empty 'DelegateTo'. The element must have a SecurityToken or SecurityTokenReference as its child element.
ID3220
ID3220: WS-Trust message has an empty 'CancelTarget'. The element must have a SecurityToken or SecurityTokenReference as its child element.
ID3221
ID3221: WS-Trust message has an empty 'ValidateTarget'. The element must have a SecurityToken or SecurityTokenReference as its child element.
ID3222
ID3223
ID3249
ID3257
ID3257: RequestSecurityToken contains at least one Claim with a Claim value specified but the RequestClaimCollection.Dialect is set to '{0}'. The RequestClaimCollection.Dialect must be set to '{1}' for the value to be serialized out.
ID3258
ID3258: RequestSecurityToken contains a Claim with a Claim value specified but the Dialect is set to '{0}'. The Dialect must be set to '{1}'.
ID3260
ID3264
ID3264: OnBehalfOf element was found, but there was no token handlers registered to read a OnBehalfOf element. Consider adding a valid SecurityTokenHandlerCollection to the SecurityTokenHanderCollectionManager for OnBehalfOf usage.
ID3265
ID3265: ActAs element was found, but there was no token handlers registered to read a ActAs element. Consider adding a valid SecurityTokenHandlerCollection to the SecurityTokenHanderCollectionManager for ActAs usage.
ID3268
ID3274
ID3275
ID3275: The XmlReader is not positioned at an EncryptedData element. XmlReader is positioned at: Name: '{0}', Namespace: '{1}'. 
ID3276
ID3284
ID4001
ID4002
ID4003
ID4004
ID4005
ID4007
ID4007: The symmetric key inside the requested security token must be encrypted. To fix this, either override the SecurityTokenService.GetScope() method to assign appropriate value to Scope.EncryptingCredentials or set Scope.SymmetricKeyEncryptionRequired to false.
ID4008
ID4010
ID4011
ID4013
ID4013: Cannot return null from SamlSecurityTokenHandler.CreateAssertion. To fix this, make sure CreateAssertion returns a valid SamlAssertion.
ID4014
ID4020
ID4022
ID4022: The key needed to decrypt the encrypted security token could not be resolved. Ensure that the SecurityTokenResolver is populated with the required key.
ID4023
ID4023: The encrypted security token was directly encrypted using an asymmetric key, which is not supported. An xenc:EncryptedKey must be used to encrypt a symmetric key using the asymmetric key.
ID4024
ID4025
ID4026
ID4034
ID4034: A SamlAttributeStatement can only have one SamlAttributeValue of type 'Actor'.  This special SamlAttribute is used in delegation scenarios.
ID4036
ID4036: The key needed to decrypt the encrypted security token could not be resolved from the following security key identifier '{0}'. Ensure that the SecurityTokenResolver is populated with the required key.
ID4037
ID4037: The key needed to verify the signature could not be resolved from the following security key identifier '{0}'. Ensure that the SecurityTokenResolver is populated with the required key.
ID4038
ID4046
ID4050
ID4051
ID4051: Cannot resolve SecurityToken. Use config to ensure that a SecurityTokenHandler is registered for token of type '{0}'. Element name: '{1}'. Namespace: '{2}'.
ID4052
ID4052: SecurityTokenElement cannot create a subject unless it is constructed with an XmlElement and SecurityTokenHandlerCollection.
ID4059
ID4060
ID4061
ID4062
ID4063
ID4065
ID4066
ID4066: Cannot read SecurityToken. Expected element ({0}, {1}) with '{2}' attribute set to '{3}'. But the attribute value was '{4}'.
ID4067
ID4068
ID4070
ID4070: The X.509 certificate '{0}' chain building failed. The certificate that was used has a trust chain that cannot be verified. Replace the certificate or change the certificateValidationMode. '{1}'
ID4073
ID4075
ID4076
ID4076: SAML Assertion with MajorVersion '{0}' and MinorVersion '{1}' is not supported. The supported version is MajorVersion '{2}' and MinorVersion '{3}'.
ID4077
ID4078
ID4078: SAML Assertion does not have any SAML Statement elements. SAML Assertion must have at least one SAML Statement element.
ID4079
ID4080
ID4081
ID4082
ID4083
ID4084
ID4085
ID4086
ID4087
ID4088
ID4089
ID4090
ID4091
ID4092
ID4093
ID4094
ID4095
ID4096
ID4097
ID4098
ID4099
ID4100
ID4102
ID4102: An element of an unexpected type was encountered. To support extended types in SAML2 assertions, extend Saml2SecurityTokenHandler.
ID4104
ID4104: An abstract element was encountered which does not specify its concrete type.
ID4105
ID4105: A <saml:Statement> element was encountered which specified an unrecognized concrete type. To handle this custom statement, extend Saml2SecurityTokenHandler and override ReadStatement.
ID4106
ID4107
ID4107: The Saml2Assertion Statements collection contains an unrecognized Saml2Statement. To handle custom Saml2Statement objects, extend Saml2SecurityTokenHandler and override WriteStatement.
ID4108
ID4110
ID4110: A <saml:'{0}'> contained a <saml:BaseID> element which specified an unrecognized concrete type. To handle this custom type, extend Saml2SecurityTokenHandler and override ReadSubjectID.
ID4111
ID4112
ID4112: A <saml:SubjectConfirmationData> element of an unexpected type was encountered. The SubjectConfirmationDataType and KeyInfoConfirmationDataType are handled by default. To handle other types, extend Saml2SecurityTokenHandler and override ReadSubjectConfirmationData.
ID4113
ID4113: A <saml:Condition> was encountered which specifies an unrecognized concrete type. To handle a custom Condition, extend Saml2SecurityTokenHandler and override ReadConditions.
ID4114
ID4114: A <saml:'{0}'> contained unrecognized content. The schema allows arbitrary XML elements on this element without explicit schema extension. To handle the content, extend Saml2SecurityTokenHandler and override Read'{0}'.
ID4115
ID4116
ID4117
ID4117: When writing the Saml2AuthenticationContext, at least one of ClassReference and DeclarationReference must be set. Set one of these properties before serialization.
ID4118
ID4118: A <saml:AuthnContextDecl> element was encountered. To handle by-value authentication context declarations, extend Saml2SecurityTokenHandler and override ReadAuthenticationContext. In addition, it may be necessary to extend Saml2AuthenticationContext so that its data model can accommodate the declaration value.
ID4119
ID4120
ID4121
ID4122
ID4123
ID4124
ID4125
ID4126
ID4126: To handle <wsse:Reference> references for SAML2 assertions, extend Saml2SecurityTokenHandler and override ReadKeyIdentifierClause.
ID4127
ID4128
ID4129
ID4129: Cannot write a SAML2 key identifier clause with an implied derived key length other than the default of 32 using WS-SecureConversation.
ID4130
ID4131
ID4132
ID4133
ID4133: A Saml2SecurityToken cannot be created from the Saml2Assertion because it specifies the Bearer confirmation method but identifies keys in the SubjectConfirmationData.
ID4134
ID4134: A Saml2SecurityToken cannot be created from the Saml2Assertion because it specifies the Holder-of-key confirmation method but identifies no keys in the SubjectConfirmationData.
ID4136
ID4136: A Saml2SecurityToken cannot be created from the Saml2Assertion because it specifies an unsupported confirmation method: '{0}'
ID4138
ID4138: No suitable Saml2NameIdentifier could be created for the SAML2:Assertion because tokenDescriptor.Issuer is null or empty.
ID4139
ID4139: No suitable Saml2NameIdentifier could be created for the SAML2:Subject because more than one Claim of type NameIdentifier was supplied.
ID4140
ID4140: This Assertion cannot be re-emitted as raw XML. This may be because it was not read from XML in the first place, or because Assertion was changed after it was read, as indicated by a changed Id property.
ID4141
ID4141: The SAML2:Assertion is not signed. Only signed Assertions are acceptable for this use. If Windows Identity Foundation is used to create the Assertion, create a signed Assertion by setting the SigningCredentials before calling WriteAssertion.
ID4142
ID4142: The SAML2:Assertion is signed but the signature's KeyIdentifier cannot be resolved to a SecurityToken. Ensure that the appropriate SecurityTokenResolver has been provisioned. To handle advanced token resolution requirements, extend Saml2SecurityTokenHandler and override ResolveIssuerToken.
ID4147
ID4147: The Saml2SecurityToken is rejected because the SAML2:Assertion's NotBefore condition is not satisfied.
ID4148
ID4148: The Saml2SecurityToken is rejected because the SAML2:Assertion's NotOnOrAfter condition is not satisfied.
ID4149
ID4149: The Saml2SecurityToken is rejected because the SAML2:Assertion specifies a OneTimeUse condition. Enforcement of the OneTimeUse condition is not supported by default. To customize the enforcement of Saml2Conditions, extend Saml2SecurityTokenHandler and override ValidateConditions.
ID4150
ID4150: The Saml2SecurityToken is rejected because the SAML2:Assertion specifies a ProxyRestriction condition. Enforcement of the ProxyRestriction condition is not supported by default. To customize the enforcement of Saml2Conditions, extend Saml2SecurityTokenHandler and override ValidateConditions.
ID4151
ID4152
ID4152: The Saml2SecurityToken cannot be validated because the IssuerToken property is not set. Unsigned SAML2:Assertions cannot be validated.
ID4153
ID4153: A Saml2SecurityToken cannot be created from the Saml2Assertion because it contains a SubjectConfirmationData which specifies an Address value. Enforcement of this value is not supported by default. To customize SubjectConfirmationData processing, extend Saml2SecurityTokenHandler and override ValidateConfirmationData.
ID4154
ID4154: A Saml2SecurityToken cannot be created from the Saml2Assertion because it contains a SubjectConfirmationData which specifies an InResponseTo value. Enforcement of this value is not supported by default. To customize SubjectConfirmationData processing, extend Saml2SecurityTokenHandler and override ValidateConfirmationData.
ID4157
ID4157: A Saml2SecurityToken cannot be created from the Saml2Assertion because it contains a SubjectConfirmationData which specifies a Recipient value. Enforcement of this value is not supported by default. To customize SubjectConfirmationData processing, extend Saml2SecurityTokenHandler and override ValidateConfirmationData.
ID4158
ID4158: A <saml:EncryptedAttribute> was encountered while processing the attribute statement. To handle encrypted attributes, extend the Saml2SecurityTokenHandler and override ReadAttributeStatement.
ID4159
ID4160
ID4161
ID4161: The reader is not positioned on an element that can be read. Call CanReadKeyIdentifierClause to check the element before calling ReadKeyIdentifierClause.
ID4162
ID4162: The Saml2SecurityTokenHandler can only write SecurityKeyIdentifierClause objects of type Saml2AssertionKeyIdentifierClause.
ID4172
ID4173
ID4175
ID4175: The issuer of the security token was not recognized by the IssuerNameRegistry. To accept security tokens from this issuer, configure the IssuerNameRegistry to return a valid name for this issuer.
ID4176
ID4176: The Saml2SecurityToken is rejected because the SAML2:Assertion's SubjectConfirmationData NotBefore is not satisfied.
ID4177
ID4177: The Saml2SecurityToken is rejected because the SAML2:Assertion's SubjectConfirmationData NotOnOrAfter is not satisfied.
ID4178
ID4178: The EncryptingCredentials provided in the SecurityTokenDescriptor is for an asymmetric key. You must use an EncryptedKeyEncryptingCredentials to encrypt the token.
ID4179
ID4179: The EncryptingCredentials provided in the Scope must be an asymmetric key. You must set an X509EncryptingCredentials on Scope.EncryptingCredentials.
ID4180
ID4180: A SAML2 assertion that specifies an AuthenticationContext DeclarationReference is not supported. To handle DeclarationReference, extend the Saml2SecurityTokenHandler and override ProcessAuthenticationStatement.
ID4181
'ID4181: The security token has expired.
ID4182
ID4183
ID4184
ID4184: The EncryptingCredentials provided in the SecurityTokenDescriptor must not be null if Scope.TokenEncryptionRequired is set to true. This can be caused by the Scope specifying an unsupported encryption key type, or by the incoming RequestSecurityToken message containing an unsupported EncryptionAlgorithm. Override CreateSecurityTokenDescriptor if you need to support algorithms other than AES 256.
ID4185
ID4185: A Saml2SecurityToken cannot be created from the AuthenticationMethod Claim value, '{0}', which will be serialized as the AuthnContextClassRef element. Change the AuthenticationMethod Claim to be an absolute URI.
ID4187
ID4188
ID4189
ID4189: The reader is not positioned on a DataReference. XmlEnc specifies that once a DataReference is found only a DataReference must exist. 
ID4190
ID4190: The reader is not positioned on a KeyReference. XmlEnc specifies that once a KeyReference is found only a KeyReference must exist. 
ID4191
ID4192
ID4193
ID4200
ID4201
ID4202
ID4203
ID4204
ID4205
ID4206
ID4207
ID4208
ID4209
ID4210
ID4211
ID4212
ID4213
ID4216
ID4217
ID4218
ID4218: A Saml2SamlAttributeStatement can only have one Saml2Attribute of type 'Actor'. This special Saml2Attribute is used in delegation scenarios.
ID4220
ID4220: The SAML Assertion is either not signed or the signature's KeyIdentifier cannot be resolved to a SecurityToken. Ensure that the appropriate issuer tokens are present on the token resolver. To handle advanced token resolution requirements, extend SamlTokenSerializer and override ReadToken.
ID4221
ID4221: Cannot write SAML Signature KeyIdentifier '{0}'. For custom clause override SamlSecurityTokenHandler.WriteSigningKeyInfo.
ID4222
ID4222: The SamlSecurityToken is rejected because the SamlAssertion.NotBefore condition is not satisfied.
ID4223
ID4223: The SamlSecurityToken is rejected because the SamlAssertion.NotOnOrAfter condition is not satisfied.
ID4224
ID4225
ID4227
ID4229
ID4230
ID4232
ID4237
ID4239
ID4242
ID4243
ID4248
ID4249
ID4250
ID4251
ID4252
ID4254
ID4254: The AttributeValueXsiType of a SAML Attribute must be a string of the form 'prefix#suffix', where prefix and suffix are non-empty strings.
ID4255
ID4255: The SecurityToken is rejected because the validation time is out of range.
ID4256
ID4257
ID4258
ID4259
ID4261
ID4261: X509SecurityTokenHandler can serialize SecurityKeyIdentifierClauses only when the property WriteXmlDSigDefinedClauseTypes is set to true.
ID4262
ID4263
ID4264
ID4265
ID4269
ID4270
ID4272
ID4272: The Configuration property of this SecurityTokenHandler is set to null. Tokens cannot be processed in this state. Set this property or add this SecurityTokenHandler to a SecurityTokenHandlerCollection with a valid Configuration property.
ID4274
ID4274: The Configuration property of this SecurityTokenHandler is set to null. Tokens cannot be read or validated in this state. Set this property or add this SecurityTokenHandler to a SecurityTokenHandlerCollection with a valid Configuration property.
ID4275
ID4275: The Configuration.IssuerTokenResolver property of this SecurityTokenHandler is set to null. Tokens cannot be read in this state. Set the value of Configuration.IssuerTokenResolver.
ID4276
ID4276: The Configuration.ServiceTokenResolver property of this SecurityTokenHandler is set to null. Tokens cannot be read in this state. Set the value of Configuration.ServiceTokenResolver.
ID4277
ID4277: The Configuration.IssuerNameRegistry property of this SecurityTokenHandler is set to null. Tokens cannot be validated in this state.
ID4278
ID4279
ID4279: The EncryptedSecurityTokenHandler's ContainingCollection is set to null. EncryptedSecurityTokens cannot be written as the ContainingCollection has the SecurityTokenHandlers required to write the inner token. Set this property to a valid SecurityTokenHandlerCollection.
ID4280
ID4280: The X509CertificateValidationMode is set to Custom but the CertificateValidator property has not been set. You must set the CertificateValidator property to use a custom validator.
ID4283
ID4283: The SecurityTokenHandlerConfiguration for the Default usage has been overwritten. ServiceConfiguration.Initialize() will not set any properties on the configuration for the Default usage.
ID4289
ID4290
ID4291
ID4292
ID4294
ID4296
ID4296: No CookieTransforms have been defined for this SessionSecurityTokenHandler. Tokens cannot be serialized/deserialized in this state. 
ID6000
ID6001
ID6002
ID6005
ID6019
ID6029
ID6030
ID6031
ID6033
ID6034
ID6035
ID6035: Cannot create a HashAlgorithm with name '{0}' using the '{1}' crypto provider. SHA256 may require a minimum platform of Windows Server 2003 and .NET 3.5 SP1.
ID6036
ID6037
ID6039
ID6040
ID6041
ID6042
ID6043
ID6044
ID6045
ID6046
ID6047
ID6048
ID7000
ID7000: Unexpected element found in configuration. Expected element '{0}' but found '{1}'. For custom configuration override the appropriate SecurityTokenHandler and provide a constructor that takes an XmlElement as input parameter.
ID7001
ID7001: Configuration errors. SecurityTokenHandler custom configuration has the element '{0}' which expects only one attribute '{1}'.
ID7002
ID7004
ID7007
ID7009
ID7010
ID7011
ID7012
ID7013
ID7017
ID7017: Cannot set the TokenLifetime on the SessionSecurityTokenHandler from the following value specified in configuration: '{0}'.
ID7018
ID7019
ID7019: More than one configuration element found under SecurityTokenHandler '{0}'. The token handler can process only one XmlElement node for custom configuration.
ID7022
ID7022: Cannot set the MapToWindows boolean flag on the SamlSecurityTokenRequirement from the following value specified in configuration: '{0}'.
ID7026
ID7027
ID7028
ID7029
ID7029: Duplicate '{0}' configuration element with the name '{1}' was found in the <system.identityModel> configuration section.
ID8003
ID8004
ID8005
ID8005: An unrecognized element was encountered in a SAML11 <Advice> element.
ID8006
ID8006: An unrecognized element was encountered in a SAML2 <Advice> element.
ID8007
ID8023
ID8024
ID8025
ID8026
ID8027
ID8028
ID8028: An argument of the wrong type was passed to this method. This method expected an argument of type {0}, but it was passed an argument of type {1}.
ID8029
ID8029: Could not create an X509Certificate2 instance from the security key identifier. Override the MetadataSerializer.GetMetadataSigningCertificate method to support key identifier clauses other than X509RawDataKeyIdentifierClause.
ID8030
Identification
identificationData
Identifier
Identities
identities
Identities
IdentitiesKey
identity
Identity
Identity.Name
identityCollection
identityConfiguration
IdentityConfigurationElementCollection
identityConfigurationName
identityConfigurationTU
IdentityModel
IdentityModelCaches
IdentityModelCachesElement
IdentityModelDictionary
IdentityModelStrings
IdentityModelStringsVersion1
IdentityModelTimeSpanValidatorAttribute
IdentityModelWrappedXmlDictionaryReader
IdentityNotMappedException
identityProviderSingleSignOnDescriptor
IdentityReference
IDictionary`2
IDisposable
IDPSSODescriptor
idpssoDescriptor
IdpssoDescriptor
IDPSSODescriptor
idpssoDescriptor.SingleSignOnServices
idpssoDescriptor.SupportedAttributes
idReference
IEnumerable
IEnumerable`1
IEnumerator
IEnumerator`1
IEqualityComparer
IEqualityComparer`1
IFormatProvider
IFragmentCapableXmlDictionaryWriter
ignoreKeyGeneration
Ihttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^
IID1014: The signature is not valid. The data may have been tampered with.
iID1064: The token provided to DetectReplayedTokens must be a Saml2SecurityToken, actual type found '{0}'.
IID4202: SAML AuthorityBinding does not contain a valid Binding specified.
IID6002: The given key size in bits is '{0}' which is not a multiple of 8.
IID8007: Rejecting AudienceRestrictionCondition with multiple audiences:  
IIdentity
IIdentityInfo
IList
IList`1
iLSKWN
ImmutableCollection`1
ImpersonateSecurityContext
impersonationLevel
ImpersonationLevelNotSupported
ImportCspBlob
ImportParameters
Inbound
includeComments
includeWindowsGroups
inclusiveListElementPrefix
InclusiveNamespacePrefixRequiresSignatureReader
InclusiveNamespaces
inclusiveNamespacesPrefixList
inclusivePrefixes
incomingBlob
incomingPrincipal
IncompleteCred
IncompleteMessage
inContextPtr
IncorrectUserNameFormat
IncreaseCapacity
inCredentials
Increment
Indeterminate
index
indexedEP
IndexedProtocolEndpointDictionary
infinite
Infinite
inFlags
InformationalVersion
InitAnonymous
InitDiagnosticTraceImpl
InitExtendedError
initialEnabled
Initialize
InitializeArray
InitializeClaimsCore
InitializeInnerReader
InitializeInnerWriter
InitializeSecurityContextW
InitializeShouldTraceDigest
InitializeTracing
InitializeTracingWriter
InitialReferenceArraySize
initialSize
InitialSize
initialValue
InitIdentify
InitManualCredValidation
InitStream
InMemorySymmetricSecurityKey
inner
innerBufferManager
innerException
innerReader
InnerReaderMustBeAtElement
innerSecurityTokenSerializer
innerValidatorAttribute
innerWriter
input
inputBuffer
inputBuffers
inputCount
inputFormat
inputOffset
inputOutput
inputReader
inputWriter
InResponseTo
inResponseTo
InResponseTo
inSecBuffer
inSecBuffers
InsertItem
Instance
instanceFactory
intent
Interactive
Interlocked
Intern
InternalError
InternalName
InternalsVisibleToAttribute
internalTokenReference
InternetProtocol
InternetProtocolPassword
InternetProtocolPasswordString
InternetProtocolString
IntPtrHelper
Invalid AsyncResult.
InvalidAsyncResult
InvalidCastException
InvalidCustomKeyWrapAlgorithm
InvalidDataReferenceInReferenceList
InvalidEnumArgumentException
InvalidHexString
InvalidNtMapping
InvalidOperationException
InValidParameter
InvalidRequest
InvalidRequestException
InvalidRequestFaultCode
InvalidScope
InvalidSecurity
InvalidSecurityFaultCode
InvalidSecurityToken
InvalidSecurityTokenFaultCode
InvalidServiceBindingInSspiNegotiationNoServiceBinding
InvalidServiceBindingInSspiNegotiationServiceBindingNotMatched
InvalidTimeRange
InvalidToken
InvalidX509RawData
InvalidXmlQualifiedName
InvokeFinalHandler
IPAddress
ipAddress
IPermission
IPrefixGenerator
IsAssertionIdValid
IsAssignableFrom
IsAsymmetricAlgorithm
isAuthenticated
isBase64
isCanonicalizationMethod
IsChainIncluded
isChainIncluded
IsCurrentlyTimeEffective
isDefault
IsDefined
ISecurityElement
isEmptyElement
ISerializable
IsEtwEventEnabled
IsEventEnabled
IsExpired
isExplicitDispose
IsFatal
isForAttribute
isGssBlob
ISignatureReaderProvider
ISignatureValueSecurityElement
isImpersonating
IsInterned
IsKey
IsKnownType
IsLocalName
IsMatchingValueType
IsNamespaceUri
IsNegotiateExPackagePresent
IsNil
IsNullOrEmpty
IsNullOrWhiteSpace
isOptionalTokenProperty
IsPossibleUpn
isPublic
isReadOnly
IsRequired
IsSaml2Assertion
IsSaml2KeyIdentifierClause
isServer
isSha256
ISspiNegotiation
ISspiNegotiationInfo
IsSspiPromptingNeeded
IsStartElement
IsStrTranform
issuance
issuances
IssueCard
IssuedTokenEncryptionAlgorithm
issuedTokenEncryptionAlgorithm
IssuedTokens
IssuedTokensHeader
issuedTokenSignatureAlgorithm
IssueFinalResponse
IssueInstant
issueInstant
Issuer
issuer
issuerCertificateRevocationMode
IssuerCertificateRevocationMode
issuerCertificateTrustedStoreLocation
IssuerCertificateTrustedStoreLocation
IssuerCertificateValidationMode
issuerCertificateValidationMode
issuerCertificateValidator
IssuerCertificateValidator
issuerCertificateValidator
issuerEntropy
IssuerListInfoEx
issuerName
IssuerName
issuerNameRegistry
IssuerNameRegistryElement
IssuerNamesOffered
IssuerRef
issuerResolver
issuerSerialNumber
issuerToken
issuerTokenResolver
IsSupportedAlgorithm
IsSwitchEnabled
IsSwitchEnabledLocal
IsSymmetricAlgorithm
IsSymmetricSupportedAlgorithm
IStreamProvider
IsValidXmlIDValue
IsVolatile
IsWeakKey
IsWellFormedUriString
IsWhitespace
ISystem.IdentityModel.Services, PublicKey=00000000000000000400000000000000
items
iThe custom crypto algorithm '{0}' obtained using CryptoConfig is not a valid or supported hash algorithm.
IThe 'Identifier' string for the SamlNameIdentifier being read is missing.
IThe 'Name' for the SamlAttribute being read is missing or is of length 0.
IThe name of a locality, such as a city, county or other geographic region
iThe 'Resource' attribute for the SamlAuthorizationDecisionStatement being read is missing or of length 0.
IThe token resolver is unable to resolve the security key reference '{0}'.
ITypeDescriptorContext
IVValue
IWrappedTokenKeyResolver
IXmlBinaryWriterInitializer
IXmlDictionary
IXmlLineInfo
IXmlNamespaceResolver
IXmlTextWriterInitializer
jID3012: UseKey in a RequestSecurityToken object must have a valid SecurityToken in order to be serialized.
JID4106: A Saml2Assertion with no SAML Statements must have a SAML Subject.
jID4111: A <saml:SubjectConfirmationData> element cannot be empty when of type KeyInfoConfirmationDataType.
JID4203: SAML AuthorityBinding does not contain a valid Location specified.
jID7028: 'Custom' was specified as the certificate validation mode, but no custom validator type was found.
jThe SamlAttributeStatement being read does not contain any 'SamlAttribute' elements.  This is not allowed.
JThis SecurityKeyIdentifier does not have any clause that can create a key.
jY1)(
k~K4E?
k8Udl
KERB_CERTIFICATE_S4U_LOGON
KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_DUPLICATES
KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_LOGONHOURS
KERB_LOGON_SUBMIT_TYPE
KerbCertificateLogon
KerbCertificateS4ULogon
KerbCertificateUnlockLogon
kerberos
Kerberos
KerberosApReqInvalidOrOutOfMemory
KerberosCertificateLogon
KerberosHashStrEntry
KerberosHashValueType
KerberosMultilegsNotSupported
KerberosReceiverSecurityToken
KerberosRequestorSecurityToken
KerberosSecurityTokenAuthenticator
KerberosSecurityTokenHandler
KerberosSecurityTokenProvider
KerberosString
KerberosTicketHashKeyIdentifierClause
KerberosTicketHashKeyIdentifierClause(Hash = {0})
KerberosTokenEntry
kerberosTokenHandlerRequirement
KerberosTokenHandlerRequirement
KerberosTokenProfileNamespace
KerberosTokenType1510
KerberosTokenTypeGSS
KerbInteractiveLogon
KerbProxyLogon
KerbS4ULogon
KerbSmartCardLogon
KerbSmartCardUnlockLogon
KerbTicketLogon
KerbTicketUnlockLogon
KerbWorkstationUnlockLogon
KERNEL32
kernel32.dll
keyArgument
keyCallback
KeyCollection
keyComparer
keyContainerInfo
keyData
keyDescriptor
KeyDescriptor
keyDescriptor
KeyedCollection`2
keyEffectiveTime
KeyEffectiveTime
KeyExchangeAlg
KeyExchKeySize
keyExpirationTime
KeyExpiryTime
KeyGeneration
keyHandle
keyIdentifer
KeyIdentifier
keyIdentifier
KeyIdentifierCannotCreateKey
keyIdentifierClause
KeyIdentifierClauseDoesNotSupportKeyCreation
keyIdentifierClauseEntries
keyIdentifierEntries
KeyIdentifierEntry
keyIdentifiers
KeyInfo
KeyInfoConfirmationDataType
KeyInfoEntry
keyLength
KeyLengthMustBeMultipleOfEight
KeyName
keyName
KeyName
keyName
KeyNameClauseEntry
KeyNameIdentifierClause
KeyNameIdentifierClause(KeyName = '{0}')
KeyReference
KeySize
keySize
KeySize
keySizeInBits
keySizeProperty
KeySizeValue
keyToBeWrapped
keyToWrap
KeyType
keyType
KeyType
keyTypeProperty
keyUsageProperty
KeyValue
KeyValueClauseEntry
KeyValuePair`2
keyWrapAlgorithm
KeyWrapAlgorithm
keyWrappingAlgorithm
KID0005: The input '{0}' collection does not contain a property named '{1}'.
KID1034: The SamlSecurityToken must have a value for its Assertion property.
KID4092: SAML AttributeStatement does not contain the required SAML Subject.
KID4289: Unrecognized Claim found while deserializing cookie ('{0}', '{1}').
kID4294: The default implementation of SecurityTokenCache does not implement the TryRemoveAllEntries method.
kIx:T
KnILk
knownCertificates
knownClaimTypes
KP_IV
KThe 'Issuer' for the SamlAssertion being read is missing or is of length 0.
KThe 'Namespace' for the SamlAttribute being read is missing or of length 0.
kThe token requirement has an unexpected type '{1}' for property '{0}'. The expected property type is '{2}'.
kThe token Serializer cannot serialize '{0}'.  If this is a custom type you must supply a custom serializer.
L&*H$_Z
L0J0H
LA SamlAudienceRestrictionCondition must contain at least one Audience (URI).
Label
label
Label
Lambda
LambdaExpression
language
LanguageLocalName
LanguageLocalname
LanguageNamespaceUri
LanguagePrefix
Last Name
LastByte
LastIndexOf
Lazy`1
lChainIndex
LegacyDiagnosticTrace
Legal_Policy_Statement
Legal_policy_statement
LegalCopyright
lElementIndex
length
Length
LengthMustBeGreaterThanZero
LengthOfArrayToConvertMustGreaterThanZero
LengthSize
level
LevelUpRsa
LID0009: The cache size after purge must be less than the maximum cache size.
LID2100: At least one certificate must be specified in the certificate chain.
lID3260: The root element of a metadata document must be either an EntityDescriptor or an EntitiesDescriptor.
LID3274: The RoleDescriptor of type '{0}' was dropped as it is not supported.
lID4108: A Saml2Subject that does not specify an NameId cannot have an empty SubjectConfirmations collection.
LID4115: A <saml:Conditions> element contained more than one '{0}' condition.
LID4192: The reader is not positioned on a KeyInfo element that can be read. 
lID4229: The session Id '{0}' found in the cookie, does not match the session Id '{1}' found in the envelope.
LID4237: The SecurityToken was not well formed, cannot read the cookie bytes.
LifeSpan
LifeSpan_Struct
lifetime
Lifetime
lifetime
LimitExceededException
LinkedList`1
LinkedListNode`1
LoadCondition
LoadConditions
loadConfig
LoadConfiguration
LoadCustomConfiguration
loader
LoadHandlerConfiguration
LoadHandlers
LoadXml
LOCAL AUTHORITY
LocalAppContext
LocalAppContextSwitches
LocalCertificate
LocalGroups
localId
LocalIdCannotBeEmpty
LocalIdKeyIdentifierClause
LocalIdKeyIdentifierClause(LocalId = '{0}', Owner = '{1}')
locality
LocalityDescription
LocalityText
LocalizedEntry
LocalizedEntryCollection`1
LocalMachine
localName
localReader
LocalReferenceStrEntry
Location
location
Location
lockObject
Login with your credentials.
LogonDenied
logonID
LogonId
logonProcessName
LookupDictionaryString
LookupNamespace
LookupPrefix
LookupPrivilegeValueW
lowChar
LowPart
lpName
lpSystemName
lpszDomain
lpszPassword
lpszStoreProvider
lpszUserName
LsaConnectUntrusted
LsaDeregisterLogonProcess
LsaFreeReturnBuffer
LsaHandle
lsaHandle
LsaKerberosName
LsaLogonUser
LsaLookupAuthenticationPackage
LsaNtStatusToWinError
LsaRegisterLogonProcess
LsaSourceName
lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
lThe {0} X.509 certificate cannot be mapped to a Windows account. The UPN subject alternate name is required.
LThe 'assertionId' '{0}' for a SamlAssertion must start with a letter or '_'.
lThe 'AuthenticationMethod' attribute being read for a SamlAuthenticationStatement is missing or of length 0.
LThe EncryptedData or EncryptedKey is in an invalid state for this operation.
LThe 'Namespace' specified for a SamlAttribute cannot be null or of length 0.
lThe SamlAudienceRestrictionCondition being read must contain at least one 'Audience' value. None were found.
LThe specified algorithm '{0}' and the rsa security token's key do not match.
lThere was an error serializing the security key identifier. Please see the inner exception for more details.
LUID_AND_ATTRIBUTES
LuidFromPrivilege
luids
M0K0I
MailAddress
mailAddress
MailAddressClaim
MajorVersion
MakeByRefType
MakeGenericType
MakeReadOnly
MakeRelativeUri
MakeTokenHeader
ManagedPsha1
ManualResetEvent
manualResetEvent
mappingTable
MapRevocationFlags
mapToWindows
MapX509StoreFlags
Marshal
MatchesBuffer
MatchesKeyIdentifierClause
MatchesSingleton
mAuthenticating to a service running under a user account which requires Kerberos multilegs, is not supported.
maxBufferPoolSize
maxBufferSize
maxClockSkew
maxCount
MaxDomainNameMapSize
maximumClockSkew
MaximumLength
maximumLength
maximumMessage
maximumSize
MaximumWorkingSetSize
MaxLength
MaxSignature
maxSize
maxSizeOfHeaders
maxSizeQuota
MaxToken
maxValue
MaxValueString
MaxWait
MemberInfo
MembershipProvider
membershipProviderName
MembershipProviderName
memory
message
MessageAltered
MessageExpired
MessageType
metadata
metadataBase
MetadataBase
MetadataReference
MetadataSerializationException
MetadataSerializer
Method
method
Method
method
MethodInfo
methodName
MgmtData
Microsoft
Microsoft Code Signing PCA
Microsoft Code Signing PCA 2010
Microsoft Code Signing PCA 20100
Microsoft Code Signing PCA 2011
Microsoft Code Signing PCA 20110
Microsoft Code Signing PCA0
Microsoft Corporation
Microsoft Corporation0
Microsoft Corporation1
Microsoft Corporation1!0
Microsoft Corporation1#0!
Microsoft Corporation1&0$
Microsoft Corporation1(0&
Microsoft Corporation1200
Microsoft Time-Stamp PCA
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp PCA0
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.Win32
Microsoft.Win32.SafeHandles
microsoft1-0+
MicrosoftJScript
MicrosoftPublicKey
MicrosoftPublicKeyFull
MicrosoftPublicKeyToken
MicrosoftVisualStudio
MicrosoftVisualStudioWeb
MicrosoftVisualStudioWindowsForms
MicrosoftVSDesigner
MicrosoftVSDesignerMobile
MicrosoftWebDesign
MID4093: SAML AttributeStatement does not contain any SAML Attribute elements.
mID4131: A Saml2SecurityToken cannot be created from the Saml2Assertion because it has no SubjectConfirmation.
MimeType
MimeTypeAttribute
MinimumWorkingSetSize
MinLength
MinorVersion
minValue
MinValueString
MissingPrivateKey
Mobile Phone
MobileOneFactorContract
MobileOneFactorContractString
MobileOneFactorUnregistered
MobileOneFactorUnregisteredString
mobilephone
MobilePhoneDescription
MobilePhoneText
MobileTwoFactorContract
MobileTwoFactorContractString
MobileTwoFactorUnregistered
MobileTwoFactorUnregisteredString
ModeValue
moduleName
Modulus
Monitor
MOPR1
MOPR1'0%
MostlySingletonList`1
MoveNext
MoveToAttribute
MoveToContent
MoveToElement
MoveToFirst
MoveToFirstAttribute
MoveToNext
MoveToNextAttribute
MoveToStartElement
mruEntry
mruList
MruSessionSecurityTokenCache
mscoree.dll
Mscorlib
mscorlib
mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
mThe 'AuthenticationInstant' attribute being read for a SamlAuthenticationStatement is missing or of length 0.
mThe custom crypto algorithm '{0}'obtained using CryptoConfig is not a valid or supported symmetric algorithm.
MThe 'Name' specified for a SamlNameIdentifier can not be null or of length 0.
mThe NetworkCredentials provided were unable to create a Kerberos credential, see inner exception for details.
MThe SamlAuthenticationStatement is missing the required SamlSubjectStatement.
MThe security token authenticator '{0}' cannot validate a token of type '{1}'.
MulticastDelegate
MultipleKeyIdentifiersInReference
MultipleSamlAuthorityBindingsInReference
MustRunAcceptSecurityContext
MustRunInitializeSecurityContext
MutualAuth
n-}ntO
N=|)H
n0H{>RI
N0L0J
name.Name
NameCanonical
NameCanonicalEx
NameClaim
nameClaimType
NameClaimType
nameClaimType
NameDES
NameDescription
NameDH_Ephem
NameDisplay
NameDnsDomainName
nameFormat
NameFormat
NameFullyQualifiedDN
nameId
NameID
nameidentifier
NameIdentifier
NameIDFormat
nameIdFormats
NameIDType
NameOffest
nameQualifier
NameQualifier
NameRC2
NameRC4
names
NameSamCompatible
NameServicePrincipalName
NameSHA
NameSkipJack
Namespace
nameSpace
Namespace
Namespace.http://schemas.xmlsoap.org/ws/2005/05/identity3
NamespaceAttributePrefix
namespaceQualifiedTypeName
namespaceResolver
namespaceUri
namespaceURI
NameText
NameUniqueId
NameUnknown
NameUserPrincipalName
Native
nativeBuffer
NativeMethods
navigator
nCipher DSE ESN:12B4-2D5F-87D41%0#
nCipher DSE ESN:31C5-30BA-7C911%0#
nCipher DSE ESN:843D-37F6-F1041%0#
nCipher NTS ESN:2665-4C3F-C5DE1+0)
NCName
needToRevert
Negate
Negotiate
NegotiationInfoClass
NegotiationState
negotiationState
NegotiationStateOffset
Network
networkCredential
NeutralResourcesLanguageAttribute
Never
NewDefaultEncryption
NewExpression
NewGuid
NewHmacSha1KeyedHashAlgorithm
NewHmacSha256KeyedHashAlgorithm
newNode
NewRijndaelSymmetricAlgorithm
NewSha1HashAlgorithm
NewSha256HashAlgorithm
newState
nextId
NID0011: The attribute '{0}' in the element '{1}' must be a valid absolute URI.
NID1002: The private key of the certificate is not a RSA key.
NID4011: A SecurityTokenHandler is not registered to validate token type '{0}'.
nID4024: The EncryptedSecurityTokenHandler can only write SecurityToken objects of type EncryptedSecurityToken.
nID4151: The token cannot be validated by the Saml2SecurityTokenHandler because it is not a Saml2SecurityToken.
NID4191: A ReferenceList must contain at least one reference, none were found. 
nID4232: The SecurityToken was not well formed. This version was unexpected '{0}', acceptable version is '{1}'.
NID4256: A custom certificate validation mode is not a supported configuration.
NID4269: A SamlAudienceRestrictionCondition must specify at least one audience.
No AudienceUris were specified but were expected. This can be resolved by making configuration changes to the 'issuedTokenAuthentication' element in the 'serviceBehaviors' section.  You can add valid uris using the 'allowedAudienceUris' element.  This check can also be changed using the 'audienceUriMode' attribute.  At runtime setting the IssuedTokenAuthentication object's properties: AllowedAudienceUris and AudienceUriMode will have similar results.
No private key is available.
NoCheck
NoCredentials
NoDefaultCred
nodeList
nodelist
nodeType
NoInputIsSetForCanonicalization
NoKeyIdentifierClauseFound
NoKeyInfoClausesToWrite
NomadTelephony
NomadTelephonyString
NoNameCheck
nonce
Nonce
nonce
Nonce
NonceBinarySecret
NonceElement
NoneUserNamePasswordValidator
NoneX509CertificateValidator
NonPagedPoolLimit
NoPrivateKeyAvailable
Normalize
NormalizeAuthenticationContextClassReference
NormalizeAuthenticationType
Normalized
normalizedAuthenticationType
NormalizeEmptyString
NoSuchPackage
NoSystemMapper
NotBefore
notBefore
NotBefore: '{0}'
NotImplementedException
NotOnOrAfter
NotOnOrAfter: '{0}'
NotOwner
not-real-subject-name
NotSupportedException
NTAccount
ntAuthChainTrust
nThe custom crypto algorithm '{0}'obtained using CryptoConfig is not a valid or supported keyed hash algorithm.
NThe MajorVersion for the SamAssertion being read is missing or is of length 0.
NThe padding mode {0} is not supported.  Only PKCS7 and ISO10126 is supported. 
nThe SamlSubjectConfirmation requires a Confirmation method when the Confirmation Data or KeyInfo is specified.
NTheMinorVersion for the SamlAssertion being read is missing or is of length 0.
Nullable`1
Nwl}l
o%"Adx
O0M0K
OaepParams
OAEPparams
OaepSHA1
OaepSha1Decrypt
OaepSha1Encrypt
OasisWssSaml2TokenProfile11
OasisWssSamlTokenProfile11
object
Object
ObjectDisposedException
ObjectIsReadOnly
Offline
offset
Offset
OffsetOf
offsetOne
offsetTwo
OID2058: Cannot compute the combined entropy if the source entropy size is zero.
oID3021: RequestedProofToken in RequestSecurityTokenResponse must contain ComputedKeyAlgorithm or SecurityToken.
oID3276: The signing credentials cannot be resolved because signed XML does not contain a SecurityKeyIdentifier.
OID4068: Unrecognized encoding occurred while reading the binary security token.
OID4124: The SAML2:AttributeStatement must contain at least one SAML2:Attribute.
OID4188: The reader is not positioned on a CipherData element that can be read. 
OID4213: Cannot parse the ClaimType '{0}' into a constituent name and namespace.
OidCollection
OidEnumerator
OInitializeSecurityContent failed. Ensure the service principal name is correct.
oK0D$"<
OnBehalfOf
OnDeserialized
OnDeserializedAttribute
OnDeserializeUnrecognizedAttribute
OnDeserializeUnrecognizedElement
One of the attributeValues found in the SamlAttribute was found to be a null value.  Ensure that lists are not null when creating the SamlAttribute.
OnEndOfContent
OnEndRootElement
oneTimeUse
OneTimeUse
OneTimeUseType
OnGetOutputClaimsIdentityComplete
OnGetScopeComplete
Online
OnRequiredAttributeMissing
OnRequiredElementMissing
onStartElement
OnUnexpectedChildNodeError
OnXmlDictionaryReaderClose
op_Addition
op_Equality
op_Explicit
op_GreaterThan
op_GreaterThanOrEqual
op_Inequality
op_LessThan
op_LessThanOrEqual
op_Subtraction
op_UnaryNegation
openAsSelf
openDelegate
openFlags
OpenFlags
OpenObject
OpenProcessToken
OpenSection
OpenStore
OpenSubKey
OpenThreadToken
OperatingSystem
optimizedNcNamePrefix
OptimizeString
optional
Optional
Options
Organization
organization
Organization
organization.DisplayNames
organization.Names
organization.Urls
OrganizationDisplayName
OrganizationName
OrganizationURL
OrganizationUrl
origin
OriginalFilename
OriginalIssuer
originalNode
OriginalSize
OriginName
OThe ReferenceList element must have at least one DataReference or KeyReference.
other
Other
Other Phone
otherDictionary
otherphone
OtherPhoneDescription
OtherPhoneText
Outbound
outbound
outboundClaimsFilter
OutboundClaimsFilter
outContext
outContextPtr
outCredential
outFlags
outOfBandTokenResolver
outputBuffer
outputFormat
outputOffset
outputString
outSecBuffer
OverflowException
ownerType
ownerTypes
ownsHandle
ownsRsa
p*r 6
p*r!Z
p*r".
p*r"D
p*r#^
p*r#W
p*r(7
p*r(E
p*r)<
p*r)>
p*r*6
p*r,E
p*r/B
p*r:7
p*r;@
p*r;T
p*r'?
p*r?T
p*r@C
p*r[?
p*r[_
p*r\:
p*r]c
p*r_@
p*r{'
p*r{Z
p*r-+
p*r+=
p*r<-
p*r<C
p*r=]
p*r=^
p*r=`
p*r=<
p*r1%
p*r1@
p*r4,
p*r4L
p*r6:
p*r7(
p*r7A
p*r7V
p*r8E
p*r9e
p*r9Z
p*r'a
p*rA?
p*raS
p*rAS
p*rAX
p*rAY
p*rB0
p*rb6
p*rbC
p*rBD
p*rcZ
p*rdE
p*re=
p*rF:
p*rF6
p*rFO
p*rg\
p*rg>
p*rhG
p*rhj
p*ri`
p*rJ1
p*rj6
p*rJE
p*rjk
p*rK&
p*rK`
p*rKR
p*rL.
p*rm^
p*rn9
p*ro;
p*rO@
p*roS
p*rPC
p*rqp
p*rqY
p*rrn
p*rro
p*rT/
p*rtC
p*rU<
p*rui
p*rUY
p*rvE
p*rw`
p*rw>
p*rwb
p*rWd
p*rYU
p*rZ9
p*rZJ
package
PackageList
PackageListLength
packageName
PackageNotFound
paddingMode
PaddingMode
PaddingValue
PADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDING
PADPADP
PagefileLimit
palgSupportedAlgs
ParamArrayAttribute
ParameterExpression
ParameterModifier
parent
parentDictionary
parentElement
parentName
ParseExact
ParseTargetFrameworkName
Participant
Participants
PassiveRequestorEndpoint
PassiveRequestorEndpoints
passiveRequestorEndpoints
password
Password
PasswordElement
PasswordLength
PasswordProtectedTransport
PasswordProtectedTransportString
PasswordText
PasswordTextName
pbCertEncoded
pbData
pbDataPtr
pBindings
pCertContext
pCertInfo
pChainPara
PctClient
PctServer
peerAuthenticationMode
PeerOrChainTrust
peerOrChainTrust
PeerTrust
peerTrust
PeerTrust
PeerTrustValidator
PermissionSet
PermissionState
Permit
persistentSessionLifetime
PersistentSessionLifetime
PersistentString
PersistentTrue
PersonalTelephony
PersonalTelephonyString
pfEnabled
pfSave
PgpString
phContext
phKey
phMappers
phProv
phToken
PID4004: An exception occurred during the execution of an asynchronous operation.
PID4099: SAML AuthenticationStatement does not contain the required SAML Subject.
pID4173: The Saml2Assertion cannot specify ExternalEncryptedKeys unless EncryptingCredentials are also specified.
PID4270: The '{0}' used to create a '{1}' AuthenticationStatement cannot be null.
PKCS_7_ASN_ENCODING
Pkcs1
Pkcs1Decrypt
Pkcs1Encrypt
Pkcs1SignData
Pkcs1VerifyData
Pkcs7AsnEncoding
Pkcs7NdrEncoding
PKerberos*
pkgArray
pkgnum
plainText
PLAINTEXTKEYBLOB
PLAINTEXTKEYBLOBHEADER
platformIdentifier
policy
PolicyEnforcement
policyHelper
Pool`1
PopulateClaimDescriptionMap
PopulateClaimTagMap
PopulateDefaultValues
PopulateDefaultValuesPartial
PopulateDictionary
PopulateJan2004StrEntries
PopulateJan2004TokenEntries
PopulateKeyIdentifierClauseEntries
PopulateKeyIdentifierEntries
PopulateStrEntries
PopulateTokenEntries
position
possessProperty
Postal Code
postalcode
PostalCodeDescription
PostalCodeText
powersOfTwo
ppAuthIdentity
ppChainContext
PPIDDescription
PPIDText
pPolicyPara
pPolicyStatus
pPrevCertContext
ppStoreContext
preCanonicalBytes
PreDigestedSignedInfo
PreferredPrefix
prefix
PrefixList
prefixList
PrepareConstrainedRegions
preserveComments
previousException
PreviousSession
PreviousSessionString
previousState
Primary
primaryIdentity
principal
Private
PrivateBuild
privateKey
privateKeyAvailabilityDetermined
PrivateKeyExchangeNotSupported
PrivateKeyNotDSA
PrivateKeyNotRSA
PrivateKeyNotSupported
privateKeyStatus
PrivateKeyStatus
privilege
PrivilegeCount
PrivilegeNotHeldException
ProcessAndDigest
ProcessAttributeStatement
ProcessAuthenticationStatement
ProcessAuthorizationDecisionStatement
ProcessReaderInput
ProcessSamlSubject
ProcessStatement
processToken
ProductConstants
ProductName
ProductVersion
Profile
profile
PROFILE_DATA
ProfileBuffer
ProfileBufferLength
proofDescriptor
ProofEncryption
proofToken
Properties
properties
Properties
Property name: '{0}'
PropertyInfo
PropertyInformation
PropertyInformationCollection
propertyName
PropertyValueOrigin
Protect
ProtectedData
ProtectedDataCookieTransform
protectedKey
protection
protectionPolicy
ProtectionScenario
protocols
protocolsSupported
protocolSupportEnumeration
PROV_RSA_AES
provHandle
ProvidedNetworkCredentialsForKerberosHasInvalidUserName
provider
Proxy
proxyRestriction
ProxyRestriction
ProxyRestrictionType
ProxyRestricton
PseudonymServiceEndpoint
PSHA1
Psha1ComputedKeyUri
Psha1DerivedKeyGenerator
Psha1KeyDerivation
Psha1KeyDerivationDec2005
pszCaptionText
pszContainer
pszMessageText
pszPackage
pszPolicyOID
pszProvider
pszTargetName
pThe major version {0} and minor version {1} are not supported.  Versions supported are: Major {2} and Minor {3}.
pTime
PtrToStringUni
PtrToStructure
pubid
Public
publicKey
publicKeyAvailabilityDetermined
PublicKeyNotDSA
PublicKeyNotRSA
PublicKeyNotSupported
PublicKeyType
pUiInfo
purgeInterval
purgeLock
pvExtraPolicyPara
pvExtraPolicyStatus
pvFindPara
pvPara
pvReserved
PXz'd
q_5&T
QA 'ConfirmationMethod' cannot be found on the SamlSubjectConfirmation being read.
QEX82q'
qID3216: WS-Trust message has an empty 'Issuer'. The element must contain an EndpointAddress as its child element.
QID4060: The element ({0}, {1}) is not supported as a child element of ({2}, {3}).
QID4206: SAML AuthorizationDecisionStatement is missing the required SAML Subject.
QID6001: The key identifier must be set before writing the encrypted data element.
qID7007: The type '{0}' cannot be resolved. Verify the spelling is correct or that the full type name is provided.
qID8023: Element: name='{0}' namespace='{1}' was encountered in a <KeyInfo> element: '{2}' and was not processed. 
qname
QSamlEvidence must reference at least one SamlAssertion either by Id or reference.
qstring
QThe {0} bits key is not supported.  Only 128, 192 and 256 bits key is supported. 
qThe required 'NameIdentifier' and the 'ConfrimationMethod' elements are not found for the SamlSubject being read.
qThe username is in an invalid format. The username format must be in the form of "username' or 'domain\username'.
qualityOfProtection
QueryContextAttributes
QueryContextAttributesW
QuerySecurityContextToken
QuerySpecifiedTarget
QUOTA_LIMITS
quotaExceededString
quotas
r:xcf.
r~akow
R0P0N
Random
RandomSaltSize
ratorStateMachineAttribute
RAuthentication of a username/password using {0} failed. User is not authenticated.
rawData
Read7HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Lsa
ReadAction
ReadAdditionalAttributes
ReadAdditionalElements
ReadAdvice
ReadApplicationServiceDescriptor
ReadAppliesTo
ReadAssertion
ReadAttribute
ReadAttributes
ReadAttributeStatement
ReadAttributeValue
ReadAudienceRestriction
ReadAudienceRestrictionCondition
ReadAuthenticationContext
ReadAuthenticationStatement
ReadAuthorityBinding
ReadAuthorizationDecisionStatement
ReadBinaryExchange
ReadBinarySecretSecurityToken
ReadBytes
ReadCanonicalizationMethod
ReadCipherData
ReadClaimProperties
ReadClaims
ReadComputedKeyAlgorithm
ReadCondition
ReadConditions
ReadContactPerson
ReadContentAs
ReadContentAsBase64
ReadContentAsBinHex
ReadContentAsBoolean
ReadContentAsDateTime
ReadContentAsDecimal
ReadContentAsDouble
ReadContentAsFloat
ReadContentAsInt
ReadContentAsLong
ReadContentAsString
ReadContentAsUniqueId
ReadCustomAttributes
ReadCustomElement
ReadCustomRoleDescriptor
ReadDisplayClaim
ReadDoNotCacheCondition
ReadElementContentAsBase64
ReadElementContentAsBinHex
ReadElementContentAsBoolean
ReadElementContentAsInt64
ReadElementContentAsString
ReadElementContentAsUniqueId
ReadElementString
ReadEmptyContentElement
ReadEmptyElementAndRequiredAttribute
ReadEncryptedId
ReadEndElement
ReadEntitiesDescriptor
ReadEntityDescriptor
reader
readerProvider
ReaderWriterLock
ReadEvidence
ReadExtensions
ReadFullStartElement
ReadGenericXmlSecurityKeyIdentifier
ReadIdentities
ReadIdentity
ReadIdentityProviderSingleSignOnDescriptor
ReadIndexedProtocolEndpoint
ReadInnerXml
ReadInt16
ReadInt32
ReadIntPtr
ReadIssuer
ReadKeyDescriptor
ReadKeyIdentifierClause
ReadKeyType
ReadLength
ReadLifetime
ReadLocalizedName
ReadLocalizedUri
ReadMetadata
ReadMetadataCore
ReadNameId
ReadNameIdType
ReadNode
ReadOnBehalfOfIssuer
readOnlyClaimSets
ReadOnlyCollectionBase
ReadOrganization
ReadOuterXml
ReadPrincipal
ReadProtectedKey
ReadProtocolEndpoint
ReadProxyRestriction
ReadRequestType
ReadRightAttribute
ReadRoleDescriptorAttributes
ReadRoleDescriptorElement
ReadRSTRXml
ReadRSTXml
ReadSecondaryParameters
ReadSecurityToken
ReadSecurityTokenServiceDescriptor
ReadServiceProviderSingleSignOnDescriptor
ReadSignatureMethod
ReadSigningKeyInfo
ReadSimpleNCNameElement
ReadSimpleUriElement
ReadSingleSignOnDescriptorAttributes
ReadSingleSignOnDescriptorElement
ReadStartElement
ReadStatement
ReadStatus
ReadString
ReadSubject
ReadSubjectConfirmation
ReadSubjectConfirmationData
ReadSubjectId
ReadSubjectKeyInfo
ReadSubjectLocality
ReadSubtree
ReadTextElementAsTrimmedString
ReadToken
ReadTokenType
ReadWebServiceDescriptorAttributes
ReadWebServiceDescriptorElement
ReadXml
ReadXmlElement
RealmName
Reason
ReceivedEncryptingCredentials
receiverEntropy
Recipient
RecipientAttribute
recordDone
RecordExpirationTime
Redmond1
refContext
Reference
reference
Reference
referenceCount
ReferenceEntry
referenceId
ReferenceList
referenceList
ReferenceList
ReferenceListCannotBeEmpty
ReferenceModeTrue
references
referenceXml
referredId
referredIds
refHandle
RegistryPermissionAttribute
Reinitialize
RelAssertionDirectKeyIdentifierClause
RelAssertionValueType
RelDirectStrEntry
ReleaseHandle
ReleaseReaderLock
ReleaseWriterLock
ReliabilityContractAttribute
relyingPartyAddress
RemoteCertificate
remove
RemoveAll
RemoveAt
RemoveChild
RemoveFromDictionaries
RemoveItem
RemoveLast
Renegotiate
Renew
RenewFinalResponse
Renewing
RenewNeeded
RenewNeededFaultCode
RenewTarget
replaced
ReplayDetect
replyTo
ReplyTo
request
RequestClaim
RequestClaimCollection
RequestedAttachedReference
RequestedIssuancePolicy
requestedIssuerName
RequestedProofToken
RequestedSecurityToken
RequestedTokenCancelled
RequestedTokenClosed
RequestedTokenReference
requestedTokenType
RequestedUnattachedReference
RequestedUsage
RequestFailed
RequestFailedException
RequestKeySize
requestKeySize
RequestKeySize
requestLifetime
requestorEntropy
RequestSecurityContextClose
RequestSecurityContextCloseResponse
RequestSecurityContextIssuance
RequestSecurityContextIssuanceResponse
RequestSecurityContextRenew
RequestSecurityContextRenewResponse
RequestSecurityToken
requestSecurityToken
RequestSecurityToken
RequestSecurityTokenCancellation
RequestSecurityTokenCancellationResponse
RequestSecurityTokenCollectionCancellationFinalResponse
RequestSecurityTokenCollectionIssuanceFinalResponse
RequestSecurityTokenCollectionRenewalFinalResponse
RequestSecurityTokenIssuance
RequestSecurityTokenIssuanceResponse
RequestSecurityTokenRenewal
RequestSecurityTokenRenewalResponse
RequestSecurityTokenResponse
requestSecurityTokenResponse
RequestSecurityTokenResponse
RequestSecurityTokenResponseCollection
requestSecurityTokenResponseCollection
requestSerializer
RequestType
requestType
RequestTypeClose
RequestTypeIssue
RequestTypeRenew
requireCryptographicTokenProperty
RequiredAttributeMissing
requireDeclaration
RequiredTargetNotSigned
requiresPrivateKey
reserved
reservedI
reservedII
ResetAllCertificates
ResetCertificate
resetEvent
Resolve
ResolveClaimSet
resolvedXmlSource
ResolveEntity
ResolveIdentity
ResolveKey
ResolveKeyIdentifierClause
ResolveQName
resolver
resolvers
ResolveSecurityKeys
ResolveSecurityToken
ResolveSigningCredentials
ResolveSubjectKeyIdentifier
Resource
resource
Resource
resourceComparer
resourceCulture
resourceManager
resourceName
resourcePool
response
responseLocation
ResponseLocation
responseSerializer
result
RetrievalMethod
Return
returnLength
reusableUuid
RevertingPrivilegeFailed
RevertToSelf
revocationFlag
revocationMode
rgbIV
rgbKey
RgkzS
rgpChain
rgpLowerQualityChainContext
rgpszUsageIdentifier
RID1001: The certificate does not have an associated private key.
RID2053: The KeyType, if specified, must be either Symmetric, Asymmetric or Bearer.
RID3057: EnvelopedSignature has more than on Reference specified in the SignedInfo.
RID4122: The SAML2:AuthorizationDecisionStatement must specify at least one Action.
RID4187: The reader is not positioned on an EncryptedKey element that can be read. 
rID4251: OriginalIssuer cannot be set to String.Empty. If no OriginalIssuer is intended then set the value to null.
RID4292: The security token of type '{0}' cannot be validated by the '{1}' handler.
RID6005: Exclusive Canonicalization transform does not support the algorithm '{0}'.
RID7004: Configuration errors. Unrecognized attribute '{0}' found in element '{1}'.
Right
right
Right
rightNamespace
Rights
rijndael
RijndaelCryptoServiceProvider
RijndaelCryptoTransform
RijndaelManaged
Ripemd160Digest
RIPEMD160Managed
RNGCryptoServiceProvider
RoleClaimType
roleClaimType
RoleDescription
roleDescriptor
RoleDescriptor
roleDescriptor
RoleDescriptor
roleDescriptor.Contacts
roleDescriptor.Keys
roleDescriptor.ProtocolsSupported
roleDescriptor.TargetScopes
roleDescriptor.TokenTypesOffered
roleDescriptors
RoleText
rootStore
RootStore
RPCID
rsaAlgorithm
RsaClaim
RSACngTypeName
rsaComparer
RSACryptoServiceProvider
RsaEncryptionCookieTransform
RSAEncryptionPaddingTypeName
rsaHandle
rsaKey
RsaKeyIdentifierClause
RsaKeyIdentifierClause(Modulus = {0}, Exponent = {1})
RSAKeyValue
RsaKeyValue
RsaOaepKeyWrap
RsaObjectComparer
RsaOid
RSAParameters
rsaParameters
RSAPKCS1SignatureDeformatter
RSAPKCS1SignatureFormatter
rsaProvider
RsaSecurityKey
rsaSecurityKey
RsaSecurityTokenAuthenticator
RsaSecurityTokenHandler
RsaSha1Signature
rsaSha1Signature
RsaSha256Signature
RsaSignatureCookieTransform
RSASignaturePaddingTypeName
RsaV15KeyWrap
rThe SamlSerializer requires a SecurityTokenSerializer to serialize the SecurityKeyIdentifier present in the token.
rtificatePolicy
RuntimeCompatibilityAttribute
RuntimeFieldHandle
RuntimeHelpers
RuntimeTypeHandle
Rwedc
RwedcNegation
RwedcNegationString
RwedcString
s_canForwardCalls
S_FALSE
s_getDsaPrivateKey
s_getDsaPublicKey
s_getECDsaPrivateKey
s_getECDsaPublicKey
s_getRsaPrivateKey
s_getRsaPublicKey
s_hashAlgorithmNameType
s_oaepSha1EncryptionPadding
s_pkcs1EncryptionPadding
s_pkcs1SignaturePadding
s_preferRsaCng
s_rsaEncryptionPaddingType
s_rsaOaepSha1DecryptMethod
s_rsaOaepSha1EncryptMethod
s_rsaPkcs1DecryptMethod
s_rsaPkcs1EncryptMethod
s_rsaPkcs1SignMethod
s_rsaPkcs1VerifyMethod
s_rsaSignaturePaddingType
s_switchMap
s_syncLock
S0Q0O
SafeCertChainHandle
SafeCertContextHandle
SafeCertStoreHandle
SafeCloseHandle
SafeCryptImportKey
SafeDeleteContext
SafeFreeCertContext
SafeFreeContextBuffer
SafeFreeCredentials
safeHandle
SafeHandleZeroOrMinusOneIsInvalid
SafeHGlobalHandle
SafeKeyHandle
SafeLsaLogonProcessHandle
SafeLsaReturnBufferHandle
SafeProvHandle
saml:Attribute
SAML11
Saml11AssertionValueType
saml11AuthenticationMethod
SAML2
Saml2
Saml20TokenType
Saml2Action
Saml2Advice
Saml2AssertionKeyIdentifierClause( Id = '
Saml2Attribute
Saml2AttributeStatement
Saml2AudienceRestriction
Saml2AuthenticationContext
saml2AuthenticationContextClassReference
Saml2AuthenticationStatement
Saml2AuthorizationDecisionStatement
Saml2Conditions
Saml2Constants
Saml2Evidence
Saml2Id
Saml2Jan2004KeyIdentifierStrEntry
Saml2MetadataConstants
Saml2NameIdentifier
Saml2ProxyRestriction
Saml2SecurityKeyIdentifierClause
Saml2SecurityToken
Saml2SecurityTokenHandler
Saml2Statement
Saml2Subject
Saml2SubjectConfirmation
Saml2SubjectConfirmationData
Saml2SubjectLocality
SamlAccessDecision
SamlAction
SAMLActionNameRequired
SAMLActionNameRequiredOnRead
samlActions
samlAdvice
SamlAdvice
SamlAssertion
SamlAssertionDirectKeyIdentifierClause
SAMLAssertionIDIsInvalid
SAMLAssertionIdRequired
SamlAssertionIdValueType
SAMLAssertionIssuerRequired
SamlAssertionKeyIdentifierClause
SamlAssertionKeyIdentifierClause(AssertionId = '{0}')
SAMLAssertionMissingIssuerAttributeOnRead
SAMLAssertionMissingMajorVersionAttributeOnRead
SAMLAssertionMissingMinorVersionAttributeOnRead
SamlAssertionMissingSigningCredentials
SAMLAssertionRequireOneStatement
SAMLAssertionRequireOneStatementOnRead
SamlAttribute
SamlAttributeClaimResourceShouldBeAString
SamlAttributeClaimRightShouldBePossessProperty
SamlAttributeDisplayName
SamlAttributeKeyComparer
SAMLAttributeMissingNameAttributeOnRead
SAMLAttributeMissingNamespaceAttributeOnRead
SAMLAttributeNameAttributeRequired
SamlAttributeNameFormat
SAMLAttributeNamespaceAttributeRequired
SAMLAttributeShouldHaveOneValue
SamlAttributeStatement
SAMLAttributeStatementMissingAttributeOnRead
SAMLAttributeStatementMissingSubjectOnRead
SAMLAttributeValueCannotBeNull
SamlAudienceRestrictionCondition
SAMLAudienceRestrictionInvalidAudienceValueOnRead
SAMLAudienceRestrictionShouldHaveOneAudience
SAMLAudienceRestrictionShouldHaveOneAudienceOnRead
SAMLAudienceUrisNotFound
SAMLAudienceUriValidationFailed
SamlAuthenticationClaimResource
SamlAuthenticationStatement
SAMLAuthenticationStatementMissingAuthenticationInstanceOnRead
SAMLAuthenticationStatementMissingAuthenticationMethod
SAMLAuthenticationStatementMissingAuthenticationMethodOnRead
SAMLAuthenticationStatementMissingSubject
samlAuthenticator
SamlAuthorityBinding
SAMLAuthorityBindingInvalidAuthorityKind
SAMLAuthorityBindingMissingAuthorityKind
SAMLAuthorityBindingMissingAuthorityKindOnRead
SAMLAuthorityBindingMissingBindingOnRead
SAMLAuthorityBindingMissingLocationOnRead
SAMLAuthorityBindingRequiresBinding
SAMLAuthorityBindingRequiresLocation
SAMLAuthorityKindMissingName
SamlAuthorizationDecisionClaimResource
SAMLAuthorizationDecisionHasMoreThanOneEvidence
SAMLAuthorizationDecisionResourceRequired
SAMLAuthorizationDecisionShouldHaveOneAction
SAMLAuthorizationDecisionShouldHaveOneActionOnRead
SamlAuthorizationDecisionStatement
SAMLAuthorizationDecisionStatementMissingDecisionAttributeOnRead
SAMLAuthorizationDecisionStatementMissingResourceAttributeOnRead
SAMLAuthorizationDecisionStatementMissingSubjectOnRead
SAMLBadSchema
SamlCondition
SamlConditions
samlConditions
SamlConstants
SamlDelegatingWriter
samlDictionary
SamlDirectStrEntry
SamlDoNotCacheCondition
SAMLElementNotRecognized
SAMLEntityCannotBeNullOrEmpty
samlEvidence
SamlEvidence
SAMLEvidenceShouldHaveOneAssertion
SAMLEvidenceShouldHaveOneAssertionOnRead
SamlInvalidSigningToken
SamlJan2004KeyIdentifierStrEntry
SamlNameIdentifierClaimResource
SamlNameIdentifierFormat
samlNameIdentifierFormat
SAMLNameIdentifierMissingIdentifierValueOnRead
SamlNameIdentifierNameQualifier
samlNameIdentifierNameQualifier
SamlNameIdentifierSPNameQualifier
SamlNameIdentifierSPProvidedId
SamlSecurityKeyIdentifierClause
SamlSecurityToken
samlSecurityToken
SamlSecurityToken-
SamlSecurityTokenAuthenticator
SamlSecurityTokenHandler
samlSecurityTokenRequirement
samlSerializer
SamlSerializer
samlSerializer
SamlSerializerRequiresExternalSerializers
SamlSerializerUnableToReadSecurityKeyIdentifier
SamlSerializerUnableToWriteSecurityKeyIdentifier
SAMLSignatureAlreadyRead
SamlSigningTokenMissing
SamlSigningTokenNotFound
SamlStatement
samlStatement
samlStatements
SamlStrings
samlSubject
SAMLSubjectConfirmationClauseMissingConfirmationMethodOnRead
SAMLSubjectNameIdentifierRequiresNameValue
SAMLSubjectRequiresConfirmationMethodWhenConfirmationDataOrKeyInfoIsSpecified
SAMLSubjectRequiresNameIdentifierOrConfirmationMethod
SAMLSubjectRequiresNameIdentifierOrConfirmationMethodOnRead
SamlSubjectStatement
SAMLSubjectStatementRequiresSubject
samlToken
SamlTokenAuthenticatorCanOnlyProcessSamlTokens
SamlTokenEntry
SamlTokenMissingSignature
SAMLTokenNotSerialized
SamlTokenProfileNamespace
SAMLTokenTimeInvalid
SamlTokenType
SAMLTokenVersionNotSupported
SamlUnableToExtractSubjectKey
SAMLUnableToLoadAdvice
SAMLUnableToLoadAssertion
SAMLUnableToLoadAttribute
SAMLUnableToLoadCondtion
SAMLUnableToLoadCondtions
SAMLUnableToLoadStatement
SAMLUnableToLoadUnknownElement
SAMLUnableToResolveSignatureKey
samlUri
SamlUriCannotBeNullOrEmpty
San2Oid
SanOid
SatelliteContractVersionAttribute
saveBootstrapContext
saveCredentials
SchemaLocation
SchProtocols
Scope
scope
Scope
SctAuthorizationPolicy
SE_GROUP_ENABLED
SE_GROUP_LOGON_ID
SE_GROUP_USE_FOR_DENY_ONLY
SE_PRIVILEGE_DISABLED
SE_PRIVILEGE_ENABLED
SE_PRIVILEGE_ENABLED_BY_DEFAULT
SE_PRIVILEGE_USED_FOR_ACCESS
SeAuditPrivilege
SEC_WINNT_AUTH_IDENTITY_EX
second
SecondaryParameters
SECPKG_FLAG_NEGOTIABLE2
SecPkgContext_SessionKey
secret
SecSizes
sectionIndex
SectionName
sections
SECUR32
secur32.dll
secureConversationDec2005Dictionary
SecureConversationDec2005Strings
SecureConversationDictionary
secureConversationFeb2005Dictionary
SecureConversationFeb2005Strings
SecureConversationStrings
SecureConversationTokenIdentifier
SecureConversationVersion
SecureCredential
SecureRemotePassword
SecureRemotePasswordString
SecureRempotePasswordString
Security
SECURITY
Security token validation.
security.Dll
security.dll
security.Dll
security.dll
SECURITY_IMPERSONATION_LEVEL
SecurityAction
securityAlgorithmDec2005Dictionary
SecurityAlgorithmDec2005Strings
securityAlgorithmDictionary
SecurityAlgorithms
SecurityAlgorithmStrings
SecurityBuffer
SecurityBufferDescriptor
SecurityBufferStruct
SecurityChannelBindingMissing
securityContext
SecurityContextKeyIdentifierClause
SecurityContextKeyIdentifierClause(ContextId = '{0}', Generation = '{1}')
securityContextSecurityTokenWrapperSecureConversationVersion
SecurityContextToken
securityContextToken
SecurityContextTokenReferenceValueType
SecurityContextTokenType
SecurityCriticalAttribute
SecurityCriticalScope
SecurityIdentifier
securityJan2004Dictionary
SecurityJan2004Namespace
SecurityJan2004Prefix
SecurityJan2004Strings
securityJanXXX2005Dictionary
SecurityKeyElement
securityKeyIdentifier
SecurityKeyIdentifier
securityKeyIdentifierClause
securityKeyToWrap
SecurityKeyType
SecurityKeyTypeHelper
SecurityKeyUsage
SecurityKeyUsageHelper
SecurityLogonType
SecurityMessageSerializationException
securityMode
SecurityPackageInfo
SecurityPackageInfoClass
securityPackages
SecurityPermissionAttribute
SecurityPermissionFlag
SecurityProfileNamespace
SecurityRulesAttribute
SecurityRuleSet
SecuritySafeCriticalAttribute
SecuritySessionKeyClass
SecurityStatus
SecurityToken
securityToken
SecurityTokenAsyncResult
SecurityTokenCacheSize
securityTokenCacheSize
SecurityTokenCacheType
securityTokenCacheType
SecurityTokenElement
SecurityTokenException
SecurityTokenExpiredException
SecurityTokenHandler
securityTokenHandlerCollection
securityTokenHandlerCollectionManager
securityTokenHandlerConfiguration
SecurityTokenHandlerConfigurationElement
SecurityTokenHandlerElementCollection
securityTokenHandlers
SecurityTokenHandlerSetElementCollection
securityTokenHandlersTU
SecurityTokenManager
SecurityTokenNotYetValidException
SecurityTokenReference
SecurityTokenReferenceJan2004ClauseEntry
SecurityTokenReferenceXXX2005ClauseEntry
SecurityTokenReplayDetectedException
SecurityTokenRequirementDoesNotContainProperty
SecurityTokenRequirementHasInvalidTypeForProperty
securityTokenResolver
securityTokenSerializer
SecurityTokenSerializerAdapter
securityTokenServiceConfiguration
securityTokenServiceDescriptor
securityTokenServiceDescriptor.Endpoints
securityTokenServiceDescriptor.PassiveRequestorEndpoints
SecurityTokenServiceEndpoint
securityTokenServiceEndpoints
SecurityTokenServiceType
SecurityTokenTypes
SecurityTokenUnavailable
SecurityTokenValidationException
SecurityTokenVersion
securityTokenXml
SecurityTraceRecord
SecurityTraceRecordHelper
SecurityTrailer
SecurityUniqueId
SecurityUtils
securityXXX2005Dictionary
SecurityXXX2005Strings
SeekOrigin
SelectPrimaryIdentity
senderEntropy
SenderVouchesString
sendSide
SequenceDetect
sequenceNumber
SerializationInfo
Serialize
serializeCarriedKeyName
serializeCollectionKey
serializerDictionary
SerializerEntries
serializerEntries
SerializeSecurityKeyIdentifier
SerializeSid
SerializeSysClaim
ServerMask
ServiceBindingCheck
ServiceBindingCheckAfterSpNego
serviceBindingNameSentByClient
ServiceBindingNameTraceRecord
serviceCertificate
ServiceDescription
ServiceDisplayName
serviceElement
serviceName
ServiceName
ServiceName on service.
ServiceNameCollection
serviceNameCollectionConfiguredOnServer
ServiceNameFromClient
ServiceNameOnService
servicePrincipalName
serviceProviderdId
serviceProviderPointNameQualifier
serviceProviderSingleSignOnDescriptor
serviceTokenResolver
SessionDictionary
SessionId
sessionIndex
SessionIndex
Sessionkey
sessionKey
SessionKeyLength
sessionKeyLength
SessionkeyOffset
SessionNotOnOrAfter
sessionNotOnOrAfter
sessionSecurityTokenCache
SessionSecurityTokenCacheKey
sessionToken
SessionToken
sessionToken
SessionTokenCookie
sessionTokenRequirement
SessionTokenRequirement
sessionTokenRequirement
set_AccessDecision
set_ActAs
set_Action
set_Actor
set_AddEnvelopedSignatureTransform
set_AdditionalContext
set_Address
set_Advice
set_Algorithm
set_AlgorithmDictionaryString
set_AllowPostdating
set_AllowRenewal
set_ApplicationService
set_AppliesTo
set_AppliesToAddress
set_AssertionId
set_Asymmetric
set_AttachedReference
set_AttributeValueXsiType
set_AudienceMode
set_AudienceRestriction
set_AudienceUriMode
set_AuthenticationContext
set_AuthenticationInfo
set_AuthenticationInstant
set_AuthenticationMethod
set_AuthenticationRequestsSigned
set_AuthenticationType
set_AuthorityKind
set_Bearer
set_BinaryExchange
set_Binding
set_BootstrapContext
set_Caches
set_Cancel
set_CancelResponse
set_CancelTarget
set_CanonicalizationAlgorithm
set_CanonicalizationMethod
set_CanonicalizationMethodDictionaryString
set_CanonicalStream
set_Capacity
set_CarriedKeyName
set_CertificateValidation
set_CertificateValidationMode
set_CertificateValidator
set_ChainPolicy
set_CipherData
set_CipherValue
set_ClaimsAuthenticationManager
set_ClaimsAuthorizationManager
set_ClassReference
set_CloseReadersAfterProcessing
set_Code
set_Company
set_ComputedKeyAlgorithm
set_Conditions
set_Configuration
set_ContainingCollection
set_Context
set_ContextClass
set_ContextDeclaration
set_Count
set_Created
set_Crypto
set_Culture
set_Decision
set_DeclarationReference
set_DefaultMaxSymmetricKeySizeInBits
set_DefaultSymmetricKeySizeInBits
set_DefaultTokenLifetime
set_DefaultTokenType
set_Delegatable
set_DelegateTo
set_Delimiter
set_Description
set_DescriptionValue
set_DetectReplayedTokens
set_Dialect
set_DigestMethod
set_DigestMethodDictionaryString
set_DisableCaching
set_DisableWsdl
set_DisplayTag
set_DisplayValue
set_DnsAddress
set_DnsName
set_Enabled
set_Encoding
set_EncryptedKey
set_EncryptingCredentials
set_Encryption
set_EncryptionAlgorithm
set_EncryptionKey
set_EncryptionMethod
set_EncryptionMethodDictionaryString
set_EncryptWith
set_EntityId
set_Entropy
set_EnumType
set_ErrorUrl
set_Evidence
set_ExclusiveC14NDictionary
set_ExpectedWrapper
set_ExpirationPeriod
set_Expires
set_FederationId
set_Flags
set_Format
set_Forwardable
set_FriendlyName
set_GivenName
set_HashName
set_Id
set_Identifier
set_IgnoreKeyGeneration
set_IncludeComments
set_InclusiveNamespacesPrefixList
set_Index
set_InnerSecurityTokenSerializer
set_InResponseTo
set_IPAddress
set_IsDefault
set_IsEmptyElement
set_IsFinal
set_IsInitialized
set_IsOptional
set_IsOptionalToken
set_IsPersistent
set_IsReferenceMode
set_Issue
set_IssuedSecurityToken
set_IssueInstant
set_Issuer
set_IssueResponse
set_IssuerNameRegistry
set_IssuerTokenResolver
set_Item
set_Key
set_KeyIdentifier
set_KeyInfo
set_KeyInfoSerializer
set_KeySize
set_KeySizeInBits
set_KeyType
set_KeyUsage
set_KeyWrapAlgorithm
set_KnownIssuerCertificates
set_Label
set_Language
set_Lifetime
set_Location
set_MapToWindows
set_MaxClockSkew
set_MaxDecompressedSize
set_MaximumClockSkew
set_MaximumTokenLifetime
set_MaxValueString
set_Method
set_MimeType
set_MinValueString
set_Mode
set_Name
set_NameClaimType
set_NameFormat
set_NameId
set_NameIdentifier
set_NameQualifier
set_Namespace
set_NamespaceURI
set_NewLineHandling
set_Node
set_NotBefore
set_NotOnOrAfter
set_OkForRenewalAfterExpiration
set_OmitXmlDeclaration
set_OnBehalfOf
set_OneTimeUse
set_Optional
set_Organization
set_OriginalIssuer
set_Padding
set_Parameters
set_ParentDictionary
set_Participants
set_PersistKeyInCsp
set_Position
set_Prefix
set_PreserveWhitespace
set_Primary
set_Principal
set_Proof
set_ProofEncryption
set_ProxyRestriction
set_Psha1
set_PurgeInterval
set_ReaderProvider
set_Reason
set_Recipient
set_ReferenceList
set_RefreshState
set_Renew
set_Renewing
set_RenewResponse
set_RenewTarget
set_ReplyTo
set_ReplyToAddress
set_Request
set_RequestedAttachedReference
set_RequestedProofToken
set_RequestedSecurityToken
set_RequestedTokenCancelled
set_RequestedUnattachedReference
set_RequestSecurityContextToken
set_RequestSecurityContextTokenCancel
set_RequestSecurityContextTokenResponse
set_RequestSecurityContextTokenResponseCancel
set_RequestType
set_RequireCryptographicToken
set_Resource
set_ResourcePool
set_ResponseLocation
set_RetainPassword
set_RevocationFlag
set_RevocationMode
set_RoleClaimType
set_SamlAuthorityBindings
set_SamlDictionary
set_SamlSecurityTokenRequirement
set_SamlSubject
set_SaveBootstrapContext
set_Scope
set_SecondaryParameters
set_SecureConversationDec2005Dictionary
set_SecureConversationFeb2005Dictionary
set_SecurityAlgorithmDec2005Dictionary
set_SecurityAlgorithmDictionary
set_SecurityJan2004Dictionary
set_SecurityJanXXX2005Dictionary
set_SecurityKey
set_SecurityKeyIdentifier
set_SecurityPackages
set_SecurityTokenDescriptor
set_SecurityTokenHandler
set_SecurityTokenHandlerCollectionManager
set_SecurityTokenHandlerConfiguration
set_SecurityTokenSerializer
set_SecurityTokenService
set_SendSide
set_Separator
set_SeparatorArray
set_ServiceCertificate
set_ServiceDescription
set_ServiceDisplayName
set_ServiceTokenResolver
set_Session
set_SessionIndex
set_SessionNotOnOrAfter
set_SessionSecurityTokenCache
set_ShouldReadXmlReferenceKeyInfoClause
set_SignatureAlgorithm
set_SignatureMethod
set_SignatureMethodDictionaryString
set_SignatureReaderProviderCallbackContext
set_SigningCredentials
set_SigningKey
set_SigningToken
set_SignWith
set_SPNameQualifier
set_SPProvidedId
set_State
set_Status
set_Subject
set_SubjectConfirmationData
set_SubjectLocality
set_SuccessfullyInitialized
set_Surname
set_Symmetric
set_SymmetricKeyEncryptionRequired
set_Token
set_TokenEncryptionRequired
set_TokenIssuerName
set_TokenLifetime
set_TokenReplayCache
set_TokenReplayCacheExpirationPeriod
set_TokenReplayDetection
set_TokenResolver
set_TokenType
set_TransformFactory
set_TrustDec2005Dictionary
set_TrustedStoreLocation
set_TrustFeb2005Dictionary
set_Type
set_UnattachedReference
set_Uri
set_Use
set_UseKey
set_UseKeyTokenResolver
set_UtilityDictionary
set_Validate
set_ValidateResponse
set_ValidateTarget
set_ValidUntil
set_Value
set_VerificationTime
set_WantAssertionsSigned
set_WantAuthenticationRequestsSigned
set_WriteOptionalAttribute
set_WriteXmlDSigDefinedClauseTypes
set_WSTrust13RequestSerializer
set_WSTrust13ResponseSerializer
set_WSTrustFeb2005RequestSerializer
set_WSTrustFeb2005ResponseSerializer
set_WsuId
set_X509NTAuthChainTrustValidator
set_XmlEncryptionDictionary
set_XmlSignatureDictionary
SetAttribute
SeTcbPrivilege
SetCipherValueFragments
SetDefaultsLessOrEqual_452
SetDefaultsLessOrEqual_46
SetDefaultsLessOrEqual_462
SetDelegateFromAttribute
SetElement
SetElementExclusion
SetEnd2EndActivityTracingEnabled
SetHandle
SetHandleAsInvalid
SetHashAlgorithm
SetInclusivePrefixes
SetInput
SetItem
SetKey
SetLength
SetOutput
SetResolvedXmlSource
SetSignatureValue
SetSubject
SetThreadToken
SetToInvalid
SetTransforms
SetupDelegate
SetUpKeyWrap
severity
SHA1CryptoServiceProvider
sha1Digest
Sha1Digest
SHA1Managed
SHA1String
SHA256
SHA-256
SHA256CryptoServiceProvider
sha256Digest
Sha256Digest
SHA256Managed
SHA256String
SHA512CryptoServiceProvider
Sha512Digest
SHA512Managed
SharedLibPublicKey
SharedLibPublicKeyFull
SharedLibPublicKeyToken
SHAString
ShouldAddChannelBindingToASC
ShouldEnforceAudienceRestriction
ShouldPreserveComments
shouldReadXmlReferenceKeyInfoClause
ShouldTrace
shouldTraceCritical
shouldTraceCriticalToTraceSource
shouldTraceError
shouldTraceErrorToTraceSource
shouldTraceInformation
shouldTraceInformationToTraceSource
ShouldTraceToEtw
ShouldTraceToTraceSource
shouldTraceVerbose
shouldTraceVerboseToTraceSource
shouldTraceWarning
shouldTraceWarningToTraceSource
shouldUseActivity
ShouldWrapException
SID_AND_ATTRIBUTES
SID2069: The value argument is not a valid type. SecurityTokenService type expected.
sID3136: The attribute '{0}' of the element '{1}' with namespace '{2}' has value '{3}' which is not an absolute URI.
sID3202: An error occurred while reading the metadata document. Parameter '{0}' has a value '{1}' that is not valid.
SID4193: The reader is not positioned on an EncryptedData element that can be read. 
SID4201: SAML AuthorityBinding has a AuthorityKind '{0}' that is not a valid format.
sigantureDictionary
Signature
signature
Signature
signature
SignatureAlgorithm
signatureAlgorithm
SignatureAlgorithm
SignatureConfirmation
SignatureDescription
SignatureMethod
signatureMethod
SignatureMethod
signatureMethodDictionaryString
signatureMethodElement
signatureReaderProviderCallbackContext
SignatureResourcePool
SignatureString
SignatureTargetIdManager
signatureText
signatureValue
SignatureValue
signatureValueElement
SignatureValueElement
SignatureVerificationFailed
SignatureVerificationFailedException
signatureVerificationKey
signatureVerificatonKey
SignData
signedInfo
SignedInfo
SignedInfoCanonicalFormWriter
SignedXml
Signing
signing
signingCertificate
signingCredentials
SigningCredentials have not been set on the SamlAssertion. SamlAssertions must be signed, please set a valid SigningCredentials on the SamlAssertion to proceed.
signingKey
signingKeyIdentifier
signingToken
SignWith
signWith
SignWith
SilverlightPlatformPublicKey
SilverlightPlatformPublicKeyFull
SilverlightPlatformPublicKeyToken
SilverlightPublicKey
SilverlightPublicKeyFull
SilverlightPublicKeyToken
SimpleAuthorizationContext
SimpleTokenResolver
SingleLogoutService
singleLogoutServices
singleSignOnDescriptor
SingleSignOnService
SingleSignoutNotificationEndpoint
SingleSignOutSubscriptionEndpoint
singleton
sizeAfterPurge
sizeInBits
SizeOf
SkiDataOffset
SkipVerification
Smartcard
SmartcardPki
SmartcardPkiString
SmartcardString
SMDiagnostics
SoapHexBinary
SoftwarePki
SoftwarePkiString
SortedList`2
SortedSet`1
SourceContext
sourceData
sourceEntropy
SourceIdentifier
SourceLevels
sourceType
specifiedTarget
SpkiString
Split
SPNameQualifier
SpnClaim
SpNegoChannelBindingInformation
SpnegoValueTypeUri
SPProvidedID
SPSSODescriptor
SpssoDescriptor
spssoDescriptor
SPSSODescriptor
spssoDescriptor.AssertionConsumerService
SRCategoryAttribute
srcOffset
SRDescriptionAttribute
SSL/PCT
Ssl2Client
Ssl2Server
Ssl3Client
Ssl3Server
Ssl3Tls
SslConnectionInfo
ssoDescriptor
SspiContextFlags
SSPIHandle
SspiIsPromptingNeeded
SspiLoginPromptHeaderMessage
SSPIPackageNotSupported
SspiPayloadNotEncrypted
SspiPromptForCredential
SspiPromptForCredentials
SspiWrapper
SspiWrapperEncryptDecryptAssert1
SspiWrapperEncryptDecryptAssert2
standalone
StandardRuntimeEnumValidator
StandardRuntimeEnumValidatorAttribute
StandardSignedInfo
StandardsManagerCannotWriteObject
StandardTransformFactory
start
StartCanonicalization
startFragment
StartFragment
StartSignatureVerification
StartsWith
State
statement
Statement
statement
StatementAbstractType
statements
stateorprovince
StateOrProvinceDescription
StateOrProvinceText
Status
status
status code
STATUS_ACCESS_DENIED
STATUS_ACCOUNT_RESTRICTION
STATUS_INSUFFICIENT_RESOURCES
STATUS_NO_MEMORY
sThe SamlAuthorityBinding being read has an invalid AuthorityKind.  The format of the AuthorityKind must be a QName.
sThe SamlSecurityTokenAuthenticator can only process SamlSecurityTokens.  This SecurityTokenType was received '{0}'.
sThere was an error serializing the security key identifier clause. Please see the inner exception for more details.
StoreContainsCertificate
storeLocation
StoreLocation: '{1}'
storeName
StoreName: '{0}'
StorePermission
StorePermissionAttribute
StorePermissionFlags
stream
StreamingContext
StreamSizes
Street
streetaddress
StreetAddressDescription
StreetAddressText
strEntries
string
String0
String1
String10
String100
String101
String102
String103
String104
String105
String106
String107
String108
String109
String11
String110
String111
String112
String113
String114
String115
String116
String117
String118
String119
String12
String120
String121
String122
String123
String124
String125
String126
String127
String128
String129
String13
String130
String131
String132
String133
String134
String135
String136
String137
String138
String139
String14
String140
String141
String142
String143
String144
String145
String146
String147
String148
String149
String15
String150
String151
String152
String153
String154
String155
String156
String157
String158
String159
String16
String160
String161
String162
String163
String164
String165
String166
String167
String168
String169
String17
String170
String171
String172
String173
String174
String175
String176
String177
String178
String179
String18
String180
String181
String182
String183
String184
String185
String186
String187
String188
String189
String19
String190
String191
String192
String193
String194
String195
String196
String197
String198
String199
String2
String20
String200
String201
String202
String203
String204
String205
String206
String207
String208
String209
String21
String210
String211
String212
String213
String214
String215
String216
String217
String218
String219
String22
String220
String221
String222
String223
String224
String225
String226
String227
String228
String229
String23
String230
String231
String232
String233
String234
String235
String236
String237
String238
String239
String24
String240
String241
String242
String243
String244
String245
String246
String247
String248
String249
String25
String250
String251
String252
String253
String254
String255
String256
String257
String258
String259
String26
String260
String261
String262
String263
String264
String265
String266
String267
String268
String269
String27
String270
String271
String272
String273
String274
String275
String276
String277
String278
String28
String29
String3
String30
String31
String32
String33
String34
String35
String36
String37
String38
String39
String4
String40
String41
String42
String43
String44
String45
String46
String47
String48
String49
String5
String50
String51
String52
String53
String54
String55
String56
String57
String58
String59
String6
String60
String61
String62
String63
String64
String65
String66
String67
String68
String69
String7
String70
String71
String72
String73
String74
String75
String76
String77
String78
String79
String8
String80
String81
String82
String83
String84
String85
String86
String87
String88
String89
String9
String90
String91
String92
String93
String94
String95
String96
String97
String98
String99
StringBuilder
StringComparer
StringComparison
StringFileInfo
StringReader
strings
StringSplitOptions
StringUtil
StringValidator
StringValidatorAttribute
StringWriter
StructureToPtr
subject
Subject
subjectConfirmation
SubjectConfirmation
subjectConfirmation
SubjectConfirmationData
SubjectConfirmationDataType
SubjectConfirmationMethod
subjectConfirmations
SubjectConfirmationType
subjectID
subjectKeyClaimset
subjectKeyIdentifier
SubjectKeyIdentifierOid
SubjectLocality
subjectLocality
SubjectLocality
SubjectLocalityDNSAddress
SubjectLocalityIPAddress
SubjectLocalityType
subjectSki
SubjectStatement
subjectToken
SubjectType
subset
SubStatus
Substring
Subtract
SubtractSecondDecimalFromFirst
SUnable to create a KeyedHashAlgorithm from '{0}' for the signature algorithm '{1}'.
support
SupportedClaimType
SupportedPersistanceVersion
SupportedRight
SupportedVersion
supportingAuthenticators
SupportsCore
SupportsTokenTypeUri
SuppressFinalize
SuppressUnmanagedCodeSecurityAttribute
SurName
SurnameDescription
SurnameText
Switch.System.IdentityModel.DisableCngCertificates
Switch.System.IdentityModel.DisableMultipleDNSEntriesInSANCertificate
Switch.System.IdentityModel.DisableUpdatingRsaProviderType
Switch.System.IdentityModel.EnableCachedEmptyDefaultAuthorizationContext
switchName
switchValue
Sym$U
symmetricKey
SymmetricKeyBinarySecret
SymmetricKeyLengthTooShort
SymmetricKeyType
SymmetricProofDescriptor
syncRoot
sysid
System
system
System
System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.AppContext
System.Collections
System.Collections.Generic
System.Collections.Generic.ICollection<T>.get_IsReadOnly
System.Collections.Generic.ICollection<T>.IsReadOnly
System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>.GetEnumerator
System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim>.Current
System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim>.get_Current
System.Collections.IEnumerable.GetEnumerator
System.Collections.IEnumerator.Current
System.Collections.IEnumerator.get_Current
System.Collections.IEnumerator.Reset
System.Collections.IEqualityComparer.Equals
System.Collections.IEqualityComparer.GetHashCode
System.Collections.IList.get_IsReadOnly
System.Collections.IList.IsReadOnly
System.Collections.ObjectModel
System.ComponentModel
System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Configuration
System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.ConfigurationElementCollectionType, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.ConfigurationPropertyOptions, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.TypeNameConverter, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Core
System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Diagnostics
System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Globalization
System.IdentityModel
system.identityModel
System.IdentityModel 4.0.0.0
System.IdentityModel.Claims
System.IdentityModel.Configuration
System.IdentityModel.Diagnostics
System.IdentityModel.Diagnostics.Application
System.IdentityModel.Diagnostics.Application.TD
System.IdentityModel.Diagnostics.Application.TD.resources
System.IdentityModel.dll
System.IdentityModel.ICanonicalWriterEndRootElementCallback.OnEndOfRootElement
System.IdentityModel.ISecurityElement.get_HasId
System.IdentityModel.ISecurityElement.get_Id
System.IdentityModel.ISecurityElement.HasId
System.IdentityModel.ISecurityElement.Id
System.IdentityModel.ISignatureValueSecurityElement.GetSignatureValue
System.IdentityModel.Metadata
System.IdentityModel.pdb
System.IdentityModel.Policy
System.IdentityModel.Policy.IAuthorizationComponent.get_Id
System.IdentityModel.Policy.IAuthorizationComponent.Id
System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate
System.IdentityModel.Policy.IAuthorizationPolicy.get_Issuer
System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
System.IdentityModel.Policy.IIdentityInfo.get_Identity
System.IdentityModel.Policy.IIdentityInfo.Identity
System.IdentityModel.ProtectedDataCookieTransform
System.IdentityModel.Protocols
System.IdentityModel.Protocols.WSFederation
System.IdentityModel.Protocols.WSTrust
System.IdentityModel.resources
System.IdentityModel.Security
System.IdentityModel.Selectors
System.IdentityModel.Tokens
System.IDisposable.Dispose
System.IO
System.IO.Compression
System.Linq
System.Linq.Expressions
System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Net
System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Net.Mail
System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Reflection
System.Resources
System.Runtime
System.Runtime.CompilerServices
System.Runtime.ConstrainedExecution
System.Runtime.Diagnostics
System.Runtime.InteropServices
System.Runtime.InteropServices.ComTypes
System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Runtime.Remoting.Metadata.W3cXsd2001
System.Runtime.Serialization
System.Runtime.Serialization.Formatters.Binary
System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security
System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Security.AccessControl
System.Security.Authentication.ExtendedProtection
System.Security.Claims
System.Security.Cryptography
System.Security.Cryptography.DSACng
System.Security.Cryptography.HashAlgorithmName
System.Security.Cryptography.RSACng
System.Security.Cryptography.RSAEncryptionPadding
System.Security.Cryptography.RSASignaturePadding
System.Security.Cryptography.SHA1
System.Security.Cryptography.SHA256
System.Security.Cryptography.X509Certificates
System.Security.Cryptography.X509Certificates.
System.Security.Cryptography.X509Certificates.StoreLocation, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Cryptography.X509Certificates.X509RevocationMode, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Cryptography.Xml
System.Security.Permissions
System.Security.Permissions.RegistryPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089@
System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&
System.Security.Permissions.SecurityPermissionFlag, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Permissions.StorePermissionAttribute, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0896
System.Security.Principal
System.ServiceModel.Diagnostics
System.ServiceModel.Internals
System.ServiceModel.Security
System.ServiceModel.Security.Tokens
System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Text
System.Threading
System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.ApplicationServices
System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Security
System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Xml
System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Xml.XPath
System\CurrentControlSet\Control\Lsa
SystemClaim
SystemComponentModelDataAnnotations
SystemConfiguration
SystemConfigurationInstall
SystemCore
SystemData
SystemDataOracleClient
SystemDeployment
SystemDesign
SystemDirectoryServices
SystemDrawing
SystemDrawingDesign
SystemEnterpriseServices
SystemException
SystemIdentityModel
SystemIdentityModelSection
SystemManagement
SystemMessaging
SystemNetHttp
SystemNetHttpWebRequest
SystemNumerics
SystemRuntimeRemoting
SystemRuntimeSerializationFormattersSoap
SystemRuntimeWindowsRuntime
SystemRuntimeWindowsRuntimeUIXaml
SystemSecurity
SystemSecurityCryptographySha1String
SystemServiceModelWeb
SystemServiceProcess
SystemThreadingTasksDataflow
SystemWeb
SystemWebAbstractions
SystemWebDynamicData
SystemWebDynamicDataDesign
SystemWebEntityDesign
SystemWebExtensions
SystemWebExtensionsDesign
SystemWebMobile
SystemWebRegularExpressions
SystemWebRouting
SystemWebServices
SystemWindowsForms
SystemXml
szOID_AUTHORITY_INFO_ACCESS
szOID_CRL_DIST_POINTS
TakeBase64Buffer
TakeBuffer
TakeCanonicalizationDriver
TakeEncodingBuffer
TakeHashAlgorithm
TakeHashStream
TakeUtf8Writer
target
TargetInvocationException
targetName
TargetScopes
TargetUnknown
TClause
TCryptoServiceProvider
technical
Technical
TelephoneNumber
tempBuffer
tempOffset
TestSwitch.LocalAppContext.DisableCaching
TextEncodingType
tFailed to delete key container file and it will be left in the file system.  Please see inner exception for details.
-The <saml:conditions> element failed to load.
The AudienceUri in the SamlAssertion cannot be validated.  This can be resolved by making configuration changes to the 'issuedTokenAuthentication' element in the 'serviceBehaviors' section.  You can add valid uris using the 'allowedAudienceUris' element.  This check can also be changed using the 'audienceUriMode' attribute.  At runtime setting the IssuedTokenAuthentication object's properties: AllowedAudienceUris and AudienceUriMode will have similar results.
The certificate is invalid.
The date of birth of a person
The family name of a person
The object is read-only.
The SamlAssertion has been signed with a token that was not validated according to the protocol. If you are using X.509 certificates, examine your validation semantics.
The SamlAssertion is signed but the tolen that signed the SamlAssertion cannot be found. Ensure that the SecurityTokenResolver contains the token that signed the SamlAssertion.
The SamlAuthorityBinding being read was found to contain an 'AuthorityKind' that was missing or of length 0.  This is not allowed.
The SamlSerializer does not contain a SecurityTokenSerializer capable of reading the SecurityKeyIdentifier.  If you are using a custom SecurityKeyIdentifier, you must provide a custom SecurityTokenSerializer.
The SamlSerializer does not contain a SecurityTokenSerializer capable of serializing the given SecurityKeyIdentifier '{0}'.  If you are using a custom SecurityKeyIdentifier, you must provide a custom SecurityTokenSerializer.
the SecurityHeaderTokenResolver or OutOfBandTokenResolver
The SecurityKeyIdentifier that was found in the SamlSubject cannot be resolved to a SecurityToken. The SecurityTokenResolver must contain a SecurityToken that the SecurityKeyIdentifier resolves to.
The selected SamlSerializer is unable to deserialize this element {0}. Please register a custom SamlSerializer to deserialize custom elements.
The ServiceBinding check during Security Support Provider Interface (SSPI) negotiation failed. ExtendedProtectionPolicy specified a PolicyEnforcement of 'Always' or 'WhenSupported'. A ServiceBinding was not found in the Security Context. You can correct this by PolicyEnforcement 'Never'. Setting the PolicyEnforcement to a value other than 'Always' reduces channel binding checks.
The ServiceBinding check during Security Support Provider Interface (SSPI) negotiation failed. ExtendedProtectionPolicy specified a PolicyEnforcement of 'Always' or 'WhenSupported'. The ServiceNamesCollection did not contain a string that matched the ServiceBinding obtained from the SecurityContext.  If the service binding '{0}' is valid this error can be corrected by adding it to the ExtendedProtectionPolicy CustomServiceNames.
The username cannot be empty.
The X.509 certificate ({0}) usage time is invalid.  The usage time '{1}' does not fall between NotBefore time '{2}' and NotAfter time '{3}'.
The X.509 certificate {0} chain building failed. The certificate that was used has a trust chain that cannot be verified. Replace the certificate or change the certificateValidationMode. {1}
There was an error parsing the SubjectAlternativeNames: '{0}'. See inner exception for more details.{1}Detected values were: Identifier: '{2}'; Delimiter:'{3}'; Separator:'{4}'
This element will be ignored. To handle the element, extend Saml2SecurityTokenHandler and override ReadAdvice. Element name='{0}' namespace='{1}'.
This element will be ignored. To handle the element, extend SamlSecurityTokenHandler and override ReadAdvice. Element name='{0}' namespace='{1}'.
This SamlAttribute constructor requires that the Right of the Claim have the value System.IdentityModel.Claims.Rights.PossessProperty
ThisAssembly
thisLock
ThreadAbortException
threadHandle
threadToken
ThrowHelper
ThrowHelperArgument
ThrowHelperArgumentNull
ThrowHelperArgumentNullOrEmptyString
ThrowHelperArgumentOutOfRange
ThrowHelperCallback
ThrowHelperConfigurationError
ThrowHelperError
ThrowHelperInvalidOperation
ThrowHelperWarning
ThrowHelperXml
ThrowIfDisposed
ThrowIfFalse
throwOnError
thumbprint
Thumbprint: '{0}'
thumbprintComparer
ThumbprintKeyComparer
ThumbprintSha1ValueType
ticketHash
tID2074: SecurityTokenServiceConfiguration.SecurityTokenService is of type '{0}' but is expected to be of type '{1}'.
tID4050: The SecurityContextSecurityTokenHandler requires a valid WS-SecureConversation version when writing a token.
TID4098: SAML AuthenticationStatement does not contain a valid Authentication Method.
tID4172: The keyInfoSerializer must return an EncryptedKeyIdentifierClause when reading an xenc:EncryptedKey element.
tID7027: Could not load the identity configuration because no <system.identityModel> configuration section was found.
TimeLimit
timeout
TimeoutHelper
TimeSpan
timespan
TimeSpanConverter
TimeSpanMaxValue
TimeSpanOrInfiniteConverter
TimeSpanOrInfiniteValidator
TimeSpanValidator
TimeSpanZero
Timestamp
timestamp
timeStamp
TimeSyncToken
TimeSyncTokenString
Title
Tls11
Tls11Client
Tls11Server
Tls12
Tls12Client
Tls12Server
TlsClient
TlsClientString
TlsnegoValueTypeUri
TlsServer
TlsSspiKeyWrap
ToArray
ToBase64CharArray
ToBase64String
ToBoolean
ToDateTime
ToFileTime
ToHexString
ToInt32
ToInt64
token
TOKEN_GROUPS
TOKEN_PRIVILEGE
TOKEN_SOURCE
TOKEN_SOURCE_LENGTH
TokenAccessLevels
tokenAsXml
tokenAttributes
tokenAudiences
TokenCancellationNotSupported
TokenDefaultDacl
tokenDescriptor
TokenDoesNotSupportKeyIdentifierClauseCreation
tokenElement
tokenEntries
tokenEntryList
TokenGroups
TokenGroupsAndPrivileges
tokenHandle
tokenHandler
tokenID
TokenImpersonation
tokenImpersonationLevel
tokenInformation
TokenInformationClass
tokenInformationClass
tokenInformationLength
TokenIssuerEndpoints
TokenIssuerName
TokenizeInclusivePrefixList
TokenKeyTransferKeyInfo
TokenOwner
TokenPrimary
TokenPrimaryGroup
TokenProfile11ValueType
TokenProviderUnableToGetToken
TokenProviderUnableToRenewToken
TokenRenewalNotSupported
tokenReplayCache
tokenReplayCacheExpirationPeriod
tokenReplayDetection
TokenReplayDetectionElement
tokenRequirement
tokenResolver
tokenResolvers
TokenRestrictedSids
tokens
TokenSandBoxInert
tokenSerializer
TokenSessionId
TokenSessionReference
TokenSigningKeyInfo
TokenSize
TokenSource
TokenStatistics
tokenStream
tokenString
tokenToBeRenewed
TokenTraceRecord
tokentype
TokenType
TokenTypeAttribute
tokenTypeIdentifier
tokenTypeProperty
tokenTypes
TokenTypesOffered
TokenTypeURI
tokenTypeUri
TokenUser
TokenValidationFailureIsEnabled
TokenValidationFailurem
TokenValidationStarted
TokenValidationStartedIsEnabled
TokenValidationSuccess
TokenValidationSuccessIsEnabled
tokenXml
tokenXmlBuffer
ToLowerInvariant
ToPointer
ToUniversalTime
ToUpper
ToXmlString
trace
TraceChannelBindingInformation
traceCode
TraceCodeChannelBindingCheck
TraceCodeDiagnostics
TraceCodeIdentityModel
traceCodes
TraceCodeServiceBindingCheck
TraceDeflateCookieEncode
traceDescription
TraceEvent
TraceEventLevel
TraceEventType
traceEventType
TraceFailFast
TraceFailFastException
TraceHandledException
TracePayload
TraceRecord
TraceServiceNameBindingOnServer
TraceSetPrincipalOnEvaluationContext
TraceSourceKind
traceSourceName
TraceSourceName
TraceString
TraceTokenValidationFailure
TraceTokenValidationSuccess
TraceUnableToWriteToken
TraceUtility
TraceValidateToken
tracingEnabled
trailer
TranformationParameters
transform
Transform
transformAlgorithmUri
transformationParameters
TransformationParameters
TransformBlock
transformChain
transformFactory
TransformFinalBlock
Transforms
transforms
TransformToDigest
Transient
TransientSessionLifetime
transientSessionLifetime
TransientString
Translate
TranslateName
Translation
TrimEnd
TrimStart
tripleDES
TripleDESCryptoServiceProvider
TripleDesEncryption
TripleDesKeyWrap
TruncateBuffer
trust
trust13ActionNames
trust13ComputedKeyAlgorithm
trust13ElementNames
trust13KeyTypes
trust13RequestTypes
trustConstants
trustDec2005Dictionary
TrustDec2005Strings
trustDictionary
TrustDictionary
trustedIssuers
TrustedPeople
TrustedPublisher
trustedStoreLocation
trustFeb2005Actions
trustFeb2005ComputedKeyAlgorithm
trustFeb2005Dictionary
trustFeb2005KeyTypes
trustFeb2005RequestTypes
TrustFeb2005Strings
TrustStrings
TryAdd
TryCreate
TryCreateFrom
TryCreateValidUri
TryCreateWindowsSidClaim
TryCreateX509CertificateFromRawData
TryFind
TryGet
TryGetMatchingX509Certificate
TryGetProperty
TryGetSwitch
TryGetSwitchDelegate
TryGetSwitchFromCentralAppContext
TryGetValue
TryLookup
TryLookupSidFromName
TryParse
TryParseFrameworkName
TryReadSignature
TryRemove
TryRemoveReferredId
TryResolveCertificate
TryResolveIssuerToken
TryResolveSecurityKey
TryResolveSecurityKeyCore
TryResolveToken
TryResolveTokenCore
TryValidate
TryWrapReadException
tThe SamlAuthorizationDecisionStatement being read was found to contain more than one Evidence.  This is not allowed.
tThe XmlQualifiedName that represents the 'AuthorityKind' in the SamlAuthorityBinding can not be null or of length 0.
TValue
TwoToThePowerOf
Type name: '{0}'
Type name: '{1}'
Type namespace: '{1}'
Type namespace: '{2}'
Type: '{0}'
TypeBlock
TypeConverter
TypeConverterAttribute
TypedAsyncResult`1
TypeDH
TypeForwardedFromAttribute
TypeLoadException
typeName
TypeNameConverter
TypeResolveHelper
TypeRSA
TypeStream
U0S0Q
UID0021: The item cannot be added to the cache. The maximum cache size is '{0}' items.
uID2052: The RequestType, if specified, must be set to Issue. The SecurityTokenService can only handle Issue requests.
uID4062: The username format is not valid. The username format must be in the form of 'username' or 'domain\username'.
UID4097: SAML AuthenticationStatement does not contain a valid Authentication Instant.
UID4278: Cannot detect token replays: Configuration.TokenReplayCache property is null.
UID6039: Cannot decrypt the encrypted RSA cookie because there are no decryption keys.
UInt32
Unable to find the X.509 certificate using the following search criteria: StoreName '{0}', StoreLocation '{1}', FindType '{2}', FindValue '{3}'.
Unable to finish reading Base64 data as the given buffer quota has been exceeded. Buffer quota: {0}. Consider increasing the MaxReceivedMessageSize quota on the TransportBindingElement. Please note that a very high value for MaxReceivedMessageSize will result in buffering a large message and might open the system to DOS attacks.
Unable to resolve SecurityKeyIdentifier found in the SamlAssertion signature. The SamlAssertion signature can not be validated for the Issuer {0}.
Unable to validate signature. Signature contains Inclusive namespace prefix. Signatures that are not direct child elements of Security header cannot be processed with inclusive namespace prefix specified.
UnableToCreateHashAlgorithmFromAsymmetricCrypto
UnableToCreateKerberosCredentials
UnableToCreateKeyedHashAlgorithm
UnableToCreateKeyedHashAlgorithmFromSymmetricCrypto
UnableToCreateSignatureDeformatterFromAsymmetricCrypto
UnableToCreateSignatureFormatterFromAsymmetricCrypto
UnableToCreateTokenReference
UnableToRenew
UnableToResolveKeyReference
UnableToResolveReferenceUriForSignature
UnableToResolveTokenReference
unattachedReference
UnboundPrefixInQName
UnconditionalPolicy
UnexpectedXmlChildNode
UniClient
UNICODE_INTPTR_STRING
Unified
UniServer
UnixString
Unknown
UnknownCertificate
UnknownCredential
UnknownEncodingInKeyIdentifier
UnknownICryptoType
Unlock
UnmanagedCode
UnmanagedPointer
unmanagedToken
Unnormalized
unnormalized
unnormalizedAuthenticationMethod
Unprotect
Unrestricted
UnsafeAddrOfPinnedArrayElement
UnsafeCreateWindowsIdentityFromToken
UnsafeGetWindowsIdentityToken
unspecified
Unspecified
UnspecifiedAuthenticationMethod
UnspecifiedString
Unsupported
UnsupportedAlgorithm
UnsupportedAlgorithmForCryptoOperation
UnsupportedCryptoAlgorithm
UnsupportedEncryptionAlgorithm
UnsupportedInputTypeForTransform
UnsupportedKeyDerivationAlgorithm
UnsupportedKeyWrapAlgorithm
UnsupportedLastTransform
UnsupportedNodeTypeInReader
UnsupportedSecurityToken
UnsupportedTokenTypeBadRequestException
UnsupportedTransformAlgorithm
UntrustedRoot
UnverifiableCodeAttribute
UnwrapKey
unwrappingSecurityKey
unwrappingToken
UpdateEnabledEventsList
UpdateEventDefinitions
UpdateLevel
UpnClaim
upnComparer
UpnObjectComparer
UPTokenPasswordTextValue
UPTokenProfileNamespace
UPTokenType
URI:urn:oasis:names:tc:SAML:1.0:am:HardwareToken
UriAttribute
uriKind
UriKind
UriPartial
uriReference
uriString
UriUtil
UrlClaim
urn:federation:authentication:windows
urn:ietf:rfc:1510
urn:ietf:rfc:2246
urn:ietf:rfc:2945
urn:ietf:rfc:3075
urn:oasis:names:tc:SAML:1.0
urn:oasis:names:tc:SAML:1.0:action:ghpp
urn:oasis:names:tc:SAML:1.0:action:rwedc
urn:oasis:names:tc:SAML:1.0:action:rwedc-negation
urn:oasis:names:tc:SAML:1.0:action:unix
urn:oasis:names:tc:SAML:1.0:am:password
urn:oasis:names:tc:SAML:1.0:am:PGP
urn:oasis:names:tc:SAML:1.0:am:SPKI
urn:oasis:names:tc:SAML:1.0:am:unspecified
urn:oasis:names:tc:SAML:1.0:am:X509-PKI
urn:oasis:names:tc:SAML:1.0:am:XKMS
urn:oasis:names:tc:SAML:1.0:assertion
urn:oasis:names:tc:SAML:1.0:cm:bearer
urn:oasis:names:tc:SAML:1.0:cm:holder-of-key
urn:oasis:names:tc:SAML:1.0:cm:sender-vouches
urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName
urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
urn:oasis:names:tc:SAML:2.0:ac:classes:AuthenticatedTelephony
urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocol
urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword
urn:oasis:names:tc:SAML:2.0:ac:classes:Kerberos
urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorContract
urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorUnregistered
urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract
urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorUnregistered
urn:oasis:names:tc:SAML:2.0:ac:classes:NomadTelephony
urn:oasis:names:tc:SAML:2.0:ac:classes:Password
urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
urn:oasis:names:tc:SAML:2.0:ac:classes:PersonalTelephony
urn:oasis:names:tc:SAML:2.0:ac:classes:PGP
urn:oasis:names:tc:SAML:2.0:ac:classes:PreviousSession
urn:oasis:names:tc:SAML:2.0:ac:classes:SecureRemotePassword
urn:oasis:names:tc:SAML:2.0:ac:classes:Smartcard
urn:oasis:names:tc:SAML:2.0:ac:classes:SmartcardPKI
urn:oasis:names:tc:SAML:2.0:ac:classes:SoftwarePKI
urn:oasis:names:tc:SAML:2.0:ac:classes:SPKI
urn:oasis:names:tc:SAML:2.0:ac:classes:Telephony
urn:oasis:names:tc:SAML:2.0:ac:classes:TimeSyncToken
urn:oasis:names:tc:SAML:2.0:ac:classes:TLSClient
urn:oasis:names:tc:SAML:2.0:ac:classes:Unspecified
urn:oasis:names:tc:SAML:2.0:ac:classes:X509
urn:oasis:names:tc:SAML:2.0:ac:classes:XMLDSig
urn:oasis:names:tc:SAML:2.0:assertion
urn:oasis:names:tc:SAML:2.0:cm:bearer
urn:oasis:names:tc:SAML:2.0:cm:holder-of-key
urn:oasis:names:tc:SAML:2.0:cm:sender-vouches
urn:oasis:names:tc:SAML:2.0:metadata
urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted
urn:oasis:names:tc:SAML:2.0:nameid-format:entity
urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos
urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
urn:oasis:names:tc:SAML:2.0:nameid-format:transient
urn:oasis:names:tc:xacml:1.0:data-type:x500Name
urn:uuid:
usage
USAGE_MATCH_TYPE_AND
USAGE_MATCH_TYPE_OR
usedFallback
useKey
UseKey
useKeyTokenResolver
useMachineContext
UserLength
UserName
Username
userName
Username
UserName
userName
UserNameAuthenticationFailed
UserNameCannotBeEmpty
UserNameClaimSet
UserNameElement
UserNameLength
UserNamePasswordTokenEntry
UserNameSecurityToken
UserNameSecurityTokenHandlerRequirement
userNameSecurityTokenHandlerRequirement
UserNameSecurityTokenProvider
userNameToken
UsernameToken
UserNameTokenElement
UseSessionKey
useStrTransform
UseWindowsTokenService
useWindowsTokenService
UTF8Encoding
Utf8WithoutPreamble
utf8Writer
utility
utilityDictionary
UtilityStrings
uuid-
UuidUriPrefix
v4.0.30319
Validate
ValidateAudienceRestriction
ValidateAuto
ValidateBufferBounds
ValidateConditions
ValidateConfirmationData
ValidateFinalResponse
ValidateIssuer
ValidateKeySizeInBytes
ValidateManual
ValidateReadState
ValidateRequest
ValidateSession
ValidateSigningCredential
ValidateStatements
ValidateTarget
ValidateToken
ValidateUser
ValidateUserNamePasswordCore
ValidateWriteState
ValidateXsiType
Validating SecurityToken.
validationMode
validator
ValidFrom
validFrom
ValidFrom: '{1}'
validOnly
validTo
ValidTo
ValidTo: '{0}'
validUntil
value
Value
value
Value
value
value__
ValueAttribute
ValueCollection
ValueMustBeGreaterThanZero
ValueMustBeInRange
ValueMustBeNonNegative
ValueMustBeOf2Types
ValueMustBeOne
ValueMustBeZero
values
valueType
ValueType
ValueTypeAbsoluteUri
ValueTypeAttribute
valueTypeUri
valueTypeUris
VarFileInfo
verificationKey
verificationTime
verified
VerifyComputedLifetime
VerifyData
VerifyNCName
VerifySignature
VerifySignatureForSha256
VerifyTokenHeader
Version
versionedDictionaryStrings
VID1062: Replay has been detected for: Token: '{0}', AssertionId: '{1}', Issuer: '{2}'.
VID3091: An Issue request for an Asymmetric key must have the UseKey element specified.
vID3164: The WS-Trust message has an empty 'BinarySecret'. The element must contain key bytes encoded as Base64 string.
vID4067: The '{0}' X.509 certificate cannot be mapped to a Windows account. The UPN subject alternate name is required.
vID7018: The lifetime attribute on the sessionTokenRequirement configuration element cannot be set to a negative value.
VJSharpCodeProvider
VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
VLogonUser failed for the '{0}' user. Ensure that the user has a valid Windows account.
VS_VERSION_INFO
VSystem.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
VThe NetworkCredentials provided for the Kerberos Token does not have a valid UserName.
W0.p8
WaitOne
WantAssertionsSigned
WantAuthnRequestsSigned
Warning
Washington1
wcfClaim
WCFMaxValue
WCFMinValue
Web Page
webpage
WebPageDescription
WebPageText
WebPermission
WebServiceDescriptor
WellKnownSidType
Where
WID3201: The enumerated attribute '{0}' in metadata has a value '{1}' that is not valid.
wID3268: WS-Trust message has an empty 'Encryption' element. The element must have a SecurityToken as its child element.
WID4014: A SecurityTokenHandler is not registered to read security token ('{0}', '{1}').
WID4085: SAML Assertion contains a SAML Statement ('{0}', '{1}') that is not recognized.
WID4089: SAML Subject must either specify a valid NameIdentifier or SubjectConfirmation.
WID4204: SAML AuthorizationDecisionStatement is missing the required Decision attribute.
WID4205: SAML AuthorizationDecisionStatement is missing the required Resource attribute.
WID4209: SAML AuthorizationDecisionStatement must contain at least one Action specified.
wID4263: The SAML NameIdentifier '{0}' is of format '{1}' and NameQualifier/SPNameQualifier/SPProvidedID is not omitted.
WifSignedInfo
Win32Exception
WindowIdentity
windows
Windows
WindowsAccountType
WindowsBase
WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
WindowsClaimSet
windowsClaimsIdentity
WindowsClaimsIdentity
WindowsDomainQualifiedName
WindowsDomainQualifiedNameString
windowsIdentity
WindowsLogonName
windowsLogonName
WindowsPrincipal
WindowsSecurityTokenAuthenticator
WindowsSecurityTokenStub
WindowsSecurityTokenStubElementName
WindowsSidClaim
WindowsSspiKeyWrap
WindowsString
WindowsUserNameSecurityTokenAuthenticator
WindowsUserNameSecurityTokenHandler
WindowsVistaMajorNumber
WinNTAuthIdentityVersion
workBuffer
WqVNHE
WrapKey
WrapNonExceptionThrows
wrappedKey
wrappedKeyHash
WrappedKeySecurityToken
WrappedKeyTokenEntry
WrappedReader
WrappedSaml2AssertionKeyIdentifierClause
WrappedSerializer
wrappedTokenResolver
wrappingAlgorithm
wrappingAlgorithmDictionaryString
WrappingBufferManager
wrappingCredentials
WrappingInternalBufferManager
wrappingKey
wrappingSspiContext
wrappingToken
wrappingTokenReference
WriteAction
WriteAdditionalAttributes
WriteAdditionalElements
WriteAdvice
WriteApplicationServiceDescriptor
WriteAppliesTo
WriteArray
WriteAssertion
WriteAttribute
WriteAttributes
WriteAttributeStatement
WriteAttributeString
WriteAttributeStringAsUniqueId
WriteAttributeValue
WriteAudienceRestriction
WriteAudienceRestrictionCondition
WriteAuthenticationContext
WriteAuthenticationStatement
WriteAuthorityBinding
WriteAuthorizationDecisionStatement
WriteBase64
WriteBinaryExchange
WriteBinarySecretSecurityToken
WriteBinHex
WriteByte
WriteCanonicalizationMethod
WriteCData
WriteCharEntity
WriteChars
WriteCipherData
WriteClaimProperties
WriteClaims
WriteClaimsIdentity
WriteComment
WriteComputedKeyAlgorithm
WriteCondition
WriteConditions
WriteContactPerson
WriteContent
WriteCustomAttributes
WriteCustomElements
WriteDisplayClaim
WriteDocType
WriteDoNotCacheCondition
WriteElementContentAsInt64
WriteElementString
WriteElementStringAsUniqueId
WriteEndAttribute
WriteEndDocument
WriteEndElement
WriteEntitiesDescriptor
WriteEntityDescriptor
WriteEntityRef
WriteEtwEvent
WriteEvent
WriteEvidence
WriteExponentAsBase64
WriteFragment
WriteFullEndElement
WriteIdAttribute
WriteIdentities
WriteIdentity
WriteIdentityProviderSingleSignOnDescriptor
WriteIndexedProtocolEndpoint
WriteIntPtr
WriteIssuer
WriteKeyDescriptor
WriteKeyIdentifierClause
WriteKeyType
WriteKnownRequestElement
WriteKnownResponseElement
WriteLength
WriteLifetime
WriteLine
WriteLocalizedName
WriteLocalizedUri
WriteMetadata
WriteMetadataCore
WriteModulusAsBase64
WriteName
WriteNameId
WriteNameIdType
WriteNmToken
WriteNode
WriteOnBehalfOfIssuer
WriteOrganization
WritePrincipal
WriteProcessingInstruction
WriteProtectedKey
WriteProtocolEndpoint
WriteProxyRestriction
WriteQualifiedName
writer
WriteRaw
WriteRequest
WriteRequestType
WriteResponse
WriteRightAttribute
WriteRoleDescriptorAttributes
WriteRoleDescriptorElements
WriteRSTRXml
WriteRSTXml
WriteSecurityTokenServiceDescriptor
WriteServiceProviderSingleSignOnDescriptor
WriteSessionToken
WriteSignature
WriteSignatureMethod
WriteSignedInfoCanonicalForm
WriteSigningKeyInfo
WriteSingleSignOnDescriptorAttributes
WriteSingleSignOnDescriptorElements
WriteStartAttribute
WriteStartDocument
WriteStartElement
WriteStatement
WriteStatus
WriteString
WriteSubject
WriteSubjectConfirmation
WriteSubjectConfirmationData
WriteSubjectKeyInfo
WriteSubjectLocality
WriteSurrogateCharEntity
WriteTo
WriteToken
WriteTokenElement
WriteValue
WriteWebServiceDescriptorAttributes
WriteWebServiceDescriptorElements
WriteWhitespace
WriteXml
WriteXmlAttribute
writeXmlDSigDefinedClauseTypes
WriteXmlElement
WriteXmlnsAttribute
Writing
WrongPrincipal
WSAddressing10Constants
WSAddressing200408Constants
WSAuthorizationConstants
wsDescriptor
wsDescriptor.ClaimTypesOffered
wsDescriptor.TargetScopes
wsDescriptor.TokenTypesOffered
WSFederationMetadataConstants
WSIdentityConstants
WSMetadataExchangeConstants
WSPolicyConstants
wsse11
WSSecureConversation13Constants
WSSecureConversationFeb2005Constants
WSSecurity10Constants
WSSecurity11Constants
WSSecurityJan2004
WSSecurityUtilityConstants
WSSecurityXXX2005
WSTransferAction
WSTransferResponseAction
WSTrust13Actions
WSTrust13ComputedKeyAlgorithm
WSTrust13Constants
WSTrust13ConstantsAdapter
WSTrust13ElementNames
WSTrust13KeyTypes
WSTrust13RequestTypes
WSTrust14Constants
WSTrustActions
WSTrustAttributeNames
WSTrustComputedKeyAlgorithm
WSTrustConstantsAdapter
WSTrustElementNames
WSTrustFeb2005Actions
WSTrustFeb2005ComputedKeyAlgorithm
WSTrustFeb2005Constants
WSTrustFeb2005ConstantsAdapter
WSTrustFeb2005KeyTypes
WSTrustFeb2005RequestTypes
WSTrustKeyTypes
WSTrustMessage
WSTrustRequestSerializer
WSTrustRequestTypes
WSTrustResponseSerializer
WSTrustSerializationContext
WSTrustSerializationException
WSTrustSerializationHelper
wsuId
WSUtilityConstants
WThe 'SamlSubject' element for SamlAuthorizationDecisionStatement being read is missing.
WWhile reading a SamlAssertion this element {0} was found not to comply with the schema.
x500DistinguishedName
X500DistinguishedNameClaim
X500DistinguishedNameClaimSet
x500DistinguishedNameComparer
X500DistinguishedNameObjectComparer
X509_ASN_ENCODING
X509AsnEncoding
X509AsymmetricSecurityKey
X509Certificate
x509Certificate
X509Certificate2
X509Certificate2Collection
X509Certificate2Enumerator
X509CertificateChain
X509CertificateClaimSet
X509CertificateClauseEntry
X509CertificateRevocationMode
X509CertificateStore
X509CertificateStoreTokenResolver
X509CertificateValidation
X509CertificateValidationElement
X509CertificateValidationModeChainTrust
X509CertificateValidationModeCustom
X509CertificateValidationModeNone
X509CertificateValidationModePeerOrChainTrust
X509CertificateValidationModePeerTrust
X509CertificateValidatorEx
X509CertStoreLocationNotValid
X509Chain
X509ChainBuildFail
X509ChainElement
X509ChainElementCollection
X509ChainPolicy
X509ChainStatus
X509Data
x509DataKeyIdentifierClauseSerializer
X509DataSecurityKeyIdentifierClauseSerializer
X509EncryptingCredentials
X509Extension
X509ExtensionCollection
X509ExtensionEnumerator
x509FindType
X509FindType
X509FindType: '{2}'
X509FindValueMismatch
X509FindValueMismatchMulti
X509Identity
X509InvalidUsageTime
X509IsInUntrustedStore
X509IsNotInTrustedStore
X509IssuerName
X509IssuerSerial
X509IssuerSerialKeyIdentifierClause
X509IssuerSerialKeyIdentifierClause(Issuer = '{0}', Serial = '{1}')
X509IssuerSerialStrEntry
X509NameType
X509NdrEncoding
x509NTAuthChainTrustValidator
X509RawDataKeyIdentifierClause
X509RawDataKeyIdentifierClause(RawData = {0})
X509RevocationFlag
X509RevocationModeNoCheck
X509RevocationModeOffline
X509RevocationModeOnline
X509SecurityToken
X509SecurityTokenAuthenticator
X509SecurityTokenHandler
X509SecurityTokenHandlerRequirement
x509SecurityTokenHandlerRequirement
X509SecurityTokenProvider
X509SerialNumber
X509SigningCredentials
X509Ski
X509SKI
X509SkiStrEntry
X509SKIValueType
X509Store
X509String
X509SubjectAlternativeNameConstants
X509SubjectKeyIdentifierClause
X509SubjectKeyIdentifierClause(SKI = 0x{0})
X509SubjectKeyIdentifierExtension
X509SubjectName
X509SubjectNameString
X509ThumbprintClaim
X509ThumbprintKeyIdentifierClause
X509ThumbprintKeyIdentifierClause(Hash = 0x{0})
X509ThumbprintStrEntry
X509TokenEntry
X509TokenProfileNamespace
X509TokenType
X509TrustedStoreLocation
X509TrustedStoreLocationCurrentUser
X509TrustedStoreLocationLocalMachine
X509Util
X509VerificationFlags
X509WindowsSecurityToken
XDCannotFindValueInDictionaryString
XID1024: The configuration property value is not valid.
xID3162: The WS-Trust message has an empty 'AppliesTo'. The element must contain an EndpointAddress as its child element.
xID4132: A Saml2SecurityToken cannot be created from the Saml2Assertion because it has more than one SubjectConfirmation.
XkmsString
xml:lang
xml4WithStrTransform
XmlAttributeCollection
XmlAttributeHolder
XmlBinaryReaderSession
XmlBinaryWriterSession
XmlBufferInInvalidState
XmlBufferQuotaExceeded
XmlConvert
XmlDictionaryReaderQuotas
xmlDictionaryReaderQuotas
XmlDictionaryString
XmlDocument
XmlDSig
XmlDsigExcC14NTransform
XmlDsigExcC14NWithCommentsTransform
XmlDsigSep2000
XmlDsigString
xmlElement
XmlEncApr2001
XmlEncryptionConstants
xmlEncryptionDictionary
XmlEncryptionStrings
XmlException
XmlHelper
XmlLangAttributeMissing
XmlNamedNodeMap
XmlNameTable
XmlNode
XmlNodeList
XmlNodeReader
XmlNodeType
xmlns
XmlNs
xmlns
XmlNsNs
XmlReader
XmlSignatureConstants
xmlSignatureDictionary
XmlSignatureStrings
XmlText
XmlTextWriter
XmlTokenBuffer is empty.
XmlTokenBufferIsEmpty
xmlTokens
XmlTokenStream
XmlTokenStreamWriter
XmlUtil
XmlWriter
XmlWriterSettings
XPathNavigator
xpointer(/)
xpointer(id(
xsi:type
XsiConstants
xsiType
yID1005: The format of the data is incorrect. The signature length is negative: '{0}'. The cookie may have been truncated.
YID1043: The AudienceRestrictionCondition was not valid because there are no AudienceUris.
YID3217: The Encoding type '{0}' is not supported. The supported encoding types are '{1}'.
YID3284: 'Saml2NameIdentifier' encrypting credentials must have a Symmetric Key specified.
yID4026: The KerberosSecurityTokenHandler cannot validate a KerberosReceiverSecurityToken that has a null WindowsIdentity.
YID4207: SAML AuthorizationDecisionStatement has more than one Evidence element specified.
YID4230: The SecurityToken was not well formed. Expecting element name '{0}', found '{1}'.
yID8030: The value of the 'type' property could not be parsed. Verify that the type attribute of '{0}' element is correct.
yIndigo.Suites.Security.UnitTest.IdentityModel, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
yThe SamlAssertion being read did not contain any SamlStatement.  A SamlAssertion must contain at least one SamlStatement.
YThe SamlAssertion could not be serialized to XML. Please see inner exception for details.
yThere was an error deserializing the security key identifier clause XML. Please see the inner exception for more details.
yyyy-MM-ddTHH:mm:ss.fffffffZ
yyyy-MM-ddTHH:mm:ss.fffffffzzz
yyyy-MM-ddTHH:mm:ss.ffffffZ
yyyy-MM-ddTHH:mm:ss.ffffffzzz
yyyy-MM-ddTHH:mm:ss.fffffZ
yyyy-MM-ddTHH:mm:ss.fffffzzz
yyyy-MM-ddTHH:mm:ss.ffffZ
yyyy-MM-ddTHH:mm:ss.ffffzzz
yyyy-MM-ddTHH:mm:ss.fffZ
yyyy-MM-ddTHH:mm:ss.fffzzz
yyyy-MM-ddTHH:mm:ss.ffZ
yyyy-MM-ddTHH:mm:ss.ffzzz
yyyy-MM-ddTHH:mm:ss.fZ
yyyy-MM-ddTHH:mm:ss.fzzz
yyyy-MM-ddTHH:mm:ssZ
yyyy-MM-ddTHH:mm:sszzz
z.9Wv
ZID2001: The AsyncState in the input IAsyncResult could not be cast to FederatedAsyncState.
zID3130: A WSTrust 1.3 RequestSecurityToken SecondaryParameters element cannot contain another SecondaryParameters element.
ZID4083: SAML AudienceRestrictionCondition must not specify a null or empty audience value.
zID4119: The SAML2:AuthenticationStatement, AttributeStatement, and AuthorizationDecisionStatement require a SAML2:Subject.
zID4243: Could not create a SecurityToken. A token was not found in the token cache and no cookie was found in the context.
ZID4262: The SAML NameIdentifier '{0}' is of format '{1}' and its value is not a valid URI.
ZID5084: SAML AudienceRestrictionCondition must have at least one Audience value specified.
ZID6036: Cannot verify the RSA cookie signature because there are no verification RSA keys.
ZThe 'Binding' attribute for the SamlAuthorityBinding being read is missing or of length 0.
ZThe SamlAuthorizationDecisionStatement that is being read does not contain any SamlAction.
zThe X509FindType, '{0}', requires the type of the argument findvalue to be '{1}'. The argument findValue is of type '{2}'.
ZUnable to create a HashAlgorithm for the '{0}' algorithm from the '{1}' asymmetric crypto.
ZwHvp)a!
