                <requestedExecutionLevel level="asInvoker" uiAccess="false" />
            <!-- Windows 10 -->
            <!-- Windows 7 -->
            <!-- Windows 8 -->
            <!-- Windows 8.1 -->
            </requestedPrivileges>
            <requestedPrivileges>
            <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
            <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
            <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
            <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
        </application>
        </security>
        <application>
        <security>
        name="Microsoft.Umdf.WUDFHost.exe"
        processorArchitecture="amd64"
        type="win32" />
        version="5.1.0.0"
    </compatibility>
    </trustInfo>
    <assemblyIdentity 
    <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
    <description>Windows User-Mode Driver Framework Host Process</description>
    <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    bc "%.*S!*"
 A_A^_
 A_A^A\
 A_A^A]A\_^]
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!\$8!\$0!\$(H
!\$8!\$0!\$(I
!|$8!|$0!|$(H
!D$pI
!t$8!t$0!t$(H
!This program cannot be run in DOS mode.
%ProgramData%\Microsoft\WDF\
%s%02d%02d
%s:%u(%S)
%s\%s
(ppDispatcher should not be NULL
(unknown)
*ppFxModInfo should not be NULL
*ppIWudfDevice should not be NULL
*pReferenceString == L'\0'
.00cfg
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIZ
.data
.data$00$brc
.data$dk00$brc
.data$zz
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.didat$8
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$00
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$lp00wudfhost.exe!20_pri7
.text$mn
.text$mn$00
.text$np
.text$yd
.text$zs
.text$zy
.text$zz
.xdata
/bm_ModEntryPt should be NULL
:,m_pAttachedWudfDevice should be NULL
;RSDSt:H
;T$@s
?Invalid type of Irp passed to USB dispatcher
@.data
@.didat
@.reloc
@A^_^
@A_A^_
@A_A^A]A\_^]
@SUVAVAWH
@SUVWATAUAVAWH
@SUVWAVH
@SUVWAWH
@SUVWH
@SVWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAVAWH
@USWH
[ UVAVH
[ UVWATAVH
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWH
\$ UWAVH
\$(E3
\$`H!D$(L
\$0E3
\$8D9d$0u,H
\$8H;
\\.\pipe\DriverTestSvc
\Drivers\UMDF\
\driverstore\
\WppRecorderUM.dll
__C_specific_handler
__dllonexit3
__wgetmainargs
_initterm
_initterm_e
_onexit
_purecall
_vsnprintf_s
_vsnwprintf_s
_wcsicmp
_wcsnicmp
` AWH
`.rdata
`A^^]
`A^_]
`A^A\_^]
`A_A^^][
`A_A^_^]
`A_A^A\_^[]
`A_A^A]A\_^]
{ AUAVAWH
{ AVH
|$ ATAVAWH
|$ AVH
|$ E3
|$ UAVAWH
|$pA9
~CWudfTable<class CWudfDeviceStack>::~CWudfTable
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
0 != msg->InterfaceContext
0 != msg->TargetContext
040904B0
0A^_^
0A_A^_
0A_A^A]A\_
0A_A^A]A\_^]
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
8_^][
8D$`t
9\u2M
9{0v!H
9k0vcH
9w0v9H
A D9q
A non-io Irp passed to win32 dispatcher
A^_^][
A^A\_
A^A]A\_^
A__^][
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^[]
A_A^A]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
AcquireSRWLockExclusive
ACTIVE_DEVICES
advapi32
An object should only have one outstanding Target Device Registration with the Device Stack
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-crt-l1-1-0.dll
api-ms-win-core-crt-l2-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-namedpipe-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
BindInfo should not be NULL
Buffer should not be NULL
Caller should remove its cancel callback before forwarding the irp
Cancellation of a PnP IRP other than wait-wake IRP is not supported
Cannot be at the bottom of the stack while sending to Self IO Target
Cannot change device for a stack location
Cannot install completion callback for Remove IRP
CDispatcherFile::CDispatcherFile
Cleanup IRP cannot be failed
CleanupObjectTracking
ClientImageName
ClientVersionBuild
ClientVersionMajor
ClientVersionMinor
Closed file object used in setting file for next IRP stack location
CloseFile called on non-driver created file
CloseHandle
CloseThreadpool
CloseThreadpoolCleanupGroup
CloseThreadpoolCleanupGroupMembers
CloseThreadpoolWait
CLpcNotification::CreateLpcAndThreads
CLpcNotification::GetDeviceStackConfiguration
CLpcNotification::InitializeDeviceStack
CLpcNotification::Message
CLpcNotification::ProcessCancelMessage
CLSIDFromString
CoInitializeEx
COM pointer failed QI for its interface
ComCLSID
CompanyName
Completing unknown type of IRP
ConvertStringSidToSidW
Couldn't open kernel device object
CoUninitialize
CreateContext is not cleaned up
CreateEventW
CreateFileMappingW
CreateFileW
CreateThread
CreateThreadpool
CreateThreadpoolCleanupGroup
CreateThreadpoolWait
CThreadpool::SetMaximumThreadCount
CThreadpool::SetMinimumThreadCount
CTrackedObject::AddRef
CTrackedObject::Release
Current IRP buffer != Original IRP buffer.  Someone did not properly restore the buffers
Current IRP buffer was never retrieved, but request is returning data ... this is incorrect
CWaiterThreads::StopWaitingOnHandle
CWaiterThreads::WorkerThread
CWudfDefaultDispatcher::Create
CWudfDefaultDispatcher::CreateDefaultDispatcher
CWudfDefaultDispatcher::DoCreate
CWudfDefaultDispatcher::DoFlushBuffers
CWudfDefaultDispatcher::DoIoctl
CWudfDefaultDispatcher::DoRead
CWudfDefaultDispatcher::DoWrite
CWudfDefaultDispatcher::QueryInterface
CWudfDefaultDispatcher::SubmitIo
CWudfDefaultDispatcher::SubmitQuerySetInformation
CWudfDevice::_CreateAndInitialize
CWudfDevice::_GetDeviceItf
CWudfDevice::_GetObjFromItf
CWudfDevice::~CWudfDevice
CWudfDevice::AttachDevice
CWudfDevice::GetDeviceStackInterface
CWudfDeviceStack::AddToDeviceFileList
CWudfDeviceStack::AllocateIfrMemory
CWudfDeviceStack::AllocateIoIrp
CWudfDeviceStack::AttachDevice
CWudfDeviceStack::CancelUsbSS
CWudfDeviceStack::CloseFile
CWudfDeviceStack::CreateDevice
CWudfDeviceStack::CreateDevice2
CWudfDeviceStack::CreateDeviceHelper
CWudfDeviceStack::CreateSymbolicLinkW
CWudfDeviceStack::CreateWdfFile
CWudfDeviceStack::CreateWdfFileForOpenHandle
CWudfDeviceStack::DetachDevice
CWudfDeviceStack::DetermineMaxAndMinDriverVersions
CWudfDeviceStack::Forward
CWudfDeviceStack::ForwardAndWaitForCompletion
CWudfDeviceStack::GetDriverID
CWudfDeviceStack::GetDriverModuleInfo
CWudfDeviceStack::GetMessageDispatch
CWudfDeviceStack::GetMultiTransportDispatcher
CWudfDeviceStack::Initialize
CWudfDeviceStack::InitializeInterrupt
CWudfDeviceStack::InvalidateDeviceState
CWudfDeviceStack::InvokePowerIrpCompletionCallback
CWudfDeviceStack::InvokeUsbSSEventHandler
CWudfDeviceStack::LoadDrivers
CWudfDeviceStack::MapIoSpace
CWudfDeviceStack::MergeIoTypeValues
CWudfDeviceStack::OnDispatchPnp
CWudfDeviceStack::PoFxActivateComponent
CWudfDeviceStack::PoFxCompleteDevicePowerNotRequired
CWudfDeviceStack::PoFxIdleComponent
CWudfDeviceStack::PoFxReportDevicePoweredOn
CWudfDeviceStack::PoFxSetDeviceIdleTimeout
CWudfDeviceStack::PoFxSimulateDevicePowerRequiredInReflector
CWudfDeviceStack::PoFxStartDevicePowerManagement
CWudfDeviceStack::PoFxUnregisterDevice
CWudfDeviceStack::PrepareToForwardToSelf
CWudfDeviceStack::ReadFromHardware
CWudfDeviceStack::RegisterMultiTransportDispatcher
CWudfDeviceStack::RegisterRemoteInterfaceNotification
CWudfDeviceStack::RegisterTargetDeviceNotification
CWudfDeviceStack::ReleaseWait
CWudfDeviceStack::RemoveFromDeviceFileList
CWudfDeviceStack::RequestPowerIrp
CWudfDeviceStack::SendFastIoToControlObject
CWudfDeviceStack::SendMsgToControlObject
CWudfDeviceStack::SetPowerState
CWudfDeviceStack::SetPPO
CWudfDeviceStack::SignalUsbSSCallbackProcessingComplete
CWudfDeviceStack::SubmitUsbIdleNotification
CWudfDeviceStack::UnmapIoSpace
CWudfDeviceStack::UnregisterTargetDeviceNotification
CWudfDeviceStack::VerifyAndAssignPreferredTransferMode
CWudfDeviceStack::WriteToHardware
CWudfDevStackTable::UpdateEnvironmentBlock
CWudfDriverCreatedFile::Close
CWudfDriverCreatedFile::DequeueIrpFromFileObject
CWudfDriverCreatedFile::SendIrp
CWudfDriverCreatedFile::SendIrp should only be used with cleanup or close IRP
CWudfDriverCreatedFile::SetOwnerDevice
CWudfFileObj::~CWudfFileObj
CWudfFileObj::AcquirePreallocatedIrp
CWudfFileObj::GetDeviceStack
CWudfFileObj::GetFrameworkFileObj
CWudfFileObj::Initialize
CWudfFileObj::PreallocateCleanupCloseIoIrp
CWudfFileObj::ReleasePreallocatedIrp
CWudfFileObj::SetCreateContext
CWudfFileObj::SetFrameworkFileObj
CWudfFileObj::UpdateKeepAliveCount
CWudfHostGlobals::ClearThreadTlsFlag
CWudfHostGlobals::IsThreadTlsFlagSet
CWudfHostGlobals::SetThreadTlsFlag
CWudfIoDispatcher::_CancelInternal
CWudfIoDispatcher::_CancelRoutine
CWudfIoDispatcher::Create
CWudfIoDispatcher::Dispatch
CWudfIoDispatcher::IoCompleted
CWudfIoDispatcher::MarkUmdfDriverInitiatedRequest
CWudfIoDispatcher::QueryInterface
CWudfIoDispatcher::SetCancelCallback
CWudfIoIrp::CompleteHandlerPostAlpcReply
CWudfIoIrp::CompleteHandlerPreAlpcReply
CWudfIoIrp::CreateAndInitialize
CWudfIoIrp::Deallocate
CWudfIoIrp::Dispatch
CWudfIoIrp::GetFrameworkRelatedFileObjectContext
CWudfIoIrp::Init
CWudfIoIrp::QueueOnTopmostFile
CWudfIoIrp::ReInitialize
CWudfIoIrp::SetCancelRoutine
CWudfIoIrp::SetFileForNextIrpStackLocation
CWudfIoIrp::SetFrameworkFileObjectContext
CWudfIoStack::GetStackLocation
CWudfIoStack::HasCompletionRoutines
CWudfIoStack::Initialize
CWudfIoStack::OnCompletion
CWudfIoStack::Reinitialize
CWudfIoStack::SetCompletionRoutine
CWudfIoStack::Validate
CWudfIoStackLocation::GetCreateParameters
CWudfIoStackLocation::GetDeviceIoControlParameters
CWudfIoStackLocation::GetOtherParameters
CWudfIoStackLocation::GetQuerySetInformationParameters
CWudfIoStackLocation::GetReadParameters
CWudfIoStackLocation::GetWriteParameters
CWudfIoStackLocation::SetCreateParameters
CWudfIoStackLocation::SetDeviceIoControlParameters
CWudfIoStackLocation::SetFlushParameters
CWudfIoStackLocation::SetOtherParameters
CWudfIoStackLocation::SetQuerySetInformationParameters
CWudfIoStackLocation::SetReadParameters
CWudfIoStackLocation::SetWriteParameters
CWudfIoStackLocationBase::GetCompletionRoutine
CWudfIoStackLocationBase::SetDevice
CWudfIrp::~CWudfIrp
CWudfIrp::CWudfIrp
CWudfIrp::Forward
CWudfIrp::GetContext
CWudfIrp::GetRequestorProcessId
CWudfIrp::ImpersonateRequestorProcess
CWudfIrp::Initialize
CWudfIrp::PrepareToForwardToSelf
CWudfIrp::ProcessCompletion
CWudfIrp::RevertImpersonation
CWudfIrp::SetCancelRoutine
CWudfIrp::SetCompletionRoutine
CWudfIrp::SetContext
CWudfIrpT<class CWudfIoIrp,struct IWudfIoIrp2,struct _WUDFMESSAGE_IO_HEADER *,struct _WUDFMESSAGE_REPLY_HEADER *>::Cancel
CWudfIrpT<class CWudfIoIrp,struct IWudfIoIrp2,struct _WUDFMESSAGE_IO_HEADER *,struct _WUDFMESSAGE_REPLY_HEADER *>::CreateAndInitialize
CWudfIrpT<class CWudfPnpIrp,struct IWudfPnpIrp,struct _WUDFMESSAGE_IRP *,union _WUDFMESSAGE_PNP_REPLY_ALL *>::Cancel
CWudfIrpT<class CWudfPnpIrp,struct IWudfPnpIrp,struct _WUDFMESSAGE_IRP *,union _WUDFMESSAGE_PNP_REPLY_ALL *>::CreateAndInitialize
CWudfIrpTable::GetAndSetCancelRoutine
CWudfModuleInfo::_BuildDriverRegistryPath
CWudfModuleInfo::_GetModuleNameFromImagePath
CWudfModuleInfo::~CWudfModuleInfo
CWudfModuleInfo::GetFxModuleInfo
CWudfModuleInfo::GetName
CWudfModuleInfo::Release
CWudfModuleInfo::SetFxBindInfo
CWudfModuleInfo::SetFxModuleInfo
CWudfModuleTable::FindModuleAndReference
CWudfModuleTable::LoadComponentAndCreateInstance
CWudfModuleTable::LoadFrameworkAndDriver
CWudfNativeUsbDispatcher::Create
CWudfNativeUsbDispatcher::CreateNativeUsbDispatcher
CWudfNativeUsbDispatcher::QueryInterface
CWudfNativeUsbDispatcher::SubmitIo
CWudfNativeUsbDispatcher::SubmitUsbIo
CWudfPnpIrp::AcquireRelease
CWudfPnpIrp::Cancel
CWudfPnpIrp::ForwardToRedirector
CWudfRefCountedHandle::Release
CWudfRefCountedHandle::SetHandle
CWudfRemoteDispatcher::BindToHandle
CWudfRemoteDispatcher::Create
CWudfRemoteDispatcher::CreateRemoteDispatcher
CWudfRemoteDispatcher::QueryInterface
CWudfRemoteDispatcher::SubmitIo
CWudfTable<class CWudfDeviceStack>::Insert
CWudfTable<class CWudfDeviceStack>::Remove
CWudfTable<class CWudfIrp>::~CWudfTable
CWudfTable<class CWudfIrp>::Insert
CWudfTable<class CWudfIrp>::Remove
CWudfTable<class CWudfModuleInfo>::~CWudfTable
CWudfTable<class CWudfModuleInfo>::Insert
CWudfTable<class CWudfModuleInfo>::Remove
CWudfUsbDispatcher::QueryInterface
CWudfUsbDispatcher::SubmitIo
CWudfUsbDispatcher::SubmitUsbIo
CWudfWin32Dispatcher::Create
CWudfWin32Dispatcher::CreateWin32Dispatcher
CWudfWin32Dispatcher::QueryInterface
CWudfWin32Dispatcher::SubmitIo
CxImageName
D!d$0D!d$(H
D!d$8H
D!t$ L
D$ 9\$ w
D$ E3
D$(L+
D$@!\$8!\$0!\$(H
D$`H!D$ 
D$0E3
D$8E3
D$DDtRH
D$dI;
d$HE3
D$HE3
D$hI;
D$pE3
d$PE3
D$pE3
D$PI;
D$xfD
D0-IRP completion function/context being overwritten!
D9d$0u
dbghelp.dll
DbgPrintEx
DbgPrintOn
DebugModeBinaries
DebugModeFlags
decrement
DeleteCriticalSection
Dequeue attempted when I/O count is already 0
Dereference of destroyed object
Device object not associated with device stack
Device stack depth can't be 0
DeviceGroupId
-DeviceGroupId:
DeviceIoControl
deviceObjectPointer should not be NULL
deviceStack should not be NULL
DEVOBJ.dll
DevObjCreateDeviceInfoList
DevObjDestroyDeviceInfoList
DevObjEnumDeviceInfo
DevObjGetClassDevs
DevObjGetDeviceInstanceId
DevObjGetDeviceRegistryProperty
DevObjOpenDevRegKey
DllGetClassObject
Driver at this slot did not add a device to the stack.  Should not call VerifyAndAssignPTM in that case
Driver is not using correct CLSID
DriverList
driverModuleInfo should not be NULL
driverName should not be NULL
Dx-IRP completion function/context being overwritten!
e=?Unexpected Condition
E0Etx
E9gPv
E9gTv1
Elo{!
Ensure Flags Match
EnterCriticalSection
en-US
EPZJU
EventActivityIdControl
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ExpandEnvironmentStringsW
Expected Query or Set Information Request
f9,Au
f9,Cu
f9,Fu
f9,Gu
fA9,Au
fA9,Bu
fA9,Cu
fA9<Cu
fA9Z*v#A
fC9<Qu
fC9Lu
fD9$Zu
fD9(u
fD9,Hu
fD97uwH
fD9d$0u\A
fE9,$
fE9<Pu
fE9DE
file handle is invalid
File Object for the stack location must not already be set
File Object for the stack location not set. Potentially because driver didn't forward Create to this layer.
File object is unexpectedly NULL
File object not associated with device stack
FileDescription
FileHandle
FileVersion
FinalRelease incremented the refcount
FlushFileBuffers
foundRegistration
FreeLibrary
Fx is requesting a power IRP with an unexpected minor function
FxDriverEntryUm
FxFrameworkEntryUm
FxIrp::GetIrpFromListEntry
FxModInfo should not be NULL
G(H;l
g>CWudfDeviceStack::~CWudfDeviceStack
GetAndInitializePlatformObject
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetFileObjAndDevStackFromMessage
GetFileObjAndDevStackFromMessage called for an unexpected message type
GetFileObjFromItf
GetFileSizeEx
GetFrameworkRelatedFileObjectContext can only be called for Create Irp
GetIoReplyMessageSize
GetIoReplyMessageSize called for non-io message
GetIrpObjFromItf
GetLastError
GetModuleFileNameA
GetModuleHandleExW
GetOsSafeBootMode
GetOverlappedResult
GetProcAddress
GetProcessHeap
GetSystemDirectoryW
GetSystemInfo
GetSystemTimeAsFileTime
GetTickCount
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
h VWATAUAVH
H!\$P
H!|$P
H!t$P
H#L$XH
H;L$Hs
H9]wu
H9{0t
H9~ L
H9A@t
H9APt
H9Mot
H9ppL
H9y`H
hA_A^^[
hA_A^A]A\_^][
Having UMDF 2.0 and previous versions of UMDF drivers in same device stack is not supported. 
HeapAlloc
HeapFree
HeapSetInformation
hFile != INVALID_HANDLE_VALUE
hFile is not a valid handle
HOST_THREAD_IMPERSONATED not previous set
-HostArg:
-HostGUID:
HostProcessDbgBreakOnDriverLoad
HostProcessDbgBreakOnStart
HostProcessSharingEnabled
hTarget is not a valid handle
IdleInWorkingState
ImageDirectoryEntryToDataEx
ImagePath
-ImagePath:
increment
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializePlatformLibrary
insufficient space in buffer to hold the device instance string - internal error.
Internal error: Client process was not retrieved properly
InternalName
invalid arg ppWudfIrp
Invalid argument
Invalid data in TLS
Invalid device instance string
Invalid index for GetContext
Invalid index for SetContext
Invalid index into m_pDriverAndFxInfo
Invalid operation
Invalid operation: doesn't support cancel
Invalid parsing of module name
Invalid USB SS idle callback reply ID!
io cancel
-IoCancelEventPortName:
IOCTL_INETRNAL_USB_SUBMIT_UMURB == dwIoctl
IoctlTransferMode
-IoEventPortName:
IRP has NULL file object, but NULL file object support is not enabled for this device.
JL!d$PH
K SUVWH
K SVWH
k VWAWH
K WATAUAVAWH
K{/CWudfIoIrp::SetHostFileObject
kernelIrpPointer should not be NULL
L!|$PH
L!d$P
L!d$PH
L!d$PL
L$ E3
L$@H3
L$`H3
L$0E3
L$0H3
L$hE3
L$PH3
L$pH3
L$PH9
L$PH9K`D
L$pIc
L$xH3
L9}Hu
L9eHu
L9l$`u
Leaking host objects
LeaveCriticalSection
LegalCopyright
-LifetimeId:
LoadLibraryExA
LoadLibraryExW
LocalFree
loggingCtx should not be NULL
lpc should be NULL
LpcPort is NULL for non-driver created file
m@E8g
m_ClassListHead not empty
m_DriverObject->ThreadPoolGroup should not be NULL
m_EntryList not empty
m_FxBindInfo should be NULL
m_FxListEntry not empty
m_FxModInfo should be NULL
m_FxModInfo should not be NULL
m_hFile == INVALID_HANDLE_VALUE
m_ImpersonationDataValid should not be NULL
m_MinDriverVersion is 0.0, but m_MaxDriverVersion is not.
m_pCurrentIWudfDevice should not be NULL
m_pMultiTransportDispatcher should not be NULL
m_pOwnerIWudfDevice should not be NULL
m_ThreadPool should not be NULL
m_TopDevice should not be NULL
M9<$u
MappedAddress should not be NULL
MappedSystemAddress should not be NULL
MapViewOfFile
marshaller should not be NULL
MaxRefCountChangesTracked
MaxStackDepthTracked
MaxThreadpoolThreadCount
memcpy
memset
Microsoft
Microsoft Corporation
Microsoft.Wdf.UMDF.Host
Microsoft_WDF_UMDF_Version
minkernel\wdf\framework\umdf\DriverHost\common\inc\private\TrackedObject.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\um\wudflpcum.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdefaultdispatcher.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfDefaultDispatcher.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdevice.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdevice.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdevstack.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdevstack.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdiagnostic.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdrivercreatedfile.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfdrivercreatedfile.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudffileobj.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudffileobj.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfhostglobals.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfiodispatcher.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfIoDispatcher.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfiostack.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfIoStack.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfirp.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfIrp.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfloader.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfLoader.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudflpc.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfmarshaller.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfnativeusbdispatcher.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfRefCountedHandle.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfremotedispatcher.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\WudfTable.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfthreadpool.h
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfusbdispatcher.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfwaiterthreads.cpp
minkernel\wdf\framework\umdf\driverhost\wudfhost\wudfwin32dispatcher.cpp
modInfo should not be NULL
modInfo->m_DriverObject should not be NULL
ModuleInfo contains invalid module name
Multiple initialization
Multiple initialization of IoStack object
NativeUSB
NewValue parameter is not a valid value
No more than one device in a stack can be the Power Policy Owner.
No more than one Driver in a stack can be multi-transport aware. Prior Driver: %ls This Driver: %ls
Non Io message passed to CWudfIoIrp
non state changing
-NonStateChangingEventPortName:
Not all driver created files are closed, this maybe due to pending requests.
ntdll.dll
NtQueryInformationFile
NtSetInformationFile
o\$PH
oD$ f
oL$0f
Only driver created IRPs can be deallocated
Only Internal Ioctl can be passed to UsbDispatcher
Only Read/Write/IoControl may be forwarded to Self Target
Only Read/Write/IOCTL can be passed to Remote Dispatcher
Original file object can be NULL only for Create IRP
OriginalFilename
OriginalValue parameter is not a valid value
oT$@f
Over-decrementing file object keep alive count
Overflow in file object keep alive count
Overwriting create context
p WATAUAVAWH
p WAVAWH
pA_A^A]A\_^]
PA_A^A]A\_^]
pCallback should not be NULL
pCompletionEvent should not be NULL
pDevice should not be NULL
pDeviceInterfaceGuid should not be NULL
pDeviceStack should not be NULL
pDevStack should be NULL
pDevStack should not be NULL
pFileNameBuffer shouldn't be NULL with non-zero length
pH9k8tj
pHostFile should not be NULL
pHostFileObj should not be NULL
pIoIrp should not be NULL
pIrp should not be NULL
pIWudfDevice should not be NULL
pMsgDispatch should not be NULL
Power IRP completion message arrvied for an unexpected minor function
ppAttachedIWudfDevice should not be NULL
ppCtx should not be NULL
ppDefaultDispatcher should not be NULL
ppHostFile should not be NULL
ppIoDispatcher should not be NULL
ppIoIrp should not be NULL
ppNativeUsbDispatcher should not be NULL
ppRemoteDispatcher should not be NULL
PPTP00
PPTP005
PPTP006
PPTP009
PPTP00AN
ppv is NULL
ppvObject should not be NULL
ppWin32Dispatcher should not be NULL
ppWudfDevice should not be NULL
ppWudfIoCompletionRoutine should not be NULL
pRegistrationID should not be NULL
pReply should be NULL
PreserveIrpCompletionStatusCompatibility
ProductName
ProductVersion
pTeb->ReservedForWdf should be NULL
pUmUrb should not be NULL
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_BULK_OR_INTERRUPT_TRANSFER)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_CONTROL_TRANSFER)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_DESCRIPTOR_REQUEST)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_DEVICE_INFORMATION)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_GET_ASSOCIATED_INTERFACE)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_HEADER)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_INTERFACE_INFORMATION)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_INTERFACE_POLICY_REQUEST)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_PIPE_POLICY_REQUEST)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_PIPE_REQUEST)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_QUERY_PIPE)
pUmUrb->UmUrbHeader.Length == sizeof(_UMURB_SELECT_INTERFACE)
pWudfDevice should not be NULL
Query
QueryPerformanceCounter
R"pdwIndex should not be NULL
R$fA;Z*
RaiseException
ReadFile
ReadWriteTransferMode
Ref count went from 0 to 1
Reflector unexpectedly sent NULL create context
RegCloseKey
RegCloseKey failed
RegisterTraceGuidsW
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReleaseSRWLockExclusive
ReleaseWait was already called
reply message has to be of non-zero size
reqReply.RdInterruptContext should not be NULL
RevertToSelf
RichV?F
RPCRT4.dll
RSDSj
RtlCaptureContext
RtlInitUnicodeString
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlSetIoCompletionCallback
RtlVerifyVersionInfo
RtlVirtualUnwind
s WATAVH
s WAVAWH
ServiceName should not be NULL
SetEnvironmentVariableW
SetEvent
SetEvent m_ThreadsStoppingEvent failed
SetHostFileObject can only be called for Create Irp
SetLastError
SetNamedPipeHandleState
SetPlatformErrorReportingCallbacks
SetThreadpoolThreadMaximum
SetThreadpoolThreadMinimum
SetThreadpoolWait
SetUnhandledExceptionFilter
ShutdownPlatformLibrary
Size should be > 0
Sleep
SOFTWARE\Microsoft\Windows NT\CurrentVersion\WUDF\DebugMode
SOFTWARE\Microsoft\Windows NT\CurrentVersion\WUDF\Services
StringFileInfo
SVAVAWH
system
SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal
SYSTEM\CurrentControlSet\Control\SafeBoot\Network
System\CurrentControlSet\Control\Wdf\Umdf\Diagnostics
-SystemEventPortName:
t$ E3
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(fD
t&H9y
t1L9A
teH9}
teL!3H
TerminateProcess
t'HcC<
tKH9K
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
TlsSetValue failed
TODO: Write something interesting here
TraceMessage
TrackObjects
TrackRefCounts
Trailing name count was less than WudfRefStringMax
TransactNamedPipe
TransferModeMismatchReported
Translation
trL!e
Trying to make close/cleanup irp cancelable
Trying to reinitialze with more stack locations than allocated
Trying to reuse stack which has not completed unwound
tTL9g
u(H9K
UATAUAVAWH
UM Irp already in use
UM irp not present in global table while attempting to remove it from the global table
UMDF: About to unload module %S. Please clear any breakpoints using 
UMDF: About to unload module %S. Please clear any breakpoints.
UMDF: Breaking on load of module %S
UMDF_VERSION
UmdfDispatcher
UMIrp != stored irp
Underlying file hasn't been created
Unexpected code path
Unexpected failure
Unexpected failure in QueryInterface
Unexpected IOCTL recieved
Unexpected request type
Unexpected return from WaitForMultipleObjects
unexpected type in CWudfIoIrp
UnhandledExceptionFilter
unknown
Unknown USB request passed to USB dispatcher
Unknown USB SS event sent to host!
UnmapViewOfFile
Unrecognized Pofx event received
UnregisterTraceGuids
uRM9@
USB idle callback function/context being overwritten!
USB SS idle callback reply ID being overwritten!
USB SS IOCTL completion function/context being overwritten!
user or kernel-mode
user-mode
USVWATAUAVAWH
USVWATAVAWH
UuidFromStringW
uv8Y9uq
UVWATAUAVAWH
UVWAVAWH
UWATAVAWH
VarFileInfo
VerSetConditionMask
VirtualProtect
VirtualQuery
VS_VERSION_INFO
VWAVH
VWAWH
W*2CWudfUsbDispatcher::CreateUsbDispatcher
WaitForMultipleObjects wait failed
WaitForMultipleObjectsEx
WaitForSingleObject
WaitForSingleObject m_Threads failed
WaitForThreadpoolWaitCallbacks
Waiting for all refs to be released is taking a long time
WaitNamedPipeW
WATAUAVAWH
WATAVH
WAVAWH
wcscat_s
wcscpy_s
wcsncmp
wcsncpy_s
wcsrchr
wcsstr
wcstoul
WdfCensusEvtLinkClientToCx
WdfGetLpcInterface
WdfMajorVersion
Windows Driver Foundation - User-mode Driver Framework Host Process
WinUsb
WINUSB.DLL
WinUsb_AbortPipe
WinUsb_ControlTransfer
WinUsb_FlushPipe
WinUsb_Free
WinUsb_Free failed
WinUsb_GetAssociatedInterface
WinUsb_GetCurrentAlternateSetting
WinUsb_GetDescriptor
WinUsb_GetPipePolicy
WinUsb_GetPowerPolicy
WinUsb_Initialize
WinUsb_QueryDeviceInformation
WinUsb_QueryInterfaceSettings
WinUsb_QueryPipe
WinUsb_ReadPipe
WinUsb_ResetPipe
WinUsb_SetCurrentAlternateSetting
WinUsb_SetPipePolicy
WinUsb_SetPowerPolicy
WinUsb_WritePipe
WriteFile
WUDF_TARGET_CONTEXT_INVALID != RegistrationID
WudfCompatibilitySettings
WudfDebugBreakPoint
WudfDefaultDevicePool
WUDFDiagnosticInfo
WudfHidMarshaller::OverrideTransferFlags
WUDFHost.exe
WUDFHost.pdb
WudfHost_ext_
WudfIsKernelDebuggerPresent
WudfIsUserDebuggerPresent
WudfMarshaller::Create
WudfMarshaller::OverrideTransferFlags
WudfMarshaller::UpdateInformationForOutputBuffer
WUDFPlatform.dll
WudfPowerPolicySettings
WUDFTrace
WudfWaitForDebugger
WUDFx
WUDFx%02d000
WUDFx.dll
WUDFx02000
WUDFx02000.dll
WW-IRP completion function/context being overwritten!
x ATAVAWH
x AUAVAWH
x AVH
x UATAUAVAWH
xA_A^A]A\_^[]
xd9o(H
