                level="asInvoker"
                uiAccess="false"
               val ThreadingModel = s 'Free'
            />
            {
            }
            <requestedExecutionLevel
            LocalServer32 = s '%MODULE%'
            val AppID = s {5364ED0E-493F-4B16-9DBF-AE486CF22660}
            val AppID = s '{5364ED0E-493F-4B16-9DBF-AE486CF22660}'
            val LocalServer32 = s 'vdsldr.exe'
        {
        }
        </requestedPrivileges>
        <requestedPrivileges>
        ForceRemove {5364ED0E-493F-4B16-9DBF-AE486CF22660} = s 'Virtual Disk Service Loader'
        ForceRemove {9C38ED61-D565-4728-AEEE-C80952F0ECDE} = s 'Virtual Disk Service Loader'
        ForceRemove 'vdsldr.exe'
    {
    }
    </security>
    <security>
    name="Microsoft.Windows.VDSLdr"
    NoRemove AppID
    NoRemove CLSID
    processorArchitecture="amd64"
    type="win32"
    version="5.1.0.0"
 A_A^A]A\_
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!This program cannot be run in DOS mode.
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.data
.data$brc
.edata
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata
??0CVdsCallTracer@@QEAA@KPEBD@Z
??1CVdsCallTracer@@QEAA@XZ
?m_ExtraLogging@CVdsTraceSettings@@QEAAHXZ
?m_NoDebuggerLogging@CVdsTraceSettings@@QEAAHXZ
?terminate@@YAXXZ
@.data
@.reloc
@.rsrc
@8y(t
\$ UH
__C_specific_handler
__set_app_type
__setusermatherr
__wgetmainargs
_amsg_exit
_callnewh
_cexit
_commode
_exit
_fmode
_initterm
_wcmdln
_wcsicmp
_XcptFilter
`.rdata
|Fi!h
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
</trustInfo>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity
<description>Virtual Disk Service Loader</description>
<trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
040904B0
0A_A^A\
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
A_A\]
A_A^A]A\_^]
AddAccessAllowedAce
ADVAPI32.dll
AllocateAndInitializeSid
ATL.DLL
CharNextW
CloseHandle
CoCreateInstanceEx
CoInitializeEx
CoInitializeSecurity
CompanyName
CoResumeClassObjects
CoSuspendClassObjects
CoUninitialize
CreateEventW
CreateThread
CVdsAdviseSinkRmt::OnNotify()
CVdsLoader::~CVdsLoader()
CVdsLoader::CVdsLoader()
CVdsLoader::LoadService()
CVdsLoader::LoadService, 1, hr=%lX
CVdsLoader::LoadService, 2, error=%ld
CVdsLoader::LoadService, 3, hr=%lX
CVdsLoader::LoadService, 4, hr=%lX
CVdsLoader::LoadService, 5, hr=%lX
CVdsLoader::LoadService, TRACE RETRY, hr=%lX, count=%lu
CVdsServiceRmt::~CVdsServiceRmt()
CVdsServiceRmt::Advise()
CVdsServiceRmt::CleanupObsoleteMountPoints()
CVdsServiceRmt::ClearFlags()
CVdsServiceRmt::GetDiskIdFromLunInfo()
CVdsServiceRmt::GetInitiatorName()
CVdsServiceRmt::GetObject()
CVdsServiceRmt::GetProperties()
CVdsServiceRmt::GetSANPolicy()
CVdsServiceRmt::GetSANPolicy, 1, hr=%lX
CVdsServiceRmt::IsServiceReady()
CVdsServiceRmt::QueryDriveLetters()
CVdsServiceRmt::QueryFileSystemTypes()
CVdsServiceRmt::QueryHbaPorts()
CVdsServiceRmt::QueryInitiatorAdapters()
CVdsServiceRmt::QueryMaskedDisks
CVdsServiceRmt::QueryProviders()
CVdsServiceRmt::QueryUnallocatedDisks
CVdsServiceRmt::Reboot()
CVdsServiceRmt::Reenumerate()
CVdsServiceRmt::Refresh()
CVdsServiceRmt::RegisterProvider()
CVdsServiceRmt::RememberTargetSharedSecret()
CVdsServiceRmt::SetAllIpsecSecurity()
CVdsServiceRmt::SetAllIpsecTunnelAddresses()
CVdsServiceRmt::SetFlags()
CVdsServiceRmt::SetInitiatorSharedSecret()
CVdsServiceRmt::SetIpsecGroupPresharedKey()
CVdsServiceRmt::SetSANPolicy()
CVdsServiceRmt::Unadvise()
CVdsServiceRmt::UninstallDisks()
CVdsServiceRmt::UnregisterProvider()
CVdsServiceRmt::WaitForServiceReady()
D$$I;
D$HE3
D8g8t
DeleteCriticalSection
DispatchMessageW
f9H\u
FileDescription
FileVersion
FreeSid
GetCommandLineW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetLastError
GetLengthSid
GetMessageW
GetModuleHandleW
GetStartupInfoW
GetSystemTimeAsFileTime
GetTickCount
HcA<H
HeapSetInformation
InitializeAcl
InitializeCriticalSection
InitializeEveryoneSecurityDescriptor()
InitializeSecurityDescriptor
InternalName
IsLocalComputer
KERNEL32.dll
l$@E3
l$HE3
LcA<E3
LegalCopyright
malloc
memset
Microsoft
Microsoft Corporation
msvcrt.dll
ntdll.dll
ole32.dll
OriginalFilename
p AWH
PostThreadMessageW
ProductName
ProductVersion
QueryPerformanceCounter
QWV%P
REGISTRY
RegServer
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
SetEvent
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetUnhandledExceptionFilter
Sleep
StringFileInfo
tDf93t?H
TerminateProcess
Translation
u HcA<H
u$L97t
u*9Q<|%
UnhandledExceptionFilter
UnregServer
USER32.dll
UVWATAUAVAWH
VarFileInfo
VdsDisableCOMFatalExceptionHandling
vdsldr.exe
vdsldr.pdb
VdsTraceEx
vdsutil.dll
Virtual Disk Service Loader
VS_VERSION_INFO
WaitForSingleObject
WATAUAVAWH
wRich
x ATAVAWH
x AVH
x UATAWH
