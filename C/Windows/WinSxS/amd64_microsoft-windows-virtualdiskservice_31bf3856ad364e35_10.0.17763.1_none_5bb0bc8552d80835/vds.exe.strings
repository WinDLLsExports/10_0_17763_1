                level="asInvoker"
                uiAccess="false"
            />
            <requestedExecutionLevel
            val AppID = s '{F290BFB2-1864-45B1-8804-2654194A87E7}'
            val LocalService = s 'vds'
        {
        }
        </requestedPrivileges>
        <requestedPrivileges>
        ForceRemove {7D1933CB-86F6-4A98-8628-01BE94C9A575} = s 'Vds Class'
        ForceRemove {F290BFB2-1864-45B1-8804-2654194A87E7} = s 'Virtual Disk Service'
    {
    }
    </security>
    <security>
    name="Microsoft.Windows.VDS"
    NoRemove AppID
    NoRemove CLSID
    processorArchitecture="amd64"
    type="win32"
    version="5.1.0.0"
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 ;sPr
 A_A^_
 A_A^A\
 A_A^A]A\_^]
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!]@H!]HM
!|$ !|$$!|$(H
!|$P!|$T!|$XH
!|$pH
!}oH!}
!}wH!}
!D$0H
!This program cannot be run in DOS mode.
%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x
%CVdsProvider::~CVdsProvider()
%I64X
%s\%s
%s\%s\%s
(_^][
(D$ f
(D$@f
(D$`f
(D$pf
(D$Pf
(D$pfH
(L$0I
)D$`u
)D$0u
)D$PfH
)D$Pu
,RichL
.?AVSEHelperException@CVdsService@@
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.data
.data$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.h96"
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata
.xdata$x
/GetVariantFromInstance, 1, hr=%x
:*+=|\;.,<>?/[]"
;D$0t
;t$ |
??_FCRtlList@@QEAAXXZ
??_FCRtlMap@@QEAAXXZ
??0?$CVdsCoTaskPtr@G@@QEAA@XZ
??0?$CVdsHandleImpl@$0?0@@QEAA@XZ
??0?$CVdsHandleImpl@$0A@@@QEAA@XZ
??0?$CVdsHeapPtr@D@@QEAA@XZ
??0?$CVdsHeapPtr@G@@QEAA@XZ
??0?$CVdsHeapPtr@J@@QEAA@XZ
??0?$CVdsHeapPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??0?$CVdsPtr@D@@QEAA@XZ
??0?$CVdsPtr@G@@QEAA@XZ
??0?$CVdsPtr@J@@QEAA@XZ
??0?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??0?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??0?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??0?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??0CGlobalResource@@QEAA@XZ
??0CPrvEnumObject@@QEAA@XZ
??0CRtlList@@QEAA@P6AXPEAVCRtlEntry@@@Z@Z
??0CRtlMap@@QEAA@KP6AXPEAVCRtlEntry@@@Z1@Z
??0CRtlSharedLock@@QEAA@XZ
??0CVdsAsyncObjectBase@@QEAA@XZ
??0CVdsCallTracer@@QEAA@KPEBD@Z
??0CVdsCriticalSection@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
??0CVdsPnPNotificationBase@@QEAA@XZ
??0CVdsUnlockIt@@QEAA@AEAJ@Z
??0CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??1?$CVdsCoTaskPtr@G@@QEAA@XZ
??1?$CVdsHandleImpl@$0?0@@QEAA@XZ
??1?$CVdsHandleImpl@$0A@@@QEAA@XZ
??1?$CVdsHeapPtr@D@@QEAA@XZ
??1?$CVdsHeapPtr@G@@QEAA@XZ
??1?$CVdsHeapPtr@J@@QEAA@XZ
??1?$CVdsHeapPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??1?$CVdsPtr@D@@QEAA@XZ
??1?$CVdsPtr@G@@QEAA@XZ
??1?$CVdsPtr@J@@QEAA@XZ
??1?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??1?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??1?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??1?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??1CGlobalResource@@QEAA@XZ
??1CPrvEnumObject@@QEAA@XZ
??1CRtlList@@QEAA@XZ
??1CRtlMap@@UEAA@XZ
??1CRtlSharedLock@@QEAA@XZ
??1CVdsAsyncObjectBase@@QEAA@XZ
??1CVdsCallTracer@@QEAA@XZ
??1CVdsCriticalSection@@QEAA@XZ
??1CVdsPnPNotificationBase@@QEAA@XZ
??1CVdsUnlockIt@@QEAA@XZ
??1CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??1type_info@@UEAA@XZ
??4?$CVdsHandleImpl@$0?0@@QEAAPEAXPEAX@Z
??4?$CVdsHandleImpl@$0A@@@QEAAPEAXPEAX@Z
??4?$CVdsHeapPtr@D@@QEAAPEADPEAD@Z
??4?$CVdsHeapPtr@G@@QEAAPEAGPEAG@Z
??4?$CVdsHeapPtr@J@@QEAAPEAJPEAJ@Z
??4?$CVdsHeapPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAAPEAU_AUCTION_THREAD_PARAMETER@@PEAU1@@Z
??4?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAAPEAU_MOUNTMGR_MOUNT_POINT@@PEAU1@@Z
??4?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAAPEAU_MOUNTMGR_MOUNT_POINTS@@PEAU1@@Z
??4?$CVdsHeapPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@PEAU1@@Z
??4?$CVdsHeapPtr@UFMIFS_DEF_FS_OUT@@@@QEAAPEAUFMIFS_DEF_FS_OUT@@PEAU1@@Z
??8?$CVdsHandleImpl@$0?0@@QEBA_NPEAX@Z
??8?$CVdsHandleImpl@$0A@@@QEBA_NPEAX@Z
??8?$CVdsPtr@D@@QEBA_NPEAD@Z
??8?$CVdsPtr@G@@QEBA_NPEAG@Z
??8?$CVdsPtr@J@@QEBA_NPEAJ@Z
??8?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEBA_NPEAU_AUCTION_THREAD_PARAMETER@@@Z
??8?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEBA_NPEAU_MOUNTMGR_MOUNT_POINT@@@Z
??8?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEBA_NPEAU_MOUNTMGR_MOUNT_POINTS@@@Z
??8?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEBA_NPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@@Z
??8?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEBA_NPEAUFMIFS_DEF_FS_OUT@@@Z
??9?$CVdsHandleImpl@$0?0@@QEBA_NPEAX@Z
??9?$CVdsPtr@G@@QEBA_NPEAG@Z
??9?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEBA_NPEAU_DRIVE_LAYOUT_INFORMATION_EX@@@Z
??A?$CVdsPtr@J@@QEAAAEAJJ@Z
??A?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEAAAEAUFMIFS_DEF_FS_OUT@@K@Z
??B?$CVdsHandleImpl@$0?0@@QEAAPEAXXZ
??B?$CVdsHandleImpl@$0A@@@QEAAPEAXXZ
??B?$CVdsPtr@G@@QEBAPEAGXZ
??B?$CVdsPtr@J@@QEBAPEAJXZ
??B?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEBAPEAU_AUCTION_THREAD_PARAMETER@@XZ
??B?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEBAPEAU_CLEAN_DISK_HANDLER_PARAMETER@@XZ
??B?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_FORMAT_VOLUME_THREAD_PARAMETER@@XZ
??B?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINT@@XZ
??B?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINTS@@XZ
??B?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@XZ
??B?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEBAPEAUFMIFS_DEF_FS_OUT@@XZ
??C?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEBAPEAU_AUCTION_THREAD_PARAMETER@@XZ
??C?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEBAPEAU_CLEAN_DISK_HANDLER_PARAMETER@@XZ
??C?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEBAPEAU_DRIVE_LAYOUT_INFORMATION_EX@@XZ
??C?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEBAPEAU_EXTEND_VOLUME_HANDLER_PARAMETER@@XZ
??C?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_FORMAT_VOLUME_THREAD_PARAMETER@@XZ
??C?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINT@@XZ
??C?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINTS@@XZ
??C?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@XZ
??I?$CVdsHandleImpl@$0?0@@QEAAPEAPEAXXZ
??I?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAAPEAPEAU_DRIVE_LAYOUT_INFORMATION_EX@@XZ
?_set_se_translator@@YAP6AXIPEAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z
?AcquireRead@CRtlSharedLock@@AEAAXXZ
?AcquireWrite@CRtlSharedLock@@AEAAXXZ
?AllowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Append@CPrvEnumObject@@QEAAJPEAUIUnknown@@@Z
?Attach@?$CVdsPtr@G@@QEAAXPEAG@Z
?Attach@?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAAXPEAU_CLEAN_DISK_HANDLER_PARAMETER@@@Z
?Attach@?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAAXPEAU_DRIVE_LAYOUT_INFORMATION_EX@@@Z
?Attach@?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAAXPEAU_EXTEND_VOLUME_HANDLER_PARAMETER@@@Z
?Attach@?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAAXPEAU_FORMAT_VOLUME_THREAD_PARAMETER@@@Z
?Attach@?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAAXPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@@Z
?Attach@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAUtagVARIANT@@@Z
?Begin@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Begin@CRtlMap@@QEAA?AVCRtlMapIter@@XZ
?Clear@CPrvEnumObject@@QEAAXXZ
?Clone@CPrvEnumObject@@UEAAJPEAPEAUIEnumVdsObject@@@Z
?Close@?$CVdsHandleImpl@$0?0@@QEAAXXZ
?CurrentThreadIsWriter@CRtlSharedLock@@QEAAHXZ
?Detach@?$CVdsHandleImpl@$0?0@@QEAAPEAXXZ
?Detach@?$CVdsHandleImpl@$0A@@@QEAAPEAXXZ
?Detach@?$CVdsPtr@G@@QEAAPEAGXZ
?Detach@?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAAPEAU_AUCTION_THREAD_PARAMETER@@XZ
?Detach@?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAAPEAU_CLEAN_DISK_HANDLER_PARAMETER@@XZ
?Detach@?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAAPEAU_DRIVE_LAYOUT_INFORMATION_EX@@XZ
?Detach@?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@XZ
?Detach@CVdsWmiVariantObjectArrayEnum@@QEAAJXZ
?DisallowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Downgrade@CRtlSharedLock@@AEAAXXZ
?End@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Find@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAV2@@Z
?FindPtr@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAPEAV2@@Z
?GetEntry@CRtlListIter@@QEAAPEAVCRtlEntry@@XZ
?GetEntryPointer@CRtlListIter@@QEAAPEAXXZ
?GetOutputType@CVdsAsyncObjectBase@@QEAA?AW4_VDS_ASYNC_OUTPUT_TYPE@@XZ
?Initialize@CGlobalResource@@QEAAJXZ
?Initialize@CVdsAsyncObjectBase@@SAKXZ
?Initialize@CVdsPnPNotificationBase@@QEAAKXZ
?Insert@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?InsertHeadPointer@CRtlList@@QEAAHPEAX@Z
?InsertTailPointer@CRtlList@@QEAAHPEAX@Z
?InsertUnique@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?IsCancelRequested@CVdsAsyncObjectBase@@QEAAHXZ
?m_ExtraLogging@CVdsTraceSettings@@QEAAHXZ
?m_NoDebuggerLogging@CVdsTraceSettings@@QEAAHXZ
?Next@CPrvEnumObject@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?Next@CRtlListIter@@QEAAAEAV1@XZ
?Next@CRtlMapIter@@QEAAAEAV1@XZ
?Next@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAPEAUIWbemClassObject@@@Z
?Prev@CRtlListIter@@QEAAAEAV1@XZ
?QueryStatus@CVdsAsyncObjectBase@@UEAAJPEAJPEAK@Z
?RegisterHandle@CVdsPnPNotificationBase@@QEAAKPEAXPEAPEAX@Z
?Release@CRtlSharedLock@@AEAAXXZ
?Remove@CRtlList@@QEAAXAEAVCRtlListIter@@@Z
?Remove@CRtlMap@@QEAAHAEAVCRtlEntry@@@Z
?RemoveAll@CRtlList@@QEAAXXZ
?RemoveAll@CRtlMap@@QEAAXH@Z
?Reset@CPrvEnumObject@@UEAAJXZ
?SetCompletionStatus@CVdsAsyncObjectBase@@QEAAXJK@Z
?SetOutput@CVdsAsyncObjectBase@@QEAAXU_VDS_ASYNC_OUTPUT@@@Z
?SetOutputType@CVdsAsyncObjectBase@@QEAAXW4_VDS_ASYNC_OUTPUT_TYPE@@@Z
?SetPositionToLast@CPrvEnumObject@@QEAAXXZ
?Signal@CVdsAsyncObjectBase@@QEAAXXZ
?Skip@CPrvEnumObject@@UEAAJK@Z
?terminate@@YAXXZ
?Uninitialize@CVdsAsyncObjectBase@@SAXXZ
?Uninitialize@CVdsPnPNotificationBase@@QEAAXXZ
?UnregisterHandle@CVdsPnPNotificationBase@@QEAAXPEAX@Z
?Upgrade@CRtlSharedLock@@AEAAXXZ
?WaitImpl@CVdsAsyncObjectBase@@QEAAJPEAJ@Z
?ZeroAsyncOut@CVdsAsyncObjectBase@@QEAAXXZ
@.data
@.didat
@.reloc
@;t$D|
@8|$pD
@8t$0
@8y(t
@A^_]
@A^_^
@A^A\_^]
@A_A^]
@A_A^_^]
@A_A^A]A\_^]
@kon|
@SUVWAUAVAWH
@SUVWAVH
@SVWH
@UATAUAVAWH
@UAVAWH
@USVAVAWH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@UVWATAUAVAWH
@UVWH
@UWAVH
@VWATAVAWH
@VWAVH
\$ UH
\$(H!\$ H
\$0H!\$8L
\$8H!|$0L
\$8H9t$Hu
\$PA9
\$Pu`I
\$T@"
\\.\MountPointManager
\\.\PartmgrControl
\\?\CdRom%d
\\?\GLOBALROOT
\\?\PhysicalDrive
\\?\PhysicalDrive%d
\\?\PhysicalDrive%lu
\\?\volume{
\Device\Harddisk%d\Partition%d
\Device\Harddisk%ld\Partition0
\Device\Harddisk%s\Partition%d
\DosDevices\%c:
\FVEAPI.DLL
\System Volume Information\FVE.{e40ad34d-dae9-4bc7-95bd-b16218c10f72}.X
\System Volume Information\FVE2.{e40ad34d-dae9-4bc7-95bd-b16218c10f72}.X
\tkfB
]P!]HE3
__C_specific_handler
__CxxFrameHandler3
__dllonexit
__set_app_type
__setusermatherr
__wgetmainargs
_amsg_exit
_callnewh
_cexit
_commode
_CxxThrowException
_exit
_fmode
_initterm
_lock
_ltow
_onexit
_purecall
_tMain, 1, error=%ld
_unlock
_vsnwprintf
_wcmdln
_wcsicmp
_wcsnicmp
_wtol
_XcptFilter
`.rdata
`A^_^][
`A_A^_^]
`A_A^A]_^[]
`A_A^A]A\_^]
|$ E3
|$ UAVAWH
|$ UH
|$(E3
|$@E3
|$`D97u
|$|xu.
|$8E3
|$hHc
|$X97u
|$xI+
|Fi!h
}HH!}
~CVdsCallbackObject()
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
</trustInfo>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity
<description>Virtual Disk Service</description>
<trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
'=t/5
>>uGA
>H9=;
040904B0
0A^_^
0A_A^_
0A_A^A\_^
0A_A^A]A\_^]
0D9-x
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
4H!\$(L
8\$xt
9.v!I
9\$`t
9\$0tVD
9L$\t
9L$xu#
9sPv0H
9T$Pu3
9u4vgH
9z<--
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^]
A^A]_
A^A]A\_]
A^A]A\_^[]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\H
A_A^A]_]
A_A^A]_^[]
A_A^A]_^][
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A9t$Tt$
AccessPermission
AcquireRundownProtection
Adapter Name = %s
AddAccessAllowedAce
Added LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}[%ws] to LUN-disk map
AddEventSource
AddFSPropertiesToMap
AddIScsiStaticTargetW
AddObjectToGlobalMap()
Address = %s
AdjustTokenPrivileges
AllocateAndGetVolumePathName
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shutdown-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
AppID\{F290BFB2-1864-45B1-8804-2654194A87E7}
arrival
AssignTempVolumeName
ATAVAWH
ATL.DLL
AuctionThread exiting due to shutdown
AuctionThread()(Service)
AuthUsesFlags
Being Cleaned = %s
bitlocker                       
BPS = %lu
BusType = %lu
Cache
CacheDisable
CdRom
ChangeServiceConfig2W
CharNextW
CloseHandle
CloseServiceHandle
Clsid
CLSIDFromString
CLUSAPI.dll
CM_Get_DevNode_Status
CM_Get_Parent
CM_Query_And_Remove_SubTreeW
CM_Reenumerate_DevNode_Ex
CoCreateGuid
CoCreateInstance
CoFreeStringArray
CoImpersonateClient
CoInitializeEx
CoInitializeSecurity
CompanyName
ConnectAsyncWrapper()
ConnectAsyncWrapper, 1, hr=%lX
ConnectAsyncWrapper, 2, hr=%lX
ConnectEnumWrapper()
ConnectEnumWrapper, 1, hr=%lX
ConnectionsList
ControlService
CoRevertToSelf
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CoUninitialize
CPrvEnumObject::~CPrvEnumObject()
CPrvEnumObject::CPrvEnumObject()
CRawDiskLun::Clean, 1, error=%ld
CRawDiskLun::Clean, 2, hr=%lX
CRawDiskLun::Clean, 3, error=%ld
CRawDiskLun::Clean, 4, error=%ld
CRawDiskLun::Clean: CreateThread failed: %X
CRawDiskLun::CleanDiskThread, 5, error=%ld
CRawDiskLun::CleanDiskThread, 6, %ld
CreateDeviceInfoSet
CreateEventW
CreateFileW
CreateSemaphoreW
CreateServiceW
CreateThread
CSVFS
CVdsAsync::InternalQueryInterface, 1, hr=%lX
CVdsAsyncObject::~CVdsAsyncObject()
CVdsAsyncObject::Cancel()
CVdsAsyncObject::CVdsAsyncObject()
CVdsAsyncObject::QueryStatus()
CVdsAsyncObject::QueryStatus, 1, hr=%lX
CVdsAsyncObject::QueryStatus, 2, hr=%lX
CVdsAsyncObject::Wait()
CVdsAsyncObject::Wait, 1, hr=%lX
CVdsAsyncObject::Wait, 10, hr=%lX
CVdsAsyncObject::Wait, 11, hr=%lX
CVdsAsyncObject::Wait, 12, hr=%lX
CVdsAsyncObject::Wait, 16, hr=%lX
CVdsAsyncObject::Wait, 17, hr=%lX
CVdsAsyncObject::Wait, 2, hr=%lX
CVdsAsyncObject::Wait, 3, hr=%lX
CVdsAsyncObject::Wait, 4, hr=%lX
CVdsAsyncObject::Wait, 4.1, hr=%lX
CVdsAsyncObject::Wait, 5, hr=%lX
CVdsAsyncObject::Wait, 6, hr=%lX
CVdsAsyncObject::Wait, 7, hr=%lX
CVdsAsyncObject::Wait, 8, hr=%lX
CVdsAsyncObject::Wait, 9, hr=%lX
CVdsAsyncObject::Wait: provider returned NULL object pointer
CVdsAsyncObject::Wait:15 provider returned NULL object pointer
CVdsAsyncObject::Wait:5.5 provider returned NULL object pointer
CVdsAsyncObject::Wait:7.5 provider returned NULL object pointer
CVdsAsyncObject::Wait:8.5 provider returned NULL object pointer
CVdsCallbackObject()
CVdsCallbackObject::Advise()
CVdsCallbackObject::Advise, 1 error=%lX, pService=%p, pSink=%p, pulCookie=%p
CVdsCallbackObject::Advise, 10, state=%ld
CVdsCallbackObject::Advise, 11 error=%lX
CVdsCallbackObject::Advise, 12 error=%lX
CVdsCallbackObject::Advise, 13, error=%ld
CVdsCallbackObject::Advise, 14, state=%ld
CVdsCallbackObject::Advise, 15, state=%ld
CVdsCallbackObject::Advise, 2 error=%lX
CVdsCallbackObject::Advise, 3 error=%lX
CVdsCallbackObject::Advise, 4 error=%lX
CVdsCallbackObject::Advise, 5 error=%lX
CVdsCallbackObject::Advise, 6 error=%lX
CVdsCallbackObject::Advise, 7 error=%lX
CVdsCallbackObject::Advise, 8, error=%ld
CVdsCallbackObject::Advise, 9, state=%ld
CVdsCallbackObject::EnqueuEx, 1
CVdsCallbackObject::FindClientInQueue()
CVdsCallbackObject::Initialize()
CVdsCallbackObject::InitiateSecondAuction()
CVdsCallbackObject::InitiateSecondAuction, 1, error=%lX, pwszDevicePath=%s, pLayout=%p
CVdsCallbackObject::InitiateSecondAuction, 2, error=%lX, pwszDevicePath=%s
CVdsCallbackObject::InitiateSecondAuction, 3, %s
CVdsCallbackObject::InitiateSecondAuction, 4, %s, error=%ld
CVdsCallbackObject::InitiateSecondAuctionIfLayoutChanged()
CVdsCallbackObject::InitiateSecondAuctionIfLayoutChanged: failed to auction %s: %X
CVdsCallbackObject::OnNotify - Notification lost
CVdsCallbackObject::OnNotify()
CVdsCallbackObject::QueryClaim()
CVdsCallbackObject::QueryClaim, 1, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::QueryClaim, 2, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::QueryClaim, 2.5, hr=%lX
CVdsCallbackObject::QueryClaim, 3, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::QueryClaim, 3.5, hr=%lX
CVdsCallbackObject::QueryClaim, 3.75, hr=%lX
CVdsCallbackObject::QueryClaim, 4, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::RemoveClientFromQueue()
CVdsCallbackObject::Unadvise()
CVdsCallbackObject::Unadvise, 1 error=%lX
CVdsCallbackObject::Unadvise, 2 error=%lX
CVdsCallbackObject::Unadvise, 3, error=%ld
CVdsCallbackObject::Unadvise, 4, state=%ld
CVdsCallbackObject::Unadvise, 5, state=%ld
CVdsController::~CVdsController()
CVdsController::CVdsController()
CVdsController::FlushCache()
CVdsController::GetPortProperties()
CVdsController::GetProperties()
CVdsController::GetSubSystem()
CVdsController::GetSubSystem, 1, error=%lX
CVdsController::GetSubSystem, 2, error=%lX
CVdsController::GetSubSystem, 3, error=%lX
CVdsController::InternalQueryInterface, 1, hr=%lX
CVdsController::InternalQueryInterface, 2, hr=%lX
CVdsController::InternalQueryInterface, 3, hr=%lX
CVdsController::InvalidateCache()
CVdsController::PulseMaintenance()
CVdsController::QueryAssociatedLuns()
CVdsController::QueryAssociatedLuns, 1, error=%lX
CVdsController::QueryAssociatedLuns, 2, hr=%lX
CVdsController::QueryControllerPorts()
CVdsController::QueryControllerPorts, 2, hr=%lX
CVdsController::Reset()
CVdsController::SetStatus()
CVdsController::StartMaintenance()
CVdsController::StopMaintenance()
CVdsControllerPort::~CVdsControllerPort()
CVdsControllerPort::CVdsControllerPort()
CVdsControllerPort::FlushCache, 1, error=%lX
CVdsControllerPort::GetController()
CVdsControllerPort::GetController, 1, error=%lX
CVdsControllerPort::GetController, 3, error=%lX
CVdsControllerPort::GetPortProperties, 1, error=%lX
CVdsControllerPort::GetProperties()
CVdsControllerPort::GetProperties, 1, error=%lX
CVdsControllerPort::InternalQueryInterface, 1, hr=%lX
CVdsControllerPort::InternalQueryInterface, 2, hr=%lX
CVdsControllerPort::InvalidateCache, 1, error=%lX
CVdsControllerPort::PulseMaintenance()
CVdsControllerPort::PulseMaintenance, 1, error=%lX
CVdsControllerPort::QueryAssociatedLuns()
CVdsControllerPort::QueryAssociatedLuns, 1, error=%lX
CVdsControllerPort::QueryAssociatedLuns, 2, hr=%lX
CVdsControllerPort::QueryControllerPorts, 1, error=%lX
CVdsControllerPort::Reset()
CVdsControllerPort::Reset, 1, error=%lX
CVdsControllerPort::SetStatus()
CVdsControllerPort::SetStatus, 1, error=%lX
CVdsControllerPort::StartMaintenance()
CVdsControllerPort::StartMaintenance, 1, error=%lX
CVdsControllerPort::StopMaintenance()
CVdsControllerPort::StopMaintenance, 1, error=%lX
CVdsDiskLun::~CVdsDiskLun()
CVdsDiskLun::AddPlex()
CVdsDiskLun::AddPlex, 1, hr=%lX
CVdsDiskLun::ApplyHints()
CVdsDiskLun::ApplyHints, 1, error=%lX
CVdsDiskLun::ApplyHints2()
CVdsDiskLun::ApplyHints2, 1, error=%lX
CVdsDiskLun::ApplyHints2, 2, error=%lX
CVdsDiskLun::AssignDriveLetter()
CVdsDiskLun::AssignDriveLetter, 1, hr=%lX
CVdsDiskLun::AssignDriveLetter, 1.5, hr=%lX
CVdsDiskLun::AssignDriveLetter, 2, hr=%lX
CVdsDiskLun::AssignDriveLetter, 3, hr=%lX
CVdsDiskLun::AssignDriveLetter, 4, hr=%lX
CVdsDiskLun::AssignDriveLetter, 5, error=%lX
CVdsDiskLun::AssociateControllerPorts()
CVdsDiskLun::AssociateControllerPorts, 1, error=%lX
CVdsDiskLun::AssociateControllers()
CVdsDiskLun::AssociateControllers, 1, error=%lX
CVdsDiskLun::AssociateTargets()
CVdsDiskLun::AssociateTargets, 1, error=%lX
CVdsDiskLun::BuildOEMPartitionName()
CVdsDiskLun::BuildOEMPartitionName, 1, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 2, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 3, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 4, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 5, %S, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 6, %lX
CVdsDiskLun::BuildOEMPartitionName, 7, %lX
CVdsDiskLun::BuildOEMPartitionName, 8, %lX
CVdsDiskLun::BuildOEMPartitionName, 9, %lX
CVdsDiskLun::ChangeAttributes()
CVdsDiskLun::ChangeAttributes, 1, hr=%lX
CVdsDiskLun::ChangeAttributes, 2, hr=%lX
CVdsDiskLun::ChangePartitionType()
CVdsDiskLun::ChangePartitionType, 1, hr=%lX
CVdsDiskLun::ChangePartitionType, 2, hr=%lX
CVdsDiskLun::Clean()
CVdsDiskLun::Clean, 1, hr=%lX
CVdsDiskLun::Clean, 10, %lX
CVdsDiskLun::Clean, 12, %lX
CVdsDiskLun::Clean, 2
CVdsDiskLun::Clean, 3, %lX
CVdsDiskLun::Clean, 4
CVdsDiskLun::Clean, 4.1, %lX
CVdsDiskLun::Clean, 5
CVdsDiskLun::Clean, 6
CVdsDiskLun::Clean, 7, %lX
CVdsDiskLun::Clean, 8, %lX
CVdsDiskLun::Clean, 9, %lX
CVdsDiskLun::ClearFlags
CVdsDiskLun::ClearFlags, 1, hr=%lX
CVdsDiskLun::ClearFlags, 2, hr=%lX
CVdsDiskLun::ClearFlags, 3, hr=%lX
CVdsDiskLun::ClearFlags, 3.5, system disk, hr=%lX
CVdsDiskLun::ClearFlags, 3.75, Boot from disk, hr=%lX
CVdsDiskLun::ClearFlags, 4, hr=%lX
CVdsDiskLun::ClearFlags, 5, hr=%lX
CVdsDiskLun::ClearFlags, 6, hr=%lX
CVdsDiskLun::ConvertStyle()
CVdsDiskLun::ConvertStyle, 1, hr=%lX
CVdsDiskLun::ConvertStyle, 2, hr=%lX
CVdsDiskLun::ConvertStyle, 2.1, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 2.2, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 2.3, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 2.4, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 3.1, NOT CONVERTABLE, hr=%lX
CVdsDiskLun::ConvertStyle, 3.2, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 4, hr=%lX
CVdsDiskLun::CreatePartition()
CVdsDiskLun::CreatePartition, 1, hr=%lX
CVdsDiskLun::CreatePartition, 2, hr=%lX
CVdsDiskLun::CreatePartitionEx()
CVdsDiskLun::CreatePartitionEx, 1, hr=%lX
CVdsDiskLun::CreatePartitionEx, 2, hr=%lX
CVdsDiskLun::CVdsDiskLun()
CVdsDiskLun::Delete()
CVdsDiskLun::Delete, 1, error=%lX
CVdsDiskLun::DeleteDriveLetter()
CVdsDiskLun::DeleteDriveLetter, 1, hr=%lX
CVdsDiskLun::DeleteDriveLetter, 1.5, hr=%lX
CVdsDiskLun::DeleteDriveLetter, 2, hr=%lX
CVdsDiskLun::DeleteDriveLetter, 3, name(%S): %ld
CVdsDiskLun::DeleteDriveLetter, 4, name(%S): %ld
CVdsDiskLun::DeleteDriveLetter, 5, error=%ld
CVdsDiskLun::DeleteDriveLetter, 6, error=%ld
CVdsDiskLun::DeletePartition()
CVdsDiskLun::DeletePartition, 1, hr=%lX
CVdsDiskLun::DeletePartition, 10, hr=%lX
CVdsDiskLun::DeletePartition, 10.5, hr=%lX
CVdsDiskLun::DeletePartition, 12, status=%lX
CVdsDiskLun::DeletePartition, 2, hr=%lX
CVdsDiskLun::DeletePartition, 4
CVdsDiskLun::DeletePartition, 5
CVdsDiskLun::DeletePartition, 6, hr=%lX
CVdsDiskLun::DeletePartition, 7
CVdsDiskLun::DeletePartition, 9.5, hr=%lX
CVdsDiskLun::DismountDiskVolumes
CVdsDiskLun::DismountDiskVolumes, 1, hr=%lX
CVdsDiskLun::DismountDiskVolumes, 2, hr=%lX
CVdsDiskLun::DismountDiskVolumes, 3, ObjectId=%s, hr=%lX
CVdsDiskLun::DismountDiskVolumes, 4, %lX, name=%s
CVdsDiskLun::DismountDiskVolumes, 5, %lX, name=%s
CVdsDiskLun::DoOfflineOnline, 1
CVdsDiskLun::DoOfflineOnline, 2 Name=%s, hr=%lX
CVdsDiskLun::DoOfflineOnline, 3 Name=%s, hr=%lX
CVdsDiskLun::DoOfflineOnline, 4 Name=%s, hr=%lX
CVdsDiskLun::DoOfflineOnline, 5, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 6, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 7, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 8, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 9 Name=%s, hr=%lX
CVdsDiskLun::Eject()
CVdsDiskLun::Eject, 1, hr=%lX
CVdsDiskLun::Eject, 1.5, hr=%lX
CVdsDiskLun::Eject, 2, hr=%lX
CVdsDiskLun::Extend()
CVdsDiskLun::Extend, 0, hr=%lX
CVdsDiskLun::Extend, 1, hr=%lX
CVdsDiskLun::Extend, 2, hr=%lX
CVdsDiskLun::Extend, 3, %lX
CVdsDiskLun::FindEndOfLastVolume()
CVdsDiskLun::FindEndOfLastVolume, 1, disk=%p, prop=%p, offset=%p, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 2, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 3, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 3.5, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 4, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 5, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 6, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 7, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 8, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 9, hr=%lX
CVdsDiskLun::FindMpioGetDescriptor()
CVdsDiskLun::FindMpioGetDescriptor, 1
CVdsDiskLun::FindMpioGetDescriptor, 2, hr=%lX
CVdsDiskLun::FindMpioGetDescriptor, 3, hr=%lX
CVdsDiskLun::FindMpioGetDescriptor, 4, error=%ld
CVdsDiskLun::FindMpioGetDescriptor, 5, error=%ld
CVdsDiskLun::FindMpioGetDescriptor: Could not find MPIO instance corresponding to LUN.
CVdsDiskLun::FindMpioGetDescriptor: spMpioGetDescriptorEnum->Next failed: %X
CVdsDiskLun::FindMpioGetDescriptor: spMpioGetDescriptorEnum->Next: WBEM_E_INVALID_CLASS
CVdsDiskLun::FindMpioGetDescriptor: vdsPdoInformationEnum.Attach failed: %X
CVdsDiskLun::FindMpioGetDescriptor: vdsPdoInformationEnum.Next failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiCreateInstanceEnum MPIO_GET_DESCRIPTOR failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiCreateInstanceEnum MPIO_GET_DESCRIPTOR: WBEM_E_INVALID_CLASS
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance Lun failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance PortNumber failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance ScsiAddress failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance ScsiPathId failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance TargetId failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetVariantObjectArrayFromInstance PdoInformation failed: %X
CVdsDiskLun::FormatPartition()
CVdsDiskLun::FormatPartition, 1, hr=%lX
CVdsDiskLun::FormatPartition, 2, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 1, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 2, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 3, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 4, name=%s, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 5, name=%s, hr=%lX
CVdsDiskLun::GetDriveLetter()
CVdsDiskLun::GetDriveLetter, 1, hr=%lX
CVdsDiskLun::GetDriveLetter, 2, hr=%lX
CVdsDiskLun::GetDriveLetter, 3, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 4, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 5, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 6, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 7, name(%S): %ld
CVdsDiskLun::GetIdentificationData
CVdsDiskLun::GetIdentificationData, 1, hr=%lX
CVdsDiskLun::GetIdentificationData, 1.5
CVdsDiskLun::GetIdentificationData, 2, hr=%lX
CVdsDiskLun::GetIdentificationData, 2.1, hr=%lX
CVdsDiskLun::GetIdentificationData, 3, hr=%lX
CVdsDiskLun::GetLoadBalancePolicy()
CVdsDiskLun::GetLoadBalancePolicy: Could not load iSCSI library.
CVdsDiskLun::GetLoadBalancePolicy: FindMpioGetDescriptor failed, 1: %lX
CVdsDiskLun::GetLoadBalancePolicy: FindMpioGetDescriptor failed, 2: %lX
CVdsDiskLun::GetLoadBalancePolicy: FindMpioGetDescriptor NOT SUPPORTED
CVdsDiskLun::GetLoadBalancePolicy: m_pLunMpio->GetLoadBalancePolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: NULL input arguments
CVdsDiskLun::GetLoadBalancePolicy: pPaths Alloc: Out of memory.
CVdsDiskLun::GetLoadBalancePolicy: Too many paths returned.
CVdsDiskLun::GetLoadBalancePolicy: vdsDsmPathsEnum.Attach failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsDsmPathsEnum.Next failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsSupportedLbPoliciesEnum.Attach failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsSupportedLbPoliciesEnum.Next failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiFindInstanceOfClass DSM_QueryLBPolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiFindInstanceOfClass DSM_QueryUniqueId failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetObjectFromInstance LoadBalancePolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance DSMPathCount failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance LoadBalancePolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance PathWeight failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance PrimaryPath failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlonglongFromInstance DSMPathId failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlonglongFromInstance DsmUniqueId failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetVariantObjectArrayFromInstance DSM_Paths failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetVariantObjectArrayFromInstance Supported_LB_Policies failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::GetLunNumber()
CVdsDiskLun::GetLunNumber, 1, error=%lX
CVdsDiskLun::GetLunNumber, 2, error=%lX
CVdsDiskLun::GetLunNumber, 3, error=%lX
CVdsDiskLun::GetPack()
CVdsDiskLun::GetPack, 1, hr=%lX
CVdsDiskLun::GetPack, 1.5, hr=%lX
CVdsDiskLun::GetPack, 2, hr=%lX
CVdsDiskLun::GetPack, 2.1, DISK NOT INITIALIZED, hr=%lX
CVdsDiskLun::GetPack, 2.5, hr=%lX
CVdsDiskLun::GetPack, 3, hr=%lX
CVdsDiskLun::GetPack, 4, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties()
CVdsDiskLun::GetPartitionFileSystemProperties, 1, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties, 2, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties, 3, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties: failed to open device (%s), error=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName()
CVdsDiskLun::GetPartitionFileSystemTypeName, 1, hr=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName, 2, hr=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName, 3, hr=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName: failed to open device (%s), error=%lX
CVdsDiskLun::GetPartitionProperties()
CVdsDiskLun::GetPartitionProperties, 1, hr=%lX
CVdsDiskLun::GetPartitionProperties, 2, hr=%lX
CVdsDiskLun::GetPathInfo()
CVdsDiskLun::GetPathInfo: Could not find initiator adapter endpoint for path.
CVdsDiskLun::GetPathInfo: Could not find session cache entry corresponding to path.
CVdsDiskLun::GetPathInfo: Could not find session corresponding to cache entry.
CVdsDiskLun::GetPathInfo: Could not find target portal endpoint for path.
CVdsDiskLun::GetPathInfo: Could not load iSCSI library.
CVdsDiskLun::GetPathInfo: FindMpioGetDescriptor failed, 1: %lX
CVdsDiskLun::GetPathInfo: FindMpioGetDescriptor failed, 2: %lX
CVdsDiskLun::GetPathInfo: FindMpioGetDescriptor NOT SUPPORTED: hr=%lX
CVdsDiskLun::GetPathInfo: GetLoadBalancePolicy failed: %X
CVdsDiskLun::GetPathInfo: GetSubSystem failed: %X
CVdsDiskLun::GetPathInfo: Invalid path FC\SAS HBA returned
CVdsDiskLun::GetPathInfo: Invalid path iSCSI returned
CVdsDiskLun::GetPathInfo: Invalid path returned
CVdsDiskLun::GetPathInfo: m_pLunMpio->GetPathInfo failed: %X
CVdsDiskLun::GetPathInfo: m_pService->QueryHbaPorts failed: %X
CVdsDiskLun::GetPathInfo: m_pService->QueryInitiatorAdapters failed: %X
CVdsDiskLun::GetPathInfo: NULL input arguments
CVdsDiskLun::GetPathInfo: pPaths Alloc: Out of memory.
CVdsDiskLun::GetPathInfo: pPaths[lCurrentPdo].pInitiatorPortalIpAddr Alloc: Out of memory.
CVdsDiskLun::GetPathInfo: SafeArrayGetLBound failed: %X
CVdsDiskLun::GetPathInfo: SafeArrayGetUBound failed: %X
CVdsDiskLun::GetPathInfo: spEnumHbaPorts->Next failed: %X
CVdsDiskLun::GetPathInfo: spEnumHbaPorts->Reset failed: %X
CVdsDiskLun::GetPathInfo: spEnumInitAdap->Next failed: %X
CVdsDiskLun::GetPathInfo: spEnumInitAdap->Reset failed: %X
CVdsDiskLun::GetPathInfo: spEnumInitPort->Next failed: %X
CVdsDiskLun::GetPathInfo: spEnumPortals->Reset failed: %X
CVdsDiskLun::GetPathInfo: spHbaPort->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: spHbaPortUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spInitAdap->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: spInitAdap->QueryInitiatorPortals failed: %X
CVdsDiskLun::GetPathInfo: spInitAdapUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spInitiatorSessionInfoEnum->Next failed: %X
CVdsDiskLun::GetPathInfo: spInitiatorSessionInfoEnum->Reset failed: %X
CVdsDiskLun::GetPathInfo: spInitPortal->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: spInitPortUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spPortal->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: spPortalUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spSubsystem->QueryInterface IID_IVdsSubSystemInterconnect failed: %X
CVdsDiskLun::GetPathInfo: spSubsystem->QueryInterface IID_IVdsSubSystemIscsi failed: %X
CVdsDiskLun::GetPathInfo: spSubsystemInterconnect->GetSupportedInterconnects failed: %X
CVdsDiskLun::GetPathInfo: spSubsystemIscsi->QueryPortals failed: %X
CVdsDiskLun::GetPathInfo: Unsupported provider type
CVdsDiskLun::GetPathInfo: VdsIscsiCacheSessionDevices failed: %X
CVdsDiskLun::GetPathInfo: VdsIscsiGetIpAddressFromInstance LocalAddr failed: %X
CVdsDiskLun::GetPathInfo: VdsIscsiGetIpAddressFromInstance RemoteAddr failed: %X
CVdsDiskLun::GetPathInfo: vdsPdoInformationEnum.Attach failed: %X
CVdsDiskLun::GetPathInfo: vdsPdoInformationEnum.Next failed: %X
CVdsDiskLun::GetPathInfo: vdsSessionsListEnum.Attach failed: %X
CVdsDiskLun::GetPathInfo: vdsSessionsListEnum.Next failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiCreateInstanceEnum MSiSCSI_InitiatorSessionInfo failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiFindInstanceOfClass DSM_QueryUniqueId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance Lun failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance PortNumber failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance ScsiPathId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance TargetId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetObjectFromInstance ScsiAddress failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetObjectInVariantObjectArray ConnectionsList[0] failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlongFromInstance LocalPort failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlongFromInstance RemotePort failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance DsmUniqueId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance PathIdentifier failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance UniqueAdapterId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance UniqueSessionId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetVariantObjectArrayFromInstance PdoInformation failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetVariantObjectArrayFromInstance SessionsList failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::GetProperties (IVdsAdvancedDisk3), 1, hr=%lX
CVdsDiskLun::GetProperties (IVdsAdvancedDisk3), 2, hr=%lX
CVdsDiskLun::GetProperties() (IVdsAdvancedDisk3)
CVdsDiskLun::GetProperties() (IVdsDisk)
CVdsDiskLun::GetProperties() (IVdsLun)
CVdsDiskLun::GetProperties, 1, error=%lX
CVdsDiskLun::GetProperties, 1, hr=%lX
CVdsDiskLun::GetProperties, 2, hr=%lX
CVdsDiskLun::GetProperties2() (IVdsDisk3)
CVdsDiskLun::GetProperties2, 1, hr=%lX
CVdsDiskLun::GetProperties2, 2, hr=%lX
CVdsDiskLun::GetSubSystem()
CVdsDiskLun::GetSubSystem, 1, hr=%lX
CVdsDiskLun::GetSubSystem, 2, hr=%lX
CVdsDiskLun::GetSubSystem, 3, hr=%lX
CVdsDiskLun::GetSupportedLbPolicies()
CVdsDiskLun::GetSupportedLbPolicies: Could not load iSCSI library.
CVdsDiskLun::GetSupportedLbPolicies: FindMpioGetDescriptor failed: %lX
CVdsDiskLun::GetSupportedLbPolicies: FindMpioGetDescriptor NOT SUPPORTED
CVdsDiskLun::GetSupportedLbPolicies: m_pLunMpio->GetSupportedLbPolicies failed: %X
CVdsDiskLun::GetSupportedLbPolicies: NULL input arguments
CVdsDiskLun::GetSupportedLbPolicies: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::GetSupportedLbPolicies: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::GetUniqueId()
CVdsDiskLun::GetUniqueId, 1, hr=%lX
CVdsDiskLun::GetUniqueId, 2, hr=%lX
CVdsDiskLun::InternalQueryInterface, 1, hr=%lX
CVdsDiskLun::InternalQueryInterface, 10, hr=%lX
CVdsDiskLun::InternalQueryInterface, 11
CVdsDiskLun::InternalQueryInterface, 12, Win32 error=%ld
CVdsDiskLun::InternalQueryInterface, 13, hr=%lX
CVdsDiskLun::InternalQueryInterface, 2, hr=%lX
CVdsDiskLun::InternalQueryInterface, 3, hr=%lX
CVdsDiskLun::InternalQueryInterface, 4, hr=%lX
CVdsDiskLun::InternalQueryInterface, 5 DiskId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::InternalQueryInterface, 6, hr=%lX
CVdsDiskLun::InternalQueryInterface, 7, hr=%lX
CVdsDiskLun::InternalQueryInterface, 8, hr=%lX
CVdsDiskLun::InternalQueryInterface, 9 LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::IVdsLun::GetIdentificationData
CVdsDiskLun::IVdsLun::GetIdentificationData, 1, error=%lX
CVdsDiskLun::Offline()
CVdsDiskLun::Offline, 1, hr=%lX
CVdsDiskLun::Offline, 2, hr=%lX
CVdsDiskLun::Offline, 3
CVdsDiskLun::Offline, 3.5, boot disk, hr=%lX
CVdsDiskLun::Offline, 4, system disk, hr=%lX
CVdsDiskLun::Offline, 5, hr=%lX
CVdsDiskLun::Offline, 6, hr=%lX
CVdsDiskLun::Offline, 7, hr=%lX
CVdsDiskLun::Offline, 8, hr=%lX
CVdsDiskLun::Offline, 8b, hr=%lX
CVdsDiskLun::Offline, 9 Name=%s, hr=%lX
CVdsDiskLun::Online()
CVdsDiskLun::Online, 1, hr=%lX
CVdsDiskLun::Online, 2, hr=%lX
CVdsDiskLun::Online, 3, hr=%lX
CVdsDiskLun::Online, 4 Name=%s, hr=%lX
CVdsDiskLun::PostCleanDiskHandler()
CVdsDiskLun::PostCleanDiskHandler, 1, %lX, %lX
CVdsDiskLun::PostCleanDiskHandler, 10, %lX
CVdsDiskLun::PostCleanDiskHandler, 11, %lX
CVdsDiskLun::PostCleanDiskHandler, 2, status=%lX
CVdsDiskLun::PostCleanDiskHandler, 3, m_pUnk == NULL
CVdsDiskLun::PostCleanDiskHandler, 4, %lX
CVdsDiskLun::PostCleanDiskHandler, 5, %lX
CVdsDiskLun::PostCleanDiskHandler, 6, %lX
CVdsDiskLun::PostCleanDiskHandler, 7, %lX
CVdsDiskLun::PostCleanDiskHandler, 8, %lX
CVdsDiskLun::PostCleanDiskHandler, 9, %lX
CVdsDiskLun::PostCleanDiskHandler: pAsync QueryInterface failed: %lX
CVdsDiskLun::PostCleanDiskHandlerEntry()
CVdsDiskLun::PrepareCancelVolumeDelete()
CVdsDiskLun::PrepareCancelVolumeDelete: CoTaskMemAlloc() failed: hr=%lX
CVdsDiskLun::PrepareCancelVolumeDelete: CreateFile() failed: hr=%lX
CVdsDiskLun::PrepareCancelVolumeDelete: DeviceIoControl() failed: hr=%lX
CVdsDiskLun::PulseMaintenance()
CVdsDiskLun::PulseMaintenance, 1, error=%lX
CVdsDiskLun::QueryActiveControllerPorts()
CVdsDiskLun::QueryActiveControllerPorts, 1, hr=%lX
CVdsDiskLun::QueryActiveControllerPorts, 2, hr=%lX
CVdsDiskLun::QueryActiveControllers()
CVdsDiskLun::QueryActiveControllers, 1, hr=%lX
CVdsDiskLun::QueryActiveControllers, 2, hr=%lX
CVdsDiskLun::QueryAssociatedTargets()
CVdsDiskLun::QueryAssociatedTargets, 1, hr=%lX
CVdsDiskLun::QueryAssociatedTargets, 2, hr=%lX
CVdsDiskLun::QueryDiskInterfaces()
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsAdvancedDisk, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsAdvancedDisk2, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsAdvancedDisk3, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsCreatePartitionEx, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsDisk, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsDisk3, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsRemovable, hr=%lX
CVdsDiskLun::QueryExtents()
CVdsDiskLun::QueryExtents, 1, hr=%lX
CVdsDiskLun::QueryExtents, 2, hr=%lX
CVdsDiskLun::QueryFreeExtents()
CVdsDiskLun::QueryFreeExtents, 1, hr=%lX
CVdsDiskLun::QueryFreeExtents, 2, hr=%lX
CVdsDiskLun::QueryHints()
CVdsDiskLun::QueryHints, 1, error=%lX
CVdsDiskLun::QueryHints2()
CVdsDiskLun::QueryHints2, 1, error=%lX
CVdsDiskLun::QueryHints2, 2, error=%lX
CVdsDiskLun::QueryLunInterfaces()
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLun, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLun2, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunControllerPorts, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunIscsi, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 1, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 15, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 2, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 3, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 4, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 5, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 6, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunNaming, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunNumber, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsMaintenance, hr=%lX
CVdsDiskLun::QueryMaxLunExtendSize()
CVdsDiskLun::QueryMaxLunExtendSize, 1, error=%lX
CVdsDiskLun::QueryMedia()
CVdsDiskLun::QueryMedia, 1, hr=%lX
CVdsDiskLun::QueryMedia, 1.5, hr=%lX
CVdsDiskLun::QueryMedia, 2, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport()
CVdsDiskLun::QueryPartitionFileSystemFormatSupport, 1, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport, 2, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport, 3, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport: failed to open device (%s), error=%lX
CVdsDiskLun::QueryPartitions()
CVdsDiskLun::QueryPartitions, 1, hr=%lX
CVdsDiskLun::QueryPartitions, 2, hr=%lX
CVdsDiskLun::QueryPartitions, 2.1, DISK NOT INITIALIZED, hr=%lX
CVdsDiskLun::QueryPlexes()
CVdsDiskLun::QueryPlexes, 1, hr=%lX
CVdsDiskLun::QueryPlexes, 2, hr=%lX
CVdsDiskLun::Recover()
CVdsDiskLun::Recover, 1, hr=%lX
CVdsDiskLun::RemountDiskVolumes
CVdsDiskLun::RemountDiskVolumes, 1, hr=%lX
CVdsDiskLun::RemountDiskVolumes, 1.5
CVdsDiskLun::RemountDiskVolumes, 2, hr=%lX
CVdsDiskLun::RemountDiskVolumes, 3, ObjectId=%s, hr=%lX
CVdsDiskLun::RemountDiskVolumes, 4, %lX, name=%s
CVdsDiskLun::RemovePlex()
CVdsDiskLun::RemovePlex, 1, hr=%lX
CVdsDiskLun::SetFlags
CVdsDiskLun::SetFlags, 1, hr=%lX
CVdsDiskLun::SetFlags, 2, hr=%lX
CVdsDiskLun::SetFlags, 3, hr=%lX
CVdsDiskLun::SetFlags, 3.5, system disk, hr=%lX
CVdsDiskLun::SetFlags, 3.75, boot from disk, hr=%lX
CVdsDiskLun::SetFlags, 4, hr=%lX
CVdsDiskLun::SetFlags, 5, hr=%lX
CVdsDiskLun::SetFlags, 6, hr=%lX
CVdsDiskLun::SetFlags, 7, hr=%lX
CVdsDiskLun::SetFlags, 8, hr=%lX
CVdsDiskLun::SetFlags, 9, hr=%lX
CVdsDiskLun::SetFriendlyName()
CVdsDiskLun::SetFriendlyName, 1, error=%lX
CVdsDiskLun::SetLoadBalancePolicy()
CVdsDiskLun::SetLoadBalancePolicy, 1, hr=%lX
CVdsDiskLun::SetLoadBalancePolicy: Could not load iSCSI library.
CVdsDiskLun::SetLoadBalancePolicy: DsmSetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: FindMpioGetDescriptor failed: %lX
CVdsDiskLun::SetLoadBalancePolicy: FindMpioGetDescriptor NOT SUPPORTED
CVdsDiskLun::SetLoadBalancePolicy: m_pLunMpio->SetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCallMethod DsmSetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCreateClassInstance DSM_Load_Balance_Policy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCreateClassInstance MPIO_DSM_Path failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCreateVariantArray failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiFindInstanceOfClass DSM_LB_Operations failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiGetMethodArgumentObject DsmSetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiGetUlongFromInstance Status failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetObjectInInstance LoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance DSMPathCount failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance LoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance PathWeight failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance PrimaryPath failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance Reserved failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance Version failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlonglongInInstance DSMPathId failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlonglongInInstance Reserved failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetVariantInInstance DSM_Paths failed: %X
CVdsDiskLun::SetMask()
CVdsDiskLun::SetMask, 1, error=%lX
CVdsDiskLun::SetSANMode()
CVdsDiskLun::SetSANMode, 1, hr=%lX
CVdsDiskLun::SetSANMode, 2, hr=%lX
CVdsDiskLun::SetSANMode, 3, hr=%lX
CVdsDiskLun::SetSANMode, 4, hr=%lX
CVdsDiskLun::SetSANMode, 5, hr=%lX
CVdsDiskLun::SetStatus()
CVdsDiskLun::SetStatus, 1, error=%lX
CVdsDiskLun::Shrink()
CVdsDiskLun::Shrink, 0, hr=%lX
CVdsDiskLun::Shrink, 1, hr=%lX
CVdsDiskLun::Shrink, 10, name=%S
CVdsDiskLun::Shrink, 11, hr=%lX
CVdsDiskLun::Shrink, 12, hr=%lX
CVdsDiskLun::Shrink, 14, hr=%lX
CVdsDiskLun::Shrink, 15, hr=%lX
CVdsDiskLun::Shrink, 16, hr=%lX
CVdsDiskLun::Shrink, 17, hr=%lX
CVdsDiskLun::Shrink, 18, hr=%lX
CVdsDiskLun::Shrink, 19, hr=%lX
CVdsDiskLun::Shrink, 2, hr=%lX
CVdsDiskLun::Shrink, 20, hr=%lX
CVdsDiskLun::Shrink, 21, hr=%lX
CVdsDiskLun::Shrink, 22, %lX
CVdsDiskLun::Shrink, 3, hr=%lX
CVdsDiskLun::Shrink, 4, hr=%lX
CVdsDiskLun::Shrink, 5, hr=%lX
CVdsDiskLun::Shrink, 6, hr=%lX
CVdsDiskLun::Shrink, 7, hr=%lX
CVdsDiskLun::Shrink, 8, hr=%lX
CVdsDiskLun::Shrink, 9, hr=%lX
CVdsDiskLun::StartMaintenance()
CVdsDiskLun::StartMaintenance, 1, error=%lX
CVdsDiskLun::StopMaintenance()
CVdsDiskLun::StopMaintenance, 1, error=%lX
CVdsDiskLun::ValidateDiskInterfaces()
CVdsDiskLun::ValidateDiskInterfaces, 1, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 10, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 11, Win32 error=%ld
CVdsDiskLun::ValidateDiskInterfaces, 12, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 2, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 3, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 4 LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::ValidateDiskInterfaces, 5, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 6, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 7 DiskId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::ValidateDiskInterfaces, 8, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 9, hr=%lX
CVdsDrive::~CVdsDrive()
CVdsDrive::ClearFlags()
CVdsDrive::ClearFlags, 1, error=%lX
CVdsDrive::CVdsDrive()
CVdsDrive::GetProperties()
CVdsDrive::GetProperties, 1, error=%lX
CVdsDrive::GetProperties2()
CVdsDrive::GetProperties2, 1, error=%lX
CVdsDrive::GetProperties2, 2, error=%lX
CVdsDrive::GetSubSystem()
CVdsDrive::GetSubSystem, 1, error=%lX
CVdsDrive::GetSubSystem, 2, error=%lX
CVdsDrive::GetSubSystem, 3, error=%lX
CVdsDrive::InternalQueryInterface, 1, hr=%lX
CVdsDrive::InternalQueryInterface, 2, hr=%lX
CVdsDrive::InternalQueryInterface, 3, hr=%lX
CVdsDrive::PulseMaintenance()
CVdsDrive::PulseMaintenance, 1, error=%lX
CVdsDrive::QueryExtents()
CVdsDrive::QueryExtents, 1, error=%lX
CVdsDrive::SetFlags()
CVdsDrive::SetFlags, 1, error=%lX
CVdsDrive::SetStatus
CVdsDrive::SetStatus, 1, error=%lX
CVdsDrive::StartMaintenance()
CVdsDrive::StartMaintenance, 1, error=%lX
CVdsDrive::StopMaintenance()
CVdsDrive::StopMaintenance, 1, error=%lX
CVdsEnumObject::Clone()
CVdsEnumObject::Clone, 1, %lX
CVdsEnumObject::CVdsEnumObject()
CVdsEnumObject::Next()
CVdsEnumObject::Next, 1
CVdsEnumObject::Next, 2
CVdsEnumObject::Reset()
CVdsEnumObject::Reset, 1
CVdsEnumObject::Skip()
CVdsEnumObject::Skip, 1
CVdsEnumVdsObject::InternalQueryInterface, 1, hr=%lX
CVdsHbaPort::~CVdsHbaPort()
CVdsHbaPort::GetProperties()
CVdsHbaPort::GetProperties, 1, error=%lX
CVdsHbaPort::SetAllPathStatuses()
CVdsHbaPort::SetAllPathStatuses, 1, hr=%lX
CVdsHbaPort::SetAllPathStatuses, 2, hr=%lX
CVdsHbaPortInternal::~CVdsHbaPortInternal()
CVdsHbaPortInternal::CVdsHbaPortInternal()
CVdsHbaPortInternal::GetProperties()
CVdsHbaPortInternal::GetProperties: NULL input arguments
CVdsHbaPortInternal::Initialize()
CVdsHbaPortInternal::Initialize: NULL input arguments
CVdsHbaPortInternal::SetAllPathStatuses()
CVdsIscsiInitiatorAdapter::~CVdsIscsiInitiatorAdapter()
CVdsIscsiInitiatorAdapter::CVdsIscsiInitiatorAdapter()
CVdsIscsiInitiatorAdapter::GetProperties()
CVdsIscsiInitiatorAdapter::GetProperties, 1, error=%lX
CVdsIscsiInitiatorAdapter::LoginToTarget()
CVdsIscsiInitiatorAdapter::LoginToTarget, 1, error=%lX
CVdsIscsiInitiatorAdapter::LogoutFromTarget()
CVdsIscsiInitiatorAdapter::LogoutFromTarget, 1, error=%lX
CVdsIscsiInitiatorAdapter::QueryInitiatorPortals()
CVdsIscsiInitiatorAdapter::QueryInitiatorPortals, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::~CVdsIscsiInitiatorAdapterInternal()
CVdsIscsiInitiatorAdapterInternal::~CVdsIscsiInitiatorAdapterInternal, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal()
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal, 2, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal, 3, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal: CVdsIscsiInitiatorPortalInternal CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::CVdsIscsiInitiatorAdapterInternal()
CVdsIscsiInitiatorAdapterInternal::GetInitiatorPortal()
CVdsIscsiInitiatorAdapterInternal::GetProperties()
CVdsIscsiInitiatorAdapterInternal::GetProperties: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::GetProperties: Out of memory.
CVdsIscsiInitiatorAdapterInternal::Initialize()
CVdsIscsiInitiatorAdapterInternal::Initialize: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::LoginToTarget()
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: AddIScsiStaticTarget failed: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Could not access necessary functions in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Could not retrieve target object from provider: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Could not retrieve target portal object from provider: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: CreateThread failed: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: GetInitiatorPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Invalid target iSCSI name retrieved from provider.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pIscsiTargetPortalGroup Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam->pIscsiTargetPortal Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam->pwszInitiatorName Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam->pwszTargetName Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spAsync CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spEnumPortal->Next: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spEnumPortalGroup->Next: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spInitPortal->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spInitPortalUnk->QueryInterface IID_IVdsIscsiInitiatorPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortal->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortalGroup->QueryAssociatedPortals: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortalGroupUnk->QueryInterface IID_IVdsIscsiPortalGroup: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortalUnk->QueryInterface IID_IVdsIscsiPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTarget->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTarget->QueryPortalGroups: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTargetPortal->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTargetPortalUnk->QueryInterface IID_IVdsIscsiPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTargetUnk->QueryInterface IID_IVdsIscsiTarget: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: VdsIscsiIpAddressToString &vdsPortalProp.address: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: VdsIscsiIpAddressToString &vdsTargetPortalProp.address: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread exiting due to shutdown
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread()
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: LoginIScsiTarget (persistent) failed, already logged in: %lX
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: LoginIScsiTarget (persistent) failed: %lX
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: LoginIScsiTarget failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget()
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget, 2, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: *ppCurrentSession Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: Could not access necessary functions in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: Could not retrieve target object from provider: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: CreateThread failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: Invalid target iSCSI name retrieved from provider.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: pLogoutParam Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: pPersistentLogins Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: RemoveIScsiPersistentTargetW: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: ReportIScsiPersistentLoginsW: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: spAsync CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: spTarget->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: spTargetUnk->QueryInterface IID_IVdsIscsiTarget: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: vdsSessionsListEnum.Attach failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: vdsSessionsListEnum.Next failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiConnectToNamespace failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiFindInstanceOfClass MSiSCSI_InitiatorSessionInfo failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetUlonglongFromInstance UniqueAdapterId failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetUlonglongFromInstance UniqueSessionId failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetVariantObjectArrayFromInstance SessionsList failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetVariantStringFromInstance TargetiSCSIName failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread exiting due to shutdown
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread()
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread, 2, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread: LogoutIScsiTarget failed: %X, session ID: %X:%X
CVdsIscsiInitiatorAdapterInternal::QueryInitiatorPortals()
CVdsIscsiInitiatorAdapterInternal::QueryInitiatorPortals: pEnum CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::QueryInitiatorPortals: pEnum->Append: Out of memory.
CVdsIscsiInitiatorAdapterInternal::RemoveInitiatorPortals()
CVdsIscsiInitiatorPortal::~CVdsIscsiInitiatorPortal()
CVdsIscsiInitiatorPortal::CVdsIscsiInitiatorPortal()
CVdsIscsiInitiatorPortal::GetInitiatorAdapter()
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 1, hr: %x
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 2, hr: %x
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 3, hr: %x
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 4, hr: %x
CVdsIscsiInitiatorPortal::GetIpsecSecurity()
CVdsIscsiInitiatorPortal::GetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiInitiatorPortal::GetProperties()
CVdsIscsiInitiatorPortal::GetProperties, 1, error=%lX
CVdsIscsiInitiatorPortal::SetIpsecSecurity()
CVdsIscsiInitiatorPortal::SetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiInitiatorPortal::SetIpsecTunnelAddress()
CVdsIscsiInitiatorPortal::SetIpsecTunnelAddress: IPsec functionality currently not supported
CVdsIscsiInitiatorPortalInternal::~CVdsIscsiInitiatorPortalInternal()
CVdsIscsiInitiatorPortalInternal::CVdsIscsiInitiatorPortalInternal()
CVdsIscsiInitiatorPortalInternal::GetInitiatorAdapter()
CVdsIscsiInitiatorPortalInternal::GetInitiatorAdapter, 1, hr=%lX
CVdsIscsiInitiatorPortalInternal::GetInitiatorAdapter, 2, hr=%lX
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity()
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity: m_pParentAdapter->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity: NULL input arguments
CVdsIscsiInitiatorPortalInternal::GetProperties()
CVdsIscsiInitiatorPortalInternal::GetProperties, 1, hr=%lX
CVdsIscsiInitiatorPortalInternal::Initialize()
CVdsIscsiInitiatorPortalInternal::Initialize, 2, hr=%lX
CVdsIscsiInitiatorPortalInternal::Initialize: Invalid IP address retrieved.
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity()
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: Could not retrieve target portal object from provider: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: m_pParentAdapter->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: SetIScsiIKEInfoW failed: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: spPortal->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: spPortalUnk->QueryInterface IID_IVdsIscsiPortal: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: VdsIscsiIpAddressToIpsecId: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: VdsIscsiIpsecIdToIpAddress: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress()
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: GetIScsiIKEInfoW failed: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: m_pParentAdapter->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: NULL input arguments
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: pIkeAuthInfo Alloc: Out of memory.
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: SetIScsiTunnelModeOuterAddressW failed: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: VdsIscsiIpAddressToString pDestinationAddress: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: VdsIscsiIpAddressToString pTunnelAddress: %X
CVdsIscsiPortal::~CVdsIscsiPortal()
CVdsIscsiPortal::CVdsIscsiPortal()
CVdsIscsiPortal::GetIpsecSecurity
CVdsIscsiPortal::GetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiPortal::GetProperties()
CVdsIscsiPortal::GetProperties, 1, error=%lX
CVdsIscsiPortal::GetSubSystem()
CVdsIscsiPortal::GetSubSystem, 1, error=%lX
CVdsIscsiPortal::GetSubSystem, 2, error=%lX
CVdsIscsiPortal::GetSubSystem, 3, error=%lX
CVdsIscsiPortal::QueryAssociatedPortalGroups()
CVdsIscsiPortal::QueryAssociatedPortalGroups, 1, error=%lX
CVdsIscsiPortal::SetIpsecSecurity
CVdsIscsiPortal::SetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiPortal::SetIpsecSecurityLocal
CVdsIscsiPortal::SetIpsecSecurityLocal, 1, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 2, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 3, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 4, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 5, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 6, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 7, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 8
CVdsIscsiPortal::SetIpsecSecurityLocal, 9, hr = %lX
CVdsIscsiPortal::SetIpsecTunnelAddress
CVdsIscsiPortal::SetIpsecTunnelAddress: IPsec functionality currently not supported
CVdsIscsiPortal::SetStatus
CVdsIscsiPortal::SetStatus, 1, error=%lX
CVdsIscsiPortalGroup::~CVdsIscsiPortalGroup()
CVdsIscsiPortalGroup::AddPortal()
CVdsIscsiPortalGroup::AddPortal, 1, error=%lX
CVdsIscsiPortalGroup::CVdsIscsiPortalGroup()
CVdsIscsiPortalGroup::Delete()
CVdsIscsiPortalGroup::Delete, 1, error=%lX
CVdsIscsiPortalGroup::GetProperties()
CVdsIscsiPortalGroup::GetProperties, 1, error=%lX
CVdsIscsiPortalGroup::GetTarget()
CVdsIscsiPortalGroup::GetTarget, 1, error=%lX
CVdsIscsiPortalGroup::GetTarget, 2, error=%lX
CVdsIscsiPortalGroup::GetTarget, 3, error=%lX
CVdsIscsiPortalGroup::QueryAssociatedPortals()
CVdsIscsiPortalGroup::QueryAssociatedPortals, 1, error=%lX
CVdsIscsiPortalGroup::RemovePortal()
CVdsIscsiPortalGroup::RemovePortal, 1, hr=%lX
CVdsIscsiTarget::~CVdsIscsiTarget()
CVdsIscsiTarget::CreatePortalGroup()
CVdsIscsiTarget::CreatePortalGroup, 1, error=%lX
CVdsIscsiTarget::CVdsIscsiTarget()
CVdsIscsiTarget::Delete()
CVdsIscsiTarget::Delete, 1, error=%lX
CVdsIscsiTarget::Delete, 2, error=%lX
CVdsIscsiTarget::GetConnectedInitiators
CVdsIscsiTarget::GetConnectedInitiators, 1, error=%lX
CVdsIscsiTarget::GetProperties()
CVdsIscsiTarget::GetProperties, 1, error=%lX
CVdsIscsiTarget::GetSubSystem()
CVdsIscsiTarget::GetSubSystem, 1, error=%lX
CVdsIscsiTarget::GetSubSystem, 2, error=%lX
CVdsIscsiTarget::GetSubSystem, 3, error=%lX
CVdsIscsiTarget::QueryAssociatedLuns()
CVdsIscsiTarget::QueryAssociatedLuns, 1, error=%lX
CVdsIscsiTarget::QueryPortalGroups()
CVdsIscsiTarget::QueryPortalGroups, 1, error=%lX
CVdsIscsiTarget::RememberInitiatorSharedSecret
CVdsIscsiTarget::RememberInitiatorSharedSecret, 1, error=%lX
CVdsIscsiTarget::SetFriendlyName
CVdsIscsiTarget::SetFriendlyName, 1, error=%lX
CVdsIscsiTarget::SetSharedSecret
CVdsIscsiTarget::SetSharedSecret, 1, error=%lX
CVdsLunPlex::~CVdsLunPlex()
CVdsLunPlex::ApplyHints()
CVdsLunPlex::ApplyHints, 1, error=%lX
CVdsLunPlex::CVdsLunPlex()
CVdsLunPlex::GetLun()
CVdsLunPlex::GetLun, 1, %lX
CVdsLunPlex::GetLun, 2, %lX
CVdsLunPlex::GetLun, 3, %lX
CVdsLunPlex::GetProperties()
CVdsLunPlex::GetProperties, 1, error=%lX
CVdsLunPlex::InternalQueryInterface, 1, hr=%lX
CVdsLunPlex::QueryExtents()
CVdsLunPlex::QueryExtents, 1, error=%lX
CVdsLunPlex::QueryHints()
CVdsLunPlex::QueryHints, 1, error=%lX
CVdsMessageQueue::DequeueEx()
CVdsMessageQueue::EnqueueEx()
CVdsMessageQueue::Initialize()
CVdsOpenVDisk::~CVdsOpenVDisk
CVdsOpenVDisk::Attach
CVdsOpenVDisk::Attach, 1, hr=%lX
CVdsOpenVDisk::Compact
CVdsOpenVDisk::Compact, 1, error=%lX
CVdsOpenVDisk::CVdsOpenVDisk
CVdsOpenVDisk::Detach
CVdsOpenVDisk::Detach, 1, hr=%lX
CVdsOpenVDisk::DetachAndDelete
CVdsOpenVDisk::DetachAndDelete, 1, hr=%lX
CVdsOpenVDisk::Expand
CVdsOpenVDisk::Expand, 1, error=%lX
CVdsOpenVDisk::Merge, 1, error=%lX
CVdsPack::~CVdsPack()
CVdsPack::AddDisk()
CVdsPack::AddDisk, 1
CVdsPack::AddDisk, 1.5
CVdsPack::AddDisk, 10: %lX
CVdsPack::AddDisk, 2
CVdsPack::AddDisk, 3: %lX
CVdsPack::AddDisk, 4: %lX
CVdsPack::AddDisk, 5: %ld
CVdsPack::AddDisk, 6: %lX
CVdsPack::AddDisk, 7: %lX
CVdsPack::AddDisk, 8: %X
CVdsPack::AddDisk, 9: %lX
CVdsPack::CreateVolume()
CVdsPack::CreateVolume, 1, hr=%lX
CVdsPack::CreateVolume2()
CVdsPack::CreateVolume2, 1, %lX
CVdsPack::CreateVolume2, 2, %lX
CVdsPack::CreateVolume2, 3, %lX
CVdsPack::CreateVolume2, 4, %lX
CVdsPack::CVdsPack()
CVdsPack::GetProperties()
CVdsPack::GetProvider()
CVdsPack::InternalQueryInterface, 1, hr=%lX
CVdsPack::MigrateDisks()
CVdsPack::MigrateDisks, 1, %lX
CVdsPack::MigrateDisks, 10, %lX
CVdsPack::MigrateDisks, 11, %lX
CVdsPack::MigrateDisks, 11.1, %lX, Finish Export failed will ignore
CVdsPack::MigrateDisks, 11.2, %lX, Finish Import failed will ignore
CVdsPack::MigrateDisks, 11.3, %lX, Result vector error found in element %i
CVdsPack::MigrateDisks, 12, %lX
CVdsPack::MigrateDisks, 13, %lX
CVdsPack::MigrateDisks, 14, %lX
CVdsPack::MigrateDisks, 15, %lX
CVdsPack::MigrateDisks, 16, hr=%lX
CVdsPack::MigrateDisks, 17, %lX
CVdsPack::MigrateDisks, 18, %lX, %lX
CVdsPack::MigrateDisks, 19, %lX
CVdsPack::MigrateDisks, 2, %lX
CVdsPack::MigrateDisks, 20, hr=%lX
CVdsPack::MigrateDisks, 21, hr=%lX
CVdsPack::MigrateDisks, 3, hr=%lX
CVdsPack::MigrateDisks, 4, error=%ld
CVdsPack::MigrateDisks, 5, %lX
CVdsPack::MigrateDisks, 6, %lX
CVdsPack::MigrateDisks, 7, %lX
CVdsPack::MigrateDisks, 8, %lX
CVdsPack::MigrateDisks, 9, %lX
CVdsPack::MigrateGetSourceInfo()
CVdsPack::MigrateGetSourceInfo, 1, hr=%lX
CVdsPack::MigrateGetSourceInfo, 2, hr=%lX
CVdsPack::MigrateGetSourceInfo, 3, hr=%lX
CVdsPack::MigrateGetSourceInfo, 4, hr=%lX
CVdsPack::MigrateGetSourceInfo, 5, hr=%lX
CVdsPack::MigrateGetSourceInfo, 6, hr=%lX
CVdsPack::MigrateGetSourceInfo, 7, hr=%lX
CVdsPack::MigrateGetTargetInfo()
CVdsPack::MigrateGetTargetInfo, 2
CVdsPack::MigrateGetTargetInfo, 2b
CVdsPack::MigrateGetTargetInfo, 3, hr=%lX
CVdsPack::MigrateGetTargetInfo, 4, hr=%lX
CVdsPack::MigrateGetTargetInfo, 5, hr=%lX
CVdsPack::MigrateGetTargetInfo, 6, hr=%lX
CVdsPack::QueryDisks()
CVdsPack::QueryDisks, 1, hr=%lX
CVdsPack::QueryVolumes()
CVdsPack::QueryVolumes, 1, hr=%lX
CVdsPack::Recover()
CVdsPack::Recover, 1, hr=%lX
CVdsPack::RemoveMissingDisk()
CVdsPack::RemoveMissingDisk, 1, hr=%lX
CVdsPack::ReplaceDisk()
CVdsPnPNotificationManager::AuxThread()
CVdsPnPNotificationManager::AuxThread, 1
CVdsPnPNotificationManager::DiskNotificationHandler()
CVdsPnPNotificationManager::DiskNotificationHandler, 1, hr=%lX
CVdsPnPNotificationManager::DiskNotificationHandler, 2, error=%ld
CVdsPnPNotificationManager::DriveLetterNotificationHandler()
CVdsPnPNotificationManager::FindVolumeInMap()
CVdsPnPNotificationManager::FindVolumeInMap: not enoughmemory to make a copy of device path. Notificationmay be lost.
CVdsPnPNotificationManager::ForwardDiskNotification()
CVdsPnPNotificationManager::ForwardDiskNotification: Out of memory. A disk arrival/removal notification is lost: %S
CVdsPnPNotificationManager::ForwardDiskNotification: PostThreadMessage failed: %X 
CVdsPnPNotificationManager::ForwardLayoutChangeNotification()
CVdsPnPNotificationManager::ForwardLayoutChangeNotification: Out of memory. A disk layout change notification is lost.
CVdsPnPNotificationManager::ForwardLayoutChangeNotification: PostThreadMessage failed: %X 
CVdsPnPNotificationManager::ForwardVolumeChangeNotification()
CVdsPnPNotificationManager::FreeVolumeEventHandleMap()
CVdsPnPNotificationManager::InitializeAuxThread()
CVdsPnPNotificationManager::InsertVolumeToMap()
CVdsPnPNotificationManager::InsertVolumeToMap, 1, error=%ld
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler()
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler, 1, error=%ld
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler, 2, hr=%lX
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler, 3, hr=%lX
CVdsPnPNotificationManager::LayoutChangeNotificationHandler()
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent, 1, error=%ld
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent, 2, error=%ld
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent, 3, hr=%lX
CVdsPnPNotificationManager::RegisterForCustomVolumeEventAll
CVdsPnPNotificationManager::RegisterForCustomVolumeEventAll, 1, error=%ld
CVdsPnPNotificationManager::RegisterPnPNotifications()
CVdsPnPNotificationManager::RemoveVolumeFromMap()
CVdsPnPNotificationManager::RemoveVolumeFromMap, 1, hr=%lX
CVdsPnPNotificationManager::UnregisterPnPNotifications()
CVdsPnPNotificationManager::VolumeChangeNotificationHandler
CVdsPnPNotificationManager::VolumeChangeNotificationHandler, 1, error=%ld
CVdsPnPNotificationManager::VolumeChangeNotificationHandler, 2, hr=%lX
CVdsPnPNotificationManager::VolumeChangeNotificationHandler, 3, hr=%lX
CVdsPnPNotificationManager::VolumeNotificationHandler()
CVdsPnPNotificationManager::VolumeNotificationHandler, 1, hr=%lX
CVdsProvider::AddVDisk
CVdsProvider::AddVDisk, 1, error=%lX
CVdsProvider::AddVDisk, 2, hr=%lX
CVdsProvider::AddVDisk, 3, hr=%lX
CVdsProvider::CreateLunInStoragePool()
CVdsProvider::CreateLunInStoragePool, 1, hr=%lX
CVdsProvider::CreateLunInStoragePool, 2, NULL StoragePoolId
CVdsProvider::CreateLunInStoragePool, 3, hr=%lX
CVdsProvider::CreateLunInStoragePool, 4, hr=%lX
CVdsProvider::CreatePack()
CVdsProvider::CreateVDisk
CVdsProvider::CreateVDisk, 1, error=%lX
CVdsProvider::CVdsProvider()
CVdsProvider::GetDiskFromVDisk
CVdsProvider::GetDiskFromVDisk, 1, hr=%lX
CVdsProvider::GetDiskFromVDisk, 1.1, hr=%lX
CVdsProvider::GetDiskFromVDisk, 2, hr=%lX
CVdsProvider::GetDiskFromVDisk, 3, hr=%lX
CVdsProvider::GetDiskFromVDisk, 4, hr=%lX
CVdsProvider::GetDiskFromVDisk, pVDisk=%p, ppDisk=%p, hr=%lX
CVdsProvider::GetProperties()
CVdsProvider::GetProperties, 1, error=%lX
CVdsProvider::GetProviderType()
CVdsProvider::GetProviderType, 1, error=%lX
CVdsProvider::GetProviderType2()
CVdsProvider::GetProviderType2, 1, hr=%lX
CVdsProvider::GetProviderType2, 2, hr=%lX
CVdsProvider::GetProviderType2, 3, hr=%lX
CVdsProvider::GetVDiskFromDisk
CVdsProvider::GetVDiskFromDisk, 1, hr=%lX
CVdsProvider::GetVDiskFromDisk, 2, hr=%lX
CVdsProvider::GetVDiskFromDisk, 3, hr=%lX
CVdsProvider::GetVDiskFromDisk, 4, hr=%lX
CVdsProvider::GetVDiskFromDisk, 5, hr=%lX
CVdsProvider::GetVDiskFromDisk, pDisk=%p, ppVDisk=%p, hr=%lX
CVdsProvider::GetVersionSupport()
CVdsProvider::GetVersionSupport, 1, error=%lX
CVdsProvider::InternalQueryInterface, 1, hr=%lX
CVdsProvider::InternalQueryInterface, 2, hr=%lX
CVdsProvider::InternalQueryInterface, 3, hr=%lX
CVdsProvider::InternalQueryInterface, 4, hr=%lX
CVdsProvider::InternalQueryInterface, 4.1, hr=%lX
CVdsProvider::InternalQueryInterface, 5, hr=%lX
CVdsProvider::InternalQueryInterface, 6, hr=%lX
CVdsProvider::InternalQueryInterface, 7, hr=%lX
CVdsProvider::QueryMaxLunCreateSizeInStoragePool()
CVdsProvider::QueryMaxLunCreateSizeInStoragePool, 1, hr=%lX
CVdsProvider::QueryMaxLunCreateSizeInStoragePool, 2, NULL StoragePoolId
CVdsProvider::QueryMaxLunCreateSizeInStoragePool, 3, error=%lX
CVdsProvider::QueryPacks()
CVdsProvider::QueryPacks, 1, hr=%lX
CVdsProvider::QueryStoragePools()
CVdsProvider::QueryStoragePools, 1, hr=%lX
CVdsProvider::QueryStoragePools, 2, hr=%lX
CVdsProvider::QueryStoragePools, 3, hr=%lX
CVdsProvider::QuerySubSystems()
CVdsProvider::QuerySubSystems, 1, hr=%lX
CVdsProvider::QueryVDisks
CVdsProvider::QueryVDisks, 1, error=%lX
CVdsProvider::Reenumerate()
CVdsProvider::Reenumerate, 1, error=%lX
CVdsProvider::Refresh()
CVdsProvider::Refresh, 1, error=%lX
CVdsRawDiskLun::~CVdsRawDiskLun()
CVdsRawDiskLun::AssignDriveLetter()
CVdsRawDiskLun::ChangePartition()
CVdsRawDiskLun::ChangePartitionType()
CVdsRawDiskLun::Clean()
CVdsRawDiskLun::Clean(), 1
CVdsRawDiskLun::Clean(), 2
CVdsRawDiskLun::CleanDiskThread()
CVdsRawDiskLun::CleanDiskThreadEntry exiting due to shutdown
CVdsRawDiskLun::CleanDiskThreadEntry()
CVdsRawDiskLun::ClearFlags
CVdsRawDiskLun::ClearFlags, 1 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::ClearFlags, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::ConvertStyle()
CVdsRawDiskLun::CreatePartition()
CVdsRawDiskLun::CreatePartitionEx()
CVdsRawDiskLun::CVdsRawDiskLun()
CVdsRawDiskLun::DeleteDriveLetter()
CVdsRawDiskLun::DeletePartition()
CVdsRawDiskLun::GetDriveLetter()
CVdsRawDiskLun::GetPack()
CVdsRawDiskLun::GetPartitionProperties()
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3)
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3), 1
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3), 2, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3), 3, line=%ld error=%lX
CVdsRawDiskLun::GetProperties() (IVdsDisk)
CVdsRawDiskLun::GetProperties() (IVdsDisk)), 6
CVdsRawDiskLun::GetProperties() (IVdsDisk), 1, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 10, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsDisk), 2, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 3, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 4, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 5, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 7, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsDisk), 8, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsDisk), 9, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2() (IVdsDisk)
CVdsRawDiskLun::GetProperties2(), 1
CVdsRawDiskLun::GetProperties2(), 2, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 3, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 4, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 5, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 6, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetUniqueId()
CVdsRawDiskLun::GetUniqueId(), line=%ld error=%lX
CVdsRawDiskLun::Initialize()
CVdsRawDiskLun::Initialize(), 0, path=%s
CVdsRawDiskLun::Initialize(), 1, hr=%lX
CVdsRawDiskLun::Initialize(), 10, error=%ld
CVdsRawDiskLun::Initialize(), 11, error=%ld
CVdsRawDiskLun::Initialize(), 12, error=%ld
CVdsRawDiskLun::Initialize(), 12b, error=%ld
CVdsRawDiskLun::Initialize(), 13, error=%ld
CVdsRawDiskLun::Initialize(), 13.5, error=%ld
CVdsRawDiskLun::Initialize(), 14, error=%ld
CVdsRawDiskLun::Initialize(), 2, error=%ld
CVdsRawDiskLun::Initialize(), 3, error=%ld
CVdsRawDiskLun::Initialize(), 3b, Disk Number=%ld
CVdsRawDiskLun::Initialize(), 3c, error=%ld
CVdsRawDiskLun::Initialize(), 4, error=%ld
CVdsRawDiskLun::Initialize(), 5, error=%ld
CVdsRawDiskLun::Initialize(), 5b, error=%ld
CVdsRawDiskLun::Initialize(), 8, error=%ld
CVdsRawDiskLun::Initialize(), 8b, error=%ld
CVdsRawDiskLun::Initialize(), 9, error=%ld
CVdsRawDiskLun::Initialize(), 9b, error=%ld
CVdsRawDiskLun::Initialize, 15, error=%ld
CVdsRawDiskLun::Initialize, 25.25, hr=%lX
CVdsRawDiskLun::Initialize, 6a, error=%ld
CVdsRawDiskLun::Initialize, 6b, error=%ld
CVdsRawDiskLun::Initialize, 7, error=%ld
CVdsRawDiskLun::Initialize, BOOT FROM DISK:%lu
CVdsRawDiskLun::IVdsDisk::GetIdentificationData
CVdsRawDiskLun::Offline()
CVdsRawDiskLun::Offline, 1, hr=%lX
CVdsRawDiskLun::Offline, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Offline, 3 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Offline2()
CVdsRawDiskLun::Offline2, 1 Number=%ld, hr=%lX
CVdsRawDiskLun::Online()
CVdsRawDiskLun::Online, 1, hr=%lX
CVdsRawDiskLun::Online, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Online, 3 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Online2()
CVdsRawDiskLun::Online2, 1 Number=%ld, hr=%lX
CVdsRawDiskLun::QueryExtents()
CVdsRawDiskLun::QueryFreeExtents()
CVdsRawDiskLun::QueryFreeExtents, 1, ppFreeExtentArray=%p, plNumberOfFreeExtents=%p, hr=%lX
CVdsRawDiskLun::QueryPartitions()
CVdsRawDiskLun::SetFlags
CVdsRawDiskLun::SetFlags, 1 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlags, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlagsInternal
CVdsRawDiskLun::SetFlagsInternal, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlagsInternal, 3 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlagsInternal, 4 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetSANMode()
CVdsRawDiskLun::SetSANMode, 1, hr=%lX
CVdsRawDiskLun::UpdateSize(), line=%ld error=%lX
CVdsService::_IsServiceReady()
CVdsService::~CVdsService()
CVdsService::AddDiskToVdProviders()
CVdsService::AddDiskToVdProviders, %d, hr=%lX, name=%s
CVdsService::AddFSPropertiesToMap, 1, pObject=%p, pFSProp=%p
CVdsService::AddFSPropertiesToMap, 2, error = %ld
CVdsService::AddFSPropertiesToMap, 3, error = %ld
CVdsService::AddLunIdToMap()
CVdsService::AddLunIdToMap, 1, hr=%lX
CVdsService::AddLunIdToMap, 2, path=%S, %s
CVdsService::AddLunIdToMap, 3 LunId: path=%S, %s, hr=%lX
CVdsService::AddLunIdToMap, 4 LunId: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}path=%S, %s
CVdsService::AddLunIdToMap, 5
CVdsService::AddLunIdToMap, 6
CVdsService::AddNetworkShare()
CVdsService::AddNetworkShare: NetShareAdd() failed: %ld
CVdsService::AddNetworkShare: Skipping NetShareAdd(): GetDriveType() == %u
CVdsService::AddObjectToGlobalMap, 2, error = %ld
CVdsService::AddObjectToGlobalMap, 3, error = %ld
CVdsService::AddObjectToMap()
CVdsService::Advise()
CVdsService::Advise, 1, %lX
CVdsService::AssignDisksToProviders()
CVdsService::AssignDisksToProvidersInClass()
CVdsService::AssignDisksToProvidersInClass, 1, error=%ld
CVdsService::AssignDisksToProvidersInClass, 2, error=%ld
CVdsService::AssignDisksToProvidersInClass, 3, error=%lX
CVdsService::AssignDisksToProvidersInClass, 4, name=%S, hr=%lX
CVdsService::AssignDisksToProvidersInClass, 6, error=%lX
CVdsService::AssignDisksToProvidersInClass, 7, error=%lX
CVdsService::AssignDisksToProvidersInClass, 8, error=%lX
CVdsService::AssignOneDiskToProviders()
CVdsService::AssignOneDiskToProviders, 0, name=%s, hr=%lX
CVdsService::AssignOneDiskToProviders, 1
CVdsService::AssignOneDiskToProviders, 2, name=%s
CVdsService::CanProvidersUnload()
CVdsService::CanProvidersUnloadHelper, 1
CVdsService::CanProvidersUnloadHelper: 2 QueryInterface(IVdsProviderPrivate) failed.
CVdsService::ClaimDiskIfRaw()
CVdsService::ClaimDiskIfRaw, 1, name=%s, error=%ld
CVdsService::ClaimDiskIfRaw, 2, error=%ld
CVdsService::ClaimDiskIfRaw, 3, name=%s, error=%ld
CVdsService::ClaimDiskIfRaw, 4, name=%s, error=%ld
CVdsService::ClaimDiskIfRaw, 5, name=%s, error=%ld
CVdsService::ClaimRawDisk()
CVdsService::ClaimRawDisk, 0, name=%s
CVdsService::ClaimRawDisk, 1, name=%s, error=%ld
CVdsService::ClaimRawDisk, 2, name=%s, error=%ld
CVdsService::ClaimRawDisk, 3, name=%s, error=%ld
CVdsService::ClaimRawDisk, 3.5, name=%s, error=%ld
CVdsService::ClaimRawDisk, 3.7, name=%s, error=%ld
CVdsService::ClaimRawDisk, 4, name=%s, error=%ld
CVdsService::ClaimRawDisk, 4.3, name=%s, error=%ld
CVdsService::ClaimRawDisk, 4.4, name=%s, error=%ld
CVdsService::ClaimRawDisk, 5, name=%s, error=%ld
CVdsService::ClaimRawDisk, 6, name=%s, hr=%lX
CVdsService::CleanupObsoleteMountPoints()
CVdsService::CleanupObsoleteMountPoints, 1, error=%ld
CVdsService::CleanupObsoleteMountPoints, 2, error=%ld
CVdsService::CleanupObsoleteMountPoints, 3, error=%ld
CVdsService::CleanupObsoleteMountPoints, 4, error=%ld
CVdsService::CleanupObsoleteMountPoints, 5, name=%S, error=%ld
CVdsService::CleanupObsoleteMountPoints, 6, path=%S, error=%ld
CVdsService::CleanupObsoleteMountPoints, 7, path=%S, error=%ld
CVdsService::CleanupObsoleteMountPoints, 8, error=%ld
CVdsService::ClearFlags()
CVdsService::cmp_str_eq()
CVdsService::CopyStorageDescriptorString
CVdsService::CopyStorageDescriptorString, 1
CVdsService::CopyStorageDescriptorString, 2
CVdsService::CopyStorageDescriptorString, 3
CVdsService::CopyStorageDeviceIdDescriptorToLun
CVdsService::CopyStorageDeviceIdDescriptorToLun, 1, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 10, Assoc=%ld, Type=%ld, CodeSet=%ld, size=%lu
CVdsService::CopyStorageDeviceIdDescriptorToLun, 2, Count=%ld
CVdsService::CopyStorageDeviceIdDescriptorToLun, 4, size=%ld, offset=%ld, count=%ld, assoc count=%ld, version=%lu
CVdsService::CopyStorageDeviceIdDescriptorToLun, 5, Device Assoc. Count=%ld
CVdsService::CopyStorageDeviceIdDescriptorToLun, 6, Device Assoc. Count=%ld
CVdsService::CopyStorageDeviceIdDescriptorToLun, 7, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 8, field offset:%lX, Id size:%lX, Next:%lX, Index:%lu, dwIdCount:%lu, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 9, hr=%lX
CVdsService::CVdsService()
CVdsService::DumpUnallocatedDisks()
CVdsService::DumpUnallocatedDisks, 1, hr=%lX
CVdsService::DumpUnallocatedDisks, 2, hr=%lX
CVdsService::DumpUnallocatedDisks, 3, hr=%lX
CVdsService::EmptyLunInformation
CVdsService::FindFSPropertiesInMap, 1, pObject=%p
CVdsService::FindLunFromId()
CVdsService::FindLunFromId, 1 LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsService::FindLunFromId, 2 disk path %ws
CVdsService::FindOrCreateWrapper()
CVdsService::FindOrCreateWrapper, 4, hr=%lX
CVdsService::FindOrCreateWrapper, temp: object found: %p
CVdsService::FindOrCreateWrapper, temp: object not found.
CVdsService::FindRawDisk()
CVdsService::FindRawDisk, 0
CVdsService::FindRawDisk, 1
CVdsService::FindRawDisk, 2
CVdsService::FindRawDisk, 3
CVdsService::FindRawDisk, 4
CVdsService::FindRawDisk, 5
CVdsService::FindWrapperInMap()
CVdsService::FinishAddDiskToVdProviders()
CVdsService::FinishAddDiskToVdProviders, %d, hr=%lX, name=%s
CVdsService::GetDeviceDetailData
CVdsService::GetDeviceDetailData, 1, hDevInfo=%p, pDeviceIntfData=%p, ppDetailData=%p
CVdsService::GetDeviceDetailData, 2, hr=%lX
CVdsService::GetDeviceDetailData, 3, hr=%lX
CVdsService::GetDeviceDetailData, 4, hr=%lX
CVdsService::GetDeviceDetailData, 5
CVdsService::GetDisk()
CVdsService::GetDisk(), 1
CVdsService::GetDisk(), 2, hr=%lX
CVdsService::GetDisk(), 3, hr=%lX
CVdsService::GetDiskFromSwProviders()
CVdsService::GetDiskFromSwProviders, 2, %lX
CVdsService::GetDiskFromSwProviders, 3, %lX
CVdsService::GetDiskId()
CVdsService::GetDiskId: unexpected error from provider: %X
CVdsService::GetDiskIdFromLunInfo
CVdsService::GetDiskIdFromLunInfo, 1, hr=%lX, pLunInfo=%p, pDiskId=%p
CVdsService::GetDiskIdFromLunInfo, 2, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 3, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 4, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 5, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 6, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 7, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 8, hr=%lX
CVdsService::GetDiskIdFromMap()
CVdsService::GetDiskIdFromMap, 1
CVdsService::GetDiskIUnknown()
CVdsService::GetDiskNameById
CVdsService::GetDiskNameById, 1, pDiskId=%p, ppName=%p, nRet=%ld
CVdsService::GetDiskNameById, 2, hr=%lX
CVdsService::GetDiskNameById, 3, hr=%lX
CVdsService::GetDiskNameById, 4, hr=%lX
CVdsService::GetDiskNameById, 5, %lX
CVdsService::GetDiskNameById, 6, %lX
CVdsService::GetDiskNameById, 7, %lX
CVdsService::GetDiskNameById, 8
CVdsService::GetDiskObject()
CVdsService::GetDiskObject, 1, hr=%lX
CVdsService::GetDiskObject, 2, hr=%lX
CVdsService::GetDiskObject, 3
CVdsService::GetDiskObjectWrapper()
CVdsService::GetHbaPort()
CVdsService::GetInitiatorAdapter()
CVdsService::GetInitiatorAdapter(), 1
CVdsService::GetInitiatorAdapter(), 2
CVdsService::GetInitiatorName()
CVdsService::GetInitiatorName: Could not access necessary function in iSCSI library.
CVdsService::GetInitiatorName: GetIScsiInitiatorNodeName failed: %X
CVdsService::GetInitiatorName: Out of memory.
CVdsService::GetInitiatorPortal()
CVdsService::GetInitiatorPortal(), 2
CVdsService::GetLunIdFromMap()
CVdsService::GetLunIdFromProviders()
CVdsService::GetLunIdFromProviders, 1, path=%ws, hr=%lX
CVdsService::GetLunIdFromProviders, 2, path=%ws
CVdsService::GetLunIdFromProviders, 3 [%ws] to LUN-disk map, hr=%lX
CVdsService::GetLunIdFromProviders, 4, Type=%ld, CodeSet=%ld, size=%lu
CVdsService::GetLunInformationForDisk
CVdsService::GetLunInformationForDisk, 1, hr=%lX
CVdsService::GetLunInformationForDisk, 10, hr=%lX
CVdsService::GetLunInformationForDisk, 10b, Size=%ld, cbSize=%ld, header size=%ld, error=%ld
CVdsService::GetLunInformationForDisk, 11, hr=%lX
CVdsService::GetLunInformationForDisk, 11.5, dwSize=%lu, Buffer=%lu, Size=%lu, hr=%lX
CVdsService::GetLunInformationForDisk, 11.7, hr=%lX, cbQueryBuffer=%ld, dwSize=%ld
CVdsService::GetLunInformationForDisk, 12, hr=%lX
CVdsService::GetLunInformationForDisk, 2, hr=%lX
CVdsService::GetLunInformationForDisk, 3, hr=%lX
CVdsService::GetLunInformationForDisk, 4, error=%ld
CVdsService::GetLunInformationForDisk, 4.5, hr=%lX
CVdsService::GetLunInformationForDisk, 5, hr=%lX
CVdsService::GetLunInformationForDisk, 5b, VendorIdOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 6, hr=%lX
CVdsService::GetLunInformationForDisk, 6b, ProductIdOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 7, hr=%lX
CVdsService::GetLunInformationForDisk, 7b, ProductRevisionOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 8, hr=%lX
CVdsService::GetLunInformationForDisk, 8b, SerialNumberOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 9, hr=%lX
CVdsService::GetLunInformationForDisk, 9b, error=%ld
CVdsService::GetLunInformationForDisk, pathname=%S
CVdsService::GetLunObjectWrapper()
CVdsService::GetNameByIdForRaw
CVdsService::GetNameByIdForRaw, 1, pDiskId=%p, ppName=%p
CVdsService::GetNameByIdForRaw, 2, hr=%lX
CVdsService::GetNameByIdForRaw, 3, hr=%lX
CVdsService::GetNameByIdForRaw, 4
CVdsService::GetNameByIdForRaw, 5, hr=%lX
CVdsService::GetNameByIdForRaw, 6, error=%ld, name=%s
CVdsService::GetNameByIdForRaw, 7, error=%ld, name=%s
CVdsService::GetNameByIdForRaw, 8
CVdsService::GetNameByIdForRaw, 8, hr=%lX
CVdsService::GetNextProviderClsid()
CVdsService::GetNextProviderClsid: 1, %ld
CVdsService::GetNextProviderClsid: 2, %lX
CVdsService::GetNextProviderClsid: 3, %ld
CVdsService::GetNextProviderClsid: 4, %ld
CVdsService::GetNextProviderClsid: 5, %ld
CVdsService::GetObject()
CVdsService::GetObject, 1, hr=%lX
CVdsService::GetObject, 2, hr=%lX
CVdsService::GetObject, 3
CVdsService::GetObjectFromProviders()
CVdsService::GetObjectFromProviders, 1, hr=%lX
CVdsService::GetObjectFromProviders, 2, hr=%lX
CVdsService::GetObjectFromProviders, 3, %lX
CVdsService::GetObjectFromProviders, 4, %lX
CVdsService::GetObjectFromProviders, 5, %lX
CVdsService::GetProperties()
CVdsService::GetRawDiskByDeviceID()
CVdsService::GetRawDiskByDeviceID(), 1, hr=%lX
CVdsService::GetRawDiskByDeviceID(), 2
CVdsService::GetRawDiskByDeviceID(), 3, hr=%lX
CVdsService::GetRawDiskByDeviceID(), 4, hr=%lX
CVdsService::GetSANPolicy()
CVdsService::GetSANPolicy, 1
CVdsService::GetSANPolicy, 4, hr=%lX
CVdsService::GetSANPolicy, 5, hr=%lX
CVdsService::GetSANPolicy, 6
CVdsService::GetVolumeId()
CVdsService::GetVolumeId, 1, error=%ld
CVdsService::GetVolumeId, 2, error=%ld
CVdsService::GetVolumeId: unexpected error from provider: %X
CVdsService::GetVolumeIdList
CVdsService::GetVolumeIdList, 1, pDiskIdArray=%p, ulDiskCount=%lu, pUninstallInfo=%p
CVdsService::GetVolumeIdList, 2
CVdsService::GetVolumeIdList, 3
CVdsService::GetVolumeIdList, 4, %lX
CVdsService::GetVolumeIdList, 5, %lX
CVdsService::GetVolumeIdList, 6
CVdsService::GetVolumeIdList, 7, %lX
CVdsService::GetVolumeNameById
CVdsService::GetVolumeNameById, 1, hr=%lX, nRet=%ld, ppName=%p
CVdsService::GetVolumeNameById, 2, hr=%lX
CVdsService::GetVolumeNameById, 2b, hr=%lX
CVdsService::GetVolumeNameById, 3, %lX
CVdsService::GetVolumeNameById, 4, %lX
CVdsService::GetVolumeNameById, 5, %lX
CVdsService::GetVolumeNameById, 6
CVdsService::HandleDiskLayoutChange()
CVdsService::HandleDiskLayoutChange, 1, Path=%p, Layout=%p, pbDisable=%p, name=%s
CVdsService::HandleDiskLayoutChange, 1a
CVdsService::HandleDiskLayoutChange, 1b, hr=%lX
CVdsService::HandleDiskLayoutChange, 2, name=%s, hr=%lX
CVdsService::Initialize()
CVdsService::Initialize, 1, error=%lX
CVdsService::Initialize, 2, error=%ld
CVdsService::Initialize, 3, error=%ld
CVdsService::Initialize, 4, error=%ld
CVdsService::Initialize: CoInitializeEx failed: %X
CVdsService::InitializeNetworkShareConstants()
CVdsService::InitializeThread exiting due to shutdown
CVdsService::InitializeThread()
CVdsService::InitializeThread: *ppVdsProviderNext Alloc: Out of memory.
CVdsService::InitializeThread: CoInitializeEx failed: %lX
CVdsService::InternalQueryDisks()
CVdsService::InternalQueryHbaPorts()
CVdsService::InternalQueryInitiatorAdapters()
CVdsService::InternalQueryInitiatorAdapters, hr=%lX
CVdsService::InternalQueryProviders()
CVdsService::IsBuiltinProvider()
CVdsService::IsLetterInMountMgrDB()
CVdsService::IsLetterInMountMgrDB, 1, hr=%lX
CVdsService::IsLetterInMountMgrDB, 2
CVdsService::IsLetterInMountMgrDB, 4, error=%ld
CVdsService::IsLetterInMountMgrDB, 5
CVdsService::IsLetterInMountMgrDB, 6, (%S): error=%ld
CVdsService::IsMatchDeviceIdDescriptor
CVdsService::IsMatchDeviceIdDescriptor, 1
CVdsService::IsMatchingIdentifier
CVdsService::IsMatchingIdentifier, 1
CVdsService::IsMatchingIdentifier, NO IDENTIFIERS ON TARGET. OK for IDE.
CVdsService::IsMatchLun
CVdsService::IsServiceReady()
CVdsService::LoadAndInitializeProviders()
CVdsService::LoadAndInitializeProviders, 1, error=%ld
CVdsService::LoadAndInitializeProviders, 2, error=%ld
CVdsService::LoadAndInitializeProviders, 2b, hr=%lX
CVdsService::LoadAndInitializeProviders, 2c, hr=%lX
CVdsService::LoadAndInitializeProviders, 3, hr=%lX
CVdsService::LoadAndInitializeProviders, 4, hr=%lX
CVdsService::LoadAndInitializeProviders, 5, hr=%lX
CVdsService::LoadAndInitializeProviders, 6, hr=%lX
CVdsService::LoadHbaPorts hbaStatus=%lX, 2
CVdsService::LoadHbaPorts hbaStatus=%lX, 4
CVdsService::LoadHbaPorts hbaStatus=%lX, 6
CVdsService::LoadHbaPorts()
CVdsService::LoadHbaPorts, 1
CVdsService::LoadHbaPorts, 3
CVdsService::LoadHbaPorts, 5, hr=%lX
CVdsService::LoadHbaPorts, 7
CVdsService::LoadHbaPorts, 8, hr=%lX
CVdsService::LoadHbaPorts, 9, hr=%lX
CVdsService::LoadIscsiInitiator()
CVdsService::LoadIscsiInitiator: CVdsIscsiInitiatorAdapterInternal CreateInstance: Out of memory.
CVdsService::LoadIscsiInitiator: Invalid IP address retrieved.
CVdsService::LoadSasPorts()
CVdsService::MigrateSaveMountPoints()
CVdsService::MigrateSaveMountPoints, 1
CVdsService::MigrateSaveMountPoints, 10, hr=%lX, name=%S
CVdsService::MigrateSaveMountPoints, 11, hr=%lX, name=%S
CVdsService::MigrateSaveMountPoints, 12, name=%S
CVdsService::MigrateSaveMountPoints, 2, hr=%lX
CVdsService::MigrateSaveMountPoints, 3, hr=%lX
CVdsService::MigrateSaveMountPoints, 4, hr=%lX
CVdsService::MigrateSaveMountPoints, 5, hr=%lX
CVdsService::MigrateSaveMountPoints, 6, hr=%lX
CVdsService::MigrateSaveMountPoints, 7, hr=%lX
CVdsService::MigrateSaveMountPoints, 8, hr=%lX
CVdsService::MigrateSaveMountPoints, 9, hr=%lX, name=%S
CVdsService::OnDiskLayoutChange()
CVdsService::OnDiskLayoutChange(2)
CVdsService::OnDiskLayoutChange(2), 1, name=%s, Layout=%p
CVdsService::OnDiskLayoutChange(2), 1a
CVdsService::OnDiskLayoutChange(2), 1b, hr=%1X
CVdsService::OnDiskLayoutChange(2), 2, name=%s, hr=%lX
CVdsService::OnDiskLayoutChange(2), 3, name=%s, hr=%lX
CVdsService::OnDiskLayoutChange, 1
CVdsService::OnDiskLayoutChange, 2
CVdsService::OnDiskLayoutChange, 2.9, %lX
CVdsService::OnDiskLayoutChange, 3, %lX, path=%s
CVdsService::OnDiskLayoutChange, 4
CVdsService::OnDiskLayoutChange, 5
CVdsService::OnDiskLayoutChange, 6, path=%s, %ld
CVdsService::OnDiskLayoutChange, 7, path=%s, %ld
CVdsService::QueryDriveLetters()
CVdsService::QueryDriveLetters, 1
CVdsService::QueryDriveLetters, 2
CVdsService::QueryDriveLetters, 3
CVdsService::QueryFileSystemTypes()
CVdsService::QueryFileSystemTypes, 1
CVdsService::QueryFileSystemTypes, 2
CVdsService::QueryFileSystemTypes, 3
CVdsService::QueryFileSystemTypes, 4
CVdsService::QueryHbaPorts()
CVdsService::QueryInitiatorAdapters()
CVdsService::QueryInitiatorAdapters, hr=%lX
CVdsService::QueryInitiatorAdapters: Could not load iSCSI library.
CVdsService::QueryMaskedDisks
CVdsService::QueryProviders()
CVdsService::QueryProviders, 1
CVdsService::QueryProviders, 2
CVdsService::QueryProviders, 3, hr=%lX
CVdsService::QueryUnallocatedDisks
CVdsService::QueryUnallocatedDisks, 1, hr=%lX
CVdsService::Reboot()
CVdsService::Reboot: CoImpersonateClient failed: %X
CVdsService::Reboot: CoRevertToSelf failed: %X
CVdsService::Reboot: failed to disable shutdown privilege: %X
CVdsService::Reboot: failed to enable shutdown privilege: %X
CVdsService::Reboot: failed to restart the system: %X
CVdsService::Reboot: FormatMessage failed: %X
CVdsService::Reenumerate()
CVdsService::Reenumerate(), 1, hr=%lX
CVdsService::Reenumerate(), 10, IOCTL_SCSI_RESCAN_BUS succeeded
CVdsService::Reenumerate(), 11, Error %1X for IOCTL_SCSI_RESCAN_BUS
CVdsService::Reenumerate(), 2, hr=%lX
CVdsService::Reenumerate(), 6, hr=%lX
CVdsService::Reenumerate(), 7, hr=%lX
CVdsService::Reenumerate(), 9, hr=%lX
CVdsService::Reenumerate, 12, hr=%lX
CVdsService::Reenumerate, 13, %lX
CVdsService::Reenumerate, 3, %lX
CVdsService::Reenumerate, 4, %lX
CVdsService::Reenumerate, 5, hr = %lX
CVdsService::Reenumerate, 8, hr=%lX
CVdsService::Refresh()
CVdsService::Refresh: failed to get the private interface from a software provider: %X
CVdsService::RegisterProvider()
CVdsService::RegisterProvider, 1
CVdsService::RegisterProvider, 10
CVdsService::RegisterProvider, 11, error=%ld
CVdsService::RegisterProvider, 12, error=%ld
CVdsService::RegisterProvider, 13, error=%ld
CVdsService::RegisterProvider, 14, error=%ld
CVdsService::RegisterProvider, 2
CVdsService::RegisterProvider, 3
CVdsService::RegisterProvider, 4
CVdsService::RegisterProvider, 5
CVdsService::RegisterProvider, 6
CVdsService::RegisterProvider, 7, error=%ld
CVdsService::RegisterProvider, 8, error=%ld
CVdsService::RegisterProvider, 9, error=%ld
CVdsService::RegisterServiceInstance()
CVdsService::RememberTargetSharedSecret()
CVdsService::RememberTargetSharedSecret, 1, %lX
CVdsService::RememberTargetSharedSecret: AddIScsiStaticTarget failed: %X
CVdsService::RememberTargetSharedSecret: Could not access necessary function in iSCSI library.
CVdsService::RememberTargetSharedSecret: Could not retrieve target object from provider: %X
CVdsService::RememberTargetSharedSecret: Invalid target target iSCSI name retrieved from provider.
CVdsService::RememberTargetSharedSecret: spTarget->GetProperties: %X
CVdsService::RememberTargetSharedSecret: spTargetUnk->QueryInterface IID_IVdsIscsiTarget: %X
CVdsService::RemoveDiskFromVdProviders()
CVdsService::RemoveDiskFromVdProviders, 1
CVdsService::RemoveDiskFromVdProviders, 2, hr=%lX
CVdsService::RemoveDiskFromVdProviders, 3, hr=%lX
CVdsService::RemoveFromLunIdMap,1: Failed to find entry to delete{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsService::RemoveFSPropertiesFromMap, 1, pObject=%p
CVdsService::RemoveFSPropertiesFromMap, 2, error = %ld
CVdsService::RemoveFSPropertiesFromMap, 3, error = %ld
CVdsService::RemoveLunIdFromMap()
CVdsService::RemoveObjectFromMap()
CVdsService::RemoveObjectFromMap(),1: The map is corrupt, elements can be found but not removed!!!!
CVdsService::RemoveObsoleteDevNodes
CVdsService::RemoveObsoleteDevNodes, 1, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 2, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 3, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 4, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 5, hr=%lX
CVdsService::RemoveObsoleteObject()
CVdsService::RemoveOneDiskFromProviders()
CVdsService::RemoveOneDiskFromProviders(), 1
CVdsService::RemoveOneDiskFromProviders(), 2, hr=%lX
CVdsService::RemoveOneDiskFromProviders(), 3, hr=%lX
CVdsService::RemoveRawDisk()
CVdsService::RemoveRawDisk()(2)
CVdsService::RemoveUnallocatedDiskFromMap()
CVdsService::RemoveUnallocatedDiskFromMap, 1, Key=%S
CVdsService::ResetDiskWrapper()
CVdsService::ResetDiskWrapper: 0: %lX.
CVdsService::ResetDiskWrapper: 1: %lX.
CVdsService::ResetDiskWrapper: 2: %lX.
CVdsService::ResetDiskWrapper: 3: %lX.
CVdsService::ResetDiskWrapper: 4: %lX.
CVdsService::ResetDiskWrapper: 5: %lX.
CVdsService::ResetDiskWrapper: 6: %lX.
CVdsService::ResetLunWrapper()
CVdsService::ResetLunWrapper, 1, hr=%lX
CVdsService::SendDiskNotification()
CVdsService::SendDriveLetterNotification()
CVdsService::SendFileSystemNotificaiton()
CVdsService::SendMountPointsNotificaiton()
CVdsService::SendVolumeNotification()
CVdsService::ServiceMain,1: Error, out of memory
CVdsService::ServiceMain,2: Failed to initialize the Global Resources
CVdsService::SetAllIpsecSecurity()
CVdsService::SetAllIpsecSecurity: IPsec functionality currently not supported
CVdsService::SetAllIpsecTunnelAddresses()
CVdsService::SetAllIpsecTunnelAddresses: IPsec functionality currently not supported
CVdsService::SetFlags()
CVdsService::SetInitiatorSharedSecret()
CVdsService::SetInitiatorSharedSecret, 1, hr=%lX
CVdsService::SetInitiatorSharedSecret, 2, %X
CVdsService::SetInitiatorSharedSecret, 3, %X
CVdsService::SetInitiatorSharedSecret, 4, status=%X
CVdsService::SetInitiatorSharedSecret: Could not access necessary function in iSCSI library.
CVdsService::SetIpsecGroupPresharedKey()
CVdsService::SetIpsecGroupPresharedKey: IPsec functionality currently not supported
CVdsService::SetSANPolicy()
CVdsService::SetSANPolicy, 1
CVdsService::SetSANPolicy, 3, hr=%lX
CVdsService::SetSANPolicy, 4, hr=%lX
CVdsService::ToggleAutoMountPoint()
CVdsService::ToggleAutoMountPoint: CreateFile failed: %X
CVdsService::ToggleAutoMountPoint: IOCTL_MOUNTMGR_SET_AUTO_MOUNT failed: %X
CVdsService::Unadvise()
CVdsService::Unadvise, 1, %lX
CVdsService::Uninitialize()
CVdsService::Uninitialize: CoUninitialize triggered exception.
CVdsService::UninstallDevice
CVdsService::UninstallDevice, hDevInfo=%p, pDevInfoData=%p, pbRebootReq=%p
CVdsService::UninstallDevice, query removal was vetoed by %ws (veto type %u)
CVdsService::UninstallDisks
CVdsService::UninstallDisks, 1, pDiskIdArray=%p, ulCount=%ld,pbReboot=%p, pResults=%p
CVdsService::UninstallDisks, 10, hr=%lX, DiskId=%s
CVdsService::UninstallDisks, 11, hr=%lX, name=%s
CVdsService::UninstallDisks, 12, hr=%lX, DiskId=%s
CVdsService::UninstallDisks, 2, hr=%lX
CVdsService::UninstallDisks, 3
CVdsService::UninstallDisks, 4
CVdsService::UninstallDisks, 5, ObjectId=%s, hr=%lX
CVdsService::UninstallDisks, 6, %lX, name=%s
CVdsService::UninstallDisks, 7, %lX, name=%s
CVdsService::UninstallDisks, 8, hr=%lX, name=%s
CVdsService::UninstallDisks, 9, hr=%lX, name=%s
CVdsService::UninstallOneDisk
CVdsService::UninstallOneDisk, 1, hr=%lX, pName=%p, pbRebootReq=%p
CVdsService::UninstallOneDisk, 10, hr=%lX
CVdsService::UninstallOneDisk, 2, hr=%lX
CVdsService::UninstallOneDisk, 3, error=%ld
CVdsService::UninstallOneDisk, 4, error=%ld, name=%s
CVdsService::UninstallOneDisk, 5, error=%ld, name=%s
CVdsService::UninstallOneDisk, 6, error=%ld, name=%s
CVdsService::UninstallOneDisk, 7, error=%lX, name=%s
CVdsService::UninstallOneDisk, 8, hr=%lX
CVdsService::UninstallOneDisk, 9, hr=%lX
CVdsService::UninstallVolume
CVdsService::UninstallVolume, 1, hr=%lX, pName=%p, pbRebootReq=%p
CVdsService::UninstallVolume, 10, hr=%lX
CVdsService::UninstallVolume, 2, hr=%lX
CVdsService::UninstallVolume, 3, error=%ld
CVdsService::UninstallVolume, 4, error=%ld, name=%s
CVdsService::UninstallVolume, 5, error=%ld, name=%s
CVdsService::UninstallVolume, 6, error=%ld, name=%s
CVdsService::UninstallVolume, 6.5, hr=%lX, name=%s
CVdsService::UninstallVolume, 6.7,  name=%s
CVdsService::UninstallVolume, 7, error=%lX, name=%s
CVdsService::UninstallVolume, 8, hr=%lX
CVdsService::UninstallVolume, 9, hr=%lX
CVdsService::UnloadProviders()
CVdsService::UnloadProviders, 1
CVdsService::UnloadProviders: 2 QueryInterface(IVdsProviderPrivate) failed: %x
CVdsService::UnloadProviders: 3 QueryInterface(IVdsProviderPrivate) failed: %x
CVdsService::UnregisterProvider()
CVdsService::UnregisterProvider: Failed to delete %s key(%lX)
CVdsService::UnregisterServiceInstance()
CVdsService::WaitForServiceReady()
CVdsServiceAsyncObject::~CVdsServiceAsyncObject()
CVdsServiceAsyncObject::Cancel()
CVdsServiceAsyncObject::CVdsServiceAsyncObject()
CVdsServiceAsyncObject::Wait()
CVdsServiceModule::_Handler()
CVdsServiceModule::_ServiceMain()
CVdsServiceModule::DisplayMessage()
CVdsServiceModule::Handler()
CVdsServiceModule::Init()
CVdsServiceModule::Install()
CVdsServiceModule::IsInstalled()
CVdsServiceModule::RegisterServer()
CVdsServiceModule::RegisterServer, 1, %lX
CVdsServiceModule::RegisterServer, 10, %lX
CVdsServiceModule::RegisterServer, 2, %lX
CVdsServiceModule::RegisterServer, 3, %lX
CVdsServiceModule::RegisterServer, 4, %lX
CVdsServiceModule::RegisterServer, 5, %lX
CVdsServiceModule::RegisterServer, 6, %lX
CVdsServiceModule::RegisterServer, 7, %lX
CVdsServiceModule::RegisterServer, 8, %lX
CVdsServiceModule::RegisterServer, 9, %lX
CVdsServiceModule::Run()
CVdsServiceModule::Run: CoInitializeSecurity failed: %X
CVdsServiceModule::Run: failed to initialize security descriptor: %X
CVdsServiceModule::Run: failed to initialize semaphore: %X
CVdsServiceModule::Run: RegisterClassObjects failed: %X
CVdsServiceModule::Run: StartReferenceHistory failed: %X
CVdsServiceModule::Run: VdsDisableCOMFatalExceptionHandling failed: 0x%08X
CVdsServiceModule::ServiceMain()
CVdsServiceModule::SetServiceStatus()
CVdsServiceModule::Start()
CVdsServiceModule::Uninstall()
CVdsServiceModule::UnregisterServer()
CVdsStoragePool::~CVdsStoragePool()
CVdsStoragePool::GetAttributes()
CVdsStoragePool::GetAttributes, 1, hr=%lX
CVdsStoragePool::GetAttributes, 2, hr=%lX
CVdsStoragePool::GetAttributes, 3, error=%lX
CVdsStoragePool::GetProperties()
CVdsStoragePool::GetProperties, 1, hr=%lX
CVdsStoragePool::GetProperties, 2, hr=%lX
CVdsStoragePool::GetProperties, 3, error=%lX
CVdsStoragePool::GetProvider()
CVdsStoragePool::GetProvider, 1, hr=%lX
CVdsStoragePool::GetProvider, 2, %lX
CVdsStoragePool::GetProvider, 2, hr=%lX
CVdsStoragePool::GetProvider, 3, %lX
CVdsStoragePool::InternalQueryInterface, 1, hr=%lX
CVdsStoragePool::InternalQueryInterface, 2, hr=%lX
CVdsStoragePool::PulseMaintenance()
CVdsStoragePool::PulseMaintenance, 1, error=%lX
CVdsStoragePool::PulseMaintenance, 1, hr=%lX
CVdsStoragePool::QueryAllocatedLuns()
CVdsStoragePool::QueryAllocatedLuns, 1, hr=%lX
CVdsStoragePool::QueryAllocatedLuns, 2, hr=%lX
CVdsStoragePool::QueryAllocatedLuns, 3, error=%lX
CVdsStoragePool::QueryAllocatedStoragePools()
CVdsStoragePool::QueryAllocatedStoragePools, 1, hr=%lX
CVdsStoragePool::QueryAllocatedStoragePools, 2, hr=%lX
CVdsStoragePool::QueryAllocatedStoragePools, 3, error=%lX
CVdsStoragePool::QueryDriveExtents()
CVdsStoragePool::QueryDriveExtents, 1, hr=%lX
CVdsStoragePool::QueryDriveExtents, 2, hr=%lX
CVdsStoragePool::QueryDriveExtents, 3, hr=%lX
CVdsStoragePool::QueryDriveExtents, 4, error=%lX
CVdsStoragePool::StartMaintenance()
CVdsStoragePool::StartMaintenance, 1, hr=%lX
CVdsStoragePool::StartMaintenance, 2, error=%lX
CVdsStoragePool::StopMaintenance()
CVdsStoragePool::StopMaintenance, 1, hr=%lX
CVdsStoragePool::StopMaintenance, 2, error=%lX
CVdsSubSystem::~CVdsSubSystem()
CVdsSubSystem::CreateLun()
CVdsSubSystem::CreateLun, 1, hr=%lX
CVdsSubSystem::CreateLun, NULL pDriveIdArray
CVdsSubSystem::CreateLun2()
CVdsSubSystem::CreateLun2, 1, hr=%lX
CVdsSubSystem::CreateLun2, NULL pDriveIdArray
CVdsSubSystem::CreateTarget()
CVdsSubSystem::CreateTarget, 1, hr=%lX
CVdsSubSystem::CVdsSubSystem()
CVdsSubSystem::GetDrive()
CVdsSubSystem::GetDrive, 1, hr=%lX
CVdsSubSystem::GetDrive, 2, hr=%lX
CVdsSubSystem::GetDrive, 3, hr=%lX
CVdsSubSystem::GetDrive2()
CVdsSubSystem::GetDrive2, 1, hr=%lX
CVdsSubSystem::GetDrive2, 2, hr=%lX
CVdsSubSystem::GetDrive2, 3, hr=%lX
CVdsSubSystem::GetDrive2, 4, hr=%lX
CVdsSubSystem::GetImportTarget()
CVdsSubSystem::GetImportTarget, 1
CVdsSubSystem::GetImportTarget, 2
CVdsSubSystem::GetImportTarget, 3, %ld
CVdsSubSystem::GetImportTarget, 4, %ld
CVdsSubSystem::GetImportTarget, 5, hr=%lX
CVdsSubSystem::GetImportTarget, 6
CVdsSubSystem::GetImportTarget, 7.
CVdsSubSystem::GetImportTarget, 8
CVdsSubSystem::GetImportTarget, 9
CVdsSubSystem::GetProperties()
CVdsSubSystem::GetProperties, 1, error=%lX
CVdsSubSystem::GetProperties2()
CVdsSubSystem::GetProperties2, 1, hr=%lX
CVdsSubSystem::GetProperties2, 2, error=%lX
CVdsSubSystem::GetProvider()
CVdsSubSystem::GetProvider, 1, %lX
CVdsSubSystem::GetProvider, 2, %lX
CVdsSubSystem::GetProvider, 3, %lX
CVdsSubSystem::GetProviderId()
CVdsSubSystem::GetProviderId, 1, %lX
CVdsSubSystem::GetSupportedInterconnects()
CVdsSubSystem::GetSupportedInterconnects, 1, hr=%lX
CVdsSubSystem::GetSupportedInterconnects, 2, hr=%lX
CVdsSubSystem::GetSupportedInterconnects, 3, hr=%lX
CVdsSubSystem::InternalQueryInterface, 1, hr=%lX
CVdsSubSystem::InternalQueryInterface, 2, hr=%lX
CVdsSubSystem::InternalQueryInterface, 3, hr=%lX
CVdsSubSystem::InternalQueryInterface, 4, hr=%lX
CVdsSubSystem::InternalQueryInterface, 4.5
CVdsSubSystem::InternalQueryInterface, 5, hr=%lX
CVdsSubSystem::InternalQueryInterface, 6, hr=%lX
CVdsSubSystem::InternalQueryInterface, 7, hr=%lX
CVdsSubSystem::InternalQueryInterface, 8, hr=%lX
CVdsSubSystem::InternalQueryInterface, 9, hr=%lX
CVdsSubSystem::PulseMaintenance()
CVdsSubSystem::PulseMaintenance, 1, error=%lX
CVdsSubSystem::QueryControllers 1, NOT SUPPORTED, hr=%lX
CVdsSubSystem::QueryControllers 1a, NOT SUPPORTED, hr=%lX
CVdsSubSystem::QueryControllers()
CVdsSubSystem::QueryControllers, 1, error=%lX
CVdsSubSystem::QueryControllers, 1b, hr=%lX
CVdsSubSystem::QueryDrives()
CVdsSubSystem::QueryDrives, 1, hr=%lX
CVdsSubSystem::QueryDrives, 2, hr=%lX
CVdsSubSystem::QueryLuns()
CVdsSubSystem::QueryLuns, 1, hr=%lX
CVdsSubSystem::QueryLuns, 2, hr=%lX
CVdsSubSystem::QueryMaxLunCreateSize()
CVdsSubSystem::QueryMaxLunCreateSize, 1, error=%lX
CVdsSubSystem::QueryMaxLunCreateSize2()
CVdsSubSystem::QueryMaxLunCreateSize2, 1, hr=%lX
CVdsSubSystem::QueryMaxLunCreateSize2, 2, error=%lX
CVdsSubSystem::QueryPortals()
CVdsSubSystem::QueryPortals, 1, hr=%lX
CVdsSubSystem::QueryPortals, 2, hr=%lX
CVdsSubSystem::QueryTargets()
CVdsSubSystem::QueryTargets, 1, hr=%lX
CVdsSubSystem::QueryTargets, 2, hr=%lX
CVdsSubSystem::Reenumerate()
CVdsSubSystem::Reenumerate, 1, error=%lX
CVdsSubSystem::ReplaceDrive()
CVdsSubSystem::ReplaceDrive, 1, error=%lX
CVdsSubSystem::SetControllerStatus()
CVdsSubSystem::SetControllerStatus, 1, error=%lX
CVdsSubSystem::SetFriendlyName
CVdsSubSystem::SetFriendlyName, 1, error=%lX
CVdsSubSystem::SetImportTarget()
CVdsSubSystem::SetImportTarget, 1, hr=%lX
CVdsSubSystem::SetImportTarget, 10
CVdsSubSystem::SetImportTarget, 11, %lX
CVdsSubSystem::SetImportTarget, 12
CVdsSubSystem::SetImportTarget, 13, hr=%lX
CVdsSubSystem::SetImportTarget, 14, error=%ld
CVdsSubSystem::SetImportTarget, 2, error=%ld
CVdsSubSystem::SetImportTarget, 3, error=%ld
CVdsSubSystem::SetImportTarget, 4, hr=%lX
CVdsSubSystem::SetImportTarget, 5
CVdsSubSystem::SetImportTarget, 6, error=%ld
CVdsSubSystem::SetImportTarget, 7, %lX
CVdsSubSystem::SetImportTarget, 8
CVdsSubSystem::SetImportTarget, 9, hr=%lX
CVdsSubSystem::SetIpsecGroupPresharedKey()
CVdsSubSystem::SetIpsecGroupPresharedKey: IPsec functionality currently not supported
CVdsSubSystem::SetStatus()
CVdsSubSystem::SetStatus, 1, error=%lX
CVdsSubSystem::StartMaintenance()
CVdsSubSystem::StartMaintenance, 1, error=%lX
CVdsSubSystem::StopMaintenance()
CVdsSubSystem::StopMaintenance, 1, error=%lX
CVdsVDisk::~CVdsVDisk
CVdsVDisk::CVdsVDisk
CVdsVDisk::GetDeviceName
CVdsVDisk::GetDeviceName, 1, hr=%lX
CVdsVDisk::GetHostVolume
CVdsVDisk::GetHostVolume, 1, hr=%lX
CVdsVDisk::GetHostVolume, 2, hr=%lX
CVdsVDisk::GetHostVolume, 3, hr=%lX
CVdsVDisk::GetHostVolume, 4, hr=%lX
CVdsVDisk::GetProperties
CVdsVDisk::GetProperties, 1, hr=%lX
CVdsVDisk::InternalQueryInterface, 1, hr=%lX
CVdsVDisk::Open
CVdsVDisk::Open, 1, error=%lX
CVdsVDisk::Open, 2, hr=%lX
CVdsVDisk::Open, 3, hr=%lX
CVdsVolume::~CVdsVolume()
CVdsVolume::AddAccessPath()
CVdsVolume::AddAccessPath, **********HIDDEN********
CVdsVolume::AddAccessPath, .5, hr=%lX
CVdsVolume::AddAccessPath, 1, hr=%lX
CVdsVolume::AddAccessPath, 1, path=%ws
CVdsVolume::AddAccessPath, 2a
CVdsVolume::AddAccessPath, 2b, Drive letter=%ws, DeviceName=%ws, win32 error=%ld
CVdsVolume::AddAccessPath, 2c, Drive letter=%ws, win32 error=%ld
CVdsVolume::AddAccessPath, 2d, Access Path=%ws, win32 error=%ld
CVdsVolume::AddAccessPath, 3
CVdsVolume::AddAccessPath, 4
CVdsVolume::AddAccessPath, 5
CVdsVolume::AddAccessPath, 6
CVdsVolume::AddAccessPath, 7, win32 error=%ld
CVdsVolume::AddAccessPath, 8, win32 error=%ld
CVdsVolume::AddAccessPath, 9, win32 error=%ld
CVdsVolume::AddPlex()
CVdsVolume::BreakPlex()
CVdsVolume::ChangeNoDLFlag()
CVdsVolume::ChangeNoDLFlag, 1, hr=%lX
CVdsVolume::ChangeNoDLFlag, 4, hr=%lX
CVdsVolume::ChangeNoDLFlag, 5, hr=%lX
CVdsVolume::ChangeNoDLFlag, 6, hr=%lX
CVdsVolume::ChangeNoDLFlag, 7, Win32 error=%ld
CVdsVolume::ChangeNoDLFlag, 8, Win32 error=%ld
CVdsVolume::ChangeNoDLFlag: 2, hr=%lX
CVdsVolume::ChangeNoDLFlag: 3, Win32 error=%ld
CVdsVolume::CheckVolumeDirtyFlag()
CVdsVolume::CheckVolumeDirtyFlag, 2, volume=(%S), hr=%lX
CVdsVolume::CheckVolumeDirtyFlag, 3, volume=(%S), hr=%lX
CVdsVolume::ClearFileSystemFlags()
CVdsVolume::ClearFlags()
CVdsVolume::CreateAsynchObj()
CVdsVolume::CreateAsynchObj, 1, hr=%lX
CVdsVolume::CreateAsynchObj, 2, hr=%lX
CVdsVolume::CVdsVolume()
CVdsVolume::Delete()
CVdsVolume::Delete, .5, hr=%lX
CVdsVolume::Delete, 1
CVdsVolume::Delete, 2, hr=%lX
CVdsVolume::Delete, 3
CVdsVolume::Delete, 4
CVdsVolume::Delete, 5
CVdsVolume::Delete, 6, hr=%lX
CVdsVolume::Delete, 7
CVdsVolume::Delete, 9, hr=%ld
CVdsVolume::DeleteAccessPath()
CVdsVolume::DeleteAccessPath, .5, hr=%lX
CVdsVolume::DeleteAccessPath, 0, hr=%lX
CVdsVolume::DeleteAccessPath, 1, hr=%lX
CVdsVolume::DeleteAccessPath, 10, error=%ld
CVdsVolume::DeleteAccessPath, 11, error=%ld
CVdsVolume::DeleteAccessPath, 13, error=%ld
CVdsVolume::DeleteAccessPath, 14, error=%ld
CVdsVolume::DeleteAccessPath, 15
CVdsVolume::DeleteAccessPath, 2, hr=%lX
CVdsVolume::DeleteAccessPath, 3
CVdsVolume::DeleteAccessPath, 4
CVdsVolume::DeleteAccessPath, 5
CVdsVolume::DeleteAccessPath, 6, error=%ld
CVdsVolume::DeleteAccessPath, 7, error=%ld
CVdsVolume::DeleteAccessPath, 8
CVdsVolume::DeleteAccessPath, 9, hr=%lX
CVdsVolume::Dismount()
CVdsVolume::Dismount, 1, hr=%lX
CVdsVolume::Dismount, 10, hr=%lX
CVdsVolume::Dismount, 2, hr=%lX
CVdsVolume::Dismount, 3, hr=%lX
CVdsVolume::Dismount, 4, hr=%lX
CVdsVolume::Dismount, 5, hr=%lX
CVdsVolume::Dismount, 6, hr=%lX
CVdsVolume::Dismount, 7, hr=%lX
CVdsVolume::Dismount, 8, hr=%lX
CVdsVolume::Dismount, 9, hr=%lX
CVdsVolume::Dismount: IOCTL_VOLUME_OFFLINE(%S) failed: %X
CVdsVolume::Extend 1: hr=%lX
CVdsVolume::Extend 2: hr=%lX
CVdsVolume::Extend()
CVdsVolume::Extend, 3.0: Unknown file system, do not support Extend. File system name=%s
CVdsVolume::Extend, 3.1: File systems other than NTFS, RAW, REFS and CSVFS do not support Extend
CVdsVolume::Extend, 3.15: DeviceIoControl(FSCTL_CSV_QUERY_DOWN_LEVEL_FILE_SYSTEM_CHARACTERISTICS) failed: %lX
CVdsVolume::Extend, 3.2: NtQueryVolumeInformationFile failed: %lX
CVdsVolume::Extend, 3.3: NTFS file system size cannot extend to more than 2^32 - 2 clusters
CVdsVolume::Extend, 3.4: ReFS file system size cannot extend to more than 2^63 bytes
CVdsVolume::Extend, 3: NtQueryVolumeInformationFile failed: %lX
CVdsVolume::Extend, 4: CreateEvent failed: %ld
CVdsVolume::Extend, 5: CreateThread failed: %ld
CVdsVolume::Format()
CVdsVolume::Format, 1, hr=%lX
CVdsVolume::Format, 2, hr=%lX
CVdsVolume::FormatCallback()
CVdsVolume::FormatCallback, 1
CVdsVolume::FormatCallback: failed to compress volume: %X
CVdsVolume::FormatEx()
CVdsVolume::FormatEx, 1, hr=%lX
CVdsVolume::FormatEx2()
CVdsVolume::FormatEx2, 1, hr=%lX, Type=%p (%s)
CVdsVolume::FormatEx2, 1.5, hr=%lX
CVdsVolume::FormatEx2, 2, hr=%lX
CVdsVolume::FormatEx2, 3, hr=%lX
CVdsVolume::FormatEx2, 4a, hr=%lX
CVdsVolume::FormatEx2, 4b, hr=%lX
CVdsVolume::FormatEx2, 5, hr=%lX
CVdsVolume::FormatEx2, 6, hr=%lX
CVdsVolume::FormatEx2, 7, hr=%lX
CVdsVolume::FormatEx2, 8, hr=%lX
CVdsVolume::FormatEx2, 9, hr=%lX
CVdsVolume::FormatInternal()
CVdsVolume::FormatInternal, 1, hr=%lX, Volume=%p, Device=%p, Async=%p
CVdsVolume::FormatInternal, 10, path=%s, hr=%lX
CVdsVolume::FormatInternal, 11, path=%s, hr=%lX
CVdsVolume::FormatInternal, 12, path=%s, hr=%lX
CVdsVolume::FormatInternal, 13, path=%s, hr=%lX
CVdsVolume::FormatInternal, 14, path=%s, hr=%lx
CVdsVolume::FormatInternal, 2, hr=%lX
CVdsVolume::FormatInternal, 3, hr=%lX
CVdsVolume::FormatInternal, 4, hr=%lX
CVdsVolume::FormatInternal, 5, hr=%lX
CVdsVolume::FormatInternal, 6, hr=%lX
CVdsVolume::FormatInternal, 7, hr=%lX
CVdsVolume::FormatInternal, 8, path=%s, error=%lX
CVdsVolume::FormatInternal, 9, path=%s, hr=%lX
CVdsVolume::FormatPartitionEx()
CVdsVolume::FormatPartitionEx, 1, hr=%lX
CVdsVolume::FormatPartitionEx2()
CVdsVolume::FormatRoutine exiting due to shutdown
CVdsVolume::FormatRoutine()
CVdsVolume::FormatRoutine,1: Thread Map is corrupt
CVdsVolume::GetFileSystemProperties()
CVdsVolume::GetFileSystemProperties, 1, hr=%lX
CVdsVolume::GetFileSystemProperties, 2, hr=%lX
CVdsVolume::GetFileSystemProperties, 3, hr=%lX
CVdsVolume::GetFileSystemPropertiesInternal()
CVdsVolume::GetFileSystemPropertiesInternal, 1, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 1b, file system name=%s
CVdsVolume::GetFileSystemPropertiesInternal, 2, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 3, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 4, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 5, hr=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 6, hr=%lX
CVdsVolume::GetFileSystemTypeName()
CVdsVolume::GetFileSystemTypeName, 1, hr=%lX
CVdsVolume::GetFileSystemTypeName, 2, hr=%lX
CVdsVolume::GetFileSystemTypeName, 3, hr=%lX
CVdsVolume::GetFileSystemTypeName, 3b, file system name=%s
CVdsVolume::GetFileSystemTypeName, 3c, file system name=%s, err=%ld
CVdsVolume::GetFileSystemTypeNameInternal()
CVdsVolume::GetFileSystemTypeNameInternal, 1, status=%lX
CVdsVolume::GetFileSystemTypeNameInternal, 2, hr=%lX
CVdsVolume::GetFileSystemTypeNameInternal, 3, hr=%lX
CVdsVolume::GetFsFlags()
CVdsVolume::GetFsFlags, 1, hr=%lX
CVdsVolume::GetFsFlags, 2, hr=%lX
CVdsVolume::GetFsFlags, 3, error=%ld
CVdsVolume::GetFSType()
CVdsVolume::GetFSType, 2, error=%ld
CVdsVolume::GetFSType, 3, hr=%lX
CVdsVolume::GetFSType, 4, hr=%lX
CVdsVolume::GetFSType, 5, hr=%lX
CVdsVolume::GetFSType, 6, hr=%lX
CVdsVolume::GetPack()
CVdsVolume::GetPack: provider returned %X from GetPack.
CVdsVolume::GetProperties()
CVdsVolume::GetProperties, 1, error= %lX
CVdsVolume::GetProperties, 2, error=%lX
CVdsVolume::GetProperties, 3, hr= %lX
CVdsVolume::GetProperties, 4a, Perhaps the volume is RAW (E_INVALIDARG is returned), hr=%lX
CVdsVolume::GetProperties, 4b, hr=%lX
CVdsVolume::GetProperties, 4c, error=%ld
CVdsVolume::GetProperties, 4d, Memory allocation failure
CVdsVolume::GetProperties2()
CVdsVolume::GetProperties2, 1, hr= %lX
CVdsVolume::GetProperties2, 2, hr= %lX
CVdsVolume::GetProperties2, 3, hr= %lX
CVdsVolume::GetProperties2, 4, hr= %lX
CVdsVolume::GetProperties2, 5, hr= %lX
CVdsVolume::GetVolumeName()
CVdsVolume::GetVolumeName, 1, hr=%lX
CVdsVolume::GetVolumeName: bad volume name: %s
CVdsVolume::GetVolumeName: StringCchCopyW: %S, error=%ld.
CVdsVolume::GetVolumeName: volume name is missing.
CVdsVolume::GetVolumeName: volume name is too long: %S.
CVdsVolume::GetVolumeName: volume name not found: %s.
CVdsVolume::InternalQueryInterface, 1, hr=%lX
CVdsVolume::InternalQueryInterface, 2, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags()
CVdsVolume::IsBasicMbrAndCriticalFlags, 1, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 10, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 11, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 12, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 13, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 14, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 2, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 3, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 4, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 5, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 6, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 7, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 8, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 9, hr=%lX
CVdsVolume::IsPackOffline()
CVdsVolume::IsVolumeGuidPathname, 1, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk()
CVdsVolume::IsVolumeOnDynamicDisk, 1, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 2, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 3, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 4, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 5, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 6, hr=%lX
CVdsVolume::Mount()
CVdsVolume::Mount, .5, hr=%lX
CVdsVolume::Mount, 1, (%S) failed: %lX
CVdsVolume::Mount, 2, (%S) failed: %lX
CVdsVolume::Mount, 3
CVdsVolume::Mount, 4, %lX
CVdsVolume::OfflineVolume failed, 1, hr=%lX
CVdsVolume::OfflineVolume failed, 2, hr=%lX
CVdsVolume::OfflineVolume failed, 3, hr=%lX
CVdsVolume::OfflineVolume()
CVdsVolume::OfflineVolume, .5, hr=%lX
CVdsVolume::OfflineVolume, 0, hr=%lX
CVdsVolume::OfflineVolume: IOCTL_VOLUME_OFFLINE(%S) failed, 4, hr=%lX
CVdsVolume::Online()
CVdsVolume::Online, 1, hr=%lX
CVdsVolume::Online, 2, hr=%lX
CVdsVolume::OpenHandle()
CVdsVolume::OpenHandle, 1, hr=%lX
CVdsVolume::OpenHandle, 1.3, volume=(%S)
CVdsVolume::OpenHandle, 1.5, hr=%lX
CVdsVolume::OpenHandle, 1.7, hr=%lX
CVdsVolume::OpenHandle, 2
CVdsVolume::OpenHandle, 3, hr=%lX
CVdsVolume::OpenHandle, 3.3, NO MEDIA
CVdsVolume::OpenHandle, 3.6, VOLUME_OFFLINE
CVdsVolume::OpenHandle, 4, volume=(%S), error=%ld
CVdsVolume::PostExtendVolumeHandler()
CVdsVolume::PostExtendVolumeHandler, 100: DeviceIoControl (FSCTL_EXTEND_VOLUME) failed: %lX
CVdsVolume::PostExtendVolumeHandler, 101: DeviceIoControl (FSCTL_EXTEND_VOLUME) failed.
CVdsVolume::PostExtendVolumeHandler,1: Failed to get volume properties returned error: %lX
CVdsVolume::PostExtendVolumeHandler,2: Volume properties invalid: %lX
CVdsVolume::PostExtendVolumeHandler,3: Failed to open handle to the volume: %lX
CVdsVolume::PostExtendVolumeHandler: NtQueryVolumeInformationFile (2) failed: %ld
CVdsVolume::PostExtendVolumeHandler: pAsync QueryInterface failed: %lX
CVdsVolume::PostExtendVolumeHandler: pAsync->Wait failed: %lX
CVdsVolume::PostExtendVolumeHandler: pAsync->Wait returned error: %lX
CVdsVolume::QueryAccessPaths()
CVdsVolume::QueryAccessPaths, 1, hr=%lX
CVdsVolume::QueryAccessPaths, 2, error=%ld
CVdsVolume::QueryAccessPathsToVolume()
CVdsVolume::QueryAccessPathsToVolume: GetVolumePathNamesForVolumeName failed: %X
CVdsVolume::QueryFileSystemFormatSupport()
CVdsVolume::QueryFileSystemFormatSupport, 1, hr=%lX
CVdsVolume::QueryFileSystemFormatSupport, 2, hr=%lX
CVdsVolume::QueryFileSystemFormatSupportInternal()
CVdsVolume::QueryFileSystemFormatSupportInternal, 2, hr=%lX
CVdsVolume::QueryFileSystemFormatSupportInternal, 3, hr=%lX
CVdsVolume::QueryFileSystemFormatSupportInternal: failed to get GetDefaultFileSystem address: %ld
CVdsVolume::QueryFileSystemFormatSupportInternal: failed to get supported file systems: %ld
CVdsVolume::QueryMaxReclaimableBytes()
CVdsVolume::QueryMaxReclaimableBytes(), 1.5, hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 2, NtQueryVolumeInformationFile failed: %X
CVdsVolume::QueryMaxReclaimableBytes(), 3 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 4 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 5 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 6 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 7 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 8 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 9: Unknown file system, do not support shrink. File system name=%s
CVdsVolume::QueryMaxReclaimableBytes(), BITLOCKER NOT ON STACK (expected for CDROMS), hr=%lX
CVdsVolume::QueryPlexes()
CVdsVolume::QueryPlexes, 1, hr=%lX
CVdsVolume::QueryReparsePoints()
CVdsVolume::QueryReparsePoints, 1, hr=%lX
CVdsVolume::QueryReparsePoints, 10, error=%ld
CVdsVolume::QueryReparsePoints, 11, hr=%lX
CVdsVolume::QueryReparsePoints, 12, hr=%lX
CVdsVolume::QueryReparsePoints, 13
CVdsVolume::QueryReparsePoints, 3
CVdsVolume::QueryReparsePoints, 4
CVdsVolume::QueryReparsePoints, 5
CVdsVolume::QueryReparsePoints, 6
CVdsVolume::QueryReparsePoints, 7, error=%ld
CVdsVolume::QueryReparsePoints, 8, error=%ld
CVdsVolume::QueryReparsePoints, 9, error=%ld
CVdsVolume::QueryVolumeGuidPathnames()
CVdsVolume::QueryVolumeGuidPathnames, 1, hr= %lX
CVdsVolume::QueryVolumeGuidPathnames, 2, hr= %lX
CVdsVolume::QueryVolumeGuidPathnames, 2a, hr=%lX
CVdsVolume::QueryVolumeGuidPathnames, 3, hr=%lX
CVdsVolume::RemovePlex()
CVdsVolume::SetClearFsFlags()
CVdsVolume::SetClearFsFlags, 1, hr=%lX
CVdsVolume::SetClearFsFlags, 2, hr=%lX
CVdsVolume::SetClearFsFlags, 3, hr=%lX
CVdsVolume::SetClearFsFlags, 4, name=%s, %ld
CVdsVolume::SetClearFsFlags, 4, name=%s, error=%ld
CVdsVolume::SetClearFsFlags, 5, name=%s, %ld
CVdsVolume::SetFileSystemFlags()
CVdsVolume::SetFlags()
CVdsVolume::SetFlags, 1, hr=%lX
CVdsVolume::SetFlags, 2, hr=%lX
CVdsVolume::SetFlags, 3, hr=%lX
CVdsVolume::SetFlags, 4, hr=%lX
CVdsVolume::SetFlags, 5, hr=%lX
CVdsVolume::SetFlags, 6, hr=%lX
CVdsVolume::SetupFormatThreadParam()
CVdsVolume::SetupFormatThreadParam, 2, hr=%lX
CVdsVolume::SetupFormatThreadParam, 3, hr=%lX
CVdsVolume::SetupFormatThreadParam, 4, hr=%lX
CVdsVolume::SetupFormatThreadParam, 5, hr=%lX
CVdsVolume::SetupFormatThreadParam, 6, hr=%lX
CVdsVolume::SetupFormatThreadParam, 7, hr=%lX
CVdsVolume::SetupFormatThreadParam, 8, hr=%lX
CVdsVolume::SetupFormatThreadParam, 9, hr=%lX
CVdsVolume::Shrink 5, status=%lX
CVdsVolume::Shrink 6, hr=%lX
CVdsVolume::Shrink 7, hr=%lX
CVdsVolume::Shrink 8, hr=%lX
CVdsVolume::Shrink 9, error=%ld
CVdsVolume::Shrink()
CVdsVolume::Shrink() old
CVdsVolume::Shrink,  1, hr=%lX
CVdsVolume::Shrink, 2, path=%s, hr=%lX
CVdsVolume::Shrink, 3, path=%s, hr=%lX
CVdsVolume::Shrink, 4, hr=%lX
CVdsVolume::Shrink, 5.1: Unknown file system, do not support shrink. File system name=%s
CVdsVolume::ShrinkFileSystem()
CVdsVolume::ShrinkFileSystem: CoCreateInstance failed to launch shrink engine: %X
CVdsVolume::ShrinkFileSystem: GetProperties failed: %X
CVdsVolume::ShrinkFileSystem: IVoluemShrink::Shrink() failed: %X
CVdsVolume::ShrinkFileSystem: IVoluemShrink::Shrink() getting volume statistics failed: %X
CVdsVolume::ShrinkFileSystem: IVolumeShrink::Shrink() Defrag Cancel operation failed: %X
CVdsVolume::ShrinkFileSystem: IVolumeShrink::Shrink() operation failed: %X
CVdsVolume::ShrinkFileSystem: IVolumeShrink::Shrink() wait for completion failed: %X
CVdsVolume::ShrinkRoutine exiting due to shutdown
CVdsVolume::ShrinkRoutine()
CVdsVolume::ShrinkRoutine: CoInitializeEx failed: %X
CVdsVolume::ShrinkRoutine: IVdsVolume::Shrink provider call failed: %X
CVdsVolume::ShrinkRoutine: IVdsVolume::Shrink provider pAsync->Wait failed: %X
CVdsVolume::ShrinkRoutine: IVdsVolume::Shrink provider pAsync->Wait returned error: %X
CVdsVolume::ShrinkRoutine: ShrinkFileSystem failed: %X
CVdsVolume::ValidateCall()
CVdsVolume::ValidateCall, 1, hr=%lX
CVdsVolume::ValidateCall, 2, hr=%lX
CVdsVolumePlex::~CVdsVolumePlex()
CVdsVolumePlex::CVdsVolumePlex()
CVdsVolumePlex::GetProperties()
CVdsVolumePlex::GetVolume()
CVdsVolumePlex::InternalQueryInterface, 1, hr=%lX
CVdsVolumePlex::QueryExtents()
CVdsVolumePlex::Repair()
D!l$03
D$ ?B
d$ E3
D$ E3
d$ E3
D$ E3
D$ t&
D$$I;
D$(E3
D$(H;D$8u
D$(H;D$hu
D$(H;D$Xu
D$@@2
D$@8D$l
D$@fD
D$@H!E
d$`E3
D$`E3
d$`E3
D$`H!E
D$`H;
D$`t5H
D$0E3
d$0E3
D$0E3
D$0H;E
D$8E3
D$A8D$m
D$B8D$n
D$C8D$o
D$D?B
D$DHc
D$H90u;
D$H98
D$HE3
D$hH!D$8H
D$HH;
D$HH;D$Xu*A
d$P;D$ 
D$P@"
D$P9H
D$P9L$@u
D$PfD98t
D$pH;
D$pI+
D$PL+
D$t8F
D$TD9l$X
D$u8F
D$XfA
D$xH!
D$xH;
D$XH;D$h
D;|$D
D;d$D
D;l$ 
D;L$`u
D;t$ |
D;t$0
D;t$D
D8|$@t
D8|$0t
D8|$Bt
D8|$Ct
D8|$Dt
D8|$pE
D8a(t
D8l$@
D8m@t
D8mXt
D8t$@
D8t$@t
D8t$At
D9#v!D
D9&vMA
D9|$ ~)H
D9|$8
D9|$8u
D9d$Du
D9d$Ht/A
D9l$D~DI
D9l$h
D9l$l
D9t$ u
D9t$@
D9t$0
DefineDosDeviceW
DefWindowProcW
DelayLoadFailureHook
DeleteBcdObjects
DeleteCriticalSection
Deleted = %s
DeleteNetworkShare
DeleteService
DeleteVolumeMountPointW
DequeueEx Skip count=%lu
DequeueEx Unknown count=%lu
Device Path = %s
Device Type = %ld
DeviceIoControl
Disk {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws] is LUN Id {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} from LUN-disk map; reusing wrapper (Unk:%p, Wrapper:%p)
Disk Number = %ld
DispatchMessageW
DN fE
Drive letter arrival: %C
Drive letter removal: %C
DSM_LB_Operations
DSM_Load_Balance_Policy
DSM_Paths
DSM_QueryLBPolicy
DSM_QuerySupportedLBPolicies
DSM_QueryUniqueId
DSMPathCount
DSMPathId
DsmSetLoadBalancePolicy
DsmUniqueId
DuplicateTokenEx
DWORD sig = 0x%lX
E@LcD$PH
EnterCriticalSection
en-US
Error code for StartServiceCtrlDispatcher: %u.
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
EXFAT
EXFAT   
EXIT CVdsRawDiskLun::ClearFlags, Name=%s, Number=%ld, status=%lX
EXIT CVdsRawDiskLun::SetFlags, Name=%s, Number=%ld, status=%lX
EXIT CVdsRawDiskLun::SetFlagsInternal, Name=%s, Number=%ld, status=%lX
EXIT CVdsService::AddLunIdToMap, hr=%lX
EXIT CVdsService::GetDeviceDetailData, hr=%lX
EXIT CVdsService::GetDiskIdFromLunInfo, hr=%lX
EXIT CVdsService::GetDiskNameById, hr=%lX
EXIT CVdsService::GetNameByIdForRaw, hr=%lX
EXIT CVdsService::GetVolumeIdList, hr=%lX
EXIT CVdsService::GetVolumeNameById, hr=%lX
EXIT CVdsService::IsMatchDeviceIdDescriptor, return=%d
EXIT CVdsService::IsMatchingIdentifier, return=%d
EXIT CVdsService::IsMatchLun, return=%d
EXIT CVdsService::UninstallDevice, hr=%lX
EXIT CVdsService::UninstallDisks, hr=%lX
EXIT CVdsService::UninstallOneDisk, hr=%lX
EXIT CVdsService::UninstallVolume, hr=%lX
f9,xu
f94_u
f9D$(u
f9H\u
fA9D}
fA9Dm
fA9DU
Failed to find instance '%S' of class '%S': %x
FAT32
fC9|}
FCVdsEnumObject::~CVdsEnumObject()
FCVdsHbaPort::CVdsHbaPort()
fD;*t
fD9 u
fD9$Au
fD9$Fu
fD9$Gu
fD9$Hu
fD9$pu
fD9$Yu
fD9,Au
fD9,Fu
fD9,pu
fD9,Yu
fD9|$@t
fD9<Au
fD9<Gu
fD90t
fD91t
fD94Au
fD94Hu
fD97t
fD98t
fD9l]
fD9lu
fE9$Pu
fE9,Fu
fE9,Nu
fE9,Pu
fE9<\u
fE9<Tu
fE94pu
fE94Wu
fE9L}
fF9,pu
fF9,vu
fF9,xu
fG9<pu
FileDescription
FileVersion
FindFirstVolumeMountPointW
FindFirstVolumeW
FindFSPropertiesInMap
FindNextVolumeMountPointW
FindNextVolumeW
FindOneOf()
FindOrCreateCookieInGlobalMap()
FindVolumeClose
FindVolumeInMap: volume not found.
FindVolumeMountPointClose
Flags = 0x%lX
FormatMessageW
FormatRoutine: failed to get FormatEx2 or EnableVolumeCompression address
FreeLibrary
FreeSid
FriEndly Name = %s
FveAddAuthMethodInformation
FveAddTrustedWimData
fveapi.dll
FveCheckSuspendBitLockerOnUpgrade
FveCloseVolume
FveCommitChanges
FveDeleteAuthMethod
FveDetectTelemetry
FveDisableAuthenticationW
FveEnableAuthenticationW
-FVE-FS-
FveGetAuthMethodInformation
FveGetSecureBootBindingState
FveGetStatus
FveGetStatusBasicW
FveGetStatusW
FveOpenVolumeW
FveRemoveTrustedWimData
FveSetFipsAllowDisabled
GarbageCollectDriveLetters
GetBootFromDiskNumber
GetByteArrayFromInstance, 2, hr=%x
GetByteArrayFromInstance, 3, Failed to get Property '%S': %x
GetCommandLineW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDeviceAndMediaType
GetDeviceId
GetDeviceLocationEx
GetDeviceManufacturerInfo
GetDeviceName
GetDeviceNumber
GetDeviceRegistryPropertyByInfo
GetDeviceRegistryPropertyByInst
GetDiskIdentifiers
GetDiskLayout
GetDiskObjectWrapper, 1: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} Wrapper:%p hr:0x%08x
GetDiskObjectWrapper, 2: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetDiskObjectWrapper, 3: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetDiskObjectWrapper, 4: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetDiskOfflineReason
GetDiskRedundancyCount
GetDriveTypeW
GetFileAttributesW
GetFileSystemRecognitionName
GetFMIFSEnableCompressionRoutine
GetFMIFSFormatEx2Routine
GetFMIFSGetDefaultFilesystemRoutine
GetInterfaceDetailData
GetIScsiIKEInfoW
GetIScsiInitiatorNodeNameW
GetLastError
GetLengthSid
GetLunObjectWrapper, 1: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetLunObjectWrapper, 2: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetLunObjectWrapper, 3: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetMediaGeometryEx
GetMessageW
GetModuleFileNameW
GetModuleHandleW
GetNodeClusterState
GetObjectFromInstance, 1, hr=%x
GetObjectFromInstance, 2, hr=%x
GetPartitionInformation
GetProcAddress
GetProcessHeap
GetSecurityDescriptorLength
GetStartupInfoW
GetStorageAccessAlignmentProperty
GetStringFromInstance, 1, hr=%x
GetStringFromInstance, 2, hr=%x
GetStringFromInstance, 3, hr=%x
GetStringFromInstance, 4, Failed to get WideCharToMultiByte from '%S': %x
GetSystemDirectoryW
GetSystemTimeAsFileTime
GetTickCount
GetUlongFromInstance, 1, hr=%x
GetUlongFromInstance, 2, hr=%x
GetVariantFromInstance, 2, hr=%x
GetVariantFromInstance, 3, Failed to get property(Name(%S), Type(%d)): %x
GetVolumeDiskExtentInfo
GetVolumeGuidPathnames
GetVolumeName
GetVolumeNameForVolumeMountPointW
GetVolumePathNamesForVolumeNameW
GetVolumePathNameW
GetVolumeUniqueId
GUID sig: %s
GuidToString
H!\$ 
H!\$ 3
H!\$8H
H!]@H!]HL
H!]oH
H!]oL
H!|$(
H!|$0L
H!|$8H
H!}8!}0L
H!D$(
H!D$03
H!o03
H!t$0!t$(D
H!t$8H
H!uXE3
H#\$pH
H;D$8u
H;D$hs
H;H@u
H;HHt
H;HHu
H;HPt
H+D$(H=
H9\$8tdH
H9\$8tVH
H9\$8u
H9\$H
H9\$Hu
H9=A.
H9D$ 
H9D$(
H9D$(r
H9D$(u
H9D$@
H9D$@u6H
H9D$P
H9K(L
H9S u
H9S u%H9K(u
H9t$@u
hA_A^A]A\_^[]
HardwareProviders
HBA_CloseAdapter
HBA_GetAdapterAttributes
HBA_GetAdapterName
HBA_GetAdapterPortAttributes
HBA_GetNumberOfAdapters
HBA_OpenAdapter
hbaapi.dll
HBAStatus
HcA<H
HcD$ H
HcD$ L
HcEpH
HcEpL
Health = %ld
HeapAlloc
HeapFree
HeapSetInformation
I9D$h
I9L$pu
ID identifier={%.2x}
ImportTargets
Index
InitializeCriticalSection
InitializeRundownProtection
InitializeSecurityDescriptorHelper
InitiateSystemShutdownExW
InstanceName
InternalName
InvalidateDiskCache
IPAddr
IpV4Address
IpV6Address
IpV6FlowInfo
IpV6ScopeId
IsClientSKU
iscsidsc.dll
IsDeleted
IsDiskClustered
IsDiskCurrentStateReadOnly
IsDiskReadOnly
IsDriveLetter
IsEfiFirmware
IsNoAutoMount
IsOsPreRS1
IsRunningOnAMD64
IsSecureBootBound
IsUninstallImageValid
IsValidSid
IsVdsLoggingEnabled
IsVDSProviderInbox
IsWinPE
IVdsIscsiInitiatorAdapter::GetProperties, 1, hr: %x
jOHi'
K.$CVdsStoragePool::CVdsStoragePool()
KcviB
L!d$HL!d$hL
L!eXH
L!l$h3
L!l$XL!+D!l$pD!l$tD!l$xH
l$ E3
L$ E3
l$ E3
L$ SUVWH
L$(9\$ ~RA
l$(E3
L$(E3
L$@9t$P
L$@E3
L$@H3
L$@H9t$0t4H
L$@H9t$0tAH
L$@H9t$0t-H
L$`H3
L$4E3
L$8H3
L$hA;
L$hE3
L$HH3
L$hH3
L$PfB
L$PH3
L$pH3
L$XH3
L;d$pr
L9;t|D
L9|$p
L9~xL
L9fxu$
L9l$H
L9l$x
L9u'u
LaunchPermission
LcA<E3
LcD$DI
LcmgH
LeaveCriticalSection
LegalCopyright
LoadBalancePolicy
LoadLibraryExW
LoadLibraryW
LoadStringW
LocalAddr
LocalFree
LocalPort
Location Path = %s
LockDismountVolume
LockVolume
LogError
LogInfo
LoginIScsiTargetW
LogoutIScsiTarget
Looking for wrapper in LUN-disk map for disk: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} Wrapper:%p hr:0x%08x
Looking for wrapper in LUN-disk map for LUN: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} Wrapper:%p, Unknown:%p, hr:0x%08x
lstrcmpiW
lstrlenW
LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws] is disk Id:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} from LUN-disk map; re-using wrapper (Unk:%p Wrapper:%p)
LUN-Disk lookup from map hResult:0x%08x IN [%ws] OUT LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
LUN-Disk lookup from map hResult:0x%08x IN LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}, OUT DiskId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws]
LUN-Disk lookup from providers hResult:0x%08x IN [%ws] OUT LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
M!4$E!7D!u
m2Jess*
M9(uEH
M9(uHH
M9(uVH
M9,$uVH
MakeAbsoluteSD
MakeSelfRelativeSD
malloc
MCcQF
Media Type = %ld
memcmp
memcpy
memset
MessageBoxW
Microsoft
Microsoft Corporation
Microsoft.Windows.Storage.VDS.Service
MigrateAssignClearMountPoints()
MigrateAssignClearMountPoints, No mount points.
MountVolume
MPIO_DSM_Path
MPIO_GET_DESCRIPTOR
MS_SM_AdapterInformationQuery
MS_SM_PortInformationMethods
MSiSCSI_InitiatorSessionInfo
MSiSCSI_PortalInfoClass
msvcrt.dll
Name = %s
NetShareAdd
No match in LUN-disk map for Disk {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws] (Unk: %p)
No match in LUN-disk map for LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws]; (Unk: %p)
NotificationThread exiting due to shutdown.
NotificationThread()
NotificationThread, 1, hr=%lX
NotificationThread, 2, hr=%lX
NotificationThread, 3 hr=%lX
NotificationThread, 4, hr=%X
ntdll.dll
NTFS    
NtQueryVolumeInformationFile
NumberOfPorts
o\$PH
o|D;t$D
oaH9|$0
ObjectMap: Wrapper added to map: %p, %p
ObjectMap: Wrapper could not be added to map: %p, %p, error=%ld
oD$ f
Offline Reason = %ld
oL$0f
ole32.dll
OLEAUT32.dll
OpenDevice
OpenProcessToken
OpenSCManagerW
OpenServiceW
OpenThreadToken
OriginalFilename
OSDeviceName
OSUNINST.dll
oT$@f
OutputDebugStringW
p AWH
PA^_^
PA_A^^[]
PA_A^_^]
pA_A^A\_^[]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Partition Type = %lu
PathIdentifier
PathWeight
PdoInformation
PeekMessageW
PortalInformation
PortalType
PortAttributes
PortIndex
PortNumber
PortSpecificAttributes
PortSpecificAttributesMaxSize
PortSpecificAttributesSize
PortState
PortType
PostThreadMessageW
PrimaryPath
ProductName
ProductVersion
ProviderGUID
ProviderType
QueryDosDeviceW
QueryPerformanceCounter
QueryServiceObjectSecurity
ReadFile
RegCloseKey
RegCreateKeyExW
RegDeleteValueW
RegEnumKeyExW
RegGetValueW
RegisterDeviceNotification, 1, error=%ld
RegisterDeviceNotificationW
RegisterServiceCtrlHandlerW
REGISTRY
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReleaseRundownProtection
ReleaseSemaphore
RemoteAddr
RemotePort
removal
RemoveAllFSPropertiesFromMap
RemoveDirectoryW
RemoveEventSource
RemoveFSPropertiesFromMap
RemoveIScsiPersistentTargetW
RemoveIScsiStaticTargetW
RemoveTempVolumeName
RemoveVolumeFromMap: volume not found: %S
Removing LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}[%ws] from LUN-disk map
ReportIScsiPersistentLoginsW
Reserved
ResolveDelayLoadedAPI
ResumeThread
root\wmi
RPCSS
RtlAcquireResourceExclusive
RtlAcquireResourceShared
RtlAdjustPrivilege
RtlCaptureContext
RtlCompareMemory
RtlConvertExclusiveToShared
RtlConvertSharedToExclusive
RtlDeleteResource
RtlInitializeResource
RtlLookupFunctionEntry
RtlReleaseResource
RtlVirtualUnwind
S"]/K
ScsiAddress
ScsiPathId
Service
SessionsList
SetEvent
SetFilePointerEx
SetIScsiIKEInfoW
SetIScsiInitiatorCHAPSharedSecret
SetIScsiTunnelModeOuterAddressW
SetLastError
SetServiceObjectSecurity
SetServiceStatus
SetThreadToken
SetUlongInInstance, 1, hr=%x
SetUnhandledExceptionFilter
SETUPAPI.dll
SetupDiCallClassInstaller
SetupDiDestroyDeviceInfoList
SetupDiEnumDeviceInfo
SetupDiEnumDeviceInterfaces
SetupDiGetClassDevsW
SetupDiGetCustomDevicePropertyW
SetupDiGetDeviceInterfaceDetailW
SetVariantInstance, 1, hr=%x
SetVariantInstance, 2, hr=%x
SetVariantInstance, 3, Failed to set Property '%S': %x
SetVolumeMountPointW
SHDeleteKeyW
SHLWAPI.dll
ShouldSuspendBitlocker
Size = %I64u
Sleep
SM_GetAdapterPortAttributes
SM_RefreshInformation
SmHbaAdapter::GetPort, 2, hr: %x
SmHbaAdapter::GetPort, 3, hr: %x
SmHbaAdapter::GetPort, 4, hr: %x
SmHbaAdapter::GetPort, 5, hr: %x
SmHbaAdapter::GetPort, 6, hr: %x
SmHbaAdapter::GetPort, 7, Failed to SmGetAdapterPortAttributes(%d,%d,...): HBA_STATUS(%d)
SmHbaAdapter::GetPort, 8, hr: %x
SmHbaAdapter::GetPortCount, 2, hr: %x
SmHbaAdapter::GetPortCount, 3, hr: %x
SmHbaAdapter::Initialize, 1, hr: %x
SmHbaAdapter::Initialize, 2, hr: %x
SmHbaAdapter::Initialize, 3, hr: %x
SmHbaAdapter::Initialize, 4, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 1, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 10, Expect method '%S' :: '%S' return non-NULL '%S' when succeeded: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 2, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 3, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 4, Failed to get input argument object for '%S' :: '%S': %x
SmHbaAdapter::SmGetAdapterPortAttributes, 5, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 6, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 7, Failed to call method '%S' :: '%S': %x
SmHbaAdapter::SmGetAdapterPortAttributes, 8, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 9, hr: %x
SmHbaAdapter::SmRefreshInformation, 1, hr: %x
SmHbaAdapter::SmRefreshInformation, 2, Failed to call method '%S' :: '%S': %x
SmHbaAdapterEnum::Initialize, 1, hr=%x
SmHbaAdapterEnum::Initialize, 2, hr=%x
SmHbaAdapterEnum::Initialize, 3, Failed to connect to %S namespace: %x
SmHbaAdapterEnum::Initialize, 4, Failed to create WMI instance enum of %S: %x
SmHbaAdapterEnum::MoveNext, 2, hr=%x
SmHbaAdapterEnum::MoveNext, 3, Failed to IEnumWbemClassObject::Next: %x
SmHbaAdapterEnum::MoveNext, 4, Expect to IEnumWbemClassObject::Next to return non-NULL IWbemClassObject: %x
SmHbaAdapterEnum::MoveNext, 5, hr: %x
SmHbaAdapterPort::GetSasAttributes, 1, hr: %x
SmHbaAdapterPort::GetSasAttributes, 2, hr: %x
SmHbaAdapterPort::GetSasAttributes, 3, hr: %x
SmHbaAdapterPort::GetSasAttributes, 4, Expect '%S' to be SAS, but was '%d': %x
SmHbaAdapterPort::GetSasAttributes, 5, hr: %x
SmHbaAdapterPort::GetSasAttributes, 6, Expect '%S' to be '%d', but was '%d': %x
SmHbaAdapterPort::GetSasAttributes, 7, hr: %x
SmHbaAdapterPort::GetSasAttributes, 8, hr: %x
SmHbaAdapterPort::GetSasAttributes, 9, hr: %x
SmHbaAdapterPort::GetType, 2, hr: %x
SmHbaAdapterPort::GetType, 3, hr: %x
SOFTWARE\Microsoft\Windows NT\CurrentVersion\FveDetect
SOFTWARE\Microsoft\Windows NT\CurrentVersion\FveDetect\Cache
SoftwareProviders
SPT = %lu
srand
srvcli.dll
StartReferenceHistory
StartServiceCtrlDispatcherW
Status
Status = %ld
StopReferenceHistory
StringFileInfo
StringFromGUID2
Supported_LB_Policies
SUVWATAUAVAWH
swscanf_s
System\CurrentControlSet\Services\vds
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ Hc|$pD
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
T$0D;
t$0E3
t$HD9t$ 
t$x9]
T$XE3
t$xM+
t<D9?u
t>fD;2t8H
TargetId
TargetiSCSIName
TerminateProcess
TextAddress
TMP: CUSTOM event received.
TMP: GUID_IO_DEVICE_BECOMING_READY event received.
TMP: GUID_IO_DEVICE_EXTERNAL_REQUEST event received.
TMP: GUID_IO_DISK_LAYOUT_CHANGE event received.
TMP: GUID_IO_MEDIA_EJECT_REQUEST event received.
TMP: GUID_IO_VOLUME_DEVICE_INTERFACE event received.
TMP: GUID_IO_VOLUME_DISMOUNT event received.
TMP: GUID_IO_VOLUME_DISMOUNT_FAILED event received.
TMP: GUID_IO_VOLUME_LOCK event received.
TMP: GUID_IO_VOLUME_LOCK_FAILED event received.
TMP: GUID_IO_VOLUME_MOUNT event received.
TMP: GUID_IO_VOLUME_PHYSICAL_CONFIGURATION_CHANGE event received.
TMP: GUID_IO_VOLUME_UNLOCK event received.
towupper
TPC = %lu
tqfD;2tkH
Translation
u HcA<H
u!9L$`t
u!H;G
u$L97t
u*9Q<|%
u.H!D$(
u/H!D$(
u[A9@
UATAUAVAWH
UATAVH
UAVAWH
uB9D$ uVD
Uknown
UNALLOCATED DISK UNALLOCATED DISK UNALLOCATED DISK
UnhandledExceptionFilter
UnInitializeGlobalResouce
UniqueAdapterId
UniqueSessionId
UNKNOWN
Unknown
UnregisterDeviceNotification
UnregServer
USER32.dll
USVWATAUAVAWH
USVWATAVAWH
USVWAUAVAWH
USVWH
UVWATAUAVAWH
UVWATAVH
UVWAVAWH
UWATAUAVH
UWATAVAWH
UWATH
UWAUAVAWH
UWAVH
UWAWH
VarFileInfo
VDEST
VDS ID= %s
VDS(%X): unexpected failure connecting async wrapper: %X
VDS(0X02040000): RegisterDeviceNotification failed: %lX
VDS(0X02040001): RegisterDeviceNotification failed: %ld
VDS(0X02040002): WM_DEVICECHANGE: wParam=%lX lParam=%ld
VDS(0X02040003): Drive letter notification received, DBTF_MEDIA
VDS(0X02040003): Drive letter notification received: mask: %X
VDS(0X02040004): Volume Notification: %S %s.
VDS(0X02040005): Disk Notification: %S %s.
VDS(0X02040006): Label Change notification received
VDS(0X02040007): Disk layout change notification received
VDS(0X02040008): failed to get volume device info set: %X
VDS(0X02040009): failed to register for volume device notification(%S): %X
VDS(0X0204000A): failed to get volume handle(%S): %X
VDS(0X0204000B): failed to insert volume notification handle to map because of lack of memory.
VDS(0X0204000C): failed to send volume label change notification(%S): %X
VDS(0X0204000D: mount points change notification received.
VDS(0X0204000E): RegisterDeviceNotification failed: %ld
VDS(0X0204000F): CreateThread failed: %X
VDS(0X02040010): PostThreadMessage failed: %X
VDS(0X02040011): Drive letter arrives: %c
VDS(0X02040012): failed to get volume id for %S
VDS(0X02040013): QueryDosDevice failed(%S): %X
VDS(0X02040014: BitLocker full-volume encryption status change notification received.
VDS(0X02040015): failed to send volume change notification(%S): %X
VDS(0X02040016): RegisterDeviceNotification failed: %ld
VDS(0x02070001): failed to get provider: %X
VDS(0x02070002): failed to get IUnknown interface: %X
VDS(0X02080003): failed to get IUnknown interface: %X
VDS(0X02080004): failed to add pack to ObjectMap
VDS(0X020B0000): unexpected provider failure: failed to reset enumerator position: %X.
VDS(0X020B0001): unexpected provider failure: failed to skip enumerator position: %X.
vds.exe
vds.pdb
VdsAllocateEmptyString
VdsAllocateString
VdsCreateInstance() (1)
VdsCreateInstance() (2)
VdsCreateInstance, 1
VdsDisableCOMFatalExceptionHandling
VdsDoesDiskHaveArcPath
VdsHeapAlloc
VdsHeapFree
VdsInitializeCriticalSection
VdsIscsiCacheSessionDevices
VdsIscsiCheckEqualIpAddress
VdsIscsiGetIpAddressFromInstance
VdsIscsiIpAddressToIpsecId
VdsIscsiIpAddressToString
VdsIscsiIpsecIdToIpAddress
VDSProviderDetails
VdsTrace
VdsTraceEx
VdsTraceExW
VdsTraceW
vdsutil.dll
VdsWmiCallMethod
VdsWmiConnectToNamespace
VdsWmiCopyFromVariantByteArray
VdsWmiCreateClassInstance
VdsWmiCreateVariantArray
VdsWmiFindInstanceOfClass
VdsWmiGetByteFromInstance
VdsWmiGetMethodArgumentObject
VdsWmiGetObjectFromInstance
VdsWmiGetObjectInVariantObjectArray
VdsWmiGetUlongFromInstance
VdsWmiGetUlonglongFromInstance
VdsWmiSetObjectInInstance
VdsWmiSetUlongInInstance
VdsWmiSetUlonglongInInstance
Version
VersionId
Virtual Disk Service
VirtualAlloc
VirtualDiskProviders
VirtualFree
VS_VERSION_INFO
VWATAVAWH
VWAVH
WaitForMultipleObjects
WaitForRundownProtectionRelease
WaitForSingleObject
WATAUAVAWH
WATAVH
WAUAVH
WAVAWH
wcscpy_s
wcsncmp
wcsstr
WideCharToMultiByte
WrapObject()
WrapObject, 1
WriteBootCode
WriteFile
x ATAVAWH
x AVH
X UVWATAUAVAWH
xA_A^A]A\_^][
xYtcH
Y&iSan
