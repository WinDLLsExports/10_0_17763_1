 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 A^_^
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 t7H;
 Windows
!\$|H
!|$@H
!|$0D
!|$p3
!D$L3
!t$ 3
!This program cannot be run in DOS mode.
%s#%s(C%02dT%02dL%02d)
%s#%s(P%02dT%02dL%02d)
%s, %lX
%s:%s
%s\%s
%X@%08X
%X@%X
(_^][
(D$ fH
)D$@H9F`u
)D$0H
)L$@A
)L$0D
')N%\
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.xdata
??_FCRtlList@@QEAAXXZ
??_FCRtlMap@@QEAAXXZ
??0?$CVdsHandleImpl@$0?0@@QEAA@XZ
??0CGlobalResource@@QEAA@XZ
??0CPrvEnumObject@@QEAA@XZ
??0CRtlList@@QEAA@P6AXPEAVCRtlEntry@@@Z@Z
??0CRtlMap@@QEAA@KP6AXPEAVCRtlEntry@@@Z1@Z
??0CRtlSharedLock@@QEAA@XZ
??0CVdsAsyncObjectBase@@QEAA@XZ
??0CVdsCallTracer@@QEAA@KPEBD@Z
??0CVdsCriticalSection@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
??0CVdsPnPNotificationBase@@QEAA@XZ
??0CVdsTraceSettings@@QEAA@XZ
??0CVdsUnlockIt@@QEAA@AEAJ@Z
??0CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??1?$CVdsHandleImpl@$0?0@@QEAA@XZ
??1CGlobalResource@@QEAA@XZ
??1CPrvEnumObject@@QEAA@XZ
??1CRtlList@@QEAA@XZ
??1CRtlMap@@UEAA@XZ
??1CRtlSharedLock@@QEAA@XZ
??1CVdsAsyncObjectBase@@QEAA@XZ
??1CVdsCallTracer@@QEAA@XZ
??1CVdsCriticalSection@@QEAA@XZ
??1CVdsPnPNotificationBase@@QEAA@XZ
??1CVdsUnlockIt@@QEAA@XZ
??1CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??4?$CVdsHandleImpl@$0?0@@QEAAPEAXPEAX@Z
??4CRtlList@@QEAAAEAV0@AEAV0@@Z
??8?$CVdsHandleImpl@$0?0@@QEBA_NPEAX@Z
??B?$CVdsHandleImpl@$0?0@@QEAAPEAXXZ
?AcquireRead@CRtlSharedLock@@AEAAXXZ
?AcquireWrite@CRtlSharedLock@@AEAAXXZ
?AllowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Append@CPrvEnumObject@@QEAAJPEAUIUnknown@@@Z
?Attach@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAUtagVARIANT@@@Z
?Begin@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Begin@CRtlMap@@QEAA?AVCRtlMapIter@@XZ
?Cancel@CVdsAsyncObjectBase@@UEAAJXZ
?Clear@CPrvEnumObject@@QEAAXXZ
?Clone@CPrvEnumObject@@UEAAJPEAPEAUIEnumVdsObject@@@Z
?CreateListenThread@CVdsPnPNotificationBase@@AEAAKXZ
?CurrentThreadIsWriter@CRtlSharedLock@@QEAAHXZ
?Detach@CVdsWmiVariantObjectArrayEnum@@QEAAJXZ
?DisallowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Downgrade@CRtlSharedLock@@AEAAXXZ
?End@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Find@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAV2@@Z
?FindPtr@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAPEAV2@@Z
?GetEntry@CRtlListIter@@QEAAPEAVCRtlEntry@@XZ
?GetEntryPointer@CRtlListIter@@QEAAPEAXXZ
?GetNode@CRtlListIter@@QEAAPEAVCRtlListEntry@@XZ
?GetOutputType@CVdsAsyncObjectBase@@QEAA?AW4_VDS_ASYNC_OUTPUT_TYPE@@XZ
?GetWindowHandle@CVdsPnPNotificationBase@@QEAAPEAUHWND__@@XZ
?Initialize@CGlobalResource@@QEAAJXZ
?Initialize@CVdsAsyncObjectBase@@SAKXZ
?Initialize@CVdsPnPNotificationBase@@QEAAKXZ
?Insert@CRtlList@@QEAAHAEAVCRtlListIter@@AEAVCRtlEntry@@@Z
?Insert@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?InsertHead@CRtlList@@QEAAHAEAVCRtlEntry@@@Z
?InsertHeadPointer@CRtlList@@QEAAHPEAX@Z
?InsertPointer@CRtlList@@QEAAHAEAVCRtlListIter@@PEAX@Z
?InsertTail@CRtlList@@QEAAHAEAVCRtlEntry@@@Z
?InsertTailPointer@CRtlList@@QEAAHPEAX@Z
?InsertUnique@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?IsCancelRequested@CVdsAsyncObjectBase@@QEAAHXZ
?IsDone@CRtlListIter@@QEAAHXZ
?IsFinished@CVdsAsyncObjectBase@@QEAAHXZ
?m_ExtraLogging@CVdsTraceSettings@@QEAAHXZ
?m_NoDebuggerLogging@CVdsTraceSettings@@QEAAHXZ
?Next@CPrvEnumObject@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?Next@CRtlListIter@@QEAAAEAV1@XZ
?Next@CRtlMapIter@@QEAAAEAV1@XZ
?Next@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAPEAUIWbemClassObject@@@Z
?NotificationThread@CVdsPnPNotificationBase@@AEAAKPEAX@Z
?NotificationThreadEntry@CVdsPnPNotificationBase@@CAKPEAX@Z
?Prev@CRtlListIter@@QEAAAEAV1@XZ
?QueryStatus@CVdsAsyncObjectBase@@UEAAJPEAJPEAK@Z
?Register@CVdsPnPNotificationBase@@QEAAKPEAU_NotificationListeningRequest@@K@Z
?RegisterHandle@CVdsPnPNotificationBase@@QEAAKPEAXPEAPEAX@Z
?Release@CRtlSharedLock@@AEAAXXZ
?Remove@CRtlList@@QEAAXAEAVCRtlListIter@@@Z
?Remove@CRtlMap@@QEAAHAEAVCRtlEntry@@@Z
?RemoveAll@CRtlList@@QEAAXXZ
?RemoveAll@CRtlMap@@QEAAXH@Z
?Reset@CPrvEnumObject@@UEAAJXZ
?Reset@CVdsWmiVariantObjectArrayEnum@@QEAAJXZ
?SetCompletionStatus@CVdsAsyncObjectBase@@QEAAXJK@Z
?SetOutput@CVdsAsyncObjectBase@@QEAAXU_VDS_ASYNC_OUTPUT@@@Z
?SetOutputType@CVdsAsyncObjectBase@@QEAAXW4_VDS_ASYNC_OUTPUT_TYPE@@@Z
?SetPositionToLast@CPrvEnumObject@@QEAAXXZ
?Signal@CVdsAsyncObjectBase@@QEAAXXZ
?Skip@CPrvEnumObject@@UEAAJK@Z
?Uninitialize@CVdsAsyncObjectBase@@SAXXZ
?Uninitialize@CVdsPnPNotificationBase@@QEAAXXZ
?Unregister@CVdsPnPNotificationBase@@QEAAXPEAU_NotificationListeningRequest@@@Z
?UnregisterHandle@CVdsPnPNotificationBase@@QEAAXPEAX@Z
?Upgrade@CRtlSharedLock@@AEAAXXZ
?WaitImpl@CVdsAsyncObjectBase@@QEAAJPEAJ@Z
?WindowProcEntry@CVdsPnPNotificationBase@@CA_JPEAUHWND__@@I_K_J@Z
?ZeroAsyncOut@CVdsAsyncObjectBase@@QEAAXXZ
@.data
@.didat
@.reloc
@8;t#L
@8|$|
@A^_^
@A_A^A]A\_^]
@SUVWATAUAVAWH
@SUVWAVH
@SUVWH
@SVWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVH
@USWH
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ VATAUAVAWH
\$ WH
\$(E3
\??\Volume{
\\.\MountPointManager
\\?\%c:
\\?\GLOBALROOT
\\?\GLOBALROOT%s
\\?\Volume%s
\ArcName
\Device
\fmifs.dll
\UEXFAT.dll
\UFAT.dll
\UNTFS.dll
\UUDF.dll
__C_specific_handler
__Path
_amsg_exit
_callnewh
_InitializeFMIFSDLL: %s, %lX
_initterm
_purecall
_ui64tow
_vsnprintf
_vsnwprintf
_wcsicmp
_wcsnicmp
_wcstoui64
_wcsupr
_XcptFilter
`.rdata
`A_A^A]A\_^]
{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$@E3
~CVdsPnPNotificationBase: PostThreadMessage failed: %X
040904B0
0A^_^][
0A_A^_
0A_A^A\
0A_A^A\_^
0A_A^A]^]
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
A H9B
A^_^[]
A^_^][
A^A]A\_^
A_A^]
A_A^_
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]^]
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\^
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
AcquireRundownProtection
AddAccessAllowedAce
AddEventSource
AddEventSource()
AddEventSource: GetModuleFileName failed: %X
AddEventSource: RegCreateKey failed: %X
AddEventSource: RegSetValueEx failed(2): %X
AddEventSource: RegSetValueEx failed: %X
ADVAPI32.dll
AllocateAndGetVolumePathName
AllocateAndGetVolumePathName, 1, hr=%lX
AllocateAndGetVolumePathName, 2, hr=%lX
AllocateAndGetVolumePathName, 3, hr=%lX
AllocateAndInitializeSid
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-devices-config-l1-1-1.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
AssignTempVolumeName
AssignTempVolumeName()
ATAVAWH
ATL.DLL
BacksBootVolume
bcd.dll
BcdCloseObject
BcdCloseStore
BcdCopyObject
BcdDeleteElement
BcdDeleteObject
BcdElementMatchesPartition: BcdGetElementDataWithFlags failed with STATUS_INVALID_PARAMETER
BcdElementMatchesPartition: BcdGetElementDataWithFlags failed: %lX
BcdEnumerateElementTypes
BcdEnumerateObjects
BcdGetElementData
BcdGetElementDataWithFlags
BcdObjectMatchesPartition: BcdElementMatchesPartition failed: %lX
BcdObjectMatchesPartition: EnumerateBcdElementTypes failed: %lX
BcdOpenObject
BcdOpenSystemStore
BcdQueryObject
BcdSetElementData
Between4_8GB
Between8_32GB
BootBackedByWim
CBasicDisk::GetDeviceAndMediaType, 2, RAM drive, pathname=%S
CDEFE
CGlobalResource::Initialize: %s, %lX
ChangeBcdMirrorObjectDescription: BcdGetElementData failed to find object description
ChangeBcdMirrorObjectDescription: BcdGetElementData failed: %lX
ChangeBcdMirrorObjectDescription: BcdSetElementData failed: %lX
ChangeBcdMirrorObjectDescription: LoadStringResource failed: %lX
ChangeBcdMirrorObjectDescription: Memory allocation failure
ChH;E
CloseHandle
CM_Get_Device_IDW
CM_Get_Parent
CoCreateGuid
CoCreateInstance
CoFreeStringArray
CoFreeStringArray()
CompanyName
CoSetProxyBlanket
CoTaskMemAlloc
CoTaskMemFree
CPrvEnumObject::~CPrvEnumObject()
CPrvEnumObject::Append()
CPrvEnumObject::Clear()
CPrvEnumObject::Clone()
CPrvEnumObject::CPrvEnumObject()
CPrvEnumObject::Next()
CPrvEnumObject::Reset()
CPrvEnumObject::Skip()
CreateDeviceInfoSet
CreateDeviceInfoSet()
CreateDeviceInfoSet, 1
CreateDeviceInfoSet, 2, %ld
CreateDeviceInfoSet, 3, %ld
CreateDeviceInfoSet, 4, %ld
CreateEventW
CreateFileW
CreateThread
CreateWindowExW
CVdsAsyncObjectBase::~CVdsAsyncObjectBase()
CVdsAsyncObjectBase::Cancel()
CVdsAsyncObjectBase::CVdsAsyncObjectBase()
CVdsAsyncObjectBase::Initialize()
CVdsAsyncObjectBase::Initialize: CoCreateGuid failed: %X
CVdsAsyncObjectBase::Initialize: CreateEvent failed: %X
CVdsAsyncObjectBase::Initialize: VdsInitializeCriticalSection failed: %X.
CVdsAsyncObjectBase::IsFinished()
CVdsAsyncObjectBase::QueryStatus()
CVdsAsyncObjectBase::SetCompletionStatus()
CVdsAsyncObjectBase::Signal()
CVdsAsyncObjectBase::Uninitialize()
CVdsAsyncObjectBase::WaitImpl()
CVdsAsyncObjectBase::WaitImpl: WaitForSingleObject failed: %X
CVdsDiskLUn::FormatPartition: failed to assign a temporary volume name: %X
CVdsDiskLun::FormatPartition: failed to generate a GUID: %X
CVdsPnPNotificationBase::CreateListenThread()
CVdsPnPNotificationBase::CreateListenThread: CreateEvent() failed: %X
CVdsPnPNotificationBase::CreateListenThread: CreateThread() failed: %X
CVdsPnPNotificationBase::CreateListenThread: notification thread failed.
CVdsPnPNotificationBase::CreateListenThread: WaitForMultipleObjects: %X
CVdsPnPNotificationBase::Initialize()
CVdsPnPNotificationBase::NotificationThread()
CVdsPnPNotificationBase::NotificationThread, 1, dwRet=%ld
CVdsPnPNotificationBase::NotificationThread, 2, %ld
CVdsPnPNotificationBase::NotificationThread, 3, %ld
CVdsPnPNotificationBase::NotificationThread, 4, %ld
CVdsPnPNotificationBase::NotificationThreadEntry()
CVdsPnPNotificationBase::Register()
CVdsPnPNotificationBase::Register: SetTimer failed: %X
CVdsPnPNotificationBase::RegisterHandle()
CVdsPnPNotificationBase::RegisterHandler: RegisterNotificationListeningRequest failed: %X
CVdsPnPNotificationBase::Uninitialize()
CVdsPnPNotificationBase::Uninitialize(): failed to wait listening thread to stop.
CVdsPnPNotificationBase::Unregister()
CVdsPnPNotificationBase::Unregister: The notification is not found.
CVdsPnPNotificationBase::UnregisterHandle()
CVdsPnPNotificationBase::UnregisterHandle: UnregisterDeviceNotification(%X) failed: %X
CVdsPnPNotificationBase::WindowProcEntry, 1
CVdsWmiVariantObjectArrayEnum::Attach, 1, hr=%lX
CVdsWmiVariantObjectArrayEnum::Attach, 2, hr=%lX
CVdsWmiVariantObjectArrayEnum::Attach, 3, hr=%lX
CVdsWmiVariantObjectArrayEnum::Next, 1, hr=%lX
CVdsWmiVariantObjectArrayEnum::Next, 2, hr=%lX
CVdsWmiVariantObjectArrayEnum::Next, 3, hr=%lX
D$ E3
D$ fD
d$(E3
D$(E3
d$(E3
D$(E3
d$(E3
D$@!}
D$@E3
D$@f98t
D$`E3
D$0E3
D$0fD
D$8E3
D$HE3
D$pE3
D$XE3
D$xE3
D$xH!\$8E3
D9m#t.H
D9p0t6H
DbgPrintEx
DefineDosDeviceW
DefWindowProcW
DelayLoadFailureHook
DeleteBcdObjects
DeleteBcdObjects: BcdDeleteObject failed: %lX
DeleteBcdObjects: BcdObjectMatchesPartition failed: %lX
DeleteBcdObjects: BcdOpenObject failed: %lX
DeleteBcdObjects: BcdOpenSystemStore failed to find the BCD system store
DeleteBcdObjects: BcdOpenSystemStore failed: %lX
DeleteBcdObjects: EnumerateBcdObjects failed: %lX
DeleteCriticalSection
DeleteDataFromDisplayOrder: BcdGetElementData failed to find display order
DeleteDataFromDisplayOrder: BcdOpenObject for boot manager failed: %lX
DeleteDataFromDisplayOrder: GetBcdDisplayOrder failed: %lX
DeleteNetworkShare
DeleteNetworkShare()
DeleteNetworkShare, 1, status=%lX, path=%s
DeleteNetworkShare, 2, status=%lX, share=%s, path=%s
DeregisterEventSource
DestroyWindow
DeviceIoControl
DisableThreadLibraryCalls
DispatchMessageW
DllMain
E(=csm
E8=csm
EH=csm
Eh=csm
EnableVolumeCompression
ENTER %s
EnterCriticalSection
EnumerateBcdElementTypes: BcdEnumerateElementTypes failed: %lX
EnumerateBcdElementTypes: Memory allocation failure
EnumerateBcdObjects: BcdEnumerateObjects failed: %lX
EnumerateBcdObjects: Memory allocation failure
en-US
Error loading operating system
Event logged: %X
EventMessageFile
EX=csm
Ex=csm
EXIT GetBootDiskNumber, hr=%lX
EXIT GetBootVolumeHandle, hr=%lX
f;D$@
f;D$P
f9,Cu
f9\~ u
f94Bu
fA9<^u
Failed to get system directory
Failed to initialize fmifs module
Failed to load EnableVolumeCompression function from FMIFS library
Failed to load FormatEx function from FMIFS library
Failed to load GetDefaultFileSystem function from FMIFS library
Failed to load QueryDeviceInformation function from FMIFS library
Failed to load QueryDeviceInformationByHandle function from FMIFS library
Failed to load the FMIFS library
fC;D%
fC;D,
fD9,Bu
fD9,Gu
fD9,Ou
fD9<~u
fD9<Fu
fD94Au
fD98t
fD9dM
fE9,pu
fF9$Fu
FhH;D$Hu
FhH;E
FileDescription
FileVersion
FormatEx2
FreeAddrInfoW
FreeLibrary
FreeSid
fSfSfUfh
GarbageCollectDriveLetters
GarbageCollectDriveLetters()
GarbageCollectDriveLetters, 1
GarbageCollectDriveLetters, 2, error=%ld
GarbageCollectDriveLetters, 3, device(%s), %ld
GarbageCollectDriveLetters, 4
GetAdapterPrefix()
GetAdapterPrefix, 1, error=%ld
GetAdapterPrefix, 10, error=%ld
GetAdapterPrefix, 11, error=%ld
GetAdapterPrefix, 12, error=%ld
GetAdapterPrefix, 2, error=%ld
GetAdapterPrefix, 3, error=%ld
GetAdapterPrefix, 4, error=%ld
GetAdapterPrefix, 5, error=%ld
GetAdapterPrefix, 6, error=%ld
GetAdapterPrefix, 7, error=%ld
GetAdapterPrefix, 8, error=%ld
GetAdapterPrefix, 9, error=%ld
GetAddrInfoW
GetBcdDisplayOrder: BcdGetElementData failed: %lX
GetBcdDisplayOrder: Memory allocation failure
GetBootDiskNumber
GetBootDiskNumber, 1, hr=%lX
GetBootDiskNumber, 2, hr=%lX
GetBootDiskNumber, 3, hr=%lX
GetBootDiskNumber, 5, hr=%lX
GetBootDiskNumber, 6, hr=%lX
GetBootDiskNumber: Memory allocation failure
GetBootFromDiskNumber
GetBootFromDiskNumber, 1, hr=%lX
GetBootFromDiskNumber, 2, hr=%lX
GetBootFromDiskNumber: GetDeviceNumber, Name=%s hr=%lX
GetBootFromDiskNumber: NtQuerySystemInformation failed: %lX
GetBootFromDiskNumber: OpenDevice, Name=%s hr=%lX
GetBootFromDiskNumber: StringCchCopyN failed: %lX
GetBootVolumeHandle
GetBootVolumeHandle, 1, hr=%lX
GetBootVolumeHandle, 2, hr=%lX
GetBootVolumeHandle, 3, hr=%lX
GetBootVolumeHandle, 5, Name=%s hr=%lX
GetBootVolumeHandle, 6, Name=%s hr=%lX
GetBootVolumeHandle, 7, Name=%s hr=%lX
GetComputerNameExW
GetComputerNameW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDefaultAlignment
GetDefaultAlignment()
GetDefaultAlignment, 1, %lX, pulAlign=%p, ullDiskSize=%lI64, pbDefault=%p
GetDefaultAlignment, 2, %lX
GetDefaultAlignment, 3
GetDefaultAlignment, 4, %lX
GetDefaultFileSystem
GetDeviceAndMediaType
GetDeviceAndMediaType()
GetDeviceAndMediaType, 1, error=%ld
GetDeviceId
GetDeviceId()
GetDeviceId, 1, error=%ld
GetDeviceId, 2, error=%ld
GetDeviceLocation
GetDeviceLocation()
GetDeviceLocation, 1, error=%ld
GetDeviceLocation, 2, error=%ld
GetDeviceLocation, 3, error=%ld
GetDeviceLocation, 4, error=%ld
GetDeviceLocationEx
GetDeviceLocationEx()
GetDeviceLocationEx, 0, error=%ld
GetDeviceLocationEx, 1, error=%ld
GetDeviceLocationEx, 2, error=%ld
GetDeviceLocationEx, 3, error=%ld
GetDeviceLocationEx, 4, error=%ld
GetDeviceLocationEx, 5, error=%ld
GetDeviceLocationEx, 6, pwszLocationPath=NULL
GetDeviceLocationEx, 9, Unsupported bus type=%d
GetDeviceLocationPath
GetDeviceLocationPath()
GetDeviceLocationPath, 1, error=%ld
GetDeviceLocationPath, 2, error=%ld
GetDeviceLocationPath, 3, pwszAdapterPrefix=NULL
GetDeviceLocationPath, 4, Unexpected bus type
GetDeviceLocationPath, 5, error=%ld
GetDeviceLocationPath, 6, Unsupported bus type
GetDeviceManufacturerInfo
GetDeviceManufacturerInfo()
GetDeviceManufacturerInfo, 1, error=%ld, line=%ld
GetDeviceName
GetDeviceName()
GetDeviceName, 1, error=%X
GetDeviceName, 2, error=%lX
GetDeviceName, 3, error=%ld
GetDeviceNumber
GetDeviceNumber()
GetDeviceNumber, 1, error=%ld
GetDeviceRegistryPropertyByInfo
GetDeviceRegistryPropertyByInfo() (1)
GetDeviceRegistryPropertyByInfo(1): SetupDiGetDeviceRegistryProperty()(1) failed: %X
GetDeviceRegistryPropertyByInst
GetDeviceRegistryPropertyByInst() (2)
GetDeviceRegistryPropertyByInst(2): CM_Get_Device_IDW() failed: %X
GetDeviceRegistryPropertyByInst(2): SetupDiCreateDeviceInfoList() failed: %X
GetDevicesForIScsiSessionW
GetDiskFlags
GetDiskFlags()
GetDiskFreeSpaceExW
GetDiskIdentifiers
GetDiskLayout
GetDiskLayout()
GetDiskLayout: DeviceIoControl failed: %X
GetDiskLayout: Out of memory.
GetDiskOfflineReason
GetDiskOfflineReason()
GetDiskRedundancyCount
GetDriveTypeW
GetFileSystemRecognitionName
GetFileSystemRecognitionName()
GetFileSystemRecognitionName, 1, hDevice=%p, ppwszFileSystemName=%p
GetFileSystemRecognitionName, 2, error=%ld
GetFileSystemRecognitionName, 2, file system does not support file system recognition
GetFileSystemRecognitionName, 3, hrRet=%lX
GetFileSystemRecognitionName, 4, error=%ld
GetFMIFSEnableCompressionRoutine
GetFMIFSFormatEx2Routine
GetFMIFSGetDefaultFilesystemRoutine
GetFMIFSQueryDeviceInfo
GetFMIFSQueryDeviceInfoByHandle
GetInterfaceDetailData
GetInterfaceDetailData() (1)
GetInterfaceDetailData, 1, error=%ld
GetInterfaceDetailData, 2, error=%ld
GetInterfaceDetailData, 3, error=%ld
GetIsRemovable
GetIsRemovable()
GetIsRemovable: IOCTL_STORAGE_GET_HOTPLUG_INFO failed: %X
GetLastError
GetLengthSid
GetMediaGeometry
GetMediaGeometry()
GetMediaGeometry(2)
GetMediaGeometry(2), 1
GetMediaGeometry(2), 2
GetMediaGeometry(2), 3, error=%ld
GetMediaGeometryEx
GetMediaGeometryEx()
GetMessageW
GetModuleFileNameW
GetModuleHandleW
GetNativeSystemInfo
GetPartitionInformation
GetPartitionInformation()
GetProcAddress
GetProcessHeap
GetRegistryValue
GetRegistryValue()
GetRegistryValue: RegOpenKeyExW failed to open %s key(%lX)
GetRegistryValue: RegQueryValueEx failed(%s) (2):%lX
GetRegistryValue: RegQueryValueEx(%s) failed: %lX
GetStorageAccessAlignmentProperty
GetStorageAccessAlignmentProperty()
GetStorageAccessAlignmentProperty, 1, error=%ld
GetSystemDirectoryW
GetSystemTimeAsFileTime
GetSystemVolumeHandle
GetSystemVolumeHandle, 1, hr=%lX
GetSystemVolumeHandle, 2, hr=%lX
GetSystemVolumeHandle: NtQuerySystemInformation failed: %lX
GetSystemVolumeHandle: OpenDevice, Name=%s hr=%lX
GetSystemVolumeHandle: StringCchCopyN failed: %lX
GetTickCount
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetVolumeDiskExtentInfo
GetVolumeDiskExtentInfo()
GetVolumeDiskExtentInfo, 1, hWin32 error=%ld
GetVolumeDiskExtentInfo, 2, hWin32 error=%ld
GetVolumeDiskExtentInfo, 3, hWin32 error=%ld
GetVolumeGuidPath()
GetVolumeGuidPath, 1, MountPoint=%p, Path=%p, Output=%p
GetVolumeGUIDPath, 2, hr=%lX
GetVolumeGUIDPath, 3
GetVolumeGuidPathnames
GetVolumeGUIDPathnames()
GetVolumeGUIDPathnames, 1, hr=%lX, DeviceName=%p, Count=%p, Array=%p
GetVolumeGUIDPathnames, 2, hr=%lX
GetVolumeGUIDPathnames, 3, hr=%lX
GetVolumeGUIDPathnames, 4, hr=%lX
GetVolumeGUIDPathnames, 5, hr=%lX
GetVolumeGUIDPathnames, 6, hr=%lX
GetVolumeGUIDPathnames, 7, hr=%lX
GetVolumeGUIDPathnames, 8, hr=%lX
GetVolumeGUIDPathnames, 9
GetVolumeName
GetVolumeName()
GetVolumeName, 1, hr=%lX, Device=%p, Volume=%p, count=%d
GetVolumeName, 2, hr=%lX
GetVolumeName, 3, hr=%lX
GetVolumeName, 4, hr=%lX
GetVolumeName, 5, error=%ld
GetVolumeName, 6, hr=%lX
GetVolumePath
GetVolumePathNameW
GetVolumeSize
GetVolumeSize()
GetVolumeUniqueId
GetVolumeUniqueId, 1, error=%ld
GetVolumeUniqueId, 3, error=%ld
GetVolumeUniqueId, 4, error=%ld
GetVolumeUniqueId, 5, error=%ld
GetVolumeUniqueId,2, error=%ld
GetWindowLongPtrW
Global resource is already initialized
Global resource is not initialized
GreaterThan32GB
GuidToString
GuidToString, 1
GuidToString, 2, hr=%lX
h VWATAUAVH
H!\$ H
H!\$ I
H!\$(H
H!\$8H
H!|$8H
H!D$8E3
H!t$ H
H!t$(E3
H!uHH
H!x(H!x0H!x H!x
H;A$u
H9;tU
H9C`H
H9C`u
H9F`H
H9F`u
HeapAlloc
HeapFree
HH!\$8H
I;H,u
I9F`u
I9N`I
InitializeAcl
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeRundownProtection
InitializeSecurityDescriptor
InitializeSecurityDescriptorHelper
InitializeSecurityDescriptorHelper()
InstanceName
InternalName
Invalid partition table
InvalidateDiskCache
InvalidateDiskCache, 1, error=%lX
InvalidateDiskCache, 2, error=%ld
IoctlMountmgrQueryPointsDevicePath
IoctlMountmgrQueryPointsDevicePath()
IoctlMountmgrQueryPointsDevicePath, 1, Device = %p, Output = %p
IoctlMountmgrQueryPointsDevicePath, 2, hr=%lX
IoctlMountmgrQueryPointsDevicePath, 3, hr=%lX
IoctlMountmgrQueryPointsDevicePath, 4, error=%ld
IoctlMountmgrQueryPointsDevicePath, 5, hr=%lX
IoctlMountmgrQueryPointsDevicePath, 6, error=%ld
IoctlMountmgrQueryPointsDevicePath, 7, error=%ld
IpV4Address
IpV6Address
IpV6FlowInfo
IpV6ScopeId
IsClientSKU
ISCSI_IP_Address
iscsidsc.dll
IsDebuggerPresent
IsDeviceFullyInstalled
IsDeviceFullyInstalled: device not installed yet: %d
IsDeviceFullyInstalled: failed to get device state: %S
IsDiskClustered
IsDiskClustered()
IsDiskCurrentStateReadOnly
IsDiskCurrentStateReadOnly()
IsDiskCurrentStateReadOnly, 1, error=%ld
IsDiskCurrentStateReadOnly, 2, error=%ld
IsDiskCurrentStateReadOnly, DISK IS READ ONLY
IsDiskCurrentStateReadOnly, DISK IS WRITABLE
IsDiskReadOnly
IsDiskReadOnly()
IsDriveLetter
IsEfiFirmware
IsLocalComputer
IsLocalComputer()
IsLocalComputer: GetComputerName() failed: %X
IsLocalComputer: GetComputerNameEx() failed: %X
IsLocalComputer: NetWkstaGetInfo failed: %X
IsMediaPresent
IsMediaPresent()
IsNoAutoMount
IsNoAutoMount()
IsNoAutoMount: CreateFile failed: %X
IsNoAutoMount: DeviceIoControl failed: %X
IsRamDrive
IsRamDrive()
IsRamDrive, 1
IsRamDrive, 2
IsRamDrive, 3
IsRamDrive, 4
IsRunningOnAMD64
IsVdsLoggingEnabled
IsWinPE
IsWinPE()
J I;H4u
jf9|$`u
KillTimer
L$ E3
L$ SUVWH
l$ VWAVH
l$(E3
L$(E3
L$@f;D$H@
L$@fD
L$@H3
L$`H3
L$0H3
L$HE3
L$hH3
L$pH3
L$PI!>
L$XH3
LcA<E3
LEAVE %s
LeaveCriticalSection
LegalCopyright
LessThan4GB
LoadLibraryExW
LoadStringResource, 1
LoadStringResource, 2
LoadStringResource: Memory allocation failure
LoadStringW
LockDismountVolume
LockDismountVolume()
LockDismountVolume, 1, %ld
LockDismountVolume, 2, win32 error=%ld
LockVolume
LockVolume 1, win32 error=%ld
LockVolume 2, win32 error=%ld
LockVolume()
LogError
LogError, 1, hr=%lX
LogEvent
LogEvent()
LoggingFlags
LogInfo
LogInfo, 1, hr=%lX
LogWarning
LogWarning, 1, hr=%lX
lstrlenW
m_CriticalSection released
malloc
mbstowcs_s
memcmp
memcpy
memmove
memset
Microsoft
Microsoft Corporation
MirrorBcdObjects
MirrorBcdObjects: BcdCopyObject failed: %lX
MirrorBcdObjects: BcdGetElementData failed to find display order
MirrorBcdObjects: BcdObjectMatchesPartition failed: %lX
MirrorBcdObjects: BcdOpenObject failed: %lX
MirrorBcdObjects: BcdOpenObject for boot manager failed: %lX
MirrorBcdObjects: BcdOpenSystemStore failed to find the BCD system store
MirrorBcdObjects: BcdOpenSystemStore failed: %lX
MirrorBcdObjects: BcdQueryObject failed: %lX
MirrorBcdObjects: BcdSetElementData failed: %lX
MirrorBcdObjects: ChangeBcdMirrorObjectDescription failed: %lX
MirrorBcdObjects: EnumerateBcdObjects failed: %lX
MirrorBcdObjects: GetBcdDisplayOrder failed: %lX
MirrorBcdObjects: Memory allocation failure
MirrorBcdObjects: PointBcdObjectToMirrorPartition failed: %lX
Missing operating system
MountVolume
MountVolume()
MountVolume: failed to mount volume %S: %ld
MSiSCSI_InitiatorSessionInfo
msvcrt.dll
MultiByteToWideChar
NetApiBufferFree
NetShareDel
NetShareEnum
netutils.dll
NetWkstaGetInfo
NtClose
ntdll.dll
NtOpenDirectoryObject
NtOpenFile
NtQueryDirectoryObject
NtQuerySystemInformation
o\$PH
oD$ f
oL$0f
OLEAUT32.dll
OpenDevice
OpenDevice()
OpenDevice, 1, (%S) error=%ld
OpenDevice: CreateFile(%S) failed: %X
OpenDevice:, 1, %S
OriginalFilename
oT$@f
OutputDebugStringW
p WATAUAVAWH
p WAVAWH
PA_A^A]A\_^]
PARTITION
PdoInformation
PointBcdElementToMirrorPartition: BcdGetElementDataWithFlags failed: %lX
PointBcdElementToMirrorPartition: BcdSetElementData failed: %lX
PointBcdObjectToMirrorPartition: EnumerateBcdElementTypes failed: %lX
PointBcdObjectToMirrorPartition: PointBcdElementToMirrorPartition failed: %lX
Port%dPath%dTarget%dLun%d
PortNumber
PostThreadMessageW
ProductName
ProductVersion
QueryDeviceInformation
QueryDeviceInformationByHandle
QueryDosDeviceW
QueryObjects
QueryPerformanceCounter
QueryVolPersistentState
RDISK
ReadFile
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegisterClassW
RegisterDeviceNotificationW
RegisterEventSourceW
RegisterProvider
RegisterProvider()
RegisterProvider, 1, %lX
RegisterProvider, 2, %lX
RegisterProvider, 3, %lX
RegisterProvider, 4, %lX
RegisterTraceGuidsW
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReInitializeRundownProtection
ReleaseRundownProtection
RemoveEventSource
RemoveEventSource()
RemoveEventSource: RegDeleteKey failed: %X
RemoveTempVolumeName
RemoveTempVolumeName()
RemoveTempVolumeName, 1
RemoveTempVolumeName, 2, device=%s
RemoveTempVolumeName, 3, device=%s, error=%ld
ReportEventW
ResetEvent
ResolveDelayLoadedAPI
RtlAcquireResourceExclusive
RtlAcquireResourceShared
RtlCaptureContext
RtlCompareString
RtlCompareUnicodeStrings
RtlConvertExclusiveToShared
RtlConvertSharedToExclusive
RtlDeleteElementGenericTableAvl
RtlDeleteResource
RtlEnumerateGenericTableAvl
RtlEnumerateGenericTableWithoutSplayingAvl
RtlInitializeGenericTableAvl
RtlInitializeResource
RtlInitUnicodeString
RtlInsertElementGenericTableAvl
RtlLookupElementGenericTableAvl
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlReleaseResource
RtlVirtualUnwind
RundownCompleted
ScsiAddress
ScsiPathId
SessionsList
SetDiskLayout
SetDiskLayout()
SetDiskLayout: DeviceIoControl() failed: %X
SetEvent
SetFilePointer
SetLastError
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetTimer
SetUnhandledExceptionFilter
SETUPAPI.dll
SetupDiCreateDeviceInfoList
SetupDiDestroyDeviceInfoList
SetupDiEnumDeviceInfo
SetupDiGetClassDevsW
SetupDiGetDeviceInstanceIdW
SetupDiGetDeviceInterfaceDetailW
SetupDiGetDevicePropertyW
SetupDiGetDeviceRegistryPropertyW
SetupDiOpenDeviceInfoW
SetupDiOpenDeviceInterfaceW
SetWindowLongPtrW
Sleep
srvcli.dll
StartReferenceHistory
StopReferenceHistory
String concatenation failed
StringFileInfo
StringFromGUID2
SymbolicLink
SYSTEM\CurrentControlSet\Control\MiniNT
SYSTEM\CurrentControlSet\Services\EventLog\System
System\CurrentControlSet\Services\vds\Alignment
SYSTEM\CurrentControlSet\Services\vds\DebugLog
szErr
t$ UWAVH
t$ WH
t$(E3
T$@E3
t$0E3
T$0E3
T$0Lc
t$PE3
t(95e
t(95z
TargetId
TCPAu2
TerminateProcess
TextAddress
Time Out: id=%ld, offset=%I64d
TraceMessage
TranslateMessage
Translation
tRH!\$8H
TypesSupported
u HcA<H
u6fD;
UATAUAVAWH
UAVAWH
UnhandledExceptionFilter
UnInitializeGlobalResouce
UniqueAdapterId
UniqueSessionId
UNKNOWN
Unkown Error
UnregisterClassW
UnregisterDeviceNotification
UnregisterProvider
UnregisterProvider: failed to get IVdsAdmin interface: %X
UnregisterTraceGuids
USER32.dll
USVWATAUAVAWH
uU!E(L
UVAUAVAWH
UVWATAUAVAWH
UVWAVAWH
UWATAVAWH
UWAVH
VarFileInfo
VDS Notification Thread Hidden Window %s
VDS Notification Thread Hidden Window {00000000-0000-0000-0000-000000000000}
VDS(PID:%ld,TID:%ld) Assertion Failed: %S(%d): %S
VdsAllocateEmptyString
VdsAllocateEmptyString()
VdsAllocateString
VdsAllocateString()
VdsAssert
VdsDisableCOMFatalExceptionHandling
VdsDisableCOMFatalExceptionHandling, CoCreateInstance of CLSID_GlobalOptions failed with HRESULT=0x%08lX
VdsDisableCOMFatalExceptionHandling, Set of COMGLB_EXCEPTION_HANDLING failed with HRESULT=0x%08lX
VdsDoesDiskHaveArcPath
VdsDoesDiskHaveArcPath, 1: error=%ld
VdsDoesDiskHaveArcPath, 2: status=0x%08lX, error=%ld
VdsDoesDiskHaveArcPath, 3: error=%ld
VdsDoesDiskHaveArcPath, 4: status=0x%08lX, error=%ld
VdsDoesDiskHaveArcPath, 5: status=0x%08lX, error=%ld
VdsDoesDiskHaveArcPath, 6: error=%ld
VdsDoesDiskHaveArcPath, Found arc name %S
VdsHeapAlloc
VdsHeapFree
VdsInitializeCriticalSection
VdsInitializeCriticalSection: InitializeCriticalSectionAndSpinCount() failed.
VdsIscsiCacheSessio0nDevices, 1, hr: %x
VdsIscsiCacheSessio0nDevices, 2, hr: %x
VdsIscsiCacheSessio0nDevices, 3, hr: %x
VdsIscsiCacheSessio0nDevices, 4, hr: %x
VdsIscsiCacheSessio0nDevices, 5, hr: %x
VdsIscsiCacheSessio0nDevices, 6, hr: %x
VdsIscsiCacheSessio0nDevices, 7, hr: %x
VdsIscsiCacheSessionDevices
VdsIscsiCacheSessionDevices()
VdsIscsiCacheSessionDevices, 10
VdsIscsiCacheSessionDevices, 8
VdsIscsiCacheSessionDevices, 9
VdsIscsiCacheSessionDevices, hr: %x
VdsIscsiCheckEqualIpAddress
VdsIscsiCheckEqualIpAddress()
VdsIscsiCheckEqualIpAddress, 1, hr: %x
VdsIscsiCheckEqualIpAddress, 2, hr: %x
VdsIscsiCheckEqualIpAddress, 3
VdsIscsiCheckEqualIpAddress, 5
VdsIscsiCheckEqualIpAddress, 7
VdsIscsiGetIpAddressFromInstance
VdsIscsiGetIpAddressFromInstance()
VdsIscsiGetIpAddressFromInstance, 1, hr=%lX
VdsIscsiGetIpAddressFromInstance, 2, hr=%lX
VdsIscsiGetIpAddressFromInstance, 3, hr=%lX
VdsIscsiGetIpAddressFromInstance, 4, hr=%lX
VdsIscsiGetIpAddressFromInstance, 5, hr=%lX
VdsIscsiGetIpAddressFromInstance, 6, hr=%lX
VdsIscsiIpAddressToIpsecId
VdsIscsiIpAddressToIpsecId()
VdsIscsiIpAddressToIpsecId, 1, hr=%lX
VdsIscsiIpAddressToIpsecId, 2, hr=%lX
VdsIscsiIpAddressToIpsecId, 3, hr=%lX
VdsIscsiIpAddressToIpsecId, 4, hr=%lX
VdsIscsiIpAddressToIpsecId, 5, hr=%lX
VdsIscsiIpAddressToString
VdsIscsiIpAddressToString()
VdsIscsiIpAddressToString, 1, %lX
VdsIscsiIpAddressToString, 1.5
VdsIscsiIpAddressToString, 2
VdsIscsiIpAddressToString, 3
VdsIscsiIpAddressToString, 4
VdsIscsiIpsecIdToIpAddress
VdsIscsiIpsecIdToIpAddress()
VdsIscsiIpsecIdToIpAddress, 0
VdsIscsiIpsecIdToIpAddress, 1
VdsIscsiIsIscsiLun
VdsIscsiIsIscsiLun()
VdsIscsiIsIscsiLun, 1, hr: %x
VdsIscsiIsIscsiLun, 2, hr: %x
VdsIscsiIsIscsiLun, 3, hr: %x
VdsIscsiIsIscsiLun, 4, hr: %x
VdsIscsiIsIscsiLun, 5, hr: %x
VdsIscsiIsIscsiLun, 6, hr: %x
VdsIscsiIsIscsiLun, 7, hr: %x
VdsIscsiIsIscsiLun, hr: %x
VdsIscsiSetIpAddressInInstance
VdsIscsiSetIpAddressInInstance()
VdsIscsiSetIpAddressInInstance, 1, hr: %x
VdsIscsiSetIpAddressInInstance, 2, hr: %x
VdsIscsiSetIpAddressInInstance, 2.5, hr=%lX
VdsIscsiSetIpAddressInInstance, 3, hr: %x
VdsIscsiSetIpAddressInInstance, 4, hr: %x
VdsIscsiSetIpAddressInInstance, 5, hr: %x
VdsIscsiSetIpAddressInInstance, 6, hr: %x
VdsIscsiSetIpAddressInInstance, 7, hr: %x
VdsTrace
VdsTraceEx
VdsTraceExHelper
VdsTraceExW
VdsTraceExWHelper
VdsTraceW
vdsutil.dll
vdsutil.pdb
vdsutil::GetDiskFlags, 1, Pagefile=%p, HiberFile=%p, Crashdump=%p
vdsutil::GetDiskFlags, 2, error=%ld
vdsutil::GetDiskFlags, CRASHDUMP FILE
vdsutil::GetDiskFlags, HIBERNATION FILE
vdsutil::GetDiskFlags, PAGEFILE
vdsutil::GetDiskOfflineReason, 1, DiskOfflineReason=%p, hDevice=%ld
vdsutil::GetDiskOfflineReason, 2, error=%ld
vdsutil::GetDiskOfflineReason, Offline Reason=%d
vdsutil::IsDiskClustered, 1, Clustered=%p, CSV=%p, Maintenance=%p, Online=%p
vdsutil::IsDiskClustered, 2, error=%ld
vdsutil::IsDiskClustered, 3, error=%ld
vdsutil::IsDiskClustered, CLUSTERED
vdsutil::IsDiskClustered, CSV
vdsutil::IsDiskClustered, MAINTENANCE
vdsutil::IsDiskClustered, NOT CLUSTERED
vdsutil::IsDiskClustered, OFFLINE
vdsutil::IsDiskClustered, ONLINE
vdsutil::IsDiskReadOnly, 1, error=%ld
vdsutil::IsDiskReadOnly, 2, error=%ld
vdsutil::IsDiskReadOnly, disk is read only
vdsutil::IsDiskReadOnly, disk is writable
VdsWmiCallMethod
VdsWmiCallMethod, 1, hr=%lX
VdsWmiCallMethod, 2, hr=%lX
VdsWmiConnectToNamespace
VdsWmiConnectToNamespace, 1, hr=%lX
VdsWmiConnectToNamespace, 2, hr=%lX
VdsWmiConnectToNamespace, 3, hr=%lX
VdsWmiCopyFromVariantByteArray
VdsWmiCopyFromVariantByteArray, 1, hr=%lX
VdsWmiCopyFromVariantByteArray, 2, hr=%lX
VdsWmiCopyFromVariantByteArray, 3, hr=%lX
VdsWmiCopyFromVariantByteArray, 4, hr=%lX
VdsWmiCopyFromVariantByteArray, 5, hr=%lX
VdsWmiCopyToVariantByteArray
VdsWmiCopyToVariantByteArray, 1, hr=%lX
VdsWmiCopyToVariantByteArray, 2, hr=%lX
VdsWmiCopyToVariantByteArray, 3, hr=%lX
VdsWmiCreateClassInstance
VdsWmiCreateClassInstance, 1, hr=%lX
VdsWmiCreateClassInstance, 2, hr=%lX
VdsWmiCreateVariantArray
VdsWmiCreateVariantArray, 1, hr=%lX
VdsWmiFindInstanceOfClass
VdsWmiFindInstanceOfClass, 1, hr=%lX
VdsWmiGetBoolFromInstance
VdsWmiGetBoolFromInstance, 1, hr=%lX
VdsWmiGetByteFromInstance
VdsWmiGetByteFromInstance, 1, hr=%lX
VdsWmiGetByteInVariantByteArray
VdsWmiGetByteInVariantByteArray, 2, hr=%lX
VdsWmiGetByteInVariantByteArray, 3, hr=%lX
VdsWmiGetByteInVariantByteArray, 4, hr=%lX
VdsWmiGetByteInVariantByteArray, 5, hr=%lX
VdsWmiGetByteInVariantByteArray,1, hr=%lX
VdsWmiGetMethodArgumentObject
VdsWmiGetMethodArgumentObject, 1, hr=%lX
VdsWmiGetMethodArgumentObject, 2, hr=%lX
VdsWmiGetMethodArgumentObject, 3, hr=%lX
VdsWmiGetObjectFromInstance
VdsWmiGetObjectFromInstance, 1, hr=%lX
VdsWmiGetObjectInVariantObjectArray
VdsWmiGetObjectInVariantObjectArray, 1, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 2, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 3, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 4, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 5, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 6, hr=%lX
VdsWmiGetUlongFromInstance
VdsWmiGetUlongFromInstance, 1, hr=%lX
VdsWmiGetUlonglongFromInstance
VdsWmiGetUlonglongFromInstance, 1, hr=%lX
VdsWmiSetBoolInInstance
VdsWmiSetBoolInInstance, 1, hr=%lX
VdsWmiSetByteInInstance
VdsWmiSetByteInInstance, 1, hr=%lX
VdsWmiSetObjectInInstance
VdsWmiSetObjectInInstance, 1, hr=%lX
VdsWmiSetObjectInInstance, 2, hr=%lX
VdsWmiSetStringInInstance
VdsWmiSetStringInInstance, 1, hr=%lX
VdsWmiSetStringInInstance, 2, hr=%lX
VdsWmiSetUlongInInstance
VdsWmiSetUlongInInstance, 1, hr=%lX
VdsWmiSetUlonglongInInstance
VdsWmiSetUlonglongInInstance, 1, hr=%lX
VdsWmiSetUlonglongInInstance, 2, hr=%lX
VerifyVersionInfoW
VerSetConditionMask
Virtual Disk Service Utility Library
VS_VERSION_INFO
VWATAVAWH
VWAVH
WaitForMultipleObjects
WaitForRundownProtectionRelease
WaitForRundownProtectionRelease:Aborting wait and terminating process.WaitBlock.Count = %d
WaitForRundownProtectionRelease:CreateEvent failed Error = %x
WaitForRundownProtectionRelease:WaitForSingleObject failed Error = %x
WaitForSingleObject
WATAUAVAWH
WAVAWH
wcsncmp
wcsstr
WideCharToMultiByte
wkscli.dll
WriteBootCode
WriteBootCode()
WriteBootCode, 1
WriteBootCode, 2: %ld
WriteBootCode, 3: %ld
WriteBootCode, 4: %ld
WriteBootCode, 5: %ld
WriteBootCode, Boot code takes more than a sector (%d bytes)
WriteBootCode[IOCTL_DISK_GET_DRIVE_GEOMETRY] %ld
WriteFile
WS2_32.dll
WSAAddressToStringW
x ATAVAWH
x AVH
x AWH
x UATAUAVAWH
xA_A^A]A\_^][
y*H9}
yH9\$@u
