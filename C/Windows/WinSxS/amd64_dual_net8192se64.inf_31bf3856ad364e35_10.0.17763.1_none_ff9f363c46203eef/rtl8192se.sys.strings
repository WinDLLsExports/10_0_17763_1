------------
------------------
-------------------------------------
-----------------------------------------
------------------------------------------
------------------------------------------------------------
 -------------------------
       - ACI(2bit)=0x%X
       - ECWmax(4bit)=0x%X
       - ECWmin(4bit)=0x%X
     00
     TXOPLimit = 0x%04X
   - ACM(1bit)=0x%X
   - AIFSN(4bit)=0x%X
   0000
  00000
 -- failed
  Number of ARGUMENT is less than 3
  RTL_AllocateMemory_count = %d
  RTL_AllocateMemory_Len = %d
  RTL_AllocateSharedMemory_count = %d
  RTL_FreeMemory_count = %d
  RTL_FreeMemory_Len = %d
  RTL_FreeSharedMemory_count  = %d
 %-15s = 0
 %-15s = 1
 %-15s = 10
 %-15s = 11
 %-15s = 12
 %-15s = 13
 %-15s = 14
 %-15s = 15
 %-15s = 16
 %-15s = 2
 %-15s = 3
 %-15s = 4
 %-15s = 5
 %-15s = 6
 %-15s = 7
 %-15s = 8
 %-15s = 9
 %s = %ld
 %s=%ld
 (] : 
 (Size) : Num of decimal dword max size < 4096
 (SIze): DEC 0-64.
 (xxx) --> Optional argument
 ...... Future use 
 ...... Future use.
 [dbg_comp_bit]: If arg1=40, decimal value for debug comp bit
 [Dbg_Type] : Decimal -->45/40/ 0-??
 [dbg_type]: If arg1=0-39 This element = debug glag value(HEX)
 [dbg_type]: If arg1=40 This element 1/0=Enable/Disable DBG_COMP
 [dm  ] <Type> <Arg1>
 [dm  ] <Type> <Arg1> (Arg...)
 [eepr  ] <Addr> (Size)
 [Flag_Type] : Decimal 0-39=RTPRINT debug flag
 [Flag_Type] : Decimal 45=Display_DBG_COMP/40=Change_DBG_COMP of RT_TRACE
 [Flag_Type] : Decimal 50=Clear all DBG_COMP
 [ForTFI] (Arg1) (Arg2)
 [fwbuf  ] (Arg1) (Arg2) (Arg3)
 [fwctrl  ] (Arg1) (Arg2)
 [fwdm  ] <Type> <Arg1> (Arg...)
 [help] (Directory) (Command)
 [r1  ] <Addr> (Size)
 [r2  ] <Addr> (Size)
 [r4  ] <Addr> (Size)
 [rada  ] <} <} (]
 [regdump  ] (Arg1) (Arg2) (Arg3)
 [reset  ] (Arg1) 
 [sec  ] (Arg1) (Arg2) (Arg3)
 [txrahis  ] (Arg1) (Arg2)
 [vera  ] (Arg1) (Arg2) (Arg3) (Arg4)
 [verify  ] (Arg1) (Arg2) (Arg3)
 [w1  ] <Addr> <Data> (Size)
 [w2  ] <Addr> <Data> (Size)
 [w4  ] <Addr> <Data> (Size)
 [wada  ] <} <} (]
 [xxx] --> Command string
 <- [Error]N6CQuery_DOT11_PMKID_LIST(), NDIS_STATUS_BUFFER_OVERFLOW
 <- [Error]N6CQuery_DOT11_PMKID_LIST(), NDIS_STATUS_FAILURE
 <- [Error]N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_OVERFLOW
 <- [Error]N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_TOO_SHORT
 <- [Error]N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_OVERFLOW
 <- [Error]N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_TOO_SHORT
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), MgntActSet_RSNA_ADD_DEAULT_KEY return FALSE !!!
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), MgntActSet_RSNA_REMOVE_DEAULT_KEY return FALSE !!!
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), NDIS_STATUS_BUFFER_OVERFLOW: %d, BytesNeeded: %d
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), NDIS_STATUS_INVALID_LENGTH: %d
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), uKeyIndex(%d) >= NATIVE_802_11_MAX_DEFAULT_KEY_ENTRY(%d) 
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), MgntActSet_RSNA_REMOVE_MAPPING_KEY return FALSE!!!
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), NDIS_STATUS_BUFFER_OVERFLOW: %d, BytesNeeded: %d
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), NDIS_STATUS_INVALID_LENGTH: %d
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY, MgntActSet_RSNA_ADD_MAPPING_KEY() return FALSE!!!
 <- [Error]N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_LENGTH
 <- [Error]N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_LENGTH
 <- [Error]N6CSet_DOT11_IBSS_PARAMS(), NDIS_STATUS_BUFFER_OVERFLOW
 <- [Error]N6CSet_DOT11_IBSS_PARAMS(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_IBSS_PARAMS(), PlatformAllocateMemory Fail!
 <} : 
 <== N6PciCancelSend()
 <== N6PciInitialize()
 <== N6PnPEventNotify()
 <== OnCls2err()
 <== OnCls3err()
 <Addr_End> : HEX, 0~2E
 <Addr_Start> : HEX, 0~2E
 <Addr> : Readable memory address. For driver --> Page 0~15?
 <Addr> : Writable memory address. For driver --> Page 0~15?
 <Addr>: HEX 0=Read, 0x1234=Write
 <Arg1>: DEC or CHAR
 <Arg1>: HEX
 <Arg2>: HEX or DEC
 <Arg3>: HEX or DEC
 <Data> : HEX value
 <Data> : HEX value 0x00000000-->0xFFFFFFFF
 <RF-Path> : 0~3=A~D, 4=All RF path
 <Type> : UI debug type
 <xxx> --> Necessary argument
 =====> RSNA IBSS Recive Encrypt Packet
 ====>N6CQuery_DOT11_OPERATIONAL_RATE_SET G mode (%d) 
 ===> Send CCX report  
 ===>ID of IE = %02x  
 ===>IELen = %02x  
 ===>Length of IE = %02x  
 ==> N6PciCancelSend()
 ==> N6PnPEventNotify(): DevicePnPEvent: %#X
 ==> N6ReadCommonRegistry()
 ==> N6usbReadRegParameters()
 ==> OnCls2err()
 ==> OnCls3err()
 >1=Display All TX DESC by SEQ
 -->Arg2 = 0/1 : Disable/Enable
 --->FirmwareDownload92S()
 0/1/2/3 or m/b/r=MAC/BB/RF/ 
 0/1: TX/RX DESC
 0= TX DESC info
 0-0x1FF=Read,
 0-27 CCK+OFDM_HT_MCS=4+8+16=28
 0-3 = CCK1-11M
 0-499 =legal len, NULL or >=500=Random len
 0x01 : Print 20/40M info
 0x0-1FF: DEC 0-200 (Word Unit)
 0x02 : False alarm counter
 0x03 : AMPDU info
 0x04 : Print RX status info
 0x05 : Print RX status info
 0x06 : Print RX status info2
 0x07 : Print RX status info3
 0x08 : Print CCK long/short preamble/GI
 0x09 : Print OFDM long/short preamble/GI
 0x0A : Print MCS0-7 long/short preamble/GI
 0x0B : Print MCS8-15 long/short preamble/GI
 0x0C : Print Rx SNR
 0x0D : IBSS mode debug
 0x0E : BW 20/40 Judgement
 0x0F : TX FW INFO
 0x10 : Display ISR time
 0x11 : Clear ISR time table
 0x12 : Display beacon info
 0x1234=Write real Efuse by map file
 0x1235/1237: HEX Address
 0x1235/1237: HEX Value 0x0-FF 
 0x1235=Write real Efuse by byte unit
 0x13 : Retry packet histogram
 0x14 : RF read/write page counters
 0x15 : Connection state log(from connected to disconnected state)
 0x16 : Display the connection mgnt information counters
 0x17 : TX statistics1
 0x18 : TX statistics2
 0x19 : EEPROM Content
 0x1A : EEPROM Tx Power Content
 0x1B : Rate Adaptive Related
 0x1C : Reset counter for endurance test
 0x1D : Different transmit packet type display
 0x1E : RX status display
 0x1F : Tx Power tracking information
 0x20 : RX reorder info
 0x21 : 
 0x22 : AMSDU info
 0x23 : DIG display
 0x24 : RF Tx/Rx register
 0x25 : General information display
 0x27 : None
 0x28 : Current RF RX path state
 0x29 : Display MAC/PHY shadow register value
 0x2A : Actions for IOT
 0x2B : Rx Path Selection
 0x2C : Association Entry
 0x2D : RSSI
 0x2F : Interrupt exe interval arg1=0/1/2=All/tx/rx
 1= RX DESC info
 11/12= capture/Display MAX MP tx num
 12-27 = HT_MCS0-15
 13/14= Capture/Display MAX MP Poll range(TSF)
 15= Beacon Tx ISR CNT
 17: AMPDU_TYPE=Auto/En/Disable=0/1/2 
 17= AMPDU_TYPE 
 18: BW=40/20 MHZ=1/0
 18= BW_TYPE 
 19= Current TX data
 2: 1/0=En/Disable
 2= QoS type chk info
 20: Disable/En=1/0
 20= Disable/En Beacon TX
 21= All SSID/BSSID info
 22: En/Disable= 1/0
 22= En/Disable probereq TX
 24= TX bcn content and Len
 25: En/Disable= 1/0
 25= Rx virtual addr
 26= RFD initl info (memory addr and len)
 27= TCB initl info like RFD
 28: 0-28 --> CCK(0-3)/OFDM_LEGACY(4-11)/HT_MCS(12-27 LG,28-43 SG)
 28= Force Tx rate
 29: 0-10000000ms
 29= Force rate by periodic timer(ms unit)
 3/4/5/6 : Arg2=1/0=En/Disable to display info
 3/4/5/6= Every T_Desc/T_Data/R_Desc/R_Data 
 30: 0/1/2=Auto/En/Disable
 30: 0/1=4K/8K
 30= Change AMSDU type
 31= Free NDISPKT
 32/33: 1/0=En/Disable
 32= Free Protec mode
 33= Dbginfo ISR
 34: 1/2/3/4/5=ALL/TX/RX....
 34= Reset
 35= BW info
 36: QUE: 0/1/2/3=BK/BE/VI/VO
 36: TID 0/3=BE 1/2=BK 4/5=VI 6/7=VO
 36= Force TX TID
 37= Rx Defrag info
 38= Efuse force 0x10ec
 39= Efuse utilization
 4-11= OFDM6-54M
 44: CCK reset cnt
 4Ti\
 4Tid
 4Til
 4TiT
 7/8= Current T_Data/R_Data 
 9/10= Capture/Display MAX DMA poll range(TSF)
 9/11/13: 1=Start to capture
 A\_^
 A]_^
 A]A\_
 A]A\_H
 A^A\_
 A^A]_
 A^A]A\
 A^A]A\_^
 A^A]A\_^][
 A__^
 A_A\_
 A_A]A\
 A_A^_
 A_A^A\
 A_A^A\_^
 A_A^A]
 A_A^A]A\_
 A_A^A]A\_^]
 A_A^A]A\_H
 Adhoc Disconnect Cnt = %lu
 Aggregation Info --> 
 AMPDU Rx Num Info --> 
 AMPDU Rx Size Info --> 
 AMSDU NumOutOfBufferInTCB = %ld
 AMSDU NumOutOfTCB = %I64d
 AMSDU NumOutOfTxDesc = %ld
 AMSDU Rx Num Info --> 
 Antenna[%x] = %d
 Arg1 = (Decimal) ALL/TX/RX/SCHEDULE/BB= 1/2/3/4/5
 Arg1 = (Decimal) Change AUTO/SW/ HW encryot = 0/1/2
 Arg1 = (Decimal) MAC/BB/RF= 1/2/3
 Arg1 = (Decimal),  12=Read ERR RX PKT BUF
 Arg1 = (Decimal),  packet_Buf = 1/2/3/4/5=TX/RX/CMD/TRPT/RRPT
 Arg1 = (Decimal),  Read Lbus_Reg = 6/7/8=SCHE/WMAC/FW2HW/
 Arg1 = (Decimal),  Transmit Packet Number
 Arg1 = (Decimal),  Write Lbus_Reg = 9/10/11=SCHE/WMAC/FW2HW/
 Arg1 = 0 Control IPS, 0:Disable IPS, 1: Enable IPS
 Arg1 = 0(Decimal), --> You must enter rate type in Arg2
 Arg1 = 1(Decimal) Clear all TX rate history
 Arg1 = 2(Decimal) Use TX_CMD to Control FW to collect TX Rate History
 Arg1 = 3(Decimal) Different TX Rate History Display
 Arg1 = 4(Decimal) Send RSSI to FW
 Arg1 = 5(Decimal) Send TX Power Tracking event to FW
 Arg1 --> 0/1 = Don't Force TxSubCarrier/Force
 Arg1 --> 0/1/2/3/=Thresh High/Low/HighPwr_High/HighPwr_Low
 Arg1 --> 0/1/2~# Driver/Firmware/Original
 Arg1 --> 0/1/2=Thresh High/Low40M/Low20M
 Arg1 --> 0/1=CTSToSelf enable/Threshold
 Arg1 --> 0/1=Disable/Enable
 Arg1 --> 0=0xc38 monitor
 Arg1 --> 20/30=DIG Enable/DIG Disable
 Arg1 --> 3/4/5/6=RATR0 Value High/Middle/Low40M/Low20M
 Arg1 --> 4/5/6/7=DbgMode/Rssi_val/DIG Algorithm/BackOffval
 Arg1 --> Dynamic Ctrl Type
 Arg1 --> the value will set to threshold of 40Mhz to 20Mhz
 Arg1= DEC
 Arg2 = (Decimal) Change security type NONE/WEP40 or WEP104/TKIP/AES=0/1/2/3
 Arg2 = (Decimal) RSSI Value
 Arg2 = (Decimal),  Transmit Queue Type
 Arg2 = (HEX) bit0-7 TX_PWR Bit 8-15 RF_Type(0/1=1T2R/2T4R)
 Arg2 = (HRX), Start Address
 Arg2 = 0/1(Decimal) Disable/Enable
 Arg2 = 0/1(Decimal) UI can support/ Both pomelo and UI
 Arg2 = 0x0-0x3f(HEX), --> You must enter rate type in Arg2
 Arg2 = Force value 
 Arg2 --> For Arg1(0-3), Decimal. For Arg1(4-7), HEX
 Arg2 --> Set value, Decimal
 Arg2~n --> For different DM type, you need different arguments
 Arg2= DEC
 Arg3 = (Decimal),  Length (For buf 8 byte unit For LBus 4 byte unit)
 Arg3 = (Decimal),  Transmit Rate
 Arg3 = (HEX),  Data (arg2=9-11)
 Arg3 = (String) Security password
 Arg3= DEC
 Arg4 = (Decimal),  Tx Pkt Len
 ARGUMENT is not 3
 Associate to [%ld]
 AutoloadFailFlag = %d
 Bandwidth autoswitch Disable
 Bandwidth autoswitch Enable
 Bandwidth autoswitch Enable/Disable: Fail arguments
 Bandwidth autoswitch set 20Mhz to 40Mhz (%d) <= Threshold40Mhzto20Mhz (%ld)
 Bandwidth autoswitch set 20Mhz to 40Mhz = %ld
 Bandwidth autoswitch set 20Mhz to 40Mhz threshold Fail
 Bandwidth autoswitch set 40Mhz to 20Mhz (%d) >= Threshold20Mhzto40Mhz (%ld)
 Bandwidth autoswitch set 40Mhz to 20Mhz = %ld
 Bandwidth autoswitch set 40Mhz to 20Mhz threshold Fail
 bCurBW40MHz =%x
 bCurrentHTSupport =%x
 bCurShortGI20MHz =%x
 bCurShortGI40MHz =%x
 BE_QUEUE 
 BEACON_QUEUE 
 BecomeDisconnectedIndex = %lu
 BecomeDisconnectedTime[%d] = 0x%lX %lX
 bForcedTx20Mhz Disable
 BIT 0    BCN_SHOW
 BIT 0    BT_TRACE
 BIT 0    C2H_Summary
 BIT 0    DbgCtrl_Trace
 BIT 0    EEPROM_W
 BIT 0    ISR_CHK
 BIT 0    LPS
 BIT 0    MEDIA_STS
 BIT 0    MP_RX
 BIT 0    NA
 BIT 0    OS_CHK
 BIT 0    PHY_BBR
 BIT 0    QoS_INIT
 BIT 0    RX_DATA
 BIT 0    TX_DESC
 BIT 0    WA_IOT
 BIT 1    BCN_PEER
 BIT 1    BT_RFPoll
 BIT 1    C2H_PacketData
 BIT 1    DbgCtrl_InbandNoise
 BIT 1    DM_PWDB
 BIT 1    EFUSE_PG
 BIT 1    IPS
 BIT 1    LINK_STS
 BIT 1    PHY_BBW
 BIT 1    QoS_VISTA
 BIT 1    RX_PHY_STS
 BIT 1    TX_DESC_TID
 BIT 2    C2H_ContentData
 BIT 2    PHY_RFR
 BIT 2    PWRSW
 BIT 2    RX_PHY_SS
 BIT 3    PHY_RFW
 BIT 3    PWRHW
 BIT 3    RX_PHY_SQ
 BIT 4    PHY_MACR
 BIT 4    PWRHAL
 BIT 4    RX_PHY_ASTS
 BIT 5    PHY_MACW
 BIT 5    RX_ERR_LEN
 BIT 6    PHY_ALLR
 BIT 6    RX_DEFRAG
 BIT 7    PHY_ALLW
 BIT 7    RX_ERR_RATE
 BIT 8    PHY_TXPWR
 BK_QUEUE 
 BW0_SG0=0
 BW0_SG1=2
 BW1_SG0=1
 BW1_SG1=3
 BW-20/40 Judgement:
 CCK TxRx, rCCK0_AFESetting(reg0xa04) = 0x%lx
 CCK-[1][2][5.5][11]=
 CCKPresentAttentuation = %d dB
 CCKTxPowerAdjustCntCh14 = %ld
 CCKTxPowerAdjustCntNotCh14 = %ld
 Change 
 cmd 13 0 0 40 --> DIG high threshold = 40
 cmd 13 0 1 30 --> DIG low threshold = 30
 cmd 13 0 10 60(dec)    --> DIG Max rx gain = 0x3c(60)
 cmd 13 0 2 70 --> DIG HPWR high threshold = 70
 cmd 13 0 20 80 --> DIG enable
 cmd 13 0 3 60 --> DIG HPWR low threshold = 60
 cmd 13 0 30 80 --> DIG disable
 cmd 13 0 4 0/1  --> DIG DbgMode = 0/1
 cmd 13 0 5 72  --> DIG Rssi_val = 72
 cmd 13 0 6 0/1  --> DIG Algorithm by FW false alm=0/ by SW rssi=1
 cmd 13 0 7 12   --> DIG BackOff value = 12
 cmd 13 0 9 18(dec)    --> DIG Min rx gain = 0x12(18)
 cmd 13 1 0 50 --> High threshold = 50~55
 cmd 13 1 1 10 --> Low threshold 40M = 10~15
 cmd 13 1 4 01234567 --> RA change high RATA0 value=0x01234567
 cmd 13 1 4 ffffffff --> RA change middle RATA0 value=0xffffffff
 cmd 13 2 0 0 --> Enter IPS
 cmd 13 2 0 1 --> Leave IPS
 cmd 13 3 0 0/1 --> monitor reg0xc38/disable monitor reg0xc38
 cmd 13 4 0 0/1 --> disable/enable CTSToSelf
 cmd 13 4 1 30 --> Th=30~35
 cmd 14 0 1/0 (Enable or disable)
 cmd 14 1 value (value is the threshold we want to set Threshold40Mhzto20Mhz)
 cmd 14 2 value (value is the threshold we want to set Threshold20Mhzto40Mhz)
 cmd 16 0 0 -----> don't force TxSC
 cmd 16 1 2 ---> force TxSC value = 2
 Cmd_Idx = 10
 Cmd_Idx = 11
 Cmd_Idx = 12
 Cmd_Idx = 13
 Cmd_Idx = 14
 Cmd_Idx = 15
 Cmd_Idx = 16
 Cmd_Idx = 17
 Cmd_Idx = 18
 Cmd_Idx = 20
 Cmd_Idx = 21
 Cmd_Idx = 22
 Cmd_Idx = 23
 Cmd_Idx = 24
 Cmd_Idx = 25
 Cmd_Idx = 26
 Cmd_Idx = 27
 Cmd_Idx = 28
 Cmd_Idx = 29
 Cmd_Idx = 9
 Command index = 0
 Command index = 1
 Command index = 2
 Command index = 3
 Command index = 4
 Command index = 5
 Command index = 6
 Command index = 7
 Command index = 8
 Connect but doesn't rcv Beacon Period Cnt = %lu
 Connect but doesn't rcv Data Period Cnt = %lu
 Connect Resume From Roaming = %lu
- ConstructCcxRmReport()
- ConstructDot11kRmReport()
 CRC=%10ld,
 CurCS_ratioState = higher CS ratio
 CurCS_ratioState = lower CS ratio
 CurCS_ratioState = NA
 CurPD_TH = high power state
 CurPD_TH = low power state
 CurPD_TH = NA
 CurPD_TH = normal power state
 Current TX FW info
 Current Value = 0x%x
 CurrentChannel = %d
 CurrentWirelessMode =%x
 dbgcmd 14 0 0 --> Disable the Bandwidth autoswitch
 dbgcmd 14 0 1 --> Enable  the Bandwidth autoswitch
 dbgcmd 14 1 15 --> Set the 40Mhz to 20Mhz threshold = 15
 dbgcmd 14 1 20 --> Set the 40Mhz to 20Mhz threshold = 20
 dbgcmd 14 2 20 --> Set the 20Mhz to 40Mhz threshold = 20
 dbgcmd 14 2 25 --> Set the 20Mhz to 40Mhz threshold = 25
 dbgcmd 14 3 --> Query all our threshold
 dbgf [Flag_Type] [dbg_type] [dbg_comp_bit]
 DbgMode RSSI=%ld
 DbgMode RSSI=NA
 DbgMode=%d
 DbgMode=NA
 Default framesync(0x%x) = 0x%x
 DefaultInitialGain[0x%x,0x%x,0x%x,0x%x] = [0x%x,0x%x,0x%x,0x%x]
 DIG Algorithm=FW DIG by False Alarm
 DIG Algorithm=SW DIG by RSSI
 DIG Enable=%d
 DIG High Pwr State=%d
 DIG High Pwr State=NA
- DoBeaconRequest()
- DoFrameRequest()
 Dont modify ASPM for non intel chipset. For Bridge Vendor %d.
 dot11CurrentWirelessMode =%x
 Dump TX/RX buffer
 Dump TX/RX desc
 EEPROM Type = 93C46
 EEPROM Type = 93C56
 EEPROM Type = Unknown
 Error cmd string
 Error dbg flag
 Exten BssDec Cap  =  %04x
 False alarm counter --> 
 FW DIG State=%d
 FW DM CTRL 0--RX_CMD_PACKET-----------------------
 FW DM CTRL 1--Rate Adaptive-----------------------
 FW DM CTRL 2--Debug Port Switch-----------------------
 FwCPUCnt(reg0x120) = 0x%lx
 FwIMR(reg0xf4) = 0x%lx
 FwISR(reg0xf8) = 0x%lx
 FwRxCnt(reg0x130) = 0x%lx
 FwTxCnt(reg0x128) = 0x%lx
- GetBeaconReport()
- GetCCXChannelLoadReport()
- GetCCXNoiseHistogramReport()
- GetFrameReport()
- HandleRmRequests()
 HCCA_QUEUE
 HEX 0x1236=Read shadow modify map
 HEX 0x1237=Write shadow modify map
 HEX 0x1238=Use 8192se.map to update shadow modify table
 HEX 0x1239=Update shadow modify map to real efuse area
 High PWR High Thresh=%ld
 High PWR Low Thresh=%ld
 High Thresh=%ld
 HIGH_QUEUE 
 HTSetConnectBwModeCallback = HT_CHANNEL_WIDTH_20
 HTSetConnectBwModeCallback = HT_CHANNEL_WIDTH_20_40
 Hw/Soft Radio Off, turn off Led
 IC Version = 0x%x
 ICV=%10ld
 If 20Mhz to 40Mhz threshold <= 40Mhz to 20Mhz threshold
 If 40Mhz to 20Mhz threshold >= 20Mhz to 40Mhz threshold
 If Arg1 = 0 : RX_CMD_PACKET Switch
 If Arg1 = 0/1 : UART/RX_CMD
 If Arg1 = 1 : Rate Adaptive Switch
 If directory=100, print all command index definition.
 If you do not input type argument, we execute all TX/RX test
 If you do not input type argument, we will display all TX rate hostory
 If you do not input type argument, we will display some FW info
 Inactive Power Save (Previous Stae)= %s
 Inactive Power Save = %s
 Inband Noise query failed!! 
 Indicate Disconnect Cnt = %lu
 Infra Disconnect Roaming Fail Cnt = %lu
 Infra Disconnect Roaming Start Cnt = %lu
 IOT:[%s] ADDBA Request
 IOT:Allow Aggregation [%s] one packet
 IOT:Associate to Atheros AP
 IOT:Associate to Broadcom AP
 IOT:Associate to Cisco
 IOT:Associate to Ralink AP
 IOT:Associate to Realtek 90 AP
 IOT:Associate to Realtek 92SE AP
 IOT:Associate to Unknown AP
 IOT:CDD fsync is Turn [%s]
 IOT:EDCA Trubo is Turn [%s]
 IOT:Force AMSDU is [%s]
 IOT:Force CTS2Self is Turn [%s]
 IOT:Force RTS-CTS is Turn [%s]
 IOT:MCS14 is [%s]
 IOT:MCS15 is [%s]
 IOT:MCS8~MCS15 is [%s]
 IOT:Peer [%s] Realtek AP
 IOT:Use MGNT Rate [%s]
 ISR Type = %d 
 KEY ID : %02x 
 Key index : %02lx 
 KEY Valid : %x 
 KeyReplayCounter = %08I64x 
 LastTxPacketRate = 0x%X 
 Link status from connected to disconnected Cnt = %lu
 Low Thresh=%ld
 MAC_REG%x=0x%02lx
 Max Dig initial gain = 0x%x
 MAX RF Path=%d
 MCS_BW0_SG0[0-15]=
 MCS_BW0_SG1[0-15]=
 MCS_BW1_SG0[0-15]=
 MCS_BW1_SG1[0-15]=
 MGNT_QUEUE 
 micOK : %lx
 Min Dig initial gain = 0x%x
 NewDig Backoff value=%d
 NewDig Backoff value=NA
 noise(Ant-a) = %d dbm, noise(Ant-b) = %d dbm
 Num of OnBeacon() called = %I64u
 Num of OnBeacon_Bss() called = %I64u
 Num of OnBeacon_Ibss() called = %I64u
 Num of OnBeacon_Join() called = %I64u
 Num of OnBeacon_Scan() called = %I64u
 Num of OnDeauth() called = %lu
 Num of OnDisassoc() called = %lu
 Number of  ARGUMENT is less than 3
 Number of ARGUMENT is less than 3
 NumMpSendPackets() = %I64d
 NumOutOfTCB = %I64d
 NumRxDescFilled(%d) =  %I64d
 NumRxDescReturn(%d) =  %I64d
 NumRxInterrupt = %I64d
 NumTransmitTCB(%d) = %I64d
 NumTransmitTCB_Available(%d) = %I64d
 NumTransmitTCB_NotAvailable(%d) = %I64d
 NumTransmitTCBInsertTcbBusyQueue(%d) = %I64d
 NumTxBroadcast= %I64d
 NumTxDescClosed(%d) =  %I64d
 NumTxDescFill(%d) =  %I64d
 NumTxErrTotal= %I64d
 NumTxInterrupt = %I64d
 NumTxMulticast= %I64d
 NumTxOkTotal= %I64d
 NumTxRetryCount= %I64d
 NumTxUnicast= %I64d
 OFDM Rx, rOFDM0_TRxPathEnable(reg0xc04) = 0x%lx
 OFDM Rx, rOFDM1_TRxPathEnable(reg0xd04) = 0x%lx
 OFDM Tx, rFPGA0_TxInfo(reg0x804) = 0x%lx
 OFDM Tx, rFPGA1_TxInfo(reg0x90c) = 0x%lx
 OFDM-[6][9][12][18][24][36][48][54]=
 OK=%10ld,
 OnBeacon_Ibss() Merge two IBSSs. 
- OnCcxRmRequestPacket()
- OnCcxRmRequestPacket(): skip it for bGoingOn == TRUE
- OnCcxRmRequestPacket(): skip it for bRegCcxRm(%d), bBssCcxRmEnable(%d), GET_CURR_CCX_VER(%d)
- OnCcxRmRequestPacket(): skip it for busy traffic, MaxOffLineDur: %d TUs
- OnCcxRmRequestPacket(): skip it for mAssoc(%d), mActingAsAp(%d)
- OnCcxTsmIe(): skip it for current CCX Version: %d < 3
- OnCcxTsmIE(): skip it for mAssoc(%d), mActingAsAp(%d)
- OnDot11kRmRequest(): Reject it for bGoingOn == TRUE
 pAdapter->RxStats.NumCMPKRXQID = %I64d
 pAdapter->RxStats.NumNotCMPKRXQID = %I64d
 pAdapter->RxStats.NumPacketMatchBSSID = %I64d
 pAdapter->RxStats.NumPacketToSelf = %I64d
 pAdapter->RxStats.NumProcessPhyInfo = %I64d
 pAdapter->RxStats.NumQryPhyStatus = %I64d
 pAdapter->RxStats.NumQryPhyStatusCCK = %I64d
 pAdapter->RxStats.NumQryPhyStatusHT = %I64d
 pAdapter->RxStats.SignalStrength = %ld
--- PairwiseKeyState:%d, GroupKeyState:%d ---
 Peer_bssDesc.BssHT.bdSupportHT =%d
 Peer_bssDesc.BssQos.bdQoSMode =%ld
 pHalData->eRFPowerState = RF %s
 pHalData->SystemStartTime = 0x%lX %lX
 pHTInfo->bEnableHT =%d
 PHY register.
 PHY_REG%x=0x%08lx
 Please refer to [r4]
 Please refer to [w4]
 pMgntInfo->mAssoc =%x
 pMgntInfo->mIbss =%x
 pMgntInfo->pStaQos->CurrentQosMode =%lx
 pMgntInfo->pStaQos->QosCapability =%lx
 pMgntInfo->pwrsave_cnt= %ld
 pMgntInfo->RfOffReason = %lx
 Powrdown already
 pPSC->eInactivePowerState = RF %s
 print fw help
 Rate_Type = 0/1=CCK/OFDM
 Rate_Type = 2/3/4/5=HT_MCS BW0_SG0/BW1_SG0/BW0_SG1/BW01_SG1
 Rate_Type = HEX BIT 0-5 to displaydifferent rate type
 RcvdRate Info --> 
 Real RSSI=%ld
 Reg 0x%x = 0x%lx
 RegWirelessMode =%x
 Return fail
 RF A I/Q Amplify Gain = %ld
 RF C I/Q Amplify Gain = %ld
 RF Read page[%d] = %ld
 RF Write page[%d] = %ld
 RF-%c
 RFA_txPowerTrackingIndex = %d
 RFC_txPowerTrackingIndex = %d
 rfd (RF-Path) (Addr_Start) (Addr_End)
 rfm <RF-Path> <Addr_Start> (Addr_End) <Data>
 RfMode = RF_1T2R
 RfMode = RF_2T4R
 RfMode = Unknown
 RF-Path[%d]= %d
- RmWorkitemCallback()
 rOFDM_PHYCounter1 = 0x%08lX
 rOFDM_PHYCounter2 = 0x%08lX
 rOFDM_PHYCounter3 = 0x%08lX
 RSSI = %ld
 Rx Reorder Drop Counter = %d
 Rx Reorder Enable = %x
 RxResetTime[%ld] = 0x%lX %lX
 RxResetTimeIndex = %lu
 RxSNR-%c=%lddB 
 SC=0x%02lx
 Send ALL_QUEUE 
 Send ALL_RATE=255
- SendCcxRmReport()
 SetZebraRFPowerState8185B(): eRfOff: %d times TcbBusyQueue[%d] != 0 !!!
 ShortGI/Preamble=%10ld
 SilentReset executed num = %ld
 start_addr=%lx L=%ld
 State_AsocService is not  STATE_Asoc_Idle -- ignore
 T$""
 t.D9=
 t0A;
 t6A:
 tbD:
 ThermalMeter in EEPROM[0] = %d
 ThermalMeter in EEPROM[1] = %d
 ThermalReadback Value(C/A)[%d] = 0x%x
 ThermalReadBackIndex = %d
 This function is default enable
--- TimeoutCounter:%d, PairwiseKeyState:%d, GroupKeyState:%d ---
 tQD9
 Turn off RF for RfOffReason(%ld) ----------
----- Turn off TCA for DeltaTotalThroughput(%ld) < 0, NormalTotalThroughput(%ld)
----- Turn off TCA for TotalThroughput: %ld KBps is not large enough, HighestOperaRate(%d).
 TXCMD_QUEUE 
 TxPowerCheckCnt = %ld
 TXPowercount = %d
 TxPowerLevelCCK[%d] = 0x%x
 TxPowerLevelCCK[%d](A, C) = (0x%x, 0x%x)
 TxPowerLevelOFDM24G[%d] = 0x%x
 TxPowerLevelOFDM24G[%d](A, C) = (0x%x, 0x%x)
 TXPowerTracking enabled = %d
 TXPowerTrackingCallbackCnt = %ld
 TXPowerTrackingInitialized = %d
 TxResetTime[%ld] = 0x%lX %lX
 TxResetTimeIndex = %lu
 Type = 0x01~....
 Type 0 =>Enable this function
 Type 1 =>Modify 40Mhz to 20Mhz Threshold
 Type 2 =>Modify 20Mhz to 40Mhz Threshold
 Type 3 =>Query all the Threshold Data
 Type help <command> --> Print
 Type help <directory index> --> Print command in the directory
 Type rfd --> Read RF-A~D all reg
 Type rfd 3 --> Read RF-D all reg
 Type rfd 3 0 --> Read RF-D address 0 reg
 Type rfm 2 0 2e 123 --> Modify RF-C address 0~2E to 0x123
 Type rfm 3 0 123 --> Modify RF-D address 0 to 0x123
 Type rfm 3 0 2e --> Read RF-D address 0~2E reg
 Type rfm 4 0 1a --> Read RF-A~D address 0~1A reg
 Type rfm 4 0 2e 123 --> Modify RF-A~D address 0~2E to 0x123
 Type=0 DBG Mode Switch
 Type=0 DIG
 Type=0 Enable
 Type=1 FW Dynamic Control --> Switch to drv dbg mode at first
 Type=1 RateAdaptive
 Type=1 Set the threshold 40Mhz to 20Mhz
 Type=2 RF ON OFF Control --> RF ONF OFF dbg mode
 Type=2 Set the threshold 20Mhz to 40Mhz
 Type=3 FrameSync
 Type=3 Query threshold 
 Type=4 CTSToSelf
 uidbg <Type>
 Usage: cmd 14 [type] [Value]
 Value is out of range
 Value of Bandwidth autoswitch 20Mhz to 40Mhz is %ld
 Value of Bandwidth autoswitch 40Mhz to 20Mhz is %ld
 Value of UndecoratedSmoothedPWDB is %ld
 VI_QUEUE 
 VO_QUEUE 
 We can not support HCCA_QUEUE/HIGH_QUEUE now
--------------- WMM Information Element Content ---------------
--------------- WMM Parameter Element Content ----------------
 wZiK
 You can only input decimal arguments and a double word
 You can type help to print all debug command directory/index
!!! Failed to set the channelplan, %d
!!! Failed to switch to the channel, %d
!!!Wait for IPS leave too long!!! IPSLeaveTimeOut  = %d
!!!Wait for LPS leave too long!!! LPSLeaveTimeOut  = %d
!|$,!|$H!|$L!|$P
!H88p
!pMgntInfo->bSupportTurboMode
!t$xI
!This program cannot be run in DOS mode.
!tI)i
!tX)i
!ua@8
""""""""
""""""""D
""""****
""Df**T~
"%j$C
"%l$F
"Df"*T~*
# %d HistoryCount %d HistoryTime %I64d
# BcnDMA[%ld]
# BcnTx[%ld]
# BEQ[%ld]
# BK[%ld]
# CQ[%ld]
# FRCOK[%ld]
# MQ[%ld]
# RCOK[%ld]
# ROK[%ld]
# RxFOVW[%ld]
# VIQ[%ld]
# VOQ[%ld]
####====
#%i$b
#(*,-
$$$$\\\\
$$Hl\\
$(,048<@
$,6@JRt
$0<HH
$0H`l
$Hl$\
$l^1(
$uhA:
%%%%rrrr
%%Jo..\r
%02lX%01s
%04d: "%s"
%04lX%01s
%04X%01s
%08lX
%6! `
%d: NhmAcc: %08lX  Nhm: %02X (%d%%)
%hhX:
%s %s
%s : PowerPolicy %d bInactivePs=%d bLeisurePS=%d  <==
%s PowerMode(%d)
%s PowerSetting(%d)
%s RATRTableBitmap %x
%s(): Cannot Find PciBridge for Device
%s(): Disable ASPM. Recognize the Bus of PCI(Bridge) as UNKNOWN.
%s(): Line(%d)  
%s():PciBridge BusNumber[%x], DevNumbe[%x], FuncNumber[%x], Write reg[%x] = %x
%s,LongGI/PreamblePacketNum=%ld 
%s,RcvdCRCErrorPacket=%ld 
%s,RcvdOKPacket=%ld 
%s,ShortGI/PreamblePacketNum=%ld 
%s,TotalRcvdPacket=%ld 
%s: Find Device(%X:%X)  bus=%d dev=%d, func=%d
%s=%ld
%s=%ld 
&&&&6666????
&&Lj66lZ??~A
&D841t
&Lj&6lZ6?~A?
&''Ni
(((((
(|$@H
(1T1R)
(1T2R)
(A_A^A]A\_^][
(D$ f
(D$ H
(D$ L
(D$@f
(D$@H
(D$@L
(D$`f
(D$`H
(D$`L
(D$0D
(D$0f
(D$0H
(D$0L
(D$pf
(D$Pf
(D$pf
(D$Pf
(D$pH
(D$PH
(D$pH
(D$pL
(D$PL
(D$pL
(l$@f
(l$`f
(l$0f
(l$Pf
(t$ f
(t$@A
(t$@E3
(t$@f
(t$@H
(t$`L
(t$0A
(t$0E
(t$0f
(t$PI
(t$pL
(t$PL
)D$@f9l$Ht 
)D$@f9l$HuCH
)D$0f
)t$ s1
)t$@A:
)t$@I
)t$`I
)t$`M
)t$0fD9l$8
)u#D;
)w--Z
,  @`
, <^w
, LongGI/Preamble=%10ld,
, Total=%10ld,
,\@~V
,4$8_@
.6$:g
.pdata
.rsrc
.text
/.-*0
/0x%08lx
:t/fA;
;;;;MMMM
;|$0}>H
;|$p}=H
;|$p}>H
;22dV::tN
;D$0u
;D$ht
;D8\$rt4H
;dVtN
;f[4~
;fD4~
;t$$v
? t@@:
@!!!!!Mgnt_SetPower before we save the ssid, the ssid is %s
@!!!!!Mgnt_SetPower we are scanning.....
@#8B#u
@:~>r
@8.t)
@8.u[
@8.uA
@8.uB
@8|$@
@8|$0t
@8|$A
@8|$AubD9|$p
@8|$P
@8|$XuJH
@8}$t+@8
@8~>v
@8~>v8@
@83t{I
@8h t)f9h0t#
@8h tvH
@8h u
@8h!u
@8h)tH@8
@8hPt+f9h`t%
@8i"t
@8k!vvH
@8k"uH
@8k>veD
@8l$H
@8n#t
@8n>v8@
@8o%u
@8o't
@8p t
@8p!t#
@8p)t
@8t$ 
@8t$(
@8t$@
@8t$0
@8x H
@8x u
@8x!t7I
@8x"r1A
@8x#t
@8x)t
@8y)t
@A\_^
@A\_^][
@A]_^
@A]A\_
@A]A\_^]
@A^A]_
@A^A]_^]
@A^A]A\
@A^A]A\_^
@A_A\_
@A_A]_
@A_A]A\_^][
@A_A^A]A\_^]
@fE9lH
@SUVWATAUAVAWH
@SUVWATAUAVH
@SUVWATAUAWH
@SUVWATAUH
@SUVWATAVAWH
@SUVWATH
@SUVWH
@SUWATAUAVAWH
@SVWATAUH
@SVWH
@t(D:
@t-9-
[ AC %ld ]
[ UVWATAUH
[ UVWH
[%02x]
[%02x]    
[%08lx]    
[%ld]
[.X U6n3
[[[[jjjj
[0608]TxHandleInterup Call PreTransMit.
[0706]Def-BG_Ext-N20 Case happen
[0720]==>GetTwoPortSharedResource.
[0720]->OBJECT__BW.
[0720]->OBJECT__pStaQos_WMMParamEle.
[0720]STATUS__DEFAULT_G_EXTENSION_N20.
[0720]STATUS__DEFAULT_ONLY.
[0720]STATUS__EXTENSION_FOLLOW_DEFAULT.
[0720]STATUS__EXTENSION_ONLY.
[0720]STATUS__WITHOUT_ANY_ASSOCIATE.Return.
[0720]TWO_PORT_STATUS__ADHOC.
[0x%08lX]
[ALM]  
[A-MSDU size limitation]
[APSD] qosinfo=%x
[AutoTurbo] ConstructAssociateReq(): Make Realtek IE!bSupportTurboMode=%d, bAutoTurboBy8186=%d
[AutoTurbo] ConstructReAssociateReq(): Make Realtek IE!bSupportTurboMode=%d, bAutoTurboBy8186=%d
[Buffer NA]
[CKIP] TranslateHeader(): CMIC snap case!
[CMPK] 
[CMPK]-->TX statistic
[DCMD] DBGFLAG argc = %d  flag=%ld typet=%lx bit=%ld
[DFS]use default port's,  Default Port connect
[FW CMD]  %s(): USB can NOT IO!!
[FW CMD] %s bUs(%d) Timeout(%d)  PollingTimes(%d) !!
[FW CMD] [New Version]  Set HighPwr disable!!
[FW CMD] [New Version] IQK enable.
[FW CMD] [New Version] Pause DM before scan.
[FW CMD] [New Version] RA init!!
[FW CMD] [New Version] Resume DM after scan.
[FW CMD] [New Version] Set DIG disable!!
[FW CMD] [New Version] Set DIG enable or resume!!
[FW CMD] [New Version] Set DIG halt!!
[FW CMD] [New Version] Set DIG Mode to FA.
[FW CMD] [New Version] Set DIG Mode to SS.
[FW CMD] [New Version] Set HighPwr enable!!
[FW CMD] [New Version] Set RA/IOT Comb in BG mode!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] [New Version] Set RA/IOT Comb in n mode!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] [New Version] Set TxPwr tracking!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] ADD A2 entry!!
[FW CMD] Current FwCmdIOParam(%#x)
[FW CMD] Current FwCmdMap(%#x)
[FW CMD] Enter LPS mode!!
[FW CMD] High Pwr Disable!!
[FW CMD] High Pwr Enable!!
[FW CMD] Inform fw driver will do some dm at driver
[FW CMD] IQK INIT!!
[FW CMD] Leave LPS mode!!
[FW CMD] Pause DM by Scan!!
[FW CMD] Polling FW Cmd PollingCnt(%d)!!
[FW CMD] Resume DM by Scan!!
[FW CMD] Set FW Cmd fail!!
[FW CMD] Set FW Cmd success!!
[FW CMD] Set PAPE Control 
[FW CMD] Set RA Active!!
[FW CMD] Set RA B/G Combo refresh!!
[FW CMD] Set RA BG refresh!!
[FW CMD] Set RA n Combo refresh!!
[FW CMD] Set RA n refresh!!
[FW CMD] Set RA Reset!!
[FW CMD] Set RA/IOT Comb in B/G mode!! input(%#x)
[FW CMD] Set RA/IOT Comb in n mode!! input(%#x)
[FW CMD][New Version] Inform FW driver control some DM!! FwCmdMap(%#x), FwParam(%#x)
[Group Key set]
[MANS] 
[Note] KeyIndex is 0xc0000001
[Pairwise Key set]
[PEM]  
[PMKID %d]
[PMKID %ld]
[QUMG] 
[RAPD] 
[RTOS] 
[STA:%d] %02X-%02X-%02X-%02X-%02X-%02X, MicErrorCnt=%d, WEPErrorCnt=%d
[Tx Desc NA]
[TXPB] 
[WARNING!!!] OID_802_11_ADD_WEP: return NDIS_STATUS_INVALID_DATA!! KeyIndex=%d, KeyLength=%d
[Warning!!] KeyMgntTimeout(): STA mode
[Warning] current: STA mode, return.
[Warning] QosParsingDebug_AcParam(): pAcParam is NULL!return!
[Warning] QosParsingDebug_ParaElement(): pWMMParaEle is NULL!return!
[WMM] QosSetLegacyWMMParamWithHT(): AP bdQoSMode=%lx
\$ D8]
\$ E;
\$ L;
\$ UVWATAUAVAWH
\$ UVWATAUH
\$!f;
\$"D8]
\$$D8]
\$%fA
\$&D8]
\$(D8
\$(E8
\$`D8
\$`I;
\$0fD
\$0I;
\$4I;
\$8A:
\$8E3
\$8fD
\$8fE
\$DfD
\$HD8
\$Ht1
\$Ht2
\$LA3
\$P@8
\$p@8
\$P@8
\$P8C:u
\$PA:
\$PE3
\$PfD
\$PH;
\$pI;
\$Pu@H
\$TA;N
\$TA9^
\$XD9
\$Xf;
\$XfD;
\\\\\\\\H
\Callback\ProximityCallback
\h!T[
]]]]eeee
____````QQQQ
__C_specific_handler
_jbF~T
_TbF~
_vsnprintf
` AUAVAWH
` AUH
`3QbE
`3SbE
`A]A\_^]
`A^A]A\_^][
`A_A]A\_^
`A_A]A\_^][
`A_A^A\_^][
`A_A^A]A\_^]
{ ATH
|$ AWH
|$ f;
|$!D:
|$$fA
|$$fD
|$(&u
|$(fD
|$(H96u
|$(uA
|$@@t
|$@3t$(A
|$@D3d$,
|$@E3
|$@H;
|$`@:
|$`A9
|$`E:
|$`fA
|$<A#
|$0&L
|$0&u
|$0@:
|$0A3
|$0E;
|$0E3
|$0f;
|$0fD
|$0fE
|$0H;
|$0Ic
|$0tE
|$4:D$Ht
|$8A^A]A\
|$8f;
|$D3D$0A
|$DD;
|$HfA;
|$HfD
|$HL;\$P
|$P0D$:
|$PI;
|$X@8
|$XA;
|$XE;
|$xE3
|$XfD
|$xMi
|(6fD
|e4\X
|E4\X
}{))R>
}0x800
}7D8e"t7
~\fD+
~~~~====dddd]]]]
~~zG==
~=zG=d
~UfE;
+ ConstructCcxRmReport()
+ ConstructDot11kRmReport()
+ DoBeaconRequest()
+ DoFrameRequest()
+ GetBeaconReport()
+ GetCCXChannelLoadReport()
+ GetCCXNoiseHistogramReport()
+ GetDot11kChannelLoadReport()
+ GetDot11kNoiseHistogramReport()
+ GetFrameReport()
+ HandleRmRequests()
+ OnCcxRmRequestPacket()
+ RmWorkitemCallback()
+ SendCcxRmReport()
+++++ Turn on TCA, CheckCnt(%ld), CheckInterval(%ld), NormalTotalThroughput: %ld KBps.
+2g$@
+HpXhE
+t$p@
<---- dm_CheckRateAdaptive(): driver is going to unload
<---- dm_RefreshRateAdaptiveMask(): driver does not control rate adaptive mask
<---- dm_RefreshRateAdaptiveMask(): driver is going to unload
<---- dm_RefreshRateAdaptiveMask(): inform fw driver control dm
<-- N6ReadCommonRegistry, Status=%x
<-- N6usbReadRegParameters, Status=%x
<---- ParseFileBufToLines()
<--------- PHY_SetRFPowerState(): bResult(%d)
<--------- PHY_SetRFPowerState(): discard the request for eRFPowerState(%d) is the same.
<--- PlatformDeInitTimerSync()
<--- PlatformInitTimerSync()
<----- PnpSetPower()
<??B4
<??c4$ 
<@u<I
<^w~f
<== AsocEntry_AgeFunction()
<== CCX_Initialize()
<== DrvIFIndicateAssociationComplete()
<== DrvIFIndicateAssociationStart()
<== DrvIFIndicateConnectionComplete()
<== DrvIFIndicateConnectionStart()
<== DrvIFIndicateCurrentPhyStatus()
<== DrvIFIndicateDisassociation()
<== DrvIFIndicateIncommingAssociationComplete()
<== DrvIFIndicateIncommingAssociationStart()
<== DrvIFIndicateIncommingAssocReqRecv()
<== DrvIFIndicateRoamingComplete()
<== DrvIFIndicateRoamingStart()
<== DrvIFIndicateScanComplete()
<== DrvIFIndicateScanStart()
<== HaltAdapter8192SE()
<== MiniportPause(), DriverState(%d)
<== MiniportRestart(), DriverState(%d)
<== N62CHandleMiniportPause(), DriverState(%d)
<== N62CHelperHandleMiniportPause(), DriverState(%d)
<== N62CHelperHandleMiniportRestart(), DriverState(%d)
<== N6CAuthModeToDot11(): dot11AuthAlg=0x%X
<== N6CQuery_DOT11_ENABLED_AUTHENTICATION_ALGORITHM():0x%X
<== N6CQuery_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM():0x%X
<== N6CQuery_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM():0x%X
<== N6CQuery_DOT11_EXTSTA_CAPABILITY()
<== N6CQuery_DOT11_PMKID_LIST()
<== N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR()
<== N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR()
<== N6CSet_DOT11_CIPHER_DEFAULT_KEY()
<== N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY()
<== N6CSet_DOT11_CONNECT_REQUEST()
<== N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): pSecInfo->AuthMode=0x%X
<== N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM(): GroupEncAlgorithm=0x%X
<== N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): PairwiseEncAlgorithm=0x%X
<== N6CSet_DOT11_PMKID_LIST()
<== N6PciInitialize(), Initialize failed, clean up resources.
<== N6ReadCommonRegistry, Status=%x
<== N6Unload()
<== N6usbReadRegParameters(), failed in N6OpenConfigurationHandle(), Status=0x%X !!!
<== N6usbReadRegParameters(), failed in N6ReadCommonRegistry(). Status=0x%X !!!
<== SecCalculateCKIPMIC()
<== SecDropForKeyAbsent(), bDrop=%d
<== SecSWCKIPEncryption()
<==%s TE_A %d, TE_B %d
<=== ++++++ AP_StartApRequest() ++++++
<=== AP_OnEAPOL()
<=== ApSendNullPacket()
<=== AsocTimeout()
<=== Authenticator_GlobalReset()
<=== Authenticator_OnEAPOLKeyRecvd()
<=== Authenticator_StateAUTHENTICATION2()
<=== Authenticator_StateINITIALIZE()
<=== Authenticator_StateKEYERROR()
<=== Authenticator_StatePTKINITDONE()
<=== Authenticator_StatePTKINITNEGOTIATING()
<=== Authenticator_StatePTKSTART()
<=== Authenticator_StateREKEYESTABLISHED()
<=== Authenticator_StateREKEYNEGOTIATING()
<=== AuthTimeout()
<=== CamAddOneEntry()
<=== CamAddOneEntry(): ulKeyId exceed!
<=== ConstructAssociateReq()
<=== ConstructAuthenticatePacket()
<=== ConstructReAssociateReq()
<=== DrvIFIndicateAssociationComplete(): AllocSize > 1024, ignore indication.
<=== DrvIFIndicateAssociationComplete(): failed to allocate memory for indication.
<=== DrvIFIndicateAssociationComplete(): requiredAssocReqParaSize > 1024, ignore indication.
<=== HTOnAssocRsp(): HT_DISABLE
<=== HTSetBwModeByBeacon(): HT_DISABLE
<=== IbssStartRequestCallback()
<=== JoinConfirm()
<=== JoinRequest()
<=== JoinTimeout(): Join timeout!
<=== MAC_OnEAPOL()
<=== MgntActSet_802_11_ADD_KEY(): key length not match
<=== MgntActSet_802_11_ADD_KEY(): return TRUE.
<=== MgntActSet_802_11_ADD_KEY(): Wep with wrong key length
<=== MgntActSet_802_11_ADD_WEP()
<=== MgntActSet_802_11_BSSID_LIST_SCAN(): in AP mode, return TRUE.
<=== MgntActSet_802_11_BSSID_LIST_SCAN(): return TRUE.
<=== MgntActSet_802_11_CustomizedScanRequest(): return TRUE.
<=== MgntActSet_Accepted_STA_Address()
<=== MgntActSet_EnterTurboMode()
<=== MgntActSet_Locked_STA_Address()
<=== MgntActSet_PER_STA_DATA_RATE()
<=== MgntActSet_Rejected_STA_Address()
<=== MgntLinkRequest(): return TRUE.
<=== MgntLinkRequest(): Rf is in switching state.
<=== MgntLinkRequest(): RF is OFF.
<=== MgntLinkRequest(): scan in progress.
<=== MgntLinkRequestReschedule()
<=== MlmeAssociateConfirm(): return FALSE.
<=== MlmeAssociateConfirm(): return TRUE.
<=== MlmeAssociateRequest(): return TRUE.
<=== MlmeAuthenticateRequest(): return TRUE.
<=== MlmeAuthenticateRequest_Confirm(): return TRUE.
<=== N62CAPIndicateDisassociation()
<=== N62CAPIndicateIncomAssocComplete (): status(%u)
<=== N62CAPIndicateIncomAssocReqRecv ()
<=== N62CAPIndicateIncomAssocStart ()
<=== N62CFreeExtAdapter()
<=== N62CInitializeExtAdapter()
<=== N62CPreProcessOID(): %u.
<=== N62CPreProcessOID(): driver halted.
<=== N62CProcessOID(): %u
<=== N62CSetCurrentPortOperationMode(): scan in progress
<=== N62CSetCurrentPortOperationMode(): Set the same OpMode, Ignore
<=== N6CQuerySet_DOT11_RESET_REQUEST(): Fake AP mode, NDIS_STATUS_SUCCESS
<=== N6PciDirectOidRequest(): %u.
<=== N6RestoreLastInitSetting()
<=== OnBeacon_Join()
<=== P2PConnect()
<=== P2PConnect() peer role is incorrect: %u
<=== P2PConnect(): State: %u
<=== P2PConnect(): Target device entry not found
<=== P2PConstructGODiscoverabilityReq()
<=== P2PConstructGONegoConfirm()
<=== P2PConstructGONegoReq()
<=== P2PConstructGONegoRsp()
<=== P2PConstructInvitationReq()
<=== P2PConstructInvitationRsp()
<=== P2PConstructProvisionDiscoveryReq()
<=== P2PConstructProvisionDiscoveryRsp()
<=== P2PConstructSDComebackReq()
<=== P2PConstructSDComebackRsp()
<=== P2PConstructSDReq()
<=== P2PConstructSDRsp()
<=== P2PDeviceDiscoverabilityReqStart(): client not found
<=== P2PDeviceDiscoverabilityReqStart(): GO Ch: %u, 
<=== P2PExtendedListenStart()
<=== P2PGOStartAutomously()
<=== P2PInitialize()
<=== P2PInvitePeerStart()
<=== P2PInvitePeerStart(): P2P not enabled
<=== P2PInvitePeerStart(): to invite a peer to join the group but not in op state
<=== P2PInvitePeerStart(): to invoke persistent but not a P2P Device
<=== P2POnAssocReq()
<=== P2POnAssocReq(): reject because of invalid P2P Sub IE
<=== P2POnAssocRsp(): AssocRsp status: %u
<=== P2POnAssocRsp(): no corresponding entry in the Scan List
<=== P2POnAssocRsp(): reject because of invalid P2P Sub IE
<=== P2POnDeviceDiscoverabilityRsp(): client not found
<=== P2POnGONConfirm(): dialog token mismatch, recvd: %u, self: %u
<=== P2POnGONConfirm(): reject because of invalid P2P Sub IE
<=== P2POnGONConfirm(): state (%u) is not P2P_STATE_GO_NEGO_CONFIRM_WAIT or P2P_STATE_GO_NEGO_RSP_SEND
<=== P2POnGONConfirm(): status of the GONConfirm is not success
<=== P2POnGONConfirm(): status: %u
<=== P2POnGONReq(): has Status attr in GONegoReq and osStatusAttr.Length is invalid: %u
<=== P2POnGONReq(): has Status attr in GONegoReq, Status: %u
<=== P2POnGONReq(): recv in an invalid state: %u
<=== P2POnGONReq(): reject because of invalid P2P Sub IE
<=== P2POnGONReq(): reject because P2P Device with the highest Device Address shall send a GPNRsp
<=== P2POnGONReq(): status: %u
<=== P2POnGONRsp(): dialog token mismatch, recvd: %u, self: %u
<=== P2POnGONRsp(): not in P2P_STATE_GO_NEGO_RSP_WAIT state
<=== P2POnGONRsp(): P2P_STATUS_FAIL_BOTH_P2P_DEVICES_INDICATED_GO_INTENT_OF_15
<=== P2POnGONRsp(): reject because of invalid P2P Sub IE
<=== P2POnGONRsp(): Reject overlapped GONego Req
<=== P2POnGONRsp(): status (%u) of the GONRsp is not success
<=== P2POnGONRsp(): status: %u
<=== P2POnInvitationReq(): reject because current role is: %u, state is: %u
<=== P2POnInvitationReq(): status: %u
<=== P2POnInvitationRsp(): recv InvitationRsp in an invalid state: %u
<=== P2POnInvitationRsp(): reject because of invalid P2P Sub IE
<=== P2POnProbeReq(): common channel arrived
<=== P2POnProbeRsp(): P2PDeterminePeerDevAddrFromP2PIE() returns NULL
<=== P2POnProvisionDiscoveryReq()
<=== P2POnProvisionDiscoveryReq(): no ConfigMethod in WPS IE
<=== P2POnProvisionDiscoveryReq(): no WPS IE
<=== P2POnProvisionDiscoveryReq(): not in listen state or not a GO or not extended listening
<=== P2POnProvisionDiscoveryRsp(): %u
<=== P2POnProvisionDiscoveryRsp(): no ConfigMethod in WPS IE
<=== P2POnProvisionDiscoveryRsp(): no WPS IE
<=== P2POnSDComebackReq(): bMoreData: %u
<=== P2POnSDComebackReq(): DialogToken mismatch
<=== P2POnSDComebackReq(): frame lengh (%u) < min SDReq lenght (%u)
<=== P2POnSDComebackRsp(): Status: %u, Recvd FragID: %u, nRspTLVs: %u
<=== P2POnSDReq(): frame lengh (%u) < min SDReq lenght (%u)
<=== P2POnSDReq(): Status: %u, DialogToken: %u
<=== P2POnSDRsp(): because ServiceRspRecvdSize is 0, Status: %u
<=== P2POnSDRsp(): status: %u, bFragment: %u
<=== P2PProvisionDiscovery()
<=== P2PProvisionDiscovery(): ConfigMethod has multiple bit set: %u
<=== P2PProvisionDiscovery(): device entry not found
<=== P2PProvisionDiscovery(): invalid peer role: %u
<=== P2PServiceDiscoveryReq()
<=== P2PServiceDiscoveryReq(): P2P NOT enabled
<=== P2PServiceDiscoveryReq(): SD in progress
<=== P2PServiceDiscoveryReq(): target device not found in the scan list
<=== PlatformFreeWorkItem(): %s
<=== PlatformRequestPreAuthentication()
<=== PlatformStopWorkItem(): %s
<=== QosOnAssocRsp()
<=== QosOnAssocRsp(): No input frame!!
<=== QosOnAssocRsp(): QOS_DISABLE
<=== QosParsingDebug_BssDesc()
<=== QosParsingDebug_STA()
<=== QosParsingDebug_STA(): QOS_DISABLE.
<=== Query OID_DOT11_ENUM_PEER_INFO: BytesNeeded: %u !!!
<=== Query OID_RT_AP_GET_ASSOCIATED_STATION_LIST.
<=== Query OID_RT_AP_GET_ASSOCIATED_STATION_LIST: BytesNeeded: %d !!!
<=== Query OID_RT_AP_GET_CURRENT_TIME_STAMP.
<=== Query OID_RT_CURRENT_WLRELESSMODE: %d
<=== Query OID_RT_GET_BSS_WIRELESS_MODE: %d
<=== Query OID_RT_GET_CHANNEL: %d
<=== Query OID_RT_GET_CHANNEL_LIST.
<=== Query OID_RT_GET_CHANNELPLAN: %d
<=== Query OID_RT_GET_CONNECT_STATE: %d
<=== Query OID_RT_GET_DRIVER_UP_DELTA_TIME: %u (0.1 Sec)
<=== Query OID_RT_GET_SCAN_IN_PROGRESS: %x.
<=== Query OID_RT_GET_TOTAL_RX_BYTES.
<=== Query OID_RT_GET_TOTAL_TX_BYTES.
<=== Query OID_RT_PRO_READ_BB_REG.
<=== Query OID_RT_PRO_READ_EEPROM.
<=== Query OID_RT_PRO_READ_EFUSE.
<=== Query OID_RT_PRO_READ_REGISTRY.
<=== Query OID_RT_PRO_RF_READ_REGISTRY.
<=== Query OID_RT_SUPPORTED_WIRELESS_MODE: %x
<=== Query OID_RT_WIRELESS_MODE: %d
<=== ScanByTimer()
<=== ScanByTimer(): scan in progress.
<=== ScanComplete()
<=== SelectNetworkBySSID(): Do not start IBSS for Join Only!
<=== SelectNetworkBySSID(): Do not start IBSS if RT_JOIN_NETWORKTYPE_INFRA!
<=== SelectNetworkBySSID(): join_action = %d
<=== SelectRateSet(): return TRUE.
<=== SendAssociateReq()
<=== SendAssociateRsp()
<=== SendAuthenticatePacket()
<=== SendDeauthentication()
<=== SendDisassociation()
<=== SendQosAddTs()
<=== SendQosDelTs()
<=== SendReassociateReq()
<=== Set AP mode OID_DOT11_ADDITIONAL_IE: BeaconIELen = %u, ProbeRspIELen = %u.
<=== Set AP mode OID_DOT11_DESIRED_SSID_LIST
<=== Set AP mode OID_DOT11_DISASSOCIATE_PEER_REQUEST:
<=== Set AP mode OID_DOT11_START_AP_REQUEST.
<=== Set OID_802_11_BSSID_LIST_SCAN.
<=== Set OID_DOT11_ASSOCIATION_PARAMS.
<=== Set OID_DOT11_INCOMING_ASSOCIATION_DECISION
<=== Set OID_RT_AP_SWITCH_INTO_AP_MODE.
<=== Set OID_RT_AUTO_SELECT_CHANNEL: %d
<=== Set OID_RT_DBG_COMPONENT: GlobalDebugComponents: %#X
<=== Set OID_RT_DBG_LEVEL: GlobalDebugLevel: %#X
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_8021X : %d
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_8021X_RESULT : %d
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_ADD_KRK 
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_ENABLE : %d
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_ROGUE_AP : %d
<=== Set OID_RT_FILTER_STA_ADDRESS
<=== Set OID_RT_HIDDEN_SSID: %d
<=== Set OID_RT_LOCKED_STA_ADDRESS
<=== Set OID_RT_MAC_FILTER_TYPE
<=== Set OID_RT_PER_STA_DATA_RATE
<=== Set OID_RT_PRO_RF_WRITE_REGISTRY.
<=== Set OID_RT_PRO_SET_ANTENNA_BB.
<=== Set OID_RT_PRO_SET_ANTENNA_BB. return!!
<=== Set OID_RT_PRO_WRITE_BB_REG.
<=== Set OID_RT_PRO_WRITE_EEPROM.
<=== Set OID_RT_PRO_WRITE_EFUSE.
<=== Set OID_RT_PRO_WRITE_REGISTRY.
<=== Set OID_RT_SCAN_AVAILABLE_BSSID (Immediate return because traffic is busy now)
<=== Set OID_RT_SCAN_AVAILABLE_BSSID.
<=== Set OID_RT_SCAN_WITH_MAGIC_PACKET.
<=== Set OID_RT_SEND_SPECIFIC_PACKET.
<=== Set OID_RT_SET_CHANNEL: %d
<=== Set OID_RT_SET_CHANNELPLAN.
<=== Set OID_RT_SET_DEFAULT_KEY_ID.
<=== Set OID_RT_SET_PREAMBLE_MODE: %d
<=== Set OID_RT_SET_SCAN_OPERATION %d.
<=== Set OID_RT_TURBOMODE.
<=== Set OID_RT_WIRELESS_MODE.
<=== SetInfo, OID_802_11_ADD_KEY: !(key->KeyIndex & 0x80000000)
<=== SetInfo, OID_802_11_ADD_KEY: AES GTK KeyLength:%d != 16 or 32
<=== SetInfo, OID_802_11_ADD_KEY: key->KeyIndex & 0x0fffffff
<=== SetInfo, OID_802_11_ADD_KEY: MacAddr_isBcst(key->BSSID)
<=== SetInfo, OID_802_11_ADD_KEY: pMgntInfo.mIbss && !MacAddr_isBcst(key->BSSID)
<=== SetInfo, OID_802_11_ADD_KEY: TKIP GTK KeyLength:%d != 32
<=== SetInfo, OID_802_11_ADD_KEY: TKIP KeyLength:%d != 32
<=== SetInfo, OID_802_11_ADD_KEY: WEP KeyLength:%d != 5 or 13
<=== SetupJoinIBSSInfo()
<=== SetupJoinInfraInfo()
<=== SetupStartIBSSInfo()
<=== TcaCheckTimerCallback()
<==== ConfigAdapterInfo8192SForAutoLoadFail
<==== MPHalt
<==== MPQueryInformation(): handled by N6CQueryInformation() OID: 0x%08X Status: 0x%X
<==== MPQueryInformation, OID=0x%08x, Status=%x
<==== MPShutdown
<==== N62CApSendDisassocWithOldChnlWorkitemCallback()
<==== N62CCompletePendingOidRequest() pendingRequest  %p
<==== N62CCreateDeleteMacWorkItemCallback()
<==== N62CCreateMac()
<==== N62CDeleteMac()
<==== N6CQueryInformation, OID=0x%08x, Status=0x%X
<==== N6CQuerySetInformation, OID=0x%08x, Status=0x%X
<==== N6CSetInformation, OID=0x%08x, Status=0x%X
<==== ReadAdapterInfo8192S
<==== ReadAdapterInfo8192SE
<==== SetCCXAssocInfoCallback
<===== MlmeOnAssocOK()
<=====P2POnDeviceDiscoverabilityReq()
<====Add Default Key
<====Add Mapping Key
<====InactivePsTimerCallback()
<====InactivePsWorkItemCallback() 
<====InitializeAdapterWorkItemCallback
<====N62CHelperPortCreateMAC()
<====N62CHelperPortDeleteMAC() 
<====Remove Default Key
<====Remove Mapping Key
<===AP mode Query/Set OID_DOT11_RESET_REQUEST: %u
<===AP_OnAsocReq()
<===AP_OnAsocReq()  !((pEntry->AuthAlg == OPEN_SYSTEM && pEntry->AuthPassSeq == 2
<===AP_OnAsocReq()  Check Bssid. return FALSE
<===AP_OnAsocReq()  Check RSN-IE if necessary. return FALSE
<===AP_OnAsocReq()  Check SSID. return FALSE
<===AP_OnAsocReq()  pEntry == NULL
<===AP_OnAsocReq() pentry already associated 
<===MgntActSet_RF_State()
<===N62CFreeComponet()
<===N62CInitialize ()
<===N6CFreeSpinLocks()
<===N6FreeAdapter()
<===PnPWakeUpJoinTimerCallback
<===Set AP mode OID_DOT11_AUTO_CONFIG_ENABLED:
<===Set AP mode OID_DOT11_BEACON_PERIOD:
<===Set AP mode OID_DOT11_DTIM_PERIOD:
<===Set AP mode OID_DOT11_WPS_ENABLED:
<===Set OID   N62CSetCurrentPortOperationMode()
<===SetFwUpdateGTKCmd()
<==N6PushIndicateStateMachineIBSS() 
<==PHY_SetBWModeCallback8192S() 
<==PHY_SwChnlCallback8192S()
<==RxPktPendingTimeout()
<==RxReorderIndicatePacket():
<==TxInsertFirmwareInfoIntoDescRing8192SE
<0Te4\X
<1. COMMON>
<1CMN> <2MANS> <3?>
<2. CMD_92S>
<2. DYNAMIC_SCHEME>
<2. TX_PROCESS_CMD>
<22c4
<3. RX_PROCESS_CMD>
<3TE4\X
<4. SECURITY_CMD>
<6upL
<d;I$
<ffB4
<---FirmwareCheckReady(): LoadFWStatus(%d), rtStatus(%#x)
<--FirmwareEnableCPU(): rtStatus(%#x)
<--HalSetFwCmd8192S(): Set FW Cmd(%#x)
<HVB$
<L;c$
<l;H$
<Log HT Capability>. Called by %s
<Log HT Information Element>. Called by %s
<Ls%<
<---MacConfigBeforeFwDownload()
<---PHY_QueryBBReg(): RegAddr(%#lx), BitMask(%#lx), OriginalValue(%#lx)
<---PHY_QueryRFReg(): RegAddr(%#lx), eRFPath(%#x), BitMask(%#lx), Original_Value(%#lx)
<---phy_RF6052_Config_ParaFile()
<---phy_RF8225_Config_ParaFile()
<---PHY_SetBBReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx)
<---phy_SetFwCmdIO(): CurrentFwCmdIO(%#x)
<---PHY_SetRFReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx), eRFPath(%#x)
<---Power_DomainInit92SE()
<Pu8H
<PuYH
<T;B$
= 255
=@8l$Hu"D
=== Client %d ===
=== Device Capability ===
=== Group Capability ===
===== End of Traffic Stream Report =====
===== Traffic Stram Report =====
====================================
=====================================
========================================
===============================================
====================>DbgTxDesc8192SE
==================>DbgRxDesc8192SE
=======> OnBeacon_Ibss!
=======> OnProbeReq!
=======> Stop Rx Reorder !! 
======>CCKM clear key...
=====>InactivePsWorkItemCallback() 
=====>RSNA IBSS Send Encrypt packet 
====>  We had remove station on dissac !! 
====> 2-way EAPOL Packet !!
====> ConfigAdapterInfo8192SForAutoLoadFail
====> GetEEPROMSize
====> MPHalt
====> MPQueryInformation
====> MPShutdown
====> N62CApSendDisassocWithOldChnlWorkitemCallback()
====> N62CCompletePendingOidRequest() pendingRequest  %p
====> N62CCreateDeleteMacWorkItemCallback()
====> N62CCreateMac()
====> N62CDeleteMac()
====> N6CQueryInformation, OID=0x%08x
====> N6CQuerySetInformation, OID=0x%08x
====> N6CSetInformation, OID=0x%08x
====> N6PciInitialize()
====> pMgntInfo->SecurityInfo.GroupTransmitKeyIdx  = %d
====> ReadAdapterInfo8192S
====> ReadAdapterInfo8192SE
====> SetCCXAssocInfoCallback
====> WEP EAPOL Packet No Encode ....
====>Add Default Key
====>Add Mapping Key
====>CCMP Set Station Key.
====>InactivePsTimerCallback()  bSwRfProcessing %d  eInactivePowerState %d  ReturnPoint %d
====>InitializeAdapterWorkItemCallback
====>MgntActSet_Passphrase() : In Auto mode can't call this function !!
====>N62CHelperPortCreateMAC() 
====>N62CHelperPortDeleteMAC() PendingOID 
====>N6pci_Mgnt_SetPower()
====>Remove Default Key
====>Remove Mapping Key
====>SWRxDecryptFlag = %d 
====>WPA RSN in SSIDL 
====>WPA2 RSN in SSIDL 
===> ++++++ AP_StartApRequest() ++++++ Set Channel %d 
===> ++++++ AP_StartApRequest() ++++++ SwTxEncFlag: %u 
===> AP_OnEAPOL()
===> ApSendNullPacket()
===> AsocTimeout()
===> Authenticator_GlobalReset()
===> Authenticator_OnEAPOLKeyRecvd()
===> Authenticator_StateAUTHENTICATION2()
===> Authenticator_StateINITIALIZE()
===> Authenticator_StateKEYERROR()
===> Authenticator_StatePTKINITDONE()
===> Authenticator_StatePTKINITNEGOTIATING()
===> Authenticator_StatePTKSTART()
===> Authenticator_StateREKEYESTABLISHED()
===> Authenticator_StateREKEYNEGOTIATING()
===> AuthTimeout()
===> CAM_program_entry(): usConfig=0x%02X
===> CamAddOneEntry(): ulKeyId=%ld, ulEncAlg=%ld, ulUseDK=%ld
===> CCX_Construct_DiagChnl_AssocReq()
===> ConstructAssociateReq()
===> ConstructAuthenticatePacket()
===> ConstructReAssociateReq()
===> IbssStartRequestCallback()
===> JoinConfirm()
===> JoinRequest()
===> JoinTimeout(): Join timeout!
===> MAC_OnEAPOL()
===> MAC_OnEAPOLKeyRecvd()
===> MFP AES mode !!  
===> MgntActSet_802_11_ADD_KEY()
===> MgntActSet_802_11_ADD_WEP(): EncAlgorithm=%d, KeyIndex=0x%lX, KeyLength=%ld, IsDefaultKeyId=%d
===> MgntActSet_802_11_BSSID_LIST_SCAN()
===> MgntActSet_802_11_CustomizedScanRequest()
===> MgntActSet_Accepted_STA_Address()
===> MgntActSet_Locked_STA_Address()
===> MgntActSet_PER_STA_DATA_RATE()
===> MgntActSet_Rejected_STA_Address()
===> MgntLinkRequest()
===> MlmeAssociateConfirm(): result: %d. Current Channel %d
===> MlmeAssociateRequest()
===> MlmeAuthenticateRequest()
===> MlmeAuthenticateRequest_Confirm(): result: %d.
===> MPSetInformation(): 0x%08x.
===> N62CAPIndicateDisassociation()
===> N62CAPIndicateIncomAssocComplete ()
===> N62CAPIndicateIncomAssocReqRecv ()
===> N62CAPIndicateIncomAssocStart ()
===> N62CFreeExtAdapter()
===> N62CInitializeExtAdapter()
===> N62CPreProcessOID(): 0x%08x, port = %u.
===> N62CProcessOID(): PortNumber: %d   PortType  %d
===> N62CSetCurrentPortOperationMode(): NdisRequest->PortNumber = %d
===> N6PciDirectOidRequest(): to port %u
===> N6RestoreLastInitSetting()
===> OnAddTsRsp(): StatusCode(%d)
===> P2PConnect()
===> P2PConstructGODiscoverabilityReq()
===> P2PConstructGONegoConfirm()
===> P2PConstructGONegoReq()
===> P2PConstructGONegoRsp()
===> P2PConstructInvitationReq()
===> P2PConstructInvitationRsp()
===> P2PConstructProvisionDiscoveryReq()
===> P2PConstructProvisionDiscoveryRsp()
===> P2PConstructSDComebackReq()
===> P2PConstructSDComebackRsp(): Send from TLV index: %u
===> P2PConstructSDReq()
===> P2PConstructSDRsp(): bFragment: %u
===> P2PDeviceDiscoverabilityReqStart()
===> P2PExtendedListenStart()
===> P2PGOStartAutomously()
===> P2PInitialize()
===> P2PInvitePeerStart()
===> P2POnAssocReq()
===> P2POnAssocRsp()
===> P2POnGONConfirm()
===> P2POnGONReq()
===> P2POnGONRsp()
===> P2POnInvitationReq(): current state: %u
===> P2POnProvisionDiscoveryReq()
===> P2POnProvisionDiscoveryRsp()
===> P2POnSDComebackReq()
===> P2POnSDComebackRsp()
===> P2POnSDReq()
===> P2POnSDRsp()
===> P2PProvisionDiscovery(): ConfigMethod: %u
===> P2PServiceDiscoveryReq(): TLVs: %u
===> PlatformFreeWorkItem(): %s
===> PlatformRequestPreAuthentication()
===> PlatformStopWorkItem(): %s
===> QosOnAssocRsp()
===> QosParsingDebug_BssDesc()
===> QosParsingDebug_STA()
===> Query OID_RT_AP_GET_ASSOCIATED_STATION_LIST.
===> Query OID_RT_AP_GET_CURRENT_TIME_STAMP.
===> Query OID_RT_CURRENT_WLRELESSMODE.
===> Query OID_RT_GET_BSS_WIRELESS_MODE.
===> Query OID_RT_GET_CHANNEL.
===> Query OID_RT_GET_CHANNEL_LIST.
===> Query OID_RT_GET_CHANNELPLAN.
===> Query OID_RT_GET_CONNECT_STATE.
===> Query OID_RT_GET_DRIVER_UP_DELTA_TIME.
===> Query OID_RT_GET_SCAN_IN_PROGRESS.
===> Query OID_RT_GET_TOTAL_RX_BYTES.
===> Query OID_RT_GET_TOTAL_TX_BYTES.
===> Query OID_RT_PRO_READ_BB_REG.
===> Query OID_RT_PRO_READ_EEPROM.
===> Query OID_RT_PRO_READ_EFUSE.
===> Query OID_RT_PRO_READ_REGISTRY.
===> Query OID_RT_PRO_RF_READ_REGISTRY.
===> Query OID_RT_SUPPORTED_WIRELESS_MODE.
===> Query OID_RT_WIRELESS_MODE.
===> ScanByTimer()
===> ScanComplete()
===> SelectRateSet()
===> SendAssociateReq()
===> SendAssociateRsp()
===> SendAuthenticatePacket()
===> SendDeauthentication()
===> SendDisassociation()
===> SendQosAddTs()
===> SendQosDelTs()
===> SendReassociateReq()
===> Set AP mode OID_DOT11_ADDITIONAL_IE:
===> Set AP mode OID_DOT11_DESIRED_SSID_LIST
===> Set AP mode OID_DOT11_INCOMING_ASSOCIATION_DECISION.
===> Set AP mode OID_DOT11_START_AP_REQUEST.
===> Set OID_802_11_ADD_KEY, key->Length=%d
===> Set OID_802_11_BSSID_LIST_SCAN.
===> Set OID_DOT11_ASSOCIATION_PARAMS
===> Set OID_RT_AP_SWITCH_INTO_AP_MODE.
===> Set OID_RT_AUTO_SELECT_CHANNEL.
===> Set OID_RT_DBG_COMPONENT.
===> Set OID_RT_DBG_LEVEL.
===> Set OID_RT_FILTER_STA_ADDRESS.
===> Set OID_RT_HIDDEN_SSID.
===> Set OID_RT_LOCKED_STA_ADDRESS.
===> Set OID_RT_MAC_FILTER_TYPE.
===> Set OID_RT_PER_STA_DATA_RATE.
===> Set OID_RT_PRO_RF_WRITE_REGISTRY.
===> Set OID_RT_PRO_SET_ANTENNA_BB.
===> Set OID_RT_PRO_UPDATE_EFUSE.
===> Set OID_RT_PRO_WRITE_BB_REG.
===> Set OID_RT_PRO_WRITE_EEPROM.
===> Set OID_RT_PRO_WRITE_EFUSE.
===> Set OID_RT_PRO_WRITE_REGISTRY.
===> Set OID_RT_SCAN_AVAILABLE_BSSID.
===> Set OID_RT_SCAN_WITH_MAGIC_PACKET.
===> Set OID_RT_SEND_SPECIFIC_PACKET.
===> Set OID_RT_SET_CHANNEL
===> Set OID_RT_SET_CHANNELPLAN
===> Set OID_RT_SET_DEFAULT_KEY_ID.
===> Set OID_RT_SET_PREAMBLE_MODE.
===> Set OID_RT_SET_SCAN_OPERATION.
===> Set OID_RT_TURBOMODE
===> Set OID_RT_WIRELESS_MODE.
===> SetupJoinIBSSInfo()
===> SetupJoinInfraInfo()
===> SetupStartIBSSInfo() bIbssStarter: %x.
===> TcaCheckTimerCallback()
===> TKIP MFP Calculate MIC 
===>AP mode Query/Set OID_DOT11_RESET_REQUEST: 
===>AP_OnAsocReq()
===>AP_OnAuthOdd
===>Fail Win7 SW decrypt
===>HTSetConnectBwMode()
===>HTSetConnectBwModeCallback()
===>MgntActSet_802_11_CHANNEL
===>MgntActSet_EnterTurboMode(): bEnterTurboMode(%d)
===>MgntActSet_RF_State(): StateToSet(%d)
===>MgntGetEncryptionInfo() ExemptionActionType = %x 
===>N62CFreeComponet()
===>N62CInitialize()
===>N6CompletePendedOID  
===>N6CompletePendedOID   OID %08X 
===>N6FreeAdapter()
===>PnPWakeUpJoinTimerCallback
===>Set AP mode OID_DOT11_AUTO_CONFIG_ENABLED:
===>Set AP mode OID_DOT11_BEACON_PERIOD:
===>Set AP mode OID_DOT11_CIPHER_KEY_MAPPING_KEY:
===>Set AP mode OID_DOT11_CURRENT_CHANNEL:
===>Set AP mode OID_DOT11_DISASSOCIATE_PEER_REQUEST:
===>Set AP mode OID_DOT11_DTIM_PERIOD:
===>Set AP mode OID_DOT11_WPS_ENABLED:
===>Set OID   N62CSetCurrentPortOperationMode()  newPortType  %d
===>SetFwUpdateGTKCmd()
===>Win7 SetKey() We don't set Group key to CAM !!
===>Win7 SetKey() We don't set key to CAM in AD-Hot !!
===>Win7 SetKey() We don't set WEP key to CAM !!
==> Abort HaltAdapter8192SE()
==> AsocEntry_AgeFunction()
==> CCX_EVENT_OK_TO_ASSOCIATE
==> CCX_Initialize()
==> DrvIFIndicateAssociationComplete()
==> DrvIFIndicateAssociationStart()
==> DrvIFIndicateConnectionComplete(): status = %d
==> DrvIFIndicateConnectionStart()
==> DrvIFIndicateCurrentPhyStatus()
==> DrvIFIndicateDisassociation()
==> DrvIFIndicateIncommingAssociationComplete()
==> DrvIFIndicateIncommingAssociationStart()
==> DrvIFIndicateIncommingAssocReqRecv()
==> DrvIFIndicateRoamingComplete()
==> DrvIFIndicateRoamingStart()
==> DrvIFIndicateScanComplete(): status = 0x%x
==> DrvIFIndicateScanStart()
==> HaltAdapter8192SE() bReset=%d
==> MiniportPause(), DriverState(%d)
==> MiniportRestart(), DriverState(%d)
==> N62CHandleMiniportPause(), DriverState(%d)
==> N62CHelperHandleMiniportPause(), DriverState(%d)
==> N62CHelperHandleMiniportRestart(), DriverState(%d)
==> N62CPreProcessOID() fail
==> N62CProcessCurrentPortOperationMode() Success return
==> N62CProcessOID() fail
==> N62CProcessOID() returns NDIS_STATUS_NOT_RECOGNIZED
==> N6CAuthModeToDot11(): AuthMode=0x%X
==> N6CQuery_DOT11_ENABLED_AUTHENTICATION_ALGORITHM()
==> N6CQuery_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM()
==> N6CQuery_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM()
==> N6CQuery_DOT11_EXTSTA_CAPABILITY()
==> N6CQuery_DOT11_PMKID_LIST()
==> N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR()
==> N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR()
==> N6CSet_DOT11_CIPHER_DEFAULT_KEY()
==> N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY()
==> N6CSet_DOT11_CONNECT_REQUEST()
==> N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM()
==> N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM()
==> N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM()
==> N6CSet_DOT11_PMKID_LIST()
==> N6PciOidRequest()
==> N6Unload()
==> SecCalculateCKIPMIC()
==> SecDropForKeyAbsent()
==> SecSWCKIPEncryption()
==>%s bCurTxBW40MHz %d
==>N6PushIndicateStateMachineIBSS() N6_STATE_ASOC_COMPLETE  SM_fConnected
==>N6PushIndicateStateMachineIBSS() N6_STATE_ASOC_COMPLETE not SM_fConnected
==>N6PushIndicateStateMachineIBSS() pIndicateEngine->Flag  %d
==>phy_BB8192S_Config_ParaFile
==>PHY_SetBWModeCallback8192S()  Switch to %s bandwidth
==>PHY_SwChnlCallback8192S(), switch to channel
==>PHY_SwChnlPhy8192S(), switch from channel %d to channel %d.
==>ProcessReceivedPacket,Now is %s Adapt,%s
==>RxPktPendingTimeout()
==>RxReorderIndicatePacket()
==>TxFillDescriptor8192SE
==>Win7 we used HW in default !! 
==>Win7 we used SW in AD-HOT 
==>Win7 we used SW in WEP 
==>WPS changr security mode to open for connect
==m==>SecIsEAPOLPacket(): Recvd EAPOL frame. IsEAPOLPkt(%d)<==m==
==SendProbeRsp(): Tx rate = %d
==zGdd
='9-6d
=j&&LZ66lA??~
=jLZlA~
=rU@8
---> N6DeInitTimerSync()
----> ParseFileBufToLines()
---------> PHY_SetRFPowerState(): eRFPowerState(%d)
---> PlatformInitTimerSync()
-----> PnpSetPower()
>//^q
>{'!`
>4$8,@
--->FirmwareCheckReady(): LoadStaus(%d)
--->FirmwareDownloadCode()
-->FirmwareEnableCPU()
-->HalSetFwCmd8192S(): Set FW Cmd(%#x), SetFwCmdInProgress(%d)
>hsrK :
--->MacConfigBeforeFwDownload()
--->PHY_QueryBBReg(): RegAddr(%#lx), BitMask(%#lx)
--->PHY_QueryRFReg(): RegAddr(%#lx), eRFPath(%#x), BitMask(%#lx)
--->PHY_SetBBReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx)
--->phy_SetFwCmdIO(): Cmd(%#x), SetFwCmdInProgress(%d)
--->PHY_SetRFReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx), eRFPath(%#x)
--->PlatformSetTimer() msDelay(%d)
--->Power_DomainInit92SE()
>wY&Drf
0 Umv
0. STA: %02X-%02X-%02X-%02X-%02X-%02X
00   02   04   06   08   0A   0C   0E
00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
00006666
0123456701234567012345670123456701234567012345670123456701234567
0123456789ABCDEF
040904B0
0A\_^
0A]_^
0A]A\_
0A]A\_^[
0A]A\_^]
0A^_^
0A^A\_^]
0A^A]A\
0A^A]A\_]
0A^A]A\_^
0A^A]A\_^][
0A_A\_
0A_A\_^]
0A_A]A\
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^]
0D$9D8
0L9s u
0u1E;
0x%08lX%01s
0xc80 %x 0xc88 %x 0xc94 %x 0xc9c %x
1&l%0
1. [r4  ] 
1. RetryFrameCnt= %d,      NoRetryFrameCnt= %d
1. Type dbgcmd + cmd_index + 
1. Type help + directory index(1~)
11#?*0
11nAdhoc
12345678123456781234567812345678
2. <Addr> 
2. retryRate= %d,              avgRetryRate= %d
2. Type Cmd_String + 
2. Type help + directory index(1~) + cmd_index
20/40 MHZ packet
20/40MHz
2021.2.0327.2013
2021.2.0327.2013 built by: WinDDK
20MHz
20Mhz
20MHz
20MPacket
2222::::
2bb["
2dV2:tN:
2Ht\l
3. (Size> 
3. STA SignalStrength = %ld
3@83u
3\$<A3
3\$LA3
3|$ A3
3|$$A3
3|$<A3
34 AA 97 3C D4 C4 DA A4 F6 1E EB 2B DB AD 27 31 65 34 01 6F
3D$ A
3D$ A3
3D$$3
3D$$A3
3D$(3
3D$,A3
3D$,D3|$$
3D$0A
3D$8A3
3D$LD3d$0D3d$X
3l$ A3
3l$(E3
3l$@A
3l$0A
3l$HD
3T$ 3
3T$(A3
3T$8A
3t$DA3
3t$LA
3t$P#
4(UB$
4. STA DataRate= %d
40MDuplicate
40MFull
40Mhz
40MHz
40MLower
40MUpper
4DDB4
'4Nhu
4t-A;
5. AP   DataRate= %d
55j_WW
6. txRateIndex=%d 
66666666H
6V0&6jD
7777mmmm
7nY7m
8 t!D:
8\$ u!
8187I
84 98 3E 44 1C 3B D2 6E BA AE 4A A1 F9 51 29 E5 E5 46 70 F1
8A_A^A]A\_^][
8A0t*
8C=uN8C>uI8C?uD
8C=uP8C>uK8C?uFH
8D$lu
8L$XtP
8N>v02
8't9H
8X u*
8Y u"
9/u^H
9|$ u
9|$ uk
9|$0uJ
9999JJJJLLLLXXXX
99rKJJ
99uNH
9D$0teH
9D$Du
9D$pu
9htt(H
9httGH
9k4s?@
9l$xu;H
9ppt[D9
9ptt;I
9ptu9H
9ptvg9
9rK9J
9T$@u*
9t$0u/
9t$Pu
9Xtr*
9xtt/H
A: channel: %u:
A;C}r
A\_^][
A]A\_
A]A\_^]
A]A\_^][
A^A\_
A^A]_
A^A]A\
A^A]A\_^
A^A]A\_^][
A_A\_
A_A]_
A_A]A\
A_A]A\_^
A_A]A\_^][
A_A^_
A_A^A\
A_A^A\_^
A_A^A]
A_A^A]A\
A_A^A]A\_
A_A^A]A\_][
A_A^A]A\_^]
A_A^A]A\_^][
a5j_5W
A8?t6@:
A8\$C
A89t\fA;
A8u%uAH
A9 99 3E 36 47 06 81 6A BA 3E 25 71 78 50 C2 6C 9C D0 D8 9D
A99vlD
A9Htv
aaaa5555WWWW
AAAAAA
AAAAOOOOgggg
aaj_55
abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq
Ac<vw
AccClmResult
AccClmResult(): CLM_RESULT_REG = %08lX
AccClmResult(): not yet completed: %d!!!
Accept
AcceptAddbaReq
AccNhmResult
AccNhmResult(): NHM_RPI_COUNTER%d = %02X (%d%%)
AccNhmResult(): not yet completed: %d!!!
ACK sip:
ACK_TIMEOUT[0x91]=0x%02xus
ACMHWCTRL/ACMAVG[0x1E4]=0x%08lx
ACMTimer
ActingAsAp
ActingAsClassMode
ActivateBAEntry
Activated Port Number %d
Active Scan
Active scan: Channels
Active scan: Max Tx Power (dBm)
ActSetWirelessMode8192SE
ActSetWirelessMode8192SE RF_PSEUDO_11N Not make sure how set RF -BW
ActUpdateChannelAccessSetting
Adapter (8185/8185B) is found- VendorID/DeviceID=%x/%x
Adapter(8190 PCI) is found - VendorID/DeviceID=%x/%x
Adapter(8192 PCI-E) is found - VendorID/DeviceID=%x/%x
Adapter(8192SE) is found - VendorID/DeviceID=%x/%x
Adapter->nBufInTxDesc: %d, Aggregation Queue[%d] is [%s]
Adapter->RxStats.RxRSSIPercentage[%d]  = %d 
Addr = %x Data=%x
Addr=%d size=%d Word_En=%02x
Addr=%x Data =%x
Address=%x  value=%x
AddTsTimer
AdhocLinkState
AdhocWorkAround
AdvanceAndGetDataByOffset
AdvanceAndGetDataByOffset(): some data can not be retrived
AeD:B
After MPHalt() -------- 
After MPShutdown() -------- 
AGGLEN_LMT_H[0x1A7]=0x%02x
AGGLEN_LMT_L[0x1A8]=0x%08lx
AGGLEN_LMT_L[0x1AC]=0x%08lx
AH_BcnIntv
aiKwZ
AlgorithmId=0x%X
All TxPwr = 0x%x
ALLOC_RT_OBJECT: %p size: %ld
Allocate Ndis 6.2 ExtAPAttributes Fail
AllocDrvLogMemory
AllocDrvLogMemory(): %p is allocated for driver log pool %ld
AllocDrvLogMemory(): %p is allocated for DRV_LOG_POOLS_HANDLE
AllocDrvLogMemory(): failed driver log pool %ld!!!
AllocDrvLogMemory(): failed to allocate DRV_LOG_POOLS_HANDLE!!!
AllocN6TxContexts
AllocN6TxContexts(): #TCB: %d, ScatterGatherListSize: %d, N6TxCtxSize: %d
AllocN6TxContexts(): failed to allocate pN6TxCtxBuf!!!
AllowAllDestAddr8192SE
AllowAllDestAddr8192SE(): ReceiveConfig=0x%08lX, WriteIntoReg=%d
Altered CCK Tx power index : %d, Legacy OFDM Tx power index: %d, OFDM Tx power index: %d
AMPDU Number   < 5
AMPDU Number   >40
AMPDU Number  5~10
AMPDU Number 10~20
AMPDU Number 20~40
AMPDU Size   < 4 K
AMPDU Size  4K~8 K
AMPDU Size  8K~16K
AMPDU Size 16K~32K
AMPDU Size 32K~64K
AMPDU_Factor
AMPDU_MIN_SPACE[0x237]=0x%02x
AMPDUEnable
AMSDU
AMSDU Size   < 1 K
AMSDU Size  1K~2 K
AMSDU Size  2K~4K
AMSDU Size  4K~6K
AMSDU Size  6K~8K
A-MSDU:BufferCount for this TCB = %d, Packet# for this TCB = %d
AMSDU_GetAggregatibleList
AMSDU_in_Tx_Interrupt
AMSDU_MaxSize
AMSDUDelayWorkItem
AP Client PWDB = 0x%x 
AP Construct Probe Response 
AP Ext Port PWDB = 0x%x 
AP is not in INIT STATE
AP is not in OP STATE
AP_AllPowerSaveDisable
AP_AllPowerSaveDisable()-----
AP_AllPowerSaveReturn
AP_AllPowerSaveReturn():pPSC->bInactivePs=%d, pPSC->bLeisurePs=%d,
AP_CheckHTCap(): STA has HT cap, AMSDUSize = %d, AMPDUFactor = %d, MPDU Density = %d
AP_CheckRSNIE
AP_CheckRSNIE bWPSEnable %d
AP_CheckRSNIE Capability 0x%x
AP_CheckRSNIE RSNIE parsing cipher 0x%x
AP_CheckRSNIE WEP_Encryption
AP_DisassociateAllStation
AP_DisassociateAllStation()  
AP_DisassociateStation
AP_DisassociateStation()
AP_dm_CheckRateAdaptive
AP_ForwardPacketWithFromDS
AP_ForwardPacketWithFromDS(): MgntGetBuffer() return FALSE!!!
AP_ForwardPacketWithFromDS(): Out of TCB !!!
AP_FromBssToWds
AP_FromBssToWds(): MgntGetBuffer() return FALSE!!!
AP_FromBssToWds(): Out of TCB !!!
AP_FromWdsToBss
AP_FromWdsToBss(): MgntGetBuffer() return FALSE!!!
AP_FromWdsToBss(): Out of TCB !!!
AP_HTCheckBwWidth
AP_HTCheckBwWidth(): set to %s mode
AP_HTCheckHTCap
AP_LocalToWds
AP_LocalToWds(): MgntGetBuffer() return FALSE!!!
AP_OnAsocReq
AP_OnAsocReq(): OS did not make decision whether to accept the AsocReq.
AP_OnAsocReq(): the AssocReq is not accepted by OS.
AP_OnAuthOdd
AP_OnAuthOdd(): AsocEntry_RemoveStation
AP_OnAuthOdd(): AuthStatusCode != StatusCode_success
AP_OnAuthOdd(): Illegal auth sequence number: %d !!!
AP_OnAuthOdd(): Illegal AuthAlg: %d for AuthSeq: %d !!!
AP_OnAuthOdd(): pEntry != NULL
AP_OnAuthOdd(): pEntry->bAssociated
AP_OnAuthOdd(): receive duplicate auth
AP_OnAuthOdd(): Remove association entry of the STA if AuthStatusCode is not successful. 
AP_OnAuthOdd(): StatusCode_assoc_deniedbyap
AP_OnAuthOdd(): unknow STA MAC address!
AP_OnEAPOL
AP_OnEAPOL(): Cannot find the STA in the table!!! drop it.
AP_OnEAPOL(): EAPOL packet with unknown type.
AP_OnEAPOL(): PacketLength=%d
AP_StaRateAdaptation
AP_StartApRequest
AP_StartApRequest()  Send Disassociate to All STA
AP_StartApRequest():  HT_CHANNEL_WIDTH_20, HT_EXTCHNL_OFFSET_NO_EXT
AP_StartApRequest(): pMgntInfo->bStartApDueToWakeup %d
AP_StartApRequest(): Send H/W Beacon....
AP_StartApRequest(): set to %s mode
AP_StartApRequest(): Start S/W Beacon....
AP_StartApRequest(): Stopping Beacon... 
AP_StartApRequest(): Stopping H/W Beacon...
ApEDCAParamBE
ApEDCAParamBK
ApEDCAParamVI
ApEDCAParamVO
AppendAdditionalIEs
AppendAdditionalIEs(): Length = %d
ApSendNullPacket
ApStartRequestWorkItem
Arg1/2/3=%ld/%ld/%ld
arg1/2/3=%ld/%lx
Argc=%d
As AP
As STA
AsocEntry_AgeFunction
AsocEntry_AgeFunction Return TCB 
AsocEntry_AgeFunction() > 0.5 sec, %02X-%02X-%02X-%02X-%02X-%02X
AsocEntry_AgeFunction() > 10 min, %02X-%02X-%02X-%02X-%02X-%02X
AsocEntry_ResetAvailableAID
AsocEntry_ResetAvailableAID(): clear non-existing entry AID
AsocTimeout
AsocTimeout(): STATE_Wait_Asoc_Response.
AsocTimeout(): STATE_Wait_Reasoc_Response.
AsocTimer
ASPMDelay
ASPMDelayFlag
Associated Port Number %d with allocated port
ATAUAVH
ATAUAWH
ATIMWND[0x96]=0x%04xTU
Attempting to notify op mode change event to unrecognized port type %d
AUAVAWH
auth_even
auth_odd
AuthentAlg
Authenticator_GlobalReset
Authenticator_OnEAPOLKeyRecvd
Authenticator_OnEAPOLKeyRecvd(): Unexpected case: PrState=%d, GrState=%d, msg_type=%d
Authenticator_OnEAPOLKeyRecvd(): Unexpected State!!
Authenticator_OnTimeoutCountExceeded
Authenticator_OnTimeoutCountExceeded!
Authenticator_OnTimeoutCountExceeded(): Unexpected State!!
Authenticator_StateAUTHENTICATION
Authenticator_StateAUTHENTICATION2
Authenticator_StateDISCONNECT
Authenticator_StateDISCONNECT()
Authenticator_StateDISCONNECT()  
Authenticator_StateDISCONNECTED
Authenticator_StateDISCONNECTED()
Authenticator_StateINITIALIZE
Authenticator_StateINTEGRITYFAILURE
Authenticator_StateKEYERROR
Authenticator_StatePTKINITDONE
Authenticator_StatePTKINITNEGOTIATING
Authenticator_StatePTKSTART
Authenticator_StateREKEYESTABLISHED
Authenticator_StateREKEYNEGOTIATING
AuthTimeout
AuthTimer
AutoLoad Fail reported from CR9346!!
Autoload OK
AutoSelChnl
AutoSelectChannel
AutoSelectChannel(): ChnlWeightMode=%d
Avaliable
AwakeTimer
AwakeWorkItem
AwakeWorkItemCallback
AwakeWorkItemCallback() <--------- 
AwakeWorkItemCallback() ---------> 
B$! b
b&|$C
b&p$C
b&t$C
b&x$C
B.reloc
B: channel: %u:
B0!0R
B0%@b
B4$ b
b4$H'
b4$H&
B8, u
B84 u_
BA_AddBaReq
BA_AddBaRsp
BA_DelBa
bAddNewTs == FALSE
bAddNewTs == TRUE
bandctrl
Basic MCS Rate Set = [%x][%x][%x][%x][%x]
bAssociated = %u.
BB Config failed
BB Config Finished!
BB Config Start!
BB OFDM/CCK Disable
BB_WDOG
BBBBBB
BBBBhhhhAAAA
Bc!! 0
BCN_DMATIME[0x9A]=0x%04xus
BCN_DRV_EARLY_INT[0x98]=0x%04x
BCN_ERR_THRESH[0x9C]=0x%04xus
BCN_INTERVAL[0x94]=0x%04xTU
BcnDenominator
BCNQ_CTRL[0x120]=0x%08lx
BCNTCFG[0x1E0]=0x%04x
bCreateMac   Fail
bCurBW40MHz=%d bCurTxBW40MHz=%d Force20M=%d 
bCurrentHTSupport %d bPeerBssCoexistence %d, bPeer40MHzIntolerant %d, bCurOBSSScanExemptionGrt %d  CurOBSSScanInterval %d
bDelete=0x%X
bdeleteMac   Fail
BE_ADMTM[0x1F0]=0x%08lx
Beacon CNT=[%ld]
Beacon Length = %ld
Behavior=2: CH_SEL_RANDOM => %d
bEnableHT=%d bCurrentHTSupport=%d 
BETID0_CTRL[0x140]=0x%08lx
BETID3_CTRL[0x13C]=0x%08lx
bHwParaFile
bInHctTest set HT_CHANNEL_WIDTH_20, HT_EXTCHNL_OFFSET_NO_EXT
BIT 0    BCN_SHOW
BIT 0    BT_TRACE
BIT 0    C2H_Summary
BIT 0    DbgCtrl_Trace
BIT 0    EEPROM_W
BIT 0    ISR_CHK
BIT 0    LPS
BIT 0    MEDIA_STS
BIT 0    MP_RX
BIT 0    OS_CHK
BIT 0    PHY_BBR
BIT 0    QoS_INIT
BIT 0    RX_DATA
BIT 0    TX_DESC
BIT 0    WA_IOT
BIT 1    BCN_PEER
BIT 1    BT_RFPoll
BIT 1    C2H_PacketData
BIT 1    DbgCtrl_InbandNoise
BIT 1    DM_PWDB
BIT 1    EFUSE_PG
BIT 1    IPS
BIT 1    LINK_STS
BIT 1    PHY_BBW
BIT 1    QoS_VISTA
BIT 1    RX_PHY_STS
BIT 1    TX_DESC_TID
BIT 2    C2H_ContentData
BIT 2    PHY_RFR
BIT 2    PWRSW
BIT 2    RX_PHY_SS
BIT 3    PHY_RFW
BIT 3    PWRHW
BIT 3    RX_PHY_SQ
BIT 4    PHY_MACR
BIT 4    PWRHAL
BIT 4    RX_PHY_ASTS
BIT 5    PHY_MACW
BIT 5    RX_ERR_LEN
BIT 6    PHY_ALLR
BIT 6    RX_DEFRAG
BIT 7    PHY_ALLW
BIT 7    RX_ERR_RATE
BIT 8    PHY_TXPWR
bit oriented
BIT%02d |
BIT0    COMP_TRACE
BIT1    COMP_DBG
BIT10   COMP_SCAN
BIT11   COMP_SYSTEM
BIT12   COMP_SEC
BIT13   COMP_AP
BIT14   COMP_TURBO
BIT15   COMP_QOS
BIT16   COMP_AUTHENTICATOR
BIT17   COMP_BEACON
BIT18   COMP_BEACON
BIT19   COMP_RATE
BIT2    COMP_INIT
BIT20   COMP_EVENTS
BIT21   COMP_FPGA
BIT22   COMP_RM
BIT23   COMP_MP
BIT24   COMP_RXDESC
BIT25   COMP_CKIP
BIT26   COMP_DIG
BIT27   COMP_TXAGC
BIT28   COMP_HIPWR
BIT29   COMP_HALDM
BIT3    COMP_OID_QUERY
BIT30   COMP_RSNA
BIT31   COMP_INDIC
BIT32   COMP_LED
BIT33   COMP_RF
BIT34   COMP_HT
BIT35   COMP_POWER_TRACKING
BIT36   COMP_POWER_TRACKING
BIT37   COMP_AMSDU
BIT38   COMP_WPS
BIT39   COMP_RATR
BIT4    COMP_OID_SET
BIT40   COMP_RESET
BIT41   COMP_CMD
BIT42   COMP_EFUSE
BIT43   COMP_CCX
BIT43   COMP_MESH_INTERWORKING
BIT5    COMP_RECV
BIT6    COMP_SEND
BIT7    COMP_IO
BIT8    COMP_POWER
BIT9   COMP_MLME
BKTID1_CTRL[0x148]=0x%08lx
BKTID2_CTRL[0x144]=0x%08lx
bLeisurePs
BlinkTimer
Blinktimes (%d): turn on
Blinktimes (%ld): turn off
Blinktimes (%ld): turn on
BoardType = %#x
Bogus field size %d
Boot from EEPROM
Boot from EFUSE
bOppPs = %d, CTWin = %X
bPersistent: %u
bRateAdaptive
bRegBW40MHz=%d bCurBW40MHz=%d
bRegShortGI40MHz=%d bCurShortGI40MHz=%d
bRegTxPowerControl
Broad or multicast return
bS11*?
BSS_OnScanComplete
Bssid
BSSID = 
bStatic=0x%X
bSupportNmode %d, bHalfSupportNmode%d 
Buffer size overflow: (%u) > (%u) 
BufferForThisTCB = %d, UsedDescNum = %d, nAggrTcbNum = %d, AvaliableDesc = %d
bValid = %d, Count = %X, Duration = 0x%08X (Dec = %d), Interval = 0x%08X (Dec = %d)
bValidAddr4 =%d BSSID=[%02x-%02x-%02x-%02x-%02x-%02x]
BW_OPMODE/NAV_CTRL[0x200]=0x%08lx
BW=%d,Offset=%d
BW40MHz
BYE sip:
c!!B0
C#<"w*D:
c$\$C
C$f;k(sYE;
c$j$C
c%!P`
C/B2T
C:fD9|$Pv1A
C77nYmm
Call-ID:
CAM_empty_entry
CAM_empty_entry(): WRITE A0: %lx 
CAM_empty_entry(): WRITE A4: %lx 
CAM_mark_invalid
CAM_mark_invalid(): WRITE A0: %lx 
CAM_mark_invalid(): WRITE A4: %lx 
CAM_program_entry
CAM_program_entry(): WRITE %x: %lx 
CAM_program_entry(): WRITE A0: %lx 
CAM_program_entry(): WRITE A4: %lx 
CamAddOneEntry
CamDeleteOneEntry
CamResetAllEntry
CamResetAllEntry: 
CamRestoreAllEntry
CamRestoreAllEntry: 
Cancel TsmTimer --------------
cccc||||wwww{{{{
CCCCDDDD
CCCCMMMM3333
ccccUUUU!!!!
CCK Reset CNT=%x
CCK_11M
CCK_1M 
CCK_2M 
CCK_5.5M
CCK_TXAGC[0x1C8]=0x%04x
CCX Cell Limit: %d dbm => CCK Tx power index : %d, Legacy OFDM Tx power index : %d, OFDM Tx power index: %d
CCX MpEventSetInformation
CCX OUI Match
CCX_AddLinkTestReply
CCX_AddLinkTestReplySet(): Seq: %#X, FrameNumber: %#X => IdxToAdd: %ld, SetSize: %ld
CCX_AddLinkTestRequestWaitQueue
CCX_AddLinkTestRequestWaitQueue(): queue is full, oldest link request will be dropped, SC(%#X)!!!
CCX_CAC_AddTs
CCX_CAC_AddTs(), TSID = %d
CCX_CAC_DelTs
CCX_CAC_DelTs(): TSID = %d
CCX_CallAdmissionControl
CCX_CallAdmissionControl(): Drop packet for invalid TS
CCX_CallAdmissionControl(): Drop packet for invalid TSID
CCX_CallAdmissionControl(): Drop packet for roaming or rejected call
CCX_CallAdmissionControl(): Queue packet for establishing TS
CCX_CheckLinkTestRequetQueued
CCX_CheckLinkTestRequetQueued(): link test reply stuck!!! LtReqQueueCheckCount(%d)
CCX_CheckLinkTestRequetQueued(): link test reply stuck!!! Reaches MAX(%d)! CCX_ResetLinkTestReplySet()--->!!!
CCX_Construct_DiagChnl_AssocReq
CCX_EventQuerySetInformation
CCX_FindLinkTestReplyByFrameNumber
CCX_FindLinkTestReplyByFrameNumber(): entry %ld matched to FrameNumber(%#X), RetryCnt(%d)
CCX_FindLinkTestReplyByFrameNumber(): No entry matched to SeqNo(%d), pCcxInfo->LtReplyRetrySetSize(%ld)
CCX_FindLinkTestReplyBySeqNo
CCX_FindLinkTestReplyBySeqNo(): entry %ld matched to SeqNo(%#X), RetryCnt(%d)
CCX_FindLinkTestReplyBySeqNo(): No entry matched to SeqNo(%d), pCcxInfo->LtReplyRetrySetSize(%ld)
CCX_GetPacketType
CCX_GetPacketType(): posMpdu->Length: %d, invalid IappLen: %#X!!!
CCX_HandleLinkTestReplySentComplete
CCX_HandleLinkTestReplySentComplete() => CCX_HandleLinkTestRequest()
CCX_HandleLinkTestReplySentComplete(): reset bSendingLtReply ------- 
CCX_HandleLinkTestReplySentComplete(): Update RetryCnt(%d) for SeqNo(%d)
CCX_HandleLinkTestRequest
CCX_HandleLinkTestRequest(): No last reply retry count available for FrameNumber(%#X)!!! pRetry(%p)!!!
CCX_IndicateIappPacket(): CPT_DIRECT_ROAM
CCX_IndicateIappPacket(): CPT_NEIGHBOR_LIST_RESPONSE
CCX_IndicateIappPacket(): CPT_RM_REQUEST
CCX_Initialize
CCX_MpEventQueryInformation
CCX_MpEventSetInformation
CCX_MpEventSetInformation(): OID_CCX_FRAME_LOGGING_MODE set failed because IHV support mode is not valid!
CCX_OnAssocOk
CCX_OnAssocOk()
CCX_OnBssReset
CCX_OnBssReset()
CCX_OnDirectRoam
CCX_OnDirectRoam(): No BSS found
CCX_OnLinkStatusWatchdog
CCX_OnLinkStatusWatchdog(): CCX Keep Alive for interval %ds
CCX_OnLinkStatusWatchdog(): In fake rx signal mode, RxSignalPower = %ld
CCX_OnLinkStatusWatchdog(): no BSS is selected => scan to roam, pRtBss(%p)
CCX_OnLinkStatusWatchdog(): RecvSignalPower(%ld) RetryRatio(%d), AdaptiveScanThresh = %ld, AdaptiveScanCheckCounter = %d
CCX_OnLinkStatusWatchdog(): RecvSignalPower(%ld),  AdaptiveScanThresh(%ld), LowestBssPowerThreshold(%ld), CurRetryRatio(%d) > RetryRatioLimit(%d)
CCX_OnLinkTestRequest
CCX_OnLinkTestRequest() => CCX_HandleLinkTestRequest()
CCX_OnLinkTestRequest(): add the link test request to queue.
CCX_OnLinkTestRequest(): set bSendingLtReply +++++++ 
CCX_OnNeighborListResponse
CCX_OnNeighborListResponse(): AdaptiveScanThresh = %d, RoamHystersis = %d
CCX_OnRoamFailed
CCX_OnRoamFailed()
CCX_OnRoamOk
CCX_OnRoamOk()
CCX_OnRoamOk(): roaming is successfull, LastRoamDelay(%d) ms
CCX_OnScanComplete
CCX_OnScanComplete()
CCX_OnScanComplete(): bTspecRejected(%d)
CCX_OnScanComplete(): NO better BSS to roam.
CCX_OnScanComplete(): RecvSignalPower(%ld), LowestBssPowerThreshold(%ld)
CCX_OnSetupJoinInfraInfo
CCX_OnSetupJoinInfraInfo()
CCX_OnSetupJoinInfraInfo(): bBssCcxRmEnable(%d), CcxRmState: %02X %02X
CCX_OnSetupJoinInfraInfo(): bCkipSupported(%d)
CCX_OnSetupJoinInfraInfo(): CurrCcxVerNumber(%d), BssCcxVerNumber(%d)
CCX_OnSetupJoinInfraInfo(): Update Tx Power dbm(%ld)
CCX_ParsePacket
CCX_ResetTryToScan
CCX_ResetTryToScan()
CCX_SSIDL_ConstructBSS
CCX_SSIDL_ConstructRSNIE
CCX_UpdateLinkTestReply
CCX_UpdateLinkTestReply(): FrameNumber(%#X), SeqNo(%#X), RetryCnt(%d)
CCX_UpdateNeighborList
CCX_UpdateNeighborList(): hNeighborTable is full
CCX4_CAC SIP parser
CcxCAC
CcxEnable
CCXGetSSIDLToBssList
CCXGetSSIDLToBssList(): ERROR! Not enough bssdesc entry in pMgntInfo->bssDesc(%d)!
CcxHandleNicSpecificExtension
CcxHandleNicSpecificExtension(): CCX_EVENT_OID:
CcxHandleNicSpecificExtension(): CCX_EVENT_SEND_PACKET
CcxHandleNicSpecificExtension(): CCX_EVENT_SEND_PACKET ==> IHV pkt complete (0x%p, retry=%x tsf=%I64x flags=%x).
CcxHandleNicSpecificExtension(): CCX_EVENT_SEND_PACKET=>CCX_TLV_802_11_PACKET===> packet size is invalid(%d)
CcxHandleNicSpecificExtension(): Unknown Event %x.
CcxIndicateEvent
CcxIndicateEvent(): alloc error!!!
CcxIndicateEvent(): tlvs is NULL
CcxIsCCXNicSpecificExtension
CcxOffLineDurUpLimit
ccxPowerIndexCheck
CcxRm
CcxSetAssocInfo
CcxSetAssocInfo(): AssocIELen = %x 
CcxSetKeepAlive
CcxUpdateTxCellPwr
CD:|$ 
CDt<@
CFEND_TH[0x236]=0x%02x
Change dbg op=%ld
Change debug print flag
Change print range
Channel
channel %d STAs %d Period %d
Channel are the Same, Wouldn't Change
ChannelPlan
ChannelPlan = %d
Chaos
ChargePump
Check Fail !! HT DSS/CCK Not Supported
CheckBSSSetting
CheckBSSSetting(): BSS Cap shows no privacy, but PairwiseEncAlgo is %d
CheckBSSSetting(): BSS Cap shows privacy, but PairwiseEncAlgo is NO_Encryption
CheckQBssLoad
CheckQBssLoad(): AAC = %d, MediumTime = %d
CheckQBssLoad(): insufficient bandwith, skip this bss
CheckRxTsIndicateSeq
CheckRxTsIndicateSeq(): out-off squence !! Packet Drop! IndicateSeq: %d, NewSeq: %d
CheckRxTsIndicateSeq(): Packet Drop! IndicateSeq: %d, NewSeq: %d
CheckRxTsIndicateSeq(): Window Shift! IndicateSeq: %d, NewSeq: %d
ChkFwCmdIoDone
ChnlWeight
Clevo Change EPHY REG3
clk_request,value_offset%x Clk_req %x
ClmAcc: %ld / ClmDurAcc: %ld => Clm: %02X (%d%%)
CloEnable
CM requested: %u, CM responded: %u
cmd string
cmd_inde 2
CMDQ_CTRL[0x14C]=0x%08lx
CMDR[0x40]=0x%04x
CmdSendPacket
CmdSendPacket(): CmdSendPacket_Fail
cmpk_DisplayTxStatistic
Cnt_Ofdm_fail = %ld, Cnt_Cck_fail = %ld, Cnt_all = %ld
common
CompanyName
ComputeAckRate
ComputeAckRate(): unsupported rate %#02X !!!
Config Method: 0x%X
ConfigAdapterInfo8192SForAutoLoadFail
ConfigurationTimeout: %u (ms)
ConstructAssociateReq
ConstructAssociateReq(): CCX_CAC_ConstructSignalTspec...
ConstructAssociateReq(): CCX_CAC_ConstructVoiceTspec...
ConstructAssociateReq(): to GO
ConstructAssociateReq(): to WLAN AP: %u
ConstructAssociateReq(): Trying to associate to an 802.11n HT AP
ConstructAssociateRsp
ConstructAssociateRsp(): %u bytes p2p ie appended
ConstructAssociateRsp(): P2P not enabled
ConstructAuthenticatePacket
ConstructBeaconFrame
ConstructCcxLinkTestReply
ConstructCcxLinkTestReply(): This packet FrameNo(%d), RetryCnt(%d), RxPower(%d)
ConstructCcxRmReport
ConstructDot11kRmReport
ConstructProbeRsp
ConstructReAssociateReq
ConstructReAssociateReq(): Append CCKM Req IE
ConstructReAssociateReq(): to GO
ConstructReAssociateReq(): to WLAN AP: %u
Constructure Beacon Mediaconnect %d  dot11CurrentChannel %d, RegDot11CurrentChannel %d
ContiuneDiffCount %ld
Copy rf state related data from default port to ext port
Copyright (C) 2013 Realtek Semiconductor Corporation                           
CornerChange
CountRxErrStatistics
CountRxErrStatistics:() CountRxDecryptErrorStatistics
CountWEPUndecryptableStatistics
CPT_EVENT_DIAG_CHNL_REQUEST
CPT_EVENT_DIAG_CLIENT_RPT_REQ
CPT_EVENT_LOG_REQUEST
CPT_LINK_TEST_REQUEST
CRC32 = %ld
Created a new Port 
CTRL Path switch fail
Ctrl rate tbl
CtsToSelfRate
CTWindow is not valid (%d)
CurAll=0x%08lX
CurCntCrc8Fail=0x%08lX
CurCntParityFail=0x%08lX
CurCntRateIllegal=0x%08lX
CurIGValue = 0x%lx, PreIGValue = 0x%lx, BackoffVal = %d
Current Channel %d
Current Data Index=%ld
Current state: %u
Current TX AMPDU Factor(Infrastructure) = %d
CurrentAddress=[%02x-%02x-%02x-%02x-%02x-%02x]
CurrentChannelBW=%d
currentRATR = %lx, targetRATR = %lx
CustomerID
Customized Scan List successfully constructed 
CustomizeRFBehavior
CW Disable
CWinMaxMin
CWRR[0x1E2]=0x%04x
CYcVl
D!d$ 
D!t$$H
D$ A:
D$ A;
D$ E3
D$ fA
D$ fB
D$ fD
D$ H;
D$ I;
D$ Lc
D$ M;
D$!8E
D$#8E
D$#A"
D$#D8
D$$8f
D$$fA#
D$%8E
D$%M;
D$(!T$ 
D$(!T$ E3
D$(!T$ L
d$(@8
d$(3D$@A
D$(8187
D$(D;
D$(E;
D$(E3
D$(E8t$ t"H
D$(f;
D$(fD
d$(H;
D$(I;
d$(s7
D$(tC
D$)fD
D$,fA#
D$,vT2
D$;fA
D$@@8
D$@A:
D$@A;
D$@E:
D$@E3
D$@f;D$Hu0H
D$@f+
D$@f9D$H
D$@fA+
D$@fD
D$@fD9|$H
D$@H9|$@t)
D$@H9L$@
D$@H9t$@t)
D$@I;
D$@t.
D$_\L;
D$`@8
D$`@8t$ht^@
D$`A:
D$`A;
D$`D;
D$`D8
d$`D8
d$`E8
D$`fD
d$`fD
D$`fE
D$`s&
D$`t.
D$</P
D$<A:
d$<fD9
D$=D;[+sM@
D$0"B
D$0@8
D$0A:
D$0D!D$(
D$0D:
D$0D9
D$0E:
D$0E2
D$0f;|$8
D$0f9\$8tM
D$0f9D$8u8H
D$0f9D$8u-H
D$0f9D$Hu
D$0f9L$8
D$0f9l$8
D$0f9l$8t
D$0f9l$8t6H
D$0f9l$8tUI
D$0f9l$8vDI
D$0f9t$8
D$0f9t$8t
D$0f9t$8tA
D$0f9t$8u
D$0fA
D$0fA;
D$0fA+
D$0fD
D$0fD9d$8
D$0fD9d$8t
D$0fD9d$8u!H
D$0fD9d$8vHH
D$0fD9l$8t
D$0fD9l$8u
D$0fD9t$8
D$0fD9t$8r
D$0fD9t$8u;H
D$0fD9t$8v
D$0H;
D$0H9\$0t
D$0H9t$0t
D$0Hk
D$0I;
D$0L;
D$0Lc
D$1fD
D$1s.
D$3Pf
D$4E3
D$8A"
D$8E3
D$8f;
D$8fA#
D$8fA;
d$8fD
D$8fE;
D$8H;
D$8I;
d$AE8(
D$aPH
D$C3I;
D$DA:
D$DH;
D$ED9K
D$GuaI
D$H@2
D$HA;
D$hD;
D$HD8
D$HD8X$t
d$HE;
D$hE3
D$HE3
d$hE3
D$HI;
D$hI;
D$HI;
d$hs-
D$I f
D$J+f
D$Ldf
D$N7f
D$OcL
D$P@8
D$p@8x!t$I
D$PA;
D$PA8
D$PC8D%
D$pD8
D$PD8
D$pE3
D$Pf9|$Xt
D$Pf9|$Xto
D$Pf9l$Xt
D$pfD
D$PfD
D$pfD
D$PfD
D$Pfk
D$PH9
d$pM;
d$ps.
D$Q0D$;E
D$qfA
D$sfD
D$TD9
D$WI;
D$x8H tMH
D$XA;
D$XD8
D$xE3
D$XE3
D$xE3
D$XE3
D$xE3
D$XE3
D$Xf;
D$XH;
D$XHk
D$Xt0
d$yA;
D."L9
D|@f;
D3|$$A3
D3|$,3t$ 
D3|$@
D3|$4
D3|$HA
D3D$$3
D3d$0
D3d$4A3
D3D$8A#
D3D$LA
D3D$P
D3E(I
D3E8@
D3EH@
D3Eh@
D3Ex@
D3EXA
D3l$4A
D3l$XA
D3L$XA
D3M$H
D3M4H
D3MdH
D3MDH
D3MtH
D3MTH
D3t$ A
D3T$ D3
D3t$,A
D3t$<#
D3T$D
D3t$PA
D8@ t
D8@"t
D8@"u
D8@)t)H
D8@)tAfA;
D8[:u
D8[;u
D8[=u
D8[>u
D8\$0t
D8\$8t
D8` t
D8`!t
D8`!t!
D8`!t5
D8`!taH
D8`#u
D8`%u
D8`'t
D8|$zt_D8
D8+u.D8k
D8>uQ
D82u-A
D86uKA
D88tGA
D8a!tW
D8a#t
D8a0t
D8B#u
D8c"uH
D8d$@t Hk
D8d$At:
D8d$BtFH
D8d$P
D8d$PtC
D8D$xt
D8e t
D8e!t
D8e"t
D8f"t
D8g t.H
D8g t1H
D8g u5
D8G!v
D8G,u
D8h t
D8H t
D8h t%fD9h0t
D8h!t
D8h!t%D8
D8h!u
D8h#t
D8H#t
D8h)tDD8
D8hPt(fD9h`t!
D8K u
D8k!vtH
D8l$ht
D8n"A
D8n"t
D8o!uFH
D8o$t
D8o&t
D8o(t
D8p t
D8p t&fD9p0t
D8p t:D8
D8P uLI
D8p!t
D8p!u
D8p$t
D8p)tBH
D8p)u
D8p0t
D8q t
D8q0t
D8QJtP
D8R0t
D8t$xtl
D8u t/H
D8u u6
D8u)t
D8w$t~D8
D8x u
D8x uE
D8x!u)D9
D8x(t
D8x)t
D9-/f
D9?tFH
D9-[A
D9[Nv[
D9\$0
D9`ptTD
D9`tv
D9|$`
D9="Y
D9-=C
D9=wY
D9502
D9BttRD
D9c0s@D
D9d$@
D9d$pu
D9-dD
D9-GC
D9htt*H
D9mtvT
D9-NB
D9-o@
D9otu9I
D9ptu
D9ptv
D9-Rv
D9-rw
D9-Su
D9t$0t
D9-vE
D9W^u
D9-xe
D9Xtv
D9xtv9H
D9ytv
DARFRC[0x1B0][0x1B4]=0x%08lx
DataBlockOffset = %d
DataEncAlg
dbg <flag> <value>
Dbg cmd help
DBG CMDs:
DBG_ConsoleInitialize
DBG_ConsoleInitialize <==
DBG_Display_Tx_Data
DBG_DmaPollCapStart=%d
DBG_PrintAllComp
DBG_PrintAllFlag
DBG_PrintFlagEvent
DBG_RateChangeCallBack
DBG_Verify_Console
DbgCmdWorkItem
dbgctrl
DBGFLAG 0    FQoS
DBGFLAG 1    FTX
DBGFLAG 11   FMP
DBGFLAG 12   FPWR
DBGFLAG 13   FDM
DBGFLAG 14   FDBGCtrl
DBGFLAG 15   FC2H
DBGFLAG 16   FBT
DBGFLAG 2    FRX
DBGFLAG 3    FSEC
DBGFLAG 4    FMGNT
DBGFLAG 5    FMLME
DBGFLAG 6    FRESOURCE
DBGFLAG 7    FBEACON
DBGFLAG 8    FISR
DBGFLAG 9    FPHY
DbgMode
DbgPrint
DbgRmCase
DbgRxDesc8192SE
DbgTxData8192SE
DbgTxDesc8192SE
DbgZone
dcConcurrentOperation
dcmd_92SDebug
dcmd_92SRegDump
dcmd_Dbg_Falg_Ctrl
dcP2PClientDiscoverability
dcP2PDeviceLimit
dcP2PInfrastructureManaged
dcP2PInvitationProcedure
dcServiceDiscovery
DDMA/FWOL Disable
DE A3 56 A2 CD DD 90 C7 A7 EC ED C5 EB B5 63 93 4F 46 04 52
Deactivate & free the NDIS_PORT  
DeActivateBAEntry
Deactivated Port Number %d
deauth
Debug command help
debug command table
debug control operation
DebugControl_InbandNoise(), Timeout 
Def BW=%d, offset=%d
Def Channel  %d  Ext Channel  %d 
Def Connected.
Def Not Connected.
Def_BW=%d,Def_Offset=%d,Ext_BW=%d,Ext_Offset=%d.
default
Default framesync (0x%x) = 0x%x 
Default initial gain (c50=0x%x, c58=0x%x, c60=0x%x, c68=0x%x) 
DefaultKey0
DefaultKey1
DefaultKey2
DefaultKey3
DefaultKeyId
DefaultKeyW0
DefaultKeyW1
DefaultKeyW2
DefaultKeyW3
DefaultTransmitKeyIdx: %d
DefragPacket
DefragPacket(): Number of RFDs (%ld) is lower than threshold (%ld).
Delay 20ms to wait PwrDomainProtect
Delay enter Fw LPS for DHCP, ARP, or EAPOL exchanging state.
Delay enter LPS for DHCP and ARP packets
DelaySendBeaconTimerCallback
DelaySendBeaconTimerCallback:() AP not started
DelayStartTimer
Delete
Deleted the Mac with port number %d
Delta-%d=%I64d
DeltaTotalThroughput(%ld) < 0 => 1. Update CheckInterval(%ld)
DeltaTotalThroughput(%ld) < 0 => 2. Update CheckInterval(%ld)
DeltaTotalThroughput: %ld > 0 => Keep turn on TCA
Desc Index=%d
Device Passwd ID: 0x%X
DeviceName: has a invalid length: %u
DevicePciASPMSetting
Df""T~**;
DfT~;
DgQP'
DialogToken: %u
DialogToken: %u, offset: %u
DialogToken: %u, state: %u
Didn't Find PCIe Capability
DIR list:
DIRECT-
Direction=0x%X
Disable
DisableCck
DISABLED
Disabled
DisableHWSecurityConfig8190(8190)-------- 
DisableHWSecurityConfig8192SE
DisableRateFallBack
DisableSilentReset
disassoc
Disassociate all peers.
Display TX Rate History --> Cmd_Idx = 15
DM_CheckFsync
dm_CheckMutualAuthentication
dm_CheckRateAdaptive
dm_CheckRateAdaptive(): 
dm_CheckTXPowerTracking_ThermalMeter
dm_CtrlInitGainAPByFalseAlarm
dm_DynamicTxPower
dm_EndHWFsync
dm_EndSWFsync
dm_FalseAlarmCounterStatistics
DM_FsyncTimerCallBack
dm_Init_Fsync
dm_InitDynamicTxPower
dm_initial_gain_STABeforeConnect
dm_InitializeTXPowerTracking_ThermalMeter
dm_RefreshRateAdaptiveMask
dm_StartHWFsync
dm_StartSWFsync
dm_SwitchBaseBandMRC
dm_SwitchBaseBandMRC(): idx(%d) SmoothedPWDB(%d), RSSI_A(%d), RSSI_B(%d)
dm_SwitchBaseBandMRC(): STA SmoothedPWDB(%d), RSSI_A(%d), RSSI_B(%d)
dm_SwitchBaseBandMRC(): Target calculated RSSI_A(%d), RSSI_B(%d)!!
dm_TXPowerTrackingCallback_ThermalMeter_92S
DMEM code download success, CPUStatus(%#x)
DMInitialGain
DmiRevision = %d
DoBeaconRequest
DoBeaconRequest(): Send ProbeReq at channel %d, waitQueue(%d)
DoBeaconRequest(): Unknown ScanMode: %d !!!
DoFrameRequest
Don't accept bith NoA with count = 1, mark NoA1 as disable
Don't responce!Maybe 4-way or 2-way handshaking
DoReserved
DOT11_CIPHER_KEY_MAPPING_KEY: %d
DOT11D
Dot11d_Reset
Dot11d_Reset()
Dot11d_UpdateCountryIe
Dot11d_UpdateCountryIe(): Invalid channel list length, skip it........
Dot11d_UpdateCountryIe(): Invalid country IE, skip it........
Dot11dEnable
double word
Download Firmware failed
DozeWorkItem
DozeWorkItemCallback
DozeWorkItemCallback() <--------- 
DozeWorkItemCallback() ---------> 
DozeWorkItemCallback(): marked as awake state again.
Driver Entry Return Fail = 0x%x
Driver indicate rx stuck 
Driver indicate TxCheckStuck()
driver is halted pRtThread(%s) cannot schedule !!!
Driver Sets default Cache Line Size...
Driver Sets default latency timer...
DriverDesc
DriverEntry
Drop the EAPOL-start packet.
DrvIFCompletePacket
DrvIFCompletePacket(): pNBL(%p), pNB(%p), pSGList(%p)
DrvIFIndicateAssociationComplete
DrvIFIndicateAssociationComplete(): failed to allocate memory for indication.
DrvIFIndicateAssociationComplete(): OpMode: %d
DrvIFIndicateAssociationStart
DrvIFIndicateConnectionComplete
DrvIFIndicateConnectionStart
DrvIFIndicateCurrentPhyStatus
DrvIFIndicateDisassociation
DrvIFIndicateIncommingAssociationComplete
DrvIFIndicateIncommingAssociationStart
DrvIFIndicateIncommingAssocReqRecv
DrvIFIndicateMultiplePackets
DrvIFIndicateMultiplePackets(): failed to allocate resource! status: %d
DrvIFIndicatePacket
DrvIFIndicatePacket(): failed to allocate resource! status: %d
DrvIFIndicatePackets
DrvIFIndicateRoamingComplete
DrvIFIndicateRoamingStart
DrvIFIndicateScanComplete
DrvIFIndicateScanStart
DrvInfoSize = %ld
DtimPeriod
Dump 92S register 
Dump all RF register. --> Cmd Index=5
Dump CMDR(0x40): %#x
Dump CPUCAUSE(0x31C): %#x
Dump CPUINST(0x318): %#x
Dump FW buffer
Dump SYS_CLKR(0x08): %#x
Dump TCR(0x44): %#x
DumpLoggedInterruptHistory8192SE
Duration: %u
dV22tN::
Dynamic Control --> Cmd_Idx = 13
Dynamic Control --> Cmd_Idx = 14
Dynamic Tx Power is enabled by Driver 
Dynamic Tx Power is enabled by FW 
e##F^
e%! 0
E(fE+
E:Qmr
E8H t
E8Qmv
E8s t
E8T$!H
E8u t
E8u!t
E8u!t:A
E9,$uBH
E9~tv
E9btv%I
E9ctv
E9ftv
E9itv
E9rtv
E9u*t
E9wtt2I
EAPOL-key
EAPOLkeyGetRSNIE
EAPOL-start
EDCAPARA_BE[0x1D8]=0x%08lx
EDCAPARA_BK[0x1DC]=0x%08lx
EDCAPARA_VI[0x1D4]=0x%08lx
EDCAPARA_VO[0x1D0]=0x%08lx
eeeezzzz
EEPROM
eeprom
EEPROM channel(%d) => CCK Tx power index: %d, Legacy OFDM Tx power index : %d, OFDM Tx power index: %d
EEPROM ChannelPlan = 0x%4x
EEPROM Customer ID: 0x%2x
EEPROM DID = 0x%4x
EEPROM ID(%#x) is invalid!!
EEPROM operate to R/W 
EEPROM PG FAIL
EEPROM SMID = 0x%4x
EEPROM SVID = 0x%4x
EEPROM VID = 0x%4x
eeprom_ParsingMap
eeprom_ParsingMap(): Invalid IN args! szStr: %p, pu4bVal: %p, pu4bMove: %p
EEPROMHT2T_TxPwr, Index %d = 0x%02x
EEPROMId = 0x%4x
EEPROMRegulatory = 0x%x
EFUSE
efuse
EFUSE CONFIG OK
EFUSE Content
EFUSE Content Write
EFUSE operate to R/W/Update for Real or Shadow Table
EFUSE PG FAIL
EFUSE PG OK
EFUSE Shadow Modify Content
EFUSE write finish
efuse_OneByteWrite
efuse_ParsingMap
efuse_PgPacketWrite
efuse_PgPacketWrite(): efuse_addr(%#x) Out of size!!
efuse_WordEnableDataWrite
EFUSE_Write1Byte
efuse_WriteAllMap
EfuseUsedBytes=%d
EfuseUsedPercentage=%d
EIFSTR[0x92]=%dus
Em|6""}
Empty
Enable
Enable AFE clock source
Enable AFE Macro Block's Bandgap
Enable AFE Mbias
Enable CPU fail ! 
Enable DBG COMP =
Enabled
ENABLED
EnableFwCalcDur
EnableHWSecurityConfig8192SE
EnableHWSecurityConfig8192SE(8190)-------- 
EnablePreAuth
EnableRxImmBA
EncAlgorithm
EncAlgorithm=%d, KeyIndex=0x%lX, IsGroupTransmitKey=%d, IsGroup=%d, KeyRSC=0x%I64X
End Active Scanning......
End Beacon Table mode......
End Passive Scanning......
Enter D0 Allow DM to execute
Enter-%d=%I64d
Entering a regulatory domain
entry index[%d],ratr_index[%d],WirelessMode[%d],Support 40M[%s],MacAddr[]
EOR = %ld
eRf Off/Sleep: %d times TcbBusyQueue[%d] !=0 before doze!
eRf Off/Sleep: %d times TcbBusyQueue[%d] !=0 but lower power state!
Err Arg
err cmd
err dbg
Err DIR
Error
error: my DeviceCapability is %u
error: peer DeviceCapability is %u, does not support invitation
Error: pEntry->perSTAKeyInfo.RxIV = 0x%16I64x
Error: tempIV = 0x%16I64x
error: unknown peer role: %u
Error: usBeaconInterval(%d) < %d
ExCreateCallback
ExCreateCallback: failed to create callback %lx
Execute Reset-%ld
Exit-%d=%I64d
ExNotifyCallback
Ext BW=%d, offset=%d
ExtChnlOffset=%d,pDefHTInfo->CurSTAExtChnlOffset=%d
ExtListenTimingDuration: %u
ExtListenTimingPeriod: %u
f!C8H
f!G8H
f""D~**T
f%! F
f;*s7D
f;_(sMA
f;{(r
f;4At
f;C(r
f;k(A
f;k(r
f;O!u
f;O(sb
f;s(r
f;T$@r
f;W(r
f+D$PfA
f+D$xM+
F4!($
f9_#uW
f9_#v
f9|$xt
f9D$(v
f9D$2u
f9D$4
f9D$8rBL
f9L$(r
f9L$8
f9L$8r
f9L$Hr
f9l$ht
f9l$ht%
f9l$Ht%
f9l$P
f9T$(
f9T$(r
f9x!v
f9z!v
f9z(u79
fA;?r
fA;?sMH
fA;>r
fA;3t
fA;7r
fA;7sHH
fA;7sMH
fA;A(r
fA;I(r
fA;i(s^fD;
fA;L4
fA;T$
fA;Z@t
Fail to dbg_SendSpecificPacket!!
Fail to enable ASPM. Cannot find the Bus of PCI(Bridge).
Fail=%I64d 
failed
Failed to activate NDIS port %d. Status = 0x%08x
Failed to allocate MDL
Failed to allocate memory for RecvContext
Failed to allocate NDIS port. Status = 0x%08x
Failed to allocate NetBufferList
Failed to deactivate NDIS port %d. Status = 0x%08x
Failed to pause port %d to change Op Mode. Status = 0x%08x
Failed to register miniport with NDIS. Status = 0x%x
Failed to restart port %d after change of Op Mode. Status = 0x%08x
Failed to set information to NetBufferList
failed to write registry.
FALSE
fB;L0
FBEACON
fD;{(
fD;{(D
fD;C(s@
fD;CIt%2
fD;G(sGH
fD;K(r
fD;k(s1
fD;KCu
fD;o#w
fD;O(sKH
fD;r(sP@
fD+|$@A
fD+d$(A
fD+d$0A
fD+l$@A
fD9,Hu7fE;
fD9@!vz
fD9\$(
fD9|$PA
fD9>u
fD9d$ht
fD9d$xt
fD9l$ht!
fD9M0v
fD9t$Xt
fD9w!
FDBGCtrl
fE;*s:A
fE;y(sBA
fE9|$
FEEPROM
ffff((((
fffffff
ffffHHHH
FFFFWWWW
fG;D2
FIFOPAGE1[0xC4]=0x%08lx PUB-BCN=-%ld-%ld
FIFOPAGE2[0xC8]=0x%08lx VI-VO=-%ld-%ld
FIFOPAGE3[0xCC]=0x%08lx BK-BE=-%ld-%ld
FIFOPAGE4[0xD0]=0x%08lx CMD-HCCA=-%ld-%ld
FIFOPAGE5[0xD4]=0x%08lx HI-MGN=-%ld-%ld
FileDescription
FileVersion
FillPmCapabilities
FillPmCapabilities(): NOT support Win7 wake-on-lan
FillPmCapabilities(): support Win7 wake-on-lan (%d)
FillPnpCapabilities
FillPnpCapabilities(): NOT support remote wake up
FillPnpCapabilities(): support remote wake up
FindBestChannel
FindBestChannel(): ChnlWeightList[%d]: Ch=%d, Weight=%d
FindBestChannel(): nBestChnlWeight=%d, BestChnl=%d
FindBestChannel(): nNumChnlFound=%d, InitMode=%d, Behavior=%d
Firmware Download Fail!! Dump related configurations.
Firmware Download Success!!
FirmwareCheckReady
FirmwareCheckReady(): Current RCR settings(%#lx)
FirmwareDownload92S
FirmwareDownload92S(): FirmwareVersion(%#x), Rev(%#x)
FirmwareDownloadCode
FirmwareDownloadCode() fail ! 
FirmwareDownloadCode(): CmdSendDownloadCode Failed!
FirmwareDownloadCode(): Length(%#x),bLastInitPacket(%#x)
FirmwareEnableCPU
FirmwareSetH2CCmd
FirmwareSetH2CCmd() HW_VAR_SET_TX_CMD: ElementID = %lX, Cmd_Len = %lX
FMGNT
FMLME
for utility debug page use only
Force TxFwInfo --> Cmd_Idx = 17
Forced Data Rate: %d Mbps
ForcedDataRate
ForcedPriority
ForTFI
Fragment = %ld
FragThresh
FREE_RT_OBJECT: %p size: %d
FreeDrvLogMemory
FreeDrvLogMemory(): DRV_LOG_POOLS_HANDLE is NULL!
FreeDrvLogMemory(): free %p, log pool %ld.
FreeDrvLogMemory(): free DRV_LOG_POOLS_HANDLE: %p
FreeN6TxContexts
FreeN6TxContexts(): 
FRESOURCE
from %u to %u.
FsyncTimer
FW Control --> Cmd_Idx = 16
Fw download from header.
FW Dynamic Control --> Cmd_Idx = 18
FW_STATUS_LOAD_EMEM FAIL CPU, Status=%x
FW_STATUS_LOAD_IMEM FAIL CPU, Status=%x
FW_Ver = %d
fwbuf
fwctrl
FwRWRF
G[r4  ] <Addr> (Size) 
G}?E;
g+V}+
G8@8l$0tO
gcCrossConnection
gcGroupFormation
gcIntraBSSDistribution
gcP2PGroupLimit
gcP2PGroupOwner
gcPersistentP2PGroup
gcPersistentReconnect
Gdbgcmd 1 0 20 -->
gen_RefreshLedState
gen_RefreshLedState:() pMgntInfo->RfOffReason=%x
Get a valid country IE
Get HW_VAR_CCX_CHNL_LOAD
Get HW_VAR_CCX_NOISE_HISTOGRAM
Get OID_RT_P2P_GO_INTENT: %u
Get OID_RT_P2P_LISTEN_CHANNEL: %u
Get OID_RT_P2P_OP_CHANNEL: %u
GetBeaconReport
GetBeaconReport(): idx: %d, nBcnRptLen: %d, posRmRpts->Length: %d, overflow => discrad this BSS
GetBeaconReport(): NumSta: %ld, posRmRpts->Length: %d, overflow => discrad this STA
GetBeaconReport(): unknown wireless mode: %d!
GetCCXChannelLoadReport
GetCCXChannelLoadReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
GetCCXNoiseHistogramReport
GetCCXNoiseHistogramReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
GetDot11kChannelLoadReport
GetDot11kChannelLoadReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
GetDot11kNoiseHistogramReport
GetDot11kNoiseHistogramReport(): ANPI = %x
GetDot11kNoiseHistogramReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
GetEEPROMSize8192SE
GetFrameReport
GetFrameReport(): no frame received!
GetFwLPS_Doze
GetHalDefVar8192SE
GetHalDefVar8192SE(): Unkown variable: %d!
GetHexValueFromString
GetHexValueFromString(): Invalid inpur argumetns! szStr: %p, pu4bVal: %p, pu4bMove: %p
GetHwReg8192SE
GetLinkControlField
GetLinkControlField(): Cannot Find PCIe Capability
GetLinkControlField(): Fail to find PCIe Capability
getNextTypeHead
GetNmodeSupportBySecCfg8192SE
GetPciBridegInfo
GetPciBusInfo
GetPciBusInfo(): Cannot Find Device(%X:%X)
GetPciBusInfo(): Find Device(%X:%X)  bus=%d dev=%d, func=%d
GetPS_Doze
GetRealtekIEContentForTurboMode
GetRealtekIEContentForTurboMode(): IE length too short.
GetRealtekIEContentForTurboMode(): Type=%d, do nothing.
GetRealtekIEContentForTurboMode(): Type=1, bRealtekCapType1Exist  =%d, RealtekCap=0x%X
GetScanInfo
GetScanInfo(): create new BssDesc at ch %d, bss index:%d
GetScanInfo(): create new BssDesc is %d HT mode
GetScanInfo(): ERROR pMgntInfo->state_Synchronization_Sta = %d
GetScanInfo(): ERROR! No bssdesc entry.
GetScanInfo(): Filter probe response at passive scaning channel(%d).
getSMBIOSTypeData
GetTs
GetTs=%d
GetTsmReport
GetTsmReport(): counters for TISD(%d) is not valid!!!
GetTsmReport(): on TISD(%d) MediaDelay: %ld => %ld
GetTsmReport(): on TISD(%d) MediaDelayHistogram[%d]: %d => %d
GetTsmReport(): on TISD(%d) PacketCount: %d
GetTsmReport(): on TISD(%d) PacketLossCount: %ld => %d
GetTsmReport(): on TISD(%d) TsPacketCount(%ld)/PacketCount(%ld) => Percentange(%d)
GetTwoPortSharedResource
GetValueFromBeaconOrProbeRsp
GetWOLWakeUpPattern
GetWOLWakeUpPattern(): CrcRemainder = %x
GetWOLWakeUpPattern(): Return and set HW to wake up for any packet which DA is our MAC addr.
GetWOLWakeUpPattern(): Return by  IPv4/IPv6 TCP SYN pattern.
gfff8S
gfffA
gfffffff
gfffffff9
gfffffffA
gffffffff
gfffffffH
gfffffffHk
gfffffffI
gfffffffL
gfffffffM
gggg++++
ggV}++
Ghelp 1   
Ghelp 1 3 
gK99r
GlobalDebugComponents = %I64x
GlobalDebugComponents = %lx
GlobalDebugComponents Definition
globalKeyInfo.KeyMgntTimer
GPAllocateParser
GPAllocateParser(): Failed to allocate parser
GPAllocateParser(): Failed to allocate parsers
GPAllocateParserVoWlanSIP
GPAllocateParserVoWlanSIP(): Failed to allocate memory
GPIOBack
GPIOChangeRF  - HW Radio OFF
GPIOChangeRF  - HW Radio ON, RF ON
GPIOChangeRFWorkItem
GPIOChangeRFWorkItemCallBack
GPIOChangeRFWorkItemCallBack() <--------- 
GPIOChangeRFWorkItemCallBack() ---------> 
GPIOChangeRFWorkItemCallBack(): Callback function breaks out!!
GPIOChangeRFWorkItemCallBack(): RF Change in progress! 
GPIOChangeRFWorkItemCallBack(): Rf is in switching state.
GPIOChangeRFWorkItemCallBack(): Silent Reseting!!!!!!!
GPIODelay
GpioDetectTimer
GpioDetectTimerCallback
GpioDetectTimerStart
GPIORFSW
GPIOTimer starter pwrdown=%d TimerGPIO=%d
GPParserCustomHandleSDP
GPParserCustomHandleSDP(): Invalid flag
GPParserCustomHandleUDP2SIP(): Failed to add a call
Gr2 800 20 -->
Group Formation Result:
GroupEncAlgorithm = %d
gu>t9
h AVH
H UVWATAUAVAWH
h VWATH
H WATAUAVAWH
H!_(H!_ 
H.data
h.rdata
H;^ u
H;M0sQH
H;w u
h\44Q
H=@KL
h8,4$
H9_At
H96t@H
H96t=H
H96t'H
H9D$ t
H9l$X
H9t$0t5H
H9t$0t5L
HA]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
HAL.dll
HalCustomizedBehavior8192S
HalfNMode
HalGetFirmwareVerison
HalGetFirmwareVerison: Firmware version is %d
HalGetFirmwareVerison: Firmware version is not retrive firmware
HalGetICInferiority8192SE
HalGetICInferiority8192SE(): IC_INFERIORITY_B!!
HalResetWorkItem
HalResetWorkItemCallback8192SE
HalResetWorkItemCallback8192SE()<===
HalResetWorkItemCallback8192SE()===>
HalRxCheckStuck8192SE
HalSetFwCmd8192S
HalSetFwCmd8192S(): USB can NOT IO!!
HalSetSysClk8192SE
HalSetSysClk8192SE(): Wait too long! Skip ....
HalSetSysClk8192SE():Value = %02X, return: %d
HaltAdapter8192SE
HalTxCheckStuck8192SE
Handle = 0x%x, typetotallen=%d
HandleCCXRmRequests
HandleCCXRmRequests(): RM_TYPE_BEACON
HandleCCXRmRequests(): RM_TYPE_CHANNEL_LOAD
HandleCCXRmRequests(): RM_TYPE_FRAME
HandleCCXRmRequests(): RM_TYPE_NOISE_HISTOGRAM
HandleCCXRmRequests(): ServingChnl: %d, switch to ReqChnl: %d
HandleCCXRmRequests(): switch back to OriginalChannel: %d
HandleCCXRmRequests(): wait StartTme: %ld us
HandleDot11kRmRequests
HandleDot11kRmRequests(): <======
HandleDot11kRmRequests(): ======>
HandleDot11kRmRequests(): ServingChnl: %d, switch to ReqChnl: %d
HandleDot11kRmRequests(): switch back to OriginalChannel: %d
HandleInterruptWorkItem
HandleRmRequests
HandleRmRequests(): Cannot acquire sw channel spin lock!
HandleRmRequests(): MgntIsLinkInProgress!
HandleRmRequests(): pRmRequests->cbIEs==0 !!!
HandleRmRequests(): Scan in progress!!! Wait 100ms...
Has no Defaul Connection.->20MHz
HCITRDMA Disable
HcL$$I
HCT:GetScanInfo(): discard for null ssid
HctTest
HE4\X
He4\X
help <DIR> 
Helper_ActiveScanChannelCount
Helper_BSSEntryExpireTime
Helper_BSSEntryMaxCount
Helper_InterScanTime
Helper_PassiveScanChannelCount
Helper_RSSILinkQualityThreshold
Helper_ScanRescheduleTime
HelperPortHandleMiniportPause failed 0x%x
HelperPortHandleMiniportRestart failed 0x%x
HHHH\
Hi There
HighPowerMechanism
HINIT
HIQ_CTRL[0x128]=0x%08lx
History %d DiffTime %I64d channel %d
HostPciASPMSetting
HT mixed mode
HT non-member protection mode
HT_EnableCck
HT_MimoPS
HTConstructCapability()
HTDebugHTCapability
HTDebugHTInfo
HTOnAssocRsp
HTParsingHTCapElement
HTParsingHTCapElement()
HTParsingHTCapElement(): HT Capability Element length is too long!
HTParsingHTInfoElement
HTParsingHTInfoElement()
HTParsingHTInfoElement(): HT Information Element length is too long!
HTSetBwModeByBeacon
HTSetConnectBwMode
HTSetConnectBwModeCallback
htt>H
HTUseDefaultSettingFromDefault
HW WoWLAN enable = %#x
HW_VAR_MRC: Turn off 1T1R MRC!
HW_VAR_MRC: Turn on 1T1R MRC!
HW_VAR_P2P_PS_MODE ====> Timeout = 0x%08X
HwConfigureRTL8192SE
HwSwRfOffD3
'I!t$`A
IAPP ID & Length: 0x%04X
IbssBeacon
IbssStartRequestCallback
IbssStartRequestCallback(): bJoinInProgress = %d
IbssStartRequestWorkItem
Idle_TCB=%ld
IfF9|
IfF9d
ignore ext port led action 
IIIImmmm
I'm Client
I'm GO
IMEM Ready after CPU has refilled.
In Check EAP Packet
In GetNmodeSupportBySecCfg8190Pci The GroupEncAlgorithm is %d
In GetNmodeSupportBySecCfg8190Pci The PairwiseEncAlgorithm is %d
in pci configration2, value_offset%x = %x
In Recieve CCX OID: OID_CCX_ASSOC_INFO
In WPS Copy EAP Packet
InactivePs
InactivePsTimer
InactivePsTimerCallback
InactivePsWorkItem
InactivePsWorkItemCallback
InactivePsWorkItemCallback(): Return and do not turn RF off beacuse DriverIsGoingToUnload.
InactivePsWorkItemCallback(): Set RF to %s.
Incorrect cmd index
INDEX-%d TID=%d SeqNum=%d FragNum=%d bMoreFrag=%d
Index=%ld
Indicate a scan complete event.
IndicateByDeauth
IndicateRxReorderList
Inferiority IC, update PA bias current, set RF(0x%x[3:0]) = 0x%x
InformationBuffer     = 0x%p
Init Adapter Finish
InitGainState
InitializeAdapter Fail
Initializeadapter: RF_Type%s
Initializeadapter:RF_Type(2T2R)
InitializeAdapter8192SE
InitializeAdapter8192SE()
InitializeAdapter8192SE(): Set FW Cmd FW_TX_FEEDBACK_CCX_ENABLE
InitializeAdapter8192SE(): Set MRC settings on as default!!
InitializeAdapterCommon
InitializeAdapterThread
InitializeAdapterWorkItem
InitializeAdapterWorkItemCallback(): complete OID(%p) ++++++++
InitializeTimer
InputBufferLength     = %d
InputBufferLength too short
InsertRxReorderList
InsertRxReorderList(): Duplicate packet is dropped!! IndicateSeq: %d, NewSeq: %d
InsertRxReorderList(): Pkt insert into buffer!! IndicateSeq: %d, NewSeq: %d
InstanceCount = %d
IntegrityFail(): AP mode, CurrentTimeSlot             =%I64d
IntegrityFail(): AP mode, disconnects all associated STAs
IntegrityFail(): AP mode, TimeSlot_lastIntegrityFailed=%I64d
InternalName
INTO     %s 
Invalid length
Invalid preamble mode, dot11CurrentPreambleMode: %d...
Invalid request type %d for OID_DOT11_CREATE_MAC
Invalid request type %d for OID_DOT11_DELETE_MAC
Invalid reset type: %u.
INVITE sip:
IoWMIOpenBlock
IoWMIOpenBlock() fail, NtStatus = 0x%x
IoWMIQueryAllData
IoWMIQueryAllData() Fail!, NtStatus = 0x%x
IoWMIQueryAllData() Success, 
IoWMIQueryAllData(), Buffer to small, 
IPS return %d
IPS sta=%d leave cnt=%ld
IPSDisable
IPSDisable(): Disable IPS mode
IPSEnable
IPSEnable(): Do nothing by Dbg Control disable Power save
IPSEnable(): Enable IPS mode
IPSEnter
IPSEnter(): Turn off RF.
IPSLeave
IPSLeave(): pPSC->bInactivePs %d , bSwRfProcessing  %d  RfOffReason %x
IPSLeave(): rtState %d.
IPSLeave(): Turn on RF.
IPSReturn
IPSReturn(): IPS Disable
IPSReturn(): IPS Enable
IPSReturn(): pPSC->bInactivePs:%x, pPSC->bIPSModeBackup:%x
IPSReturn(): Return to previous IPS mode
IPSReturn(): There is other reason(%x) that cannot leave IPS mode
IQK_RECOVERY
IS NOT
IsDefaultKey = %d
IsInDesiredBSSIDList(): NumDot11DesiredBSSIDList is zero
ISR time capture etst
IV1 = %08lx
J D8!t
J0%PC
J0A\'(
j9D9.wh
J9t+ u
Jacken -> PCI_BAR0 = %x 
Jacken -> PCI_BAR1 = %x 
Jacken -> PCI_CommandRegister = %x 
Jacken -> PCI_InterruptLine = %x 
Jo\r8$W
JoinConfirm
JoinConfirm(): Unknown OP mode
JoinRequest
JoinRequest(): 
JoinRequest(): RT_JOIN_IBSS.......
JoinRequest(): RT_JOIN_INFRA.......
JoinRequest(): RT_NO_ACTION !!!!!!!!!!!!
JoinRequest(): RT_START_IBSS.......
JoinRequest(): unknown JoinAction (%d)!!!
JoinRequest():RT_START_IBSS - Do not start IBSS at channel(%d).
JoinRequestReschedule
JoinTimeout
JoinTimeout(): bJoinInProgress = %d
JoinTimeout(): can't perform link retry any more => reset roaming and Synchronization_Sta_State!
JoinTimeout(): indicate disconnect
JoinTimeout(): Start an IBSS
JoinTimeout(): try to link again
JoinTimer
K fD9
k VWATAUAVH
k VWATH
k*D9C
K+D8Q
k0+8j
KeAcquireSpinLockRaiseToDpc
KeBugCheckEx
Keep-alive refresh rate: %d
KeepAliveLevel
KeInitializeEvent
KeReleaseSpinLock
KeSetEvent
KeStallExecutionProcessor
key index: 0x%x
key Length: 0x%x
KeyIndex = %d
KeyLength = %d
KeyMaterial = %13s
KeyMgntTimeout
KeyMgntTimeout(): equal TimeSlot. Not to retry.
KeyMgntTimeout(): Retry! [TimeSlot:%I64d, TimeoutCtr:%d]
KeyMgntTimeout: AsocNum=%d, CurrentTimeSlot=%I64d
KfF9t
kHH96tz
KHOIHGIUCCHHII
kkkk::::
kkkkoooo
L!d$8L!
L!L$pE2
L$ $?
l$ 3D$4A#
L$ A3
L$ D+
l$ E3
L$ H3
L$ Hi
L$ Ic
L$ SUVWATAUAVAWH
L$ SVWH
L$ UVWATAUAVAWH
l$ VWATAUAVH
l$ VWATAVAWH
l$ VWATH
l$ WATAUAVAWH
l$ WH
l$$3D$PA
l$(A3
l$(D8
L$(E3
L$(f;
l$(fD
L$(H3
L$(Hi
L$(I;
L$,A3
L$:fD
l$@@8
L$@D9{*u
L$@E3
l$@E3
L$@E3
L$@fA;
L$@fD
L$@fD;
L$@H;
L$@H3
L$@I;
l$@Ic
L$@t1
L$`A:
L$`E3
L$`fD+
L$`H;
L$`H3
L$`Hc
L$`I;
L$`Lc
L$`M;
l$`usH
L$0A"
L$0E3
l$0E3
L$0E3
L$0f9A
L$0H;
L$0H3
L$1H;
L$2E3
l$2f9
L$2fA;
l$2uMH
L$4E3
L$8f;
l$8f;
L$8f;
l$8f;
L$8f;
l$8fA;
L$8fA;
l$8fA;
L$8fA;
L$8fD;
L$8H;
L$8H3
L$'8M
l$AfA
L$BE3
l$DA#
L$hA;
L$hD;
l$HD8
L$HD8Y$t
L$hE3
L$HE3
L$hE3
L$HE3
L$Hf;
L$HfD
L$HfE;
L$HH;
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$P@8
L$PA3
L$PD;
l$pD8
L$pE3
l$PE3
L$pE3
L$PE3
L$pE3
L$PE3
l$pE3
L$PE3
L$pfA
L$PfD
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
l$PI;
l$pI;
l$TA3
L$xE3
L$XE3
l$XfA;
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
l$xI;
l$xs.
L;\$0u H;
L;l$8
l_x\9|
l389~
L4PE3
L9$&XE
'L9%&
L9|$xt
L9AAu
L9d$0t#H
L9d; 
L9o t3A:
Last segment
LeaveAllPowerSaveMode
LeaveAllPowerSaveMode()------
LED9 CurrLedState %d
LedAction %d, 
LedControl8192SE
LegalCopyright
LeisurePs Off!!
LeisurePs On!!
LeisurePSEnter
LeisurePSEnter(), returned by Dbg Control disable Power save
LeisurePSEnter()...
LeisurePSEnter(): Enter 802.11 power save mode...
LeisurePSLeave
LeisurePSLeave()...
LeisurePSLeave(): Busy Traffic , Leave 802.11 power save..
Length=[%ld]
Lenovo ID Match, Mutual Authentication check!!
Link Control Register =%x
LinkQualityReportTimer
LinkQualityReportTimerCallback
LinkQualityReportTimerCallback(): failed to allocate resources for link quality reporting.
ListenChnl: %u
LiveTime
Lj&&lZ66~A??
LjlZ~A
llllppppHHHHPPPP
llllVVVV
Lower Channel
LowRfdThreshold
LPS Doze should be return beacuse it is in PNP set power progress.
LPS_AwakeComplete
LPS_AwakeComplete(): RF is turn on ++++++++++
LPS_DozeComplete
LPS_DozeComplete(): notify AP we are goinging to doze ----------
LPS_DozeComplete(): RF is turn sleep ----------
LPS_DozeComplete(): shecule a timer to wake up in %d ms....
LPS_DozeComplete(): Starts to turn RF off ----------
LPS_DozeComplete(): TODO............
LPS_DozeComplete(): Wait too long! Skip ....
LPS_DozeStart
LPS_DozeStart(): marked as dozed state
LPS_OnBeacon_BSS
LPS_OnBeacon_BSS(): bBufOurFrame(%d), bBufMcstFrame(%d), AID (%d)
LPS_OnBeacon_BSS(): no packets to send
LPS_OnBeacon_BSS(): notify AP we are awaked ++++++++++ Send PS-Poll
LPS_OnBeacon_BSS(): notify AP we are awaked ++++++++++ SendNullFunctionData
LPS_OnBeacon_BSS(): -SeqNum=0x%x (%d)
LPS2RDisable
LPSIntvl
M;;va
m=audio
M3fU3
M9$$u
MAC Config failed
MAC Config Finished!
MAC Config Start!
MAC ID = 
MAC_OnEAPOL(): EAPOL packet with unknown type.
MAC_OnEAPOL(): PacketLength=%d
MacConfigAfterFwDownload
MacConfigAfterFwDownload OK
MacConfigBeforeFwDownload
MacConfigBeforeFwDownloadASIC(): Polling TXDMA_INIT_VALUE timeout!! Current TCR(%#x)
MACID = %ld
Matched Data = %s
MatchingByRule
MatchTypeFormatLen = %d
matchTypeTotalLen = %d
Max AMPDU Factor = %d
Max AMSDU Size = %s
MAX Poll Range[%ld]    
MAX-%d=%I64d
Max=%d Min=%d
MaxSPLength
MBIDCTRL[0x4F]=0x%02x
MCS Rate Set = [%x][%x][%x][%x][%x]
MCS_0
MCS_1
MCS_10
MCS_11
MCS_12
MCS_13
MCS_14
MCS_15
MCS_2
MCS_3
MCS_32
MCS_4
MCS_5
MCS_6
MCS_7 
MCS_8
MCS_9
MCSTxPowerLevelOriginalOffset[%d][0] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][1] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][2] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][3] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][4] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][5] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][6] = 0x%lx
Measure Report of Beacon Signal Power = %d dBm
MeasurementMode: 0x%02X
MeasurementToken: %d
MeasurementType(%d) is not yet implemented!
MeasurementType: %d
Media Delay = %08lX
MEDIA_STATUS_CONNECT !!
MEDIA_STATUS_DISCONNECT !!
MEDIA_STATUS_KEEP_CONNECT !!
MEDIA_STATUS_KEEP_DISCONNECT !!
Method request for OID 0x%08x not supported
MGNT Customer ID: 0x%2x
Mgnt_Indicate
MgntActQuery_802_11_BSSID_LIST
MgntActQuery_P2PScanList
MgntActQuery_P2PScanList(): %u items indicated
MgntActQuery_P2PScanList(): bytes needed: %u, given: %u
MgntActQuery_P2PScanList(): sizeof ClientInfoDesc: %u, ScanListSize: %u
MgntActQuery_RT_11N_USER_SHOW_RATES
MgntActQuery_RT_11N_USER_SHOW_RATES():rate(%#x)
MgntActSet_802_11_ADD_KEY
MgntActSet_802_11_ADD_KEY(): SecLvl>0, EncAlgorithm=%d, IsGroup=%d
MgntActSet_802_11_ADD_KEY: Set Retry count to be 0!
MgntActSet_802_11_ADD_WEP
MgntActSet_802_11_BSSID
MgntActSet_802_11_BSSID: %02X%02X%02X%02X%02X%02X
MgntActSet_802_11_BSSID_LIST_SCAN
MgntActSet_802_11_CHANNEL
MgntActSet_802_11_CHANNEL(): reject to switch channel to %d under AP mode auto-channel selection process...
MgntActSet_802_11_CHANNELPLAN
MgntActSet_802_11_CHANNELPLAN(): not support this channel plan (%d > MAX: %d). (HW reject)
MgntActSet_802_11_CHANNELPLAN(): reject to set channel plan. (HW reject)
MgntActSet_802_11_CHANNELPLAN(): set channel plan (%d)
MgntActSet_802_11_CustomizedScanRequest
MgntActSet_802_11_DISASSOCIATE
MgntActSet_802_11_DISASSOCIATE() ===> AP_DisassociateAllStation
MgntActSet_802_11_DISASSOCIATE() ===> MgntDisconnectAP
MgntActSet_802_11_DISASSOCIATE() ===> MgntDisconnectIBSS
MgntActSet_802_11_INFRASTRUCTURE_MODE
MgntActSet_802_11_INFRASTRUCTURE_MODE(): %d
MgntActSet_802_11_PMKID
MgntActSet_802_11_PMKID(): Length=%ld
MgntActSet_802_11_RTS_THRESHOLD
MgntActSet_802_11_SSID
MgntActSet_802_11_SSID(): Dummy SSID! Return!!!!
MgntActSet_802_11_SSID(): In WPS process, do not connect to the same AP
MgntActSet_802_11_SSID(): mActingAsAp &&  bAutoSelChnl ==> MgntLinkRequest
MgntActSet_802_11_SSID(): mActingAsAp, Dummy SSID! Not to set it!
MgntActSet_802_11_SSID():pMgntInfo->bScanInProgress=true Return!!!!
MgntActSet_802_11_WIRELESS_MODE
MgntActSet_802_11_WIRELESS_MODE(): WirelessMode(0x%X) is not supported (0x%X)!
MgntActSet_802_11_WMM_MODE
MgntActSet_802_11_WMM_MODE(): WMM is %s
MgntActSet_802_11_WMM_UAPSD
MgntActSet_802_11_WMM_UAPSD(): UPSD is %X
MgntActSet_802_3_MULTICAST_LIST
MgntActSet_802_3_MULTICAST_LIST(): Length = %ld, bAcceptAllMulticast = %d
MgntActSet_Accepted_STA_Address
MgntActSet_ApType
MgntActSet_ApType(): %u
MgntActSet_EnterTurboMode
MgntActSet_EnterTurboMode(): +++Enter TCA
MgntActSet_EnterTurboMode(): ---Leave TCA
MgntActSet_Locked_STA_Address
MgntActSet_P2PMode
MgntActSet_P2PMode(): bP2PMode(%u), bGO(%u), LsnCh(%u), OpCh(%u), GOIntent(%u)
MgntActSet_P2PProvisionIE
MgntActSet_P2PProvisionIE(): Dev Passwd ID: %u
MgntActSet_Passphrase
MgntActSet_PER_STA_DATA_RATE
MgntActSet_Rejected_STA_Address
MgntActSet_RF_State
MgntActSet_RF_State - eRfon reject pMgntInfo->RfOffReason= 0x%lx, ChangeSource=0x%lX
MgntActSet_RF_State - eRfon RfOffReason= 0x%lx, ChangeSource=0x%lX
MgntActSet_RF_State(): Action is allowed.... StateToSet(%d), RfOffReason(%#lX)
MgntActSet_RF_State(): Action is rejected.... StateToSet(%d), ChangeSource(%#lX), RfOffReason(%#lX)
MgntActSet_RF_State(): RF Change in progress! Wait to set..StateToSet(%d).
MgntActSet_RF_State(): Turn off RF and enter SS mode!!
MgntActSet_RF_State(): Turn on RF and leave SS mode!!
MgntActSet_RF_State(): Wait 1 ms (%d times)...
MgntActSet_RSNA_ADD_DEAULT_KEY
MgntActSet_RSNA_ADD_MAPPING_KEY
MgntActSet_RSNA_REMOVE_DEAULT_KEY
MgntActSet_RSNA_REMOVE_MAPPING_KEY
MgntActSet_RT_TurboMode(): pForceType(%d)
MgntActSet_RT_TurboModeType
MgntActSet_RT_TurboModeType(): Invalid Value(%d)!
MgntActSet_TX_POWER_DBM
MgntActSet_TX_POWER_DBM(): powerInDbm(%ld)
MgntActSet_TX_POWER_DBM(): powerInDbm(%ld), UpdateTxPowerWorkItem is in progress!!!
MgntActSet_TX_POWER_LEVEL
MgntActSet_TX_POWER_LEVEL(): Power Range from Max TX Power Dbm(%ld) To Min Dbm(%ld)
MgntActSet_TX_POWER_LEVEL(): Set TX Power(TX Power Level: %d) to Dbm(%ld)
MgntAllocMemory
MgntCheckForwarding
MgntCheckForwarding(): Failed to forward packet from WDS to BSS!
MgntClearRejectedAsocAP
MgntClearRejectedAsocAP()...........
MgntConnectOtherBss
MgntConnectOtherBss(): Connect other = %d!
MgntConnectOtherBss(): Roam Retry = %d!
MgntDetermineApType
MgntDetermineApType(): pMgntInfo->NdisVersion: %u, ApType is determined to be: %u
MgntDisconnect
MgntDisconnect() ===> AP_DisassociateAllStation
MgntDisconnect() ===> MgntDisconnectAP
MgntDisconnect() ===> MgntDisconnectIBSS
MgntDisconnectAP
MgntDisconnectIBSS
MgntFilterReceivedPacket
MgntFilterReceivedPacket():  station with Encryption Algrithm. Only EAPOL packets allowed.
MgntFilterReceivedPacket():  station without Encryption Algrithm.
MgntFilterReceivedPacket(): <<<<<<<<<< Leave APSD service period <<<<<<<<<<
MgntFilterReceivedPacket(): Filter broadcast frame from this station.
MgntFilterReceivedPacket(): filter frames from different BSS.
MgntFilterReceivedPacket(): Filter Multicast from this station.
MgntFilterReceivedPacket(): Not AMSDU, but packet lenght > 2k, Dropped!!!===
MgntFilterReceivedPacket(): pMgntInfo->mDisable
MgntFilterReceivedPacket(): Reject Encrypted Management frame except 3rd auth frame.
MgntFilterReceivedPacket(): return FALSE if station is not associated.
MgntFilterTransmitPacket
MgntFilterTransmitPacket(): bWithAddr4 but WdsMode is WDS_DISABLED!
MgntFilterTransmitPacket(): Destination STA is not associated, pRaddr: %02X-%02X-%02X-%02X-%02X-%02X!
MgntFilterTransmitPacket(): unknown WDS AP, pRaddr: %02X-%02X-%02X-%02X-%02X-%02X!
MgntFreeMemory
MgntGetEncryptionInfo
MgntIndicateMediaStatus
MgntLinkRequest
MgntLinkRequest(): %s....
MgntLinkRequest(): chnl: %u, bw: %u, Offset: %u
MgntLinkRequestReschedule
MgntLinkRequestReschedule(): Dont scan beacuse RF is OFF.
MgntLinkRequestReschedule(): Under inactive ps mode, turn on RF and continue.
MgntLinkRetry
MgntLinkRetry(): bForceRetry(%d) JoinRetryCount(%d)
MgntLinkRetry(): Dummy SSID! Not to retry!
MgntLinkRetry(): return FALSE for JoinRetryCount(%d) >= MAX_JOIN_RETRY_COUNT(%d)
MgntLinkRetry(): scan is in progress.
MgntLinkStatusProcWhenRFIsOff
MgntLinkStatusProcWhenRFIsOff(): ------- Keep DISCONNECTED ------- DisconnectedSlotCount(%d)
MgntLinkStatusProcWhenRFIsOff(): RF is OFF, mAssoc(%d), mIbss(%d), OpMode(%d), Regdot11networktype(%d)
MgntLinkStatusProcWhenRFIsOff(): RF OFF => inidcate disconnect and no more roaming
MgntLinkStatusWatchdog
MgntLinkStatusWatchdog(): --- Become DISCONNECTED --- TotalRxBcnNum(%ld) TotalRxDataNum(%ld)
MgntLinkStatusWatchdog(): ------- Keep DISCONNECTED ------- DisconnectedSlotCount(%d)
MgntLinkStatusWatchdog():  RxUnicastOk(%ld) TxOk(%ld)
MgntLinkStatusWatchdog(): +++++++ Keep CONNECTED +++++++ TotalRxBcnNum(%ld) TotalRxDataNum(%ld)
MgntLinkStatusWatchdog(): AdHoc mode => inidcate disconnect and no more roaming
MgntLinkStatusWatchdog(): Infra. client => start roaming...
MgntLinkStatusWatchdog(): Infra. client RoamingFailCount(%d)
MgntLinkStatusWatchdog(): No BCN and check again
MgntLinkStatusWatchdog(): RF is ON ,mAssoc(%d), mIbss(%d), OpMode(%d), Regdot11networktype(%d)
MgntLinkStatusWatchdog(): RF is ON ,ReturnPoint(%d), bSetPnpPwrInProgress(%d), bDriverIsGoingToPnpSetPowerSleep(%d)
MgntLinkStatusWatchdog(): RxOk: %ld TxOk: %ld RxUnicastOk: %ld => bBusyTraffic: %d
MgntQuery_AggregationCapability
MgntQuery_DataFrameTxRate
MgntQuery_DataFrameTxRate(): nonassociated STA: %02X-%02X-%02X-%02X-%02X-%02X
MgntRoamComplete
MgntRoamComplete(): Roaming is %s!!!
MgntRoamRetry
MgntRoamRetry(): Roaming Type = %d, RoamingFailCount = %d (Limit = %d)
MgntTranslateNdisVersionToRtNdisVersion
MgntTranslateNdisVersionToRtNdisVersion(): %X => %X
MGTQ_CTRL[0x124]=0x%08lx
Middle segment
MimoPs
MIN-%d=%I64d
minor issue: pEntry->perSTAKeyInfo.RxIV = 0x%16I64x
minor issue: tempIV = 0x%16I64x
Mismatch auth_alg
Mismatch auth_alg: %#X
MlemAuthenticateRequest_Confirm(): bJoinInProgress = %d
MlmeAssociateConfirm
MlmeAssociateConfirm(): -fail 0, bJoinInProgress = %d
MlmeAssociateConfirm(): failed(%d) => Asoc retry for AsocRetryCount(%d) < RT_ASOC_RETRY_LIMIT(%d)
MlmeAssociateConfirm(): failed(%d) => No Retry! Try to connect to the other one BSS!!
MlmeAssociateConfirm(): Flag=0x%X, bIsMIC=%d, bIsKP=%d
MlmeAssociateConfrim(): - success, bJoinInProgress = %d
MlmeAssociateRequest
MlmeAssociateRequest(): Send Associate Req
MlmeAssociateRequest(): Send Reassociate Req
MlmeAssociateRequest(): Set CCX Info Timer!
MlmeAuthenticateRequest
MlmeAuthenticateRequest_Confirm
MlmeAuthenticateRequest_Confirm(): auAlg(%d)
MlmeAuthenticateRequest_Confirm(): Auth retry for AuthRetryCount(%d) < RT_AUTH_RETRY_LIMIT(%d)
MlmeAuthenticateRequest_Confirm(): Change auth alg
MlmeAuthenticateRequest_Confirm(): ERROR!!
MlmeAuthenticateRequest_Confirm(): No more Auth retry for AuthRetryCount(%d) >= RT_AUTH_RETRY_LIMIT(%d)
MlmeAuthenticateRequest_Confirm(): Reset roaming and AuthStatus!
MlmeOnAssocOK
MlmeOnAssocOK(): Join a BSS
MLT[0x9D]=0x%02xs
MMfU33
MmMapIoSpace
MmMapLockedPagesSpecifyCache
MmUnmapIoSpace
Modify dedicated RF register --> Cmd Index=8
Modify RF-%ld Addr%02lx~%02lx=%02lx
More Than
MPDU Density = %d
MPDU_Density
MpEventQueryInformation(): Query OID OID_CCX_LAST_BCN_TIME fail ==> media is disconnected!
MpEventQueryInformation(): Query OID OID_CCX_LAST_BCN_TIME invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_NUM_TX_BUFFER invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_STA_STATISTICS_2 invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_TSF
MpEventQueryInformation(): Query OID OID_CCX_TSF invalid length (%d < %d)
MPHalt IDR0: MAC ID %02x-%02x-%02x-%02x-%02x-%02x
MPQueryInformation
MPReadRegistry() failed, Status: %#X!
MpSend POll RANGEm=[%ld]
MPSetInformation
MreToken = %d, MreMode = %d, MreType = %d
MSR[0x4C]=0x%02x
Mutual authenticaiton fail, cnt = %d!!
Mutual authenticaiton success, cnt = %d!!
Mutual Authentication, Find valid key !!
Mutual Authentication, Key is not matched.!!
MutualAuthenticationFail = %d!!
MutualAuthenticationFailCnt = %d!!
MutualAuthenticationWorkItem
MutualAuthenticationWorkItemCallback
MY68L1
n?uNH
N5CQueryInformation(): Number of Network Type:%d
N6_STATE_AP_INCOMING_ASOC_COMPLETE
N6_STATE_AP_INCOMING_ASOC_REQ_RECVD
N6_STATE_AP_INCOMING_ASOC_STARTED
N6_STATE_ASOC_COMPLETE
N6_STATE_ASOC_START
N6_STATE_CONNECT_COMPLETE
N6_STATE_CONNECT_START
N6_STATE_DISASOC
N6_STATE_DISASOC DO IT  !!
N6_STATE_INITIAL
N6_STATE_ROAM_COMPLETE
N6_STATE_ROAM_START
N6_VERIFY_OBJECT_HEADER_DEFAULT(): mac addr list rev: %u vs %u.
N6_VERIFY_OBJECT_HEADER_DEFAULT(): obj type: %u vs %u.
N6_VERIFY_OBJECT_HEADER_DEFAULT(): size: %u vs %u.
N62CAllocateComponet
N62CAllocateComponet(): failed to allocate memory for pNdis62Common.
N62CAllocateComponet(): failed to allocate memory for the HELPER structure.
N62CAllocateExtAdapter
N62CAllocateExtAdapter(): failed to allocate ExtAdapter!!!
N62CAllocateExtAdapter(): failed to allocate MGNT_INFO for the ExtAdapter!!!
N62CAllocateExtAdapter(): failed to allocate RT_NDIS6_COMMON for the ExtAdapter!!!
N62CAPDisconnectAfterSTANewConnected
N62CApEnumPeerInfo
N62CAPIndicateDisassociation
N62CAPIndicateIncomAssocComplete
N62CAPIndicateIncomAssocComplete(): Indicate CCX NDIS_STATUS_DOT11_INCOMING_ASSOC_COMPLETION!
N62CAPIndicateIncomAssocReqRecv
N62CAPIndicateIncomAssocReqRecv(): Indicate CCX NDIS_STATUS_DOT11_DISASSOCIATION!
N62CAPIndicateIncomAssocReqRecv(): Indicate CCX NDIS_STATUS_DOT11_INCOMING_ASSOC_REQUEST_RECEIVED!
N62CAPIndicateIncomAssocStart
N62CAPIndicateIncomAssocStart() failed to allocate memory for DOT11_INCOMING_ASSOC_STARTED_PARAMETERS
N62CAPIndicateIncomAssocStart(): Indicate CCX NDIS_STATUS_DOT11_INCOMING_ASSOC_STARTED!
N62CAPPortQueryInformation
N62CAPPortSetInformation
N62CAPResetRequest
N62CApSendDisassocWithOldChnlWorkitem
N62CApSendDisassocWithOldChnlWorkitemCallback
N62CCompletePendingOidRequest
N62CCreateDeleteMacWorkItemCallback
N62CCreateMac
N62CDeleteMac
N62CDirectOidRequest
N62CExtAdapterHandleNBLInWaitQueue
N62CFreeComponet
N62CFreeExtAdapter
N62CHandleMiniportPause
N62CHandleOIDProcess
N62CHandleOidRequest
N62CHelperActivateNdisPort
N62CHelperAllocateNdisPort
N62CHelperDeactivateNdisPort
N62CHelperFreeNdisPort
N62CHelperHandleMiniportPause
N62CHelperHandleMiniportRestart
N62CHelperPortCreateMAC
N62CHelperPortDeleteMAC
N62CHVLInitialize
N62CHVLInitialize: Initialize HVL
N62CInitialize
N62CInitialize failed
N62CInitialize(): N62CAllocateComponet() failed
N62CInitialize(): N62CAllocateExtAdapter() failed!!!
N62CInitializeExtAdapter
N62CPortSetOperationMode
N62CPreProcessOID
N62CProcessOID
N62CQueryAdditionalIE
N62CQueryAdditionalIE: BeaconIELen = %u, ProbeRspIELen = %u.
N62CSelectReceiveAdapter
N62CSelectReceiveAdapter(): recv DATA to port: %u
N62CSet80211Attributes
N62CSet80211Attributes(): failed to allocate memory for VWiFiAttributes(HVL)
N62CSetCurrentPortOperationMode
N62CStaPortQueryInformation
N62CStaPortSetInformation
N62ExtPortIndicatePwrStatus
N6AllocateNative80211MIBs failed
N6CAuthModeToDot11
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_80211_OPEN
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_80211_SHARED_KEY
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_RSNA
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_RSNA_PSK
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_WPA
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_WPA_PSK
N6CAuthModeToDot11(): RT_802_11AuthModeAutoSwitch => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CAuthModeToDot11(): RT_802_11AuthModeMax => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CAuthModeToDot11(): RT_802_11AuthModeWPANone => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CAuthModeToDot11(): unknow authmode: 0x%X => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CCXIndicateAssociationStart(): bCCXwaitCCXInfoInProgess is TRUE!!!
N6CDot11ToEncAlgorithm
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_CCMP
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_NONE
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_TKIP
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_WEP
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_WEP104
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_WEP40
N6CDot11ToEncAlgorithm(): Unknown AlgorithmId 0x%X (WARNING!!!)
N6CDot11ToEncAlgorithm(): Warning, key length is invalid.
N6CEncAlgorithmToDot11
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_CCMP
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_NONE
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_TKIP
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_WEP
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_WEP104
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_WEP40
N6CEncAlgorithmToDot11(): Unknown PairwiseEncAlgorithm 0x%X => DOT11_CIPHER_ALGO_NONE
N6CFreeSpinLocks
N6CompletePendedOID
N6CompletePendedOID(): Complete pended OID(0x%08X)
N6CompletePendedOID(): Pended OID(0x%08X) does not match input OID type(%d)
N6CQuery_DOT11_ATIM_WINDOW
N6CQuery_DOT11_ATIM_WINDOW(): %d
N6CQuery_DOT11_BEACON_PERIOD
N6CQuery_DOT11_BEACON_PERIOD(): %d TU
N6CQuery_DOT11_CF_POLLABLE
N6CQuery_DOT11_CF_POLLABLE()
N6CQuery_DOT11_CURRENT_OPTIONAL_CAPABILITY
N6CQuery_DOT11_CURRENT_OPTIONAL_CAPABILITY()
N6CQuery_DOT11_DESIRED_BSS_TYPE
N6CQuery_DOT11_ENABLED_AUTHENTICATION_ALGORITHM
N6CQuery_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM
N6CQuery_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM
N6CQuery_DOT11_EXTSTA_CAPABILITY
N6CQuery_DOT11_IBSS_PARAMS
N6CQuery_DOT11_LONG_RETRY_LIMIT
N6CQuery_DOT11_LONG_RETRY_LIMIT(): %d times
N6CQuery_DOT11_MAX_RECEIVE_LIFETIME
N6CQuery_DOT11_MAX_RECEIVE_LIFETIME(): %d TUs
N6CQuery_DOT11_MAX_TRANSMIT_MSDU_LIFETIME
N6CQuery_DOT11_MAX_TRANSMIT_MSDU_LIFETIME(): %d TUs
N6CQuery_DOT11_NIC_POWER_STATE
N6CQuery_DOT11_NIC_POWER_STATE: eRfPowerState: 0x%X,  RFOn 0x%X
N6CQuery_DOT11_OPERATIONAL_RATE_SET
N6CQuery_DOT11_OPTIONAL_CAPABILITY
N6CQuery_DOT11_OPTIONAL_CAPABILITY()
N6CQuery_DOT11_PMKID_LIST
N6CQuery_DOT11_POWER_MGMT_REQUEST
N6CQuery_DOT11_POWER_MGMT_REQUEST(): %d
N6CQuery_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_FAST_PSP
N6CQuery_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_MAXIMUM_LEVEL
N6CQuery_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_NO_POWER_SAVING
N6CQuery_DOT11_POWER_MGMT_REQUEST(): unkown
N6CQuery_DOT11_POWER_MGMT_REQUEST():DOT11_POWER_SAVING_MAX_PSP
N6CQuery_DOT11_PRIVACY_EXEMPTION_LIST
N6CQuery_DOT11_SHORT_RETRY_LIMIT
N6CQuery_DOT11_SHORT_RETRY_LIMIT(): %d times
N6CQuery_DOT11_STATISTICS
N6CQuery_DOT11_STATISTICS:() QueryAfterFirstReset %d
N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR
N6CQuery_DOT11_SUPPORTED_PHY_TYPES
N6CQuery_DOT11_SUPPORTED_PHY_TYPES()
N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR
N6CQueryInformation
N6CQueryInformation intercepted by MpEventQueryInformation! Status 0x%08x
N6CQuerySet_DOT11_RESET_REQUEST
N6CQuerySet_DOT11_RESET_REQUEST(): Reset Multicast List!
N6CQuerySetInformation
N6CSet_DOT11_ATIM_WINDOW
N6CSet_DOT11_ATIM_WINDOW(): %d
N6CSet_DOT11_AUTHENTICATION_ALOGORITHM
N6CSet_DOT11_CIPHER_DEFAULT_KEY
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): delete Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a TKIP Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a WEP Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a WEP104 Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a WEP40 Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set an AES-CCMP Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY: Warning, Set key of unknown algorithm: %#X
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s AES-CCMP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s AES-CCMP MFP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s TKIP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s TKIP MFP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): delete Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY: Warning, %s key of invalid algorithm: %#X
N6CSet_DOT11_CONNECT_REQUEST
N6CSet_DOT11_CONNECT_REQUEST() => MgntDisconnectAP
N6CSet_DOT11_CONNECT_REQUEST() => MgntDisconnectIBSS
N6CSet_DOT11_CONNECT_REQUEST(): No BSS found, CurrBSSType: %d
N6CSet_DOT11_CUSTOMIZED_SCAN_REQUEST
N6CSet_DOT11_CUSTOMIZED_SCAN_REQUEST(): a: return for InformationBufferLength(%u) < BytesNeeded(%u)
N6CSet_DOT11_CUSTOMIZED_SCAN_REQUEST(): b: return for InformationBufferLength(%u) < BytesNeeded(%u)
N6CSet_DOT11_DESIRED_BSSID_LIST
N6CSet_DOT11_DESIRED_BSSID_LIST(): InformationBufferLength (%u) < BytesNeeded (%u).
N6CSet_DOT11_DESIRED_BSSID_LIST(): Mac add is FE:FF:FF:FF:FF:FF
N6CSet_DOT11_DESIRED_SSID_LIST
N6CSet_DOT11_DESIRED_SSID_LIST(): SsidList->SSIDs[0].uSSIDLength = %u.
N6CSet_DOT11_DISCONNECT_REQUEST
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_80211_OPEN
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_80211_SHARED_KEY
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_RSNA
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_RSNA_PSK
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_WPA
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_WPA_PSK
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): unknow case, 0x%X
N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_CCMP
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_NONE
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_TKIP
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_WEP
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_WEP104
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_WEP40
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): Unknown AlgorithmId 0x%X
N6CSet_DOT11_EXCLUDED_MAC_ADDRESS_LIST
N6CSet_DOT11_IBSS_PARAMS
N6CSet_DOT11_IBSS_PARAMS(): bJoinOnly = %d
N6CSet_DOT11_MULTICAST_LIST
N6CSet_DOT11_MULTICAST_LIST(): contains more entries than supported by this miniport!
N6CSet_DOT11_MULTICAST_LIST(): not a multiple of sizeof(DOT11_MAC_ADDRESS)!
N6CSet_DOT11_NIC_POWER_STATE
N6CSet_DOT11_NIC_POWER_STATE(): %d
N6CSet_DOT11_NIC_POWER_STATE(): failed to write registry.
N6CSet_DOT11_OPERATIONAL_RATE_SET
N6CSet_DOT11_OPERATIONAL_RATE_SET()
N6CSet_DOT11_PMKID_LIST
N6CSet_DOT11_POWER_MGMT_REQUEST
N6CSet_DOT11_POWER_MGMT_REQUEST(): %d
N6CSet_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_FAST_PSP
N6CSet_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_MAXIMUM_LEVEL
N6CSet_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_NO_POWER_SAVING
N6CSet_DOT11_POWER_MGMT_REQUEST(): unkown
N6CSet_DOT11_POWER_MGMT_REQUEST():DOT11_POWER_SAVING_MAX_PSP
N6CSet_DOT11_PRIVACY_EXEMPTION_LIST
N6CSet_DOT11_SCAN_REQUEST
N6CSet_DOT11_SCAN_REQUEST(): Disable by OID.
N6CSet_DOT11_SCAN_REQUEST(): return for InformationBufferLength(%d) < BytesNeeded(%d)
N6CSet_DOT11_SCAN_REQUEST(): return for ValidateScanRequest() return %#X
N6CSet_DOT11_SCAN_REQUEST(): Skip this scan because busy traffic!!!
N6CSet_DOT11_SCAN_REQUEST(): Skip this scan because join %d or scan %d in prorgress !!!
N6CSet_DOT11_UNICAST_CIPHER_ALGORITHM
N6CSetInformation
N6CWaitForReturnPacket
N6CWaitForReturnPacket(): end of waiting returned packet
N6CWaitForReturnPacket(): wait for AllPacketReturnedEvent
N6CWaitForReturnPacket(): wait for un-returned packet (%d)
N6DeInitTimerSync
N6DeInitTimerSync(): %d timer is outstanding, waiting time out!!!!!
N6DeInitTimerSync(): %d timer is outstanding, waiting...
N6FreeAdapter
N6IndicateAssociationComplete
N6IndicateAssociationComplete(): Indicate CCX Association COMPLETION!
N6IndicateAssociationStart
N6IndicateAssociationStart(): Indicate CCX Association Start!
N6IndicateConnectionComplete
N6IndicateConnectionComplete(): Indicate CCX CONNECTION_COMPLETION!
N6IndicateConnectionStart
N6IndicateConnectionStart(): Indicate CCX CONNECTION_START!
N6IndicateDisassociation
N6IndicateDisassociation(): Indicate CCX DISASSOCIATION!
N6IndicateDisassociation(): Indicate CCX SCAN_CONFIRM!
N6IndicateLinkSpeed
N6IndicateLinkSpeed  %d
N6IndicateRoamingComplete
N6IndicateRoamingComplete(): Indicate CCX ROAMING COMPLETION!
N6IndicateRoamingStart
N6IndicateRoamingStart(): Indicate CCX ROAMING START!
N6IndicateScanComplete
N6InitTimerSync
N6pci_Mgnt_SetPower
N6pci_Mgnt_SetPower()====>
N6PciAllocateNative80211MIBs
N6PciAllocateNative80211MIBs failed
N6PciAllocateNative80211MIBs(): failed to allocate pDot11PhyMIBs
N6PciAllocateNative80211MIBs(): failed to allocate pDot11SupportedPhyTypes
N6PciAllocateRxNetBufferListPool() failed Status: %#X!
N6PciCancelAllTimer
N6PciCancelAllTimer()
N6PciCancelSend
N6PciCheckForHang
N6PciCheckForHang(): Adapter->MgntInfo.pStaQos->CurrentQosMode=%d
N6PciCheckForHang(): CompleteFlag(%u), OutstandingPacket(%u)
N6PciCheckForHang(): Tx probably hung
N6PciCheckReloadPCIEConfigurationSpace
N6PciDiscoverAdapterResources() failed, Status: %#X!
N6PciDriverUnload
N6PciFindAdapter
N6PciFindAdapter() failed, Status: %#X!
N6PciFindBridgeInfo
N6PciFreeAll
N6PciFreeAll()
N6PciFreeNative80211MIBs
N6PciFreeNative80211MIBs()
N6PciGetPCIClockRequestCapability
N6PciHalt
N6PciHalt Alwasy set auto connect as TRUE before restart/power down/S3/S4
N6PciHandleInterrupt
N6PciHandleInterrupt(): bread for CANNOT_TX()
N6PciHandleInterrupt(): N6CGetHeadNblWaitQueue(): pCurrNetBufferList(%p)
N6PciHandleInterrupt(): N6PciSendSingleNetBufferList() returns FALSE
N6PciInitialize
N6PciInitializeScatterGatherDma failed: %#X
N6PciOidRequest
N6PciOidRequest(): First OID(%p) when initializing. return PENDING
N6PciOidRequest(): Pend this OID(%p, ID =0x%08X)
N6PciParsePciConfiguration
N6PciPause
N6PciPnPEventNotify
N6PciPowerSettingCallback
N6PciPowerSettingChangeNotify
N6PciReadRegParameters
N6PciReadRegParameters() failed, Status: %#X!
N6PciRegisterInterrupt
N6PciRegisterInterrupt failed: %#X
N6PciReset
N6PciReset()
N6PciRestart
N6PciReturnAllPendingTxPackets(): 1st thread enter here....
N6PciReturnAllPendingTxPackets(): IRQL(%d) != PASSIVE_LEVEL
N6PciReturnAllPendingTxPackets(): wait SendingNetBufferList...
N6PciReturnPendingNetBufferLists
N6PciSendNetBufferLists
N6PciSendNetBufferLists()
N6PciSendNetBufferLists(): +++N6CAddNblWaitQueue pCurrNetBufferList(%p)
N6PciSendNetBufferLists(): N6PCI_CANNOT_TX(): drop the packets.
N6PciSendNetBufferLists(): N6PciSendSingleNetBufferList pCurrNetBufferList(%p)
N6PciSendNetBufferLists(): Reset!!!
N6PciSendNetBufferLists(): Roaming in Progress(%d)
N6PciSendSingleNetBufferList
N6PciSendSingleNetBufferList(): +++N6CAddNblWaitQueue(): out of TCB pCurrNetBufferList(%p), pCurrNetBuffer(%p)
N6PciSendSingleNetBufferList(): bFromQueue ---N6CRemvoeNblWaitQueue(): pCurrNetBufferList(%p)
N6PciSendSingleNetBufferList(): NdisMAllocateNetBufferSGList(): pCurrNetBufferList(%p), pCurrNetBuffer(%p)
N6PciSendSingleNetBufferList(): WMMInfo should less or equal than 7 (%d)
N6PciSetGeneralAttributes failed
N6PciSetMiniportAttributes(): failed to set driver attributes.
N6PciSetPCICacheLineSize
N6PciSetPCILatencyTimer
N6PciShutdown
N6PciWLANPowerModeCallback
N6PnPEventNotify: NdisDevicePnPEventSurpriseRemoved
N6PnPEventNotify: unknown PnP event %x 
N6PushIndicateStateMachine
N6PushIndicateStateMachine(): N6_STATE_INITIAL with RT_OP_MODE_AP is unexpected!!!
N6PushIndicateStateMachine(): TODO!
N6PushIndicateStateMachineAp
N6PushIndicateStateMachineAp(): pCurrentSta is NULL.
N6PushIndicateStateMachineIBSS
N6PushIndicateStateMachineInfra
N6ReadCommonRegistry
N6RestoreLastInitSetting
N6RestoreLastInitSettingAterWakeUP
N6RestoreLastInitSettingAterWakeUP pSecInfo->AuthMode = %x
N6RestoreLastInitSettingAterWakeUP pSecInfo->PairwiseEncAlgorithm = %x
N6Set80211Attributes failed
N6UpdateDefaultSetting
N6UpdateDefaultSetting(): bCCXenable(%d), bRegCcxRm(%d), OffLineDurUpLimit(%d), UpdateCCXCellPwr(%d), CCXCAC(%d)
N6UpdateDefaultSetting(): bUnloadDriverwhenS3S4 = %d
N6UpdateDefaultSetting(): QosCapability=0x%x
N6usb_Mgnt_SetPower(): IRQL > PASSIVE. Call workitem!!!
N6usbCheckForHang(): Signal SetPnpChkForHangEvent!!
N6usbPnPEventNotify(): Fianl time(%I64d)
N6usbPnPEventNotify(): Time After waiting(%I64d)
N6usbSet80211Attributes(): failed to allocate memory for ExtSTAAttributes
N6usbSet80211Attributes(): failed to allocate memory for SupportedPhyAttributes
N6usbSet80211Attributes(): failed to query multicast auth cipher pairs under adhoc mode
N6usbSet80211Attributes(): failed to query multicast auth cipher pairs under infra mode
N6usbSet80211Attributes(): failed to query unicast auth cipher pairs under adhoc mode
N6usbSet80211Attributes(): failed to query unicast auth cipher pairs under infra mode
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR under adhoc mode.
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR under infra mode.
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR under adhoc mode
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR under infra mode
N6WriteAdhocLinkState
N6WriteAdhocLinkState(): Status=%x
N6WriteRegRfPowerState
N6WriteRegRfPowerState(): Status=%x
NAV_PROT_LEN[0x235]=0x%04x
NDIS.SYS
NDIS_OID_REQUEST contains unknown request type %d
NDIS_PACKET_TYPE_802_11_ALL_MULTICAST_MGMT
NDIS_PACKET_TYPE_802_11_BROADCAST_CTRL
NDIS_PACKET_TYPE_802_11_BROADCAST_MGMT
NDIS_PACKET_TYPE_802_11_DIRECTED_CTRL
NDIS_PACKET_TYPE_802_11_DIRECTED_MGMT
NDIS_PACKET_TYPE_802_11_MULTICAST_MGMT
NDIS_PACKET_TYPE_802_11_PROMISCUOUS_CTRL
NDIS_PACKET_TYPE_802_11_PROMISCUOUS_MGMT
NDIS_PACKET_TYPE_802_11_RAW_DATA
NDIS_PACKET_TYPE_802_11_RAW_MGMT
NDIS_PACKET_TYPE_ALL_FUNCTIONAL
NDIS_PACKET_TYPE_ALL_LOCAL
NDIS_PACKET_TYPE_ALL_MULTICAST
NDIS_PACKET_TYPE_BROADCAST
NDIS_PACKET_TYPE_DIRECTED
NDIS_PACKET_TYPE_FUNCTIONAL
NDIS_PACKET_TYPE_GROUP
NDIS_PACKET_TYPE_MAC_FRAME
NDIS_PACKET_TYPE_MULTICAST
NDIS_PACKET_TYPE_PROMISCUOUS
NDIS_PACKET_TYPE_SMT
NDIS_PACKET_TYPE_SOURCE_ROUTING
Ndis62ContextSwitchWorkItem
Ndis62CreateDeleteWorkitem
Ndis802_11Encryption1Enabled
Ndis802_11Encryption2Enabled
Ndis802_11Encryption3Enabled
Ndis802_11EncryptionDisabled
NdisAllocateIoWorkItem
NdisAllocateMdl
NdisAllocateMemoryWithTagPriority
NdisAllocateNetBufferAndNetBufferList
NdisAllocateNetBufferListPool
NdisCloseConfiguration
NdisCloseFile
NdisDevicePnPEventPowerProfileChanged- PowerProfile(%d)
NdisFreeIoWorkItem
NdisFreeMdl
NdisFreeMemory
NdisFreeNetBufferList
NdisFreeNetBufferListPool
NdisGetVersion
NdisInitializeEvent
NdisInitializeString
NdisMAllocateNetBufferSGList
NdisMAllocateNetBufferSGList(): failed: %#X !!!
NdisMAllocatePort
NdisMAllocateSharedMemory
NdisMapFile
NdisMCancelTimer
NdisMDeregisterInterruptEx
NdisMDeregisterIoPortRange
NdisMDeregisterMiniportDriver
NdisMDeregisterScatterGatherDma
NdisMFreeNetBufferSGList
NdisMFreePort
NdisMFreeSharedMemory
NdisMGetBusData
NdisMIndicateReceiveNetBufferLists
NdisMIndicateStatusEx
NdisMInitializeTimer
NdisMMapIoSpace
NdisMNetPnPEvent
NdisMOidRequestComplete
NdisMRegisterInterruptEx
NdisMRegisterInterruptEx 
NdisMRegisterIoPortRange
NdisMRegisterMiniportDriver
NdisMRegisterScatterGatherDma
NdisMRemoveMiniport
NdisMSendNetBufferListsComplete
NdisMSetBusData
NdisMSetBusData (Disable clock request failed) uResult=%d
NdisMSetMiniportAttributes
NdisMSleep
NdisMSynchronizeWithInterruptEx
NdisMUnmapIoSpace
NdisOpenConfigurationEx
NdisOpenFile
NdisQueueIoWorkItem
NdisReadConfiguration
NdisReadNetworkAddress
NdisReadPciSlotInformation (PCI_COMMON_CONFIG) ulResult=%d
NdisReadPciSlotInformation (RT_PCI_CAPABILITIES_HEADER) ulResult=%d
NdisResetEvent
NdisSetEvent
NdisSetTimer
NdisUnmapFile
NdisWaitEvent
NdisWriteConfiguration
NdisWriteErrorLogEntry
need SMBIOS_BUFSize = 0x%x, 
NeedAESSoftkEY is True
NetworkAddress
NetworkType
Next MeasurementMode: 0x%02X
Next MeasurementToken: %d
Next MeasurementType: %d
NHM_RPI_CNT[0x228]=0x%08lx
NHM_RPI_CNT[0x22C]=0x%08lx
NhmNhmDurAcc: %ld, NhmTotal: %08lX
NIC Verify Console
NICCreateCallback
NicIFAllocateMemory failed: %#X
NicIFAssociateNIC fail
NicIFEnableNIC
NicIFInitializeAdapter
NicIFInitializeAdapter failed: %#X
NicIFInitializeAdapter() init_retry(%#x)
NicIFInitializeAdapter() RtStatus: %#X!
NicIFSilentReset
NicReadInitFile failed
NICRemoveCallback
NICRemoveCallback: remove callback
nnnnGGGG
nnnnZZZZ
no channel
No ICR APPEND
No Protection
no TCA in QoS mode
-----NoA[%d]-----
NoAck
Not a infra-structure mode client
Not connected to any 
Not Present
Note: Length of pSuppRates is 0 ==> Adjust it!!
NOTIFY sip:
Now is Default Adapter.
Now is Extension Adapter.
NQH;NQu
NRM_TCB=%ldx
ntoskrnl.exe
Num of Channels: %u
Num of Clients: %x
Number of existing ports exceed max supported. Failing new port creation
NumRx20MHzPacket=%ld
NumRx40MHzPacket=%ld
NYH;NYu
o$A9_tv(I
o%%Jr..\$
o?fA;
O09oXu
O44h\
ObfDereferenceObject
ObReferenceObjectByHandle
oD$ D
oD8e"u
OFDM_12M
OFDM_18M
OFDM_24M
OFDM_36M
OFDM_48M
OFDM_54M
OFDM_6M
OFDM_9M
OffsetInstanceNameOffsets = 0x%x
OID 0x%08x not found in oid table
OID 0x%08x not supported in ExtAP mode
OID 0x%08x not supported in ExtSTA mode
OID 0x%08x only valid on OFDM phy. Current phy type is %d
OID CCX_EVENT_OK_TO_ASSOCIATE is Time OUT
Oid intercepted by CCX EventSetInformation! Status 0x%08x
Oid intercepted by MpEventQuerySetInformation! Status 0x%08x
OID_802_11_ADD_KEY Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_ADD_KEY: +++++ Group key +++++
OID_802_11_ADD_KEY: +++++ Pairwise key +++++
OID_802_11_ADD_KEY[Group]: Not to Check key length 16 or 32 for AES because we'e in RT_SEC_LVL_NONE.
OID_802_11_ADD_KEY[Group]: Not to Check key length 32 for TKIP because we'e in RT_SEC_LVL_NONE.
OID_802_11_ADD_WEP Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_ASSOCIATION_INFORMATION Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_ASSOCIATION_INFORMATION Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_AUTHENTICATION_MODE Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_AUTHENTICATION_MODE Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_CAPABILITY Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_ENCRYPTION_STATUS Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_ENCRYPTION_STATUS Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_PMKID Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_PMKID Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_PRIVACY_FILTER Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_REMOVE_KEY Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_REMOVE_WEP Setting (Warning: Old OID in NDIS5, do nothing)
OID_CCX_ASSOC_INFO()=====>
OID_CCX_KEEP_ALIVE_REFRESH
OID_DOT11_NIC_POWER_STATE: bRFOn(%d)
OID_RELOAD_DEFAULT
OID_RT_MH_VENDER_ID(): Query OID_RT_MH_VENDER_ID. (MeetingHouse)
OID_RT_P2P_CAPABILITY: current DC=%u, GC=%u
OID_RT_P2P_CAPABILITY: set DC=%u, GC=%u
OID_RT_P2P_DEVICE_DISCOVERY
OID_RT_RF_OFF: bRfOff(%d)
OID_RT_RF_OFF: eRfPowerState: 0x%X,  RFOff: 0x%X
oJr\$8
OK=%I64d 
on = %d, tx power = %d RateIdx = %d BufLen=%d
OnAction
OnAction(): %s =====>
OnADDBAReq
OnADDBAReq(): Invalid length(%d) of frame
OnADDBARsp
OnADDBARsp(): Recv ADDBA Rsp. BA invalid, DELBA! 
OnADDBARsp(): Recv ADDBA Rsp. BA is admitted! Status code:%X
OnADDBARsp(): Recv ADDBA Rsp. Drop because already admit it! 
OnAddTsReq
OnAddTsReq(): Invalid length(%d) of frame
OnAddTsRsp
OnAddTsRsp(): ADDTS failed, try to roaming...
OnAddTsRsp(): Invalid length(%d) of frame
OnAssocReq
OnAssocRsp
OnAssocRsp(): STATE_Asoc_Idle => RspStatusCode: %d, RspAssociationID: %d
OnAssocRsp(): STATE_Wait_Asoc_Response => RspStatusCode: %d, RspAssociationID: %d
OnAssocRsp(): STATE_Wait_Reasoc_Response => RspStatusCode: %d, RspAssociationID: %d
OnATIM
OnAuth
OnAuth_even
OnBeacon
OnBeacon!!!
OnBeacon_Bss
OnBeacon_Bss(): [RT_Cap] RealtekCap=0x%X: TurboMode=%d, DisableTurbo=%d, Reserved=%d
OnBeacon_Bss(): Auto Turbo Mode by 8186.
OnBeacon_Bss(): Enter Turbo Mode by 8186.
OnBeacon_Bss():bEnterTurbo = %d, pTurboCa->bEnabled = %d
OnBeacon_Ibss
OnBeacon_Ibss() SSID matched but BSSID mismatched.
OnBeacon_Ibss(): create new BssDesc at ch %d, bss index:%d
OnBeacon_Ibss(): create new BssDesc is %d HT mode
OnBeacon_Ibss(): ERROR! No bssdesc entry.
OnBeacon_Join
OnBeacon_Join(): channel  = %d
OnBeacon_Join(): Unknown OP mode
OnCcxRmRequestPacket
OnCcxTsmIE
OnCcxTsmIE(): Invaild length(%d) of TSM IE!!!
OnCcxTsmIE(): Invaild TSID(%d)!!!
OnCcxTsmIE(): TSID(%d) disable TSM State(%#X)-----
OnCcxTsmIE(): TSID(%d) enable TSM State(%#X)+++++
OnCcxTsmIE(): TSID(%d) State(%#X)!!!
OnCls2err
OnCls2err(): Cannot find the STA in the table!!! drop it.
OnCls3err
OnCls3err(): Cannot find the STA in the table!!! drop it.
OnDeAuth
OnDeauth
OnDeauth in IBSS receive duplicate deauth 
OnDeauth() reason %d
OnDeauth(): packet too short(%d) < (needed = %d)!
OnDeauth():======>CCKM clear key...
OnDELBA
OnDelTs
OnDelTs(): Invalid length(%d) of frame
OnDisassoc
OnDisassoc in STA mode (mAssoc%d, mIbss:%d)
OnDisassoc in STA mode with WRONG disassoc reason %x
OnDisassoc(): packet too short(%d) < (needed = %d)!
OnDisassoc(): ReasonCode = %X
OnDisassoc():======>CCKM clear key...
OnDot11kRmPacket(): Invalid length(%d) of frame
OnDot11kRmRequest
OnDot11kRmRequest() <-----
OnDot11kRmRequest() ----->
Only Support 92S now
OnMimoPs
OnMimoPs(): Invalid length(%d) of frame
OnProbeReq
OnProbeRsp
OnProbeRsp!!!
OnReAssocReq
OnReAssocRsp
OnReAssocRsp(): STATE_Asoc_Idle
OnReAssocRsp(): STATE_Wait_Reasoc_Response => RspStatusCode: %d, RspAssociationID: %d
OnTsmInterval
OnTsmInterval(): GetTsmReport failed for TSID(%d)!!!
OnTsmInterval(): TSID: %d
OpChnl: %u
Operating Band=lower
Operating Band=upper
Operation mode for protection = 
OriginalFilename
otcA+
OUI sub Type: 0x%02X
OUI Type: 0x%02X
OUI: %02X- %02X- %02X
OutputBufferLength too short
Overriding NetworkAddress is invalid - %02x-%02x-%02x-%02x-%02x-%02x
Own = %ld
p ATH
p AWH
p WATAUAVAWH
p WATAUH
p\lHtW
P<xD<
p>|B>
P2P_STATE_SERVICE_DISCOVERY_COMPLETE: Recv Service Rsp TLVs:
P2PAssembleP2PIE(): Fail!
P2PClientInfoAdd
P2PClientInfoAdd()
P2PCommonChannelArrived
P2PCommonChannelArrived(): Recv Probe from the invitee device = > to send invitation req, state: %u
P2PCommonChannelArrived(): Recv Probe from the provision discovery request target, state: %u
P2PCommonChannelArrived(): Recv Probe from the service discovery request target, state: %u
P2PCommonChannelArrived(): Recv ProbeReq from the target device = > start Group Formation
P2PConnect
P2PConnect(): can't find the device in either the scan list or the client info lists
P2PConnect(): P2P Disabled
P2PConnect(): peer is a GO
P2PConnect(): peer is a P2P Client
P2PConnect(): the target is not in the scan list
P2PConstructGODiscoverabilityReq
P2PConstructGODiscoverabilityReq(): chnl: %u
P2PConstructGONegoConfirm
P2PConstructGONegoConfirm(): chnl: %u
P2PConstructGONegoConfirm(): send GOReq with dialog token: %u
P2PConstructGONegoReq
P2PConstructGONegoReq(): send GOReq with intent = %u, tie breaker: %u, dialog token: %u
P2PConstructGONegoRsp
P2PConstructGONegoRsp(): chnl: %u
P2PConstructGONegoRsp(): send GORsp with intent = %u, tie breaker: %u, dialog token: %u
P2PConstructInvitationReq
P2PConstructInvitationReq(): chnl: %u
P2PConstructInvitationRsp
P2PConstructInvitationRsp(): chnl: %u
P2PConstructProvisionDiscoveryReq
P2PConstructProvisionDiscoveryReq(): chnl: %u
P2PConstructProvisionDiscoveryRsp
P2PConstructProvisionDiscoveryRsp(): chnl: %u
P2PConstructScanList
P2PConstructScanList: LsnCh: %u, OpCh: %u
P2PConstructSDComebackReq
P2PConstructSDComebackRsp
P2PConstructSDReq
P2PConstructSDRsp
P2PDetermineGONegoDevPasswdIdCompaible
P2PDetermineGONegoDevPasswdIdCompaible(): DevPasswdId Incompatible
P2PDetermineGONegoDevPasswdIdCompaible(): no Device Password ID attribute, set status to P2P_STATUS_FAIL_INCOMPATIBLE_PROVISION_METHOD
P2PDetermineGONegoDevPasswdIdCompaible(): no WPS IE, set status to P2P_STATUS_FAIL_INCOMPATIBLE_PROVISION_METHOD
P2PDetermineGONegoDevPasswdIdCompaible(): recvd Dev Passwd ID (%u), mine (%u)
P2PDeterminePeerDevAddrFromP2PIE
P2PDeterminePeerDevAddrFromP2PIE(): invalid SEID_P2P_CAPABILITY
P2PDeterminePeerDevAddrFromP2PIE(): invalid SEID_P2P_DEVICE_ID
P2PDeterminePeerRoleFromP2PIE
P2PDeterminePeerRoleFromP2PIE(): invalid SEID_P2P_CAPABILITY
P2PDeviceDiscoverabilityReq
P2PDeviceDiscovery
P2PDeviceDiscovery(): delay start after %u (ms), StateBeforeScan: %u
P2PDeviceDiscovery(): State: %u, bScanInProgres: %u
P2PDeviceDiscovery(): will loop infinitely between Listen State and Search State
P2PDeviceDiscoveryComplete
P2PDeviceDiscoveryComplete(): P2P_STATE_DEV_DISC_COMPLETE: back to state (%u) from (%u)
P2PDisconnect
P2PDisconnect(): acting as a P2P Device => do nothing
P2PDisconnect(): current role is: %u => do nothing
P2PDisconnect(): To disconnect from the connecting GO
P2PDisconnect(): To stop SoftAP (GO)
P2PDumpClientInfoDescList
P2PDumpDeviceCapability
P2PDumpGroupCapability
P2PDumpGroupFormationResult
P2PDumpPacketType
P2PDumpPacketType(): DevDiscoverabilityReq
P2PDumpPacketType(): DevDiscoverabilityRsp
P2PDumpPacketType(): GODiscoverabilityReq
P2PDumpPacketType(): GONConfirm
P2PDumpPacketType(): GONReq
P2PDumpPacketType(): GONRsp
P2PDumpPacketType(): InvitationReq
P2PDumpPacketType(): InvitationRsp
P2PDumpPacketType(): NoticeOfAbsence
P2PDumpPacketType(): PresenceReq
P2PDumpPacketType(): PresenceRsp
P2PDumpPacketType(): ProvisionDiscoveryReq
P2PDumpPacketType(): ProvisionDiscoveryRsp
P2PDumpPacketType(): ServiceDiscoveryReq (GAS Comeback Req)
P2PDumpPacketType(): ServiceDiscoveryReq (GAS Initial Req)
P2PDumpPacketType(): ServiceDiscoveryRsp (GAS Comeback Rsp)
P2PDumpPacketType(): ServiceDiscoveryRsp (GAS Initial Rsp)
P2PDumpPacketType(): TODO: P2P_ACTION_CATEGORY
P2PDumpPacketType(): Type_Asoc_Req
P2PDumpPacketType(): Type_Asoc_Rsp
P2PDumpPacketType(): Type_Beacon
P2PDumpPacketType(): Type_Probe_Req
P2PDumpPacketType(): Type_Probe_Rsp
P2PDumpPacketType(): Type_Reasoc_Req
P2PDumpPacketType(): Type_Reasoc_Rsp
P2PDumpPacketType(): unrecognized Action Category: %u
P2PDumpPacketType(): unrecognized TypeSubType: %u
P2PDumpScanList
P2PDumpWpsAttributes
P2PExtendedListenComplete
P2PExtendedListenComplete()
P2PExtendedListenStart
P2PGOIntentDetermination
P2PGOIntentDetermination(): x1: (%u, %u), x2: (%u, %u)
P2PGOSetBeaconInterval
P2PGOSetBeaconInterval(): set beacon interval from (%u) to (%u)
P2PGOStartAutomously
P2PIndicateConnectClientRequest
P2PIndicateConnectClientRequest()
P2PIndicateCurrentState
P2PIndicateCurrentState(): State: %u, Role: %u
P2PIndicateDisconnectClientRequest
P2PIndicateDisconnectClientRequest()
P2PIndicateGOFormatedInfo
P2PIndicateGOFormatedInfo(): Status: %u, Role: %u
P2PIndicateStartApRequest
P2PIndicateStartApRequest(): Indicate NDIS_STATUS_P2P_START_AP_REQ
P2PIndicateStopApRequest
P2PIndicateStopApRequest()
P2PInitialize
P2PInitialize(): default port is connected, change chnl to: %u and intent to 15
P2PInitialize(): primary dev type: %u
P2PInvitationConnect
P2PInvitationConnect(): indicate on InvitationReq: %u
P2PInvitationConnect(): Role: %u
P2PInvitePeerStart
P2PIsDoingGroupFormation
P2PIsDoingGroupFormation(): state: %u, bPreGroupFormation: %u
P2PMakeP2PGroupOwnerIntent
P2PMakeP2PGroupOwnerIntent(): send with GOIntent: %u
P2PMakeP2PGroupOwnerIntent(): state: %u, my raw intent: %u,  peer raw intent: %u
P2PMgntTimer
P2PMgntTimerCallback
P2PMgntTimerCallback(): back to P2P_STATE_INITIALIZED because we are acting as Client but default port is disconnected
P2PMgntTimerCallback(): Device Discovery Complete
P2PMgntTimerCallback(): Failed to send InvitationReq to peer
P2PMgntTimerCallback(): Failed to send ProvisionDiscReq to peer
P2PMgntTimerCallback(): Failed to send ServiceDiscoveryReq to peer
P2PMgntTimerCallback(): GO Nego Complete: %u
P2PMgntTimerCallback(): Group Formating
P2PMgntTimerCallback(): Listen State
P2PMgntTimerCallback(): no client slot count: %u
P2PMgntTimerCallback(): P2P Client disconnected slot count: %u
P2PMgntTimerCallback(): P2P_STATE_DEV_DISC_START: switch to Listen Chnl (%u) from Current Chnl (%u)
P2PMgntTimerCallback(): P2P_STATE_DEVICE_DISCOVERABILITY_COMPLETE: Status(%u)
P2PMgntTimerCallback(): P2P_STATE_DEVICE_DISCOVERABILITY_RSP_WAIT: Timeout waiting for DeviceDiscoverabilityRsp
P2PMgntTimerCallback(): P2P_STATE_DEVICE_DISCOVERABILITY_WAIT_BEACON: Timeout waiting for GO Beacon
P2PMgntTimerCallback(): P2P_STATE_INVITATION_COMPLETE, status: %u, persistent: %u
P2PMgntTimerCallback(): P2P_STATE_INVITATION_REQ_SEND
P2PMgntTimerCallback(): P2P_STATE_PRE_PROVISIONING
P2PMgntTimerCallback(): P2P_STATE_SERVICE_DISCOVERY_REQ_SEND
P2PMgntTimerCallback(): persistent client
P2PMgntTimerCallback(): Pre Group Formation Failed
P2PMgntTimerCallback(): Provision Discovery failed: %u
P2PMgntTimerCallback(): Provision Discovery succeed: %u
P2PMgntTimerCallback(): provisioning done
P2PMgntTimerCallback(): provisioning failed
P2PMgntTimerCallback(): provisioning succeed
P2PMgntTimerCallback(): Scan Phase
P2PMgntTimerCallback(): SD Complete: Status (%u)
P2PMgntTimerCallback(): Search State
P2PMgntTimerCallback(): Sending Provision Discovery Req
P2PMgntTimerCallback(): Start Device Discovery: loop times: %u
P2PMgntTimerCallback(): Stop GO and back to P2P_STATE_INITIALIZED
P2PMgntTimerCallback(): Timeout waiting for ComebackRsp
P2PMgntTimerCallback(): Timeout waiting for GO Nego Confirm
P2PMgntTimerCallback(): Timeout waiting for GO Nego Rsp
P2PMgntTimerCallback(): Timeout waiting for InvitationRsp
P2PMgntTimerCallback(): Timeout waiting for Provision Discovery Rsp
P2PMgntTimerCallback(): Timeout waiting for SDRsp
P2PMgntTimerCallback(): Wait for ExtListen: P2P_EXT_LISTEN_TIMING_PERIOD_SC = %d
P2PMlmeOnAssocOK
P2PMlmeOnAssocOK(): P2P listen chnl changed to %u
P2PMlmeOnAssocOK(): P2P op chnl changed to %u
P2POnActionFrame
P2POnActionFrame(): in Public action category (%d)
P2POnAssocReq
P2POnAssocRsp
P2POnBeacon
P2POnBeacon(): going to send DeviceDiscoverabilityReq to the GO
P2POnDeauth
P2POnDeauth()
P2POnDeauth(): disable cross connection
P2POnDeauth(): disable P2P mode because of minor reason code 2
P2POnDeauth(): disable P2P mode because of minor reason code 4
P2POnDeauth(): minor rsn code: %u
P2POnDeviceDiscoverabilityReq
P2POnDeviceDiscoverabilityReq()
P2POnDeviceDiscoverabilityRsp
P2POnDeviceDiscoverabilityRsp()
P2POnGODiscoverabilityReq
P2POnGODiscoverabilityReq()
P2POnGONConfirm
P2POnGONConfirm(): chnl from the client (%u) is not the same as my intended chnl (%u)
P2POnGONConfirm(): dialog token mismatch: mine(%u), peer(%u)
P2POnGONConfirm(): the intended channel (%u) of the GO is not supported
P2POnGONReq
P2POnGONReq(): I'm going to be the GO
P2POnGONReq(): no common channels
P2POnGONReq(): P2P_STATUS_FAIL_BOTH_P2P_DEVICES_INDICATED_GO_INTENT_OF_15
P2POnGONReq(): Receive GoReq when we are client
P2POnGONReq(): reject overllaped GONego Req
P2POnGONReq(): send GORsp with status = %u, intent = %u, tie breaker: %u
P2POnGONReq(): Start waiting for user input for 2 min
P2POnGONReq(): the target device is going to be the GO
P2POnGONRsp
P2POnGONRsp(): dialog token mismatch: peer(%u), mine(%u)
P2POnGONRsp(): I'm going to be the GO
P2POnGONRsp(): no common channels: %p
P2POnGONRsp(): peer is not in our scan list
P2POnGONRsp(): the intended channel (%u) of the GO is not supported
P2POnGONRsp(): the target device is going to be the GO
P2POnGONRsp(): will use the intended chnl in from the Channel subelement from the GONRsp: %u as op chnl
P2POnInvitationReq
P2POnInvitationReq(): dialog token: %u
P2POnInvitationReq(): invited by a peer (%u), persistnet: %u
P2POnInvitationReq(): no common channels
P2POnInvitationReq(): P2PDetermineInvitorRole() can't determine role of the invitor
P2POnInvitationReq(): send GORsp with status = %u
P2POnInvitationRsp
P2POnInvitationRsp()
P2POnInvitationRsp(): dialog token: %u
P2POnP2PCapability
P2POnP2PCapability(): invalid P2POnP2PConfigurationTimeout
P2POnP2PCapability(): invalid SEID_P2P_CAPABILITY
P2POnP2PCapability(): invalid SEID_P2P_DEVICE_ID
P2POnP2PCapability(): invalid SEID_P2P_DEVICE_INFO
P2POnP2PCapability(): invalid SEID_P2P_GROUP_BSSID
P2POnP2PCapability(): invalid SEID_P2P_GROUP_ID
P2POnP2PCapability(): invalid SEID_P2P_GROUP_OWNER_INTENT
P2POnP2PCapability(): invalid SEID_P2P_INTENDED_P2P_INTERFACE_ADDRESS
P2POnP2PCapability(): invalid SEID_P2P_MINOR_REASON_CODE
P2POnP2PCapability(): invalid SEID_P2P_STATUS
P2POnP2PChannelList
P2POnP2PChannelList(): invalid SEID_P2P_CHANNEL_LIST
P2POnP2PConfigurationTimeout
P2POnP2PDeviceId
P2POnP2PDeviceInfo
P2POnP2PExtendedListenTiming
P2POnP2PExtendedListenTiming(): invalid SEID_P2P_EXTENDED_LISTEN_TIMING
P2POnP2PGroupBssid
P2POnP2PGroupID
P2POnP2PGroupInfo
P2POnP2PGroupInfo(): invalid SEID_P2P_GROUP_INFO
P2POnP2PGroupOwnerIntent
P2POnP2PIntendedP2PInterfaceAddress
P2POnP2PInvitationFlags
P2POnP2PInvitationFlags(): invalid SEID_P2P_INVITATION_FLAGS
P2POnP2PListenChannel
P2POnP2PListenChannel(): invalid SEID_P2P_LISTEN_CHANNEL
P2POnP2PMinorReasonCode
P2POnP2PNoticeOfAbsence
P2POnP2PNoticeOfAbsence() <=======
P2POnP2PNoticeOfAbsence(): invalid length: %u
P2POnP2PNoticeOfAbsence(): invalid SEID_P2P_NOTICE_OF_ABSENCE
P2POnP2PNoticeOfAbsence(): Role = %d, IE index = %d, MyCurIdx = %d
P2POnP2POperatingChannel
P2POnP2POperatingChannel(): invalid SEID_P2P_OP_CHANNEL
P2POnP2PStatus
P2POnPresenceReq
P2POnPresenceReq(): Invalid Length!!
P2POnProbeReq
P2POnProbeReq()
P2POnProbeReq(): rejected by P2PAcceptProbeReq()
P2POnProbeRsp
P2POnProbeRsp(): reject because of invalid P2P Sub IE
P2POnProvisionDiscoveryReq
P2POnProvisionDiscoveryReq(): Call P2PIndicateGOFormatedInfo() for starting WPS
P2POnProvisionDiscoveryReq(): recvd CM (%u) not compatible with my CM (%u)
P2POnProvisionDiscoveryRsp
P2POnProvisionDiscoveryRsp(): dialog token mismatch: peer(%u), mine(%u)
P2POnSDComebackReq
P2POnSDComebackReq(): Remaining TLVs(%u), TLVs to Copy(%u), bMoreData(%u)
P2POnSDComebackRsp
P2POnSDComebackRsp(): DialogToken mismatch
P2POnSDComebackRsp(): expected FragmentID mismatch: expected (%u), recvd (%u)
P2POnSDReq
P2POnSDRsp
P2PPresenceReq
P2PPresenceReq()=====>
P2PProcessSubElements
P2PProcessSubElements(): DeviceAddress is NULL
P2PProcessSubElements(): P2PSubElementProcessingLoop() returns FALSE
P2PProcessSubElements(): peer not found in the scan list, unknown peer role
P2PProcessSubElements(): unknown peer role
P2PProvisionDiscovery
P2PPsTimeout
P2PPsTimeout(): <=====
P2PPsTimeout(): psTimeoutToSet = Timeout is less than TSF
P2PPsTimeout(): TSF = 0x%08X %08X (Low Dec = %d)
P2pPsTimeState = %X, TimeDiff = %d
P2PScanListCeaseScan
P2PScanListCeaseScan(): fix to %u
P2PScanListExtendDurationOnCurrentChnl
P2PScanListExtendDurationOnCurrentChnl(): new duration: %u
P2PSendDeviceDiscoverabilityRsp
P2PSendDeviceDiscoverabilityRsp(): Send Packet in PS queue (%d), status = %d
P2PSendGoDiscoverabilityReq
P2PSendGoDiscoverabilityReq(): Send Packet in PS queue (%d)
P2PServiceDiscoveryReq
P2PSetPowerSaveMode
P2PSetPowerSaveMode()=====>
P2PSetPsState
P2PSetPsState(): Source = 0x%X, P2pState = 0x%X, Timeout = 0x%08X %08X (Low Dec = %d)
P2PSubElementProcessingLoop
P2PSubElementProcessingLoop(): invalid sub IE ID: %u
P2PSubElementProcessingLoop(): Required sub IE : %u not exist
P2PToAppendSubIE
P2PToAppendSubIE(): mandatory to append OpChannel because we are GO
P2PToAppendSubIE(): not  to append OpChannel because we are Client
PA\_^
pA]A\_^]
PA]A\_^]
PA_A^A\_^
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Packet Count = %04X
Packet Loss = %04X
PacketCheckIEValidity
PacketCheckIEValidity(): [malicious attack] length of IE exceeds packet length
PacketCheckIEValidity(): [malicious attack] not ok to read EID and Element Length
PacketCheckIEValidity(): frame type: %u
PacketCheckIEValidity(): not a sub type of frame that could have IEs, subtype: %u
PacketCheckIEValidity(): sMacHdrLng(%u) > packet.Length (%u)
PacketCheckIEValidity(): wrong subtype: %u
PacketGetRSNIE(): Length=%d
Page number before reset[BK_BE] =%lx
Page number before reset[Bub_Bcn] =%lx
Page number before reset[Mgn_HI] =%lx
Page number before reset[VI_VO] =%lx
Pairwise key expansion
PairwiseEncAlgorithm = %d
ParseFileBufToLines
ParseFileBufToLines(): Exceed nMaxByteCntLine! nNumLinesRead:%d pucBuffer: "%s"
ParseFileBufToLines(): Reach File End!!
ParseFileBufToLines():End Of configuration file, break
ParseSubframe
ParseSubframe(): Too many Subframes! Packets dropped!
Passive Scan
Passive scan: Channels
pBA->bValid = FALSE
pBA->bValid = TRUE
PBP[0xB5]=0x%02x
Pci Bridge Vendor is %d
Pci Bridge Vendor is found %d
Pci configration, 0x34 = %x
Pci configration1, value_offset%x = %x
PCI_BAR0 = %x 
PCI_BAR1 = %x 
PCI_CommandRegister = %x 
PCI_InterruptLine = %x 
PciASPM
PCIe Header Offset =%x
PciRWType
pDefault->Channel=%d,pExtension->Channel=%d.
pDesc[BEACON_QUEUE].OWN=%ld
Peer not found in the scan list
Peer Role: %u, My role: %u
pEntry->perSTAKeyInfo.RxIV = 0x%16I64x
Permant=[%02x-%02x-%02x-%02x-%02x-%02x]
pHalData->bHwRadioOff %x,eRfPowerStateToSet%x 
PHY Initialization Success
phy_BB8192S_Config_ParaFile
phy_BB8192S_Config_ParaFile():AGC Table Fail
phy_BB8192S_Config_ParaFile():BB_PG Reg Fail!!
phy_BB8192S_Config_ParaFile():Write BB Reg Fail!!
PHY_BBConfig8192S
PHY_BBConfig8192S: RF_Type(%x) does not match RF_Num(%x)!!
PHY_CheckBBAndRFOK
phy_CheckEphySwitchReady
phy_ConfigBBWithHeaderFile
phy_ConfigBBWithPgHeaderFile
phy_ConfigMACWithHeaderFile
PHY_ConfigRFPABiasCurrent
PHY_ConfigRFWithHeaderFile
PHY_ConfigRFWithHeaderFile: Radio No %x
PHY_ConfigRFWithParaFile
PHY_GetHWRegOriginalValue
PHY_QueryBBReg
PHY_QueryRFReg
phy_RF6052_Config_ParaFile
phy_RF6052_Config_ParaFile():Radio[%d] Fail!!
PHY_RF6052SetBandwidth
phy_RF8225_Config_ParaFile
phy_RF8225_Config_ParaFile(): Failed to read %s!
phy_RF8225_Config_ParaFile(): read %s successfully
phy_RF8225_Config_ParaFile():Radio[%d] Fail!!
PHY_RF8256_Config():Check Radio[%d] Fail!!
phy_RF8256_Config_ParaFile
phy_RF8256_Config_ParaFile():Radio[%d] Fail!!
PHY_RFShadowCompare
PHY_RFShadowCompare OKCNT=%d
PHY_RFShadowCompare OKCNT=%d offset=%0x
PHY_RFShadowCompare RF-%d Addr%02lx Err = %05lx return false
PHY_RFShadowCompare RF-%d Addr%02lx Err = %05lx return true
PHY_RFShadowRecorver
PHY_RFShadowRecorver RF-%d Addr%02lx=%05lx
PHY_ScanOperationBackup8192S
PHY_SetBBReg
phy_SetBBtoDiffRFWithHeaderFile
phy_SetBBtoDiffRFWithHeaderFile: Set to 1T1R..
phy_SetBBtoDiffRFWithHeaderFile: Set to 1T2R..
PHY_SetBWMode8192S
PHY_SetBWMode8192S() SetBWModeInProgress FALSE driver sleep or unload
PHY_SetBWModeCallback8192S
PHY_SetBWModeCallback8192S():
PHY_SetBWModeCallback8192S(): unknown Bandwidth: %#X
phy_SetFwCmdIO
phy_SetFwCmdIO(): USB can NOT IO return
PHY_SetMonitorMode8192S
PHY_SetMonitorMode8192S(): disable monitor mode
PHY_SetMonitorMode8192S(): enable monitor mode
PHY_SetRF8225Bandwidth
PHY_SetRF8225Bandwidth(): unknown Bandwidth: %#X
PHY_SetRF8256Bandwidth
PHY_SetRF8256Bandwidth(): unknown Bandwidth: %#X
PHY_SetRFPowerState
phy_SetRFPowerState8192SE
PHY_SetRFReg
PHY_SetTxPowerLevel8192S() Channel = %d 
PHY_SetTxPowerLevel8192S(): CCK Tx power index : %d, Legacy OFDM Tx power index: %d, OFDM Tx power index: %d
PHY_SwChnl8192S
PHY_SwChnl8192S SwChnlInProgress FALSE driver sleep or unload
PHY_SwChnl8192S SwChnlInProgress FALSE schdule workitem error
PHY_SwChnlCallback8192C(), switch to channel %d
PHY_SwChnlCallback8192S
PHY_SwChnlPhy8192S
PHY_SwitchEphyParameter
PHY_UpdateTxPowerDbm8192S
PHY_UpdateTxPowerDbm8192S(): %ld dBm , CckTxPwrIdx = %d, OfdmTxPwrIdx = %d
PhysicalAddressHigh=[%08lx]
PhysicalAddressLow=[%08lx]
PlatformCancelTimer
PlatformCancelTimer(%s), cancel NG
PlatformCancelTimer(%s), cancel OK
PlatformCancelTimer(%s), timer is NOT set case: status(%#x)!!!
PlatformClearPciPMEStatus
PlatformClearPciPMEStatus() Failed!
PlatformClearPciPMEStatus(): Clear PME status 0x%2x to 0x%2x
PlatformClearPciPMEStatus(): in pci configration1, value_offset%x = %x
PlatformClearPciPMEStatus(): PCI configration 0x34 = 0x%2x
PlatformClearPciPMEStatus(): PME status(0x%2x) = 0x%2x
PlatformDeInitTimerSync(): all timer is completed(%d)
PlatformDisableASPM
PlatformDisableASPM():PciBridge BusNumber[%x], DevNumbe[%x], FuncNumber[%x], Write reg[%x] = %x
PlatformEnableASPM
PlatformEnableASPM(): Fail to enable ASPM. Cannot find the Bus of PCI(Bridge).
PlatformEnableASPM():PciBridge BusNumber[%x], DevNumbe[%x], FuncNumber[%x], Write reg[%x] = %x
PlatformFreeWorkItem
PlatformHandleTKIPMICError
PlatformHandleTKIPMICError(): First TKIP Pairewise MIC error.
PlatformHandleTKIPMICError(): Second TKIP Pairewise MIC error.
PlatformInitializeWorkItem
PlatformInitializeWorkItem(): %s
PlatformInitializeWorkItem(): failed to allocate platform extensions: %s
PlatformIORead1Byte
PlatformIORead1Byte(Enter D3): offset=0x%x, Data=0x%X
PlatformIORead2Byte
PlatformIORead2Byte(Enter D3): offset=0x%x, Data=0x%X
PlatformIORead2Byte(Leave D3)
PlatformIORead4Byte
PlatformIORead4Byte(Enter D3): offset=0x%x, Data=0x%X
PlatformIORead4Byte(Leave D3)
PlatformIsInDesiredBSSIDList
PlatformReadFile
PlatformReadFile(): failed to map the file, %s!, ndisStatus: %#X
PlatformReadFile(): failed to open the file, %s!, ndisStatus: %#X
PlatformReadFile(): NdisInitializeString() failed! szFileName: %s
PlatformReadFile(): pBufOfLines should not be NULL!
PlatformReadFile(): szFileName should not be NULL!
PlatformRequestPreAuthentication
PlatformRequestPreAuthentication(): 
PlatformRequestPreAuthentication(): AP SecLvl=%d is not enough!
PlatformRequestPreAuthentication(): Indicate Buffer Size = %d
PlatformRequestPreAuthentication(): New BSSID => Indicate to upper layer.
PlatformRequestPreAuthentication(): return for EnablePreAuthentication=%d, SecLvl=%d, mAssoc=%d
PlatformRestoreASPM
PlatformRunThread
PlatformScheduleWorkItem
PlatformScheduleWorkItem(): %s Failed, RefCount: %d!!!
PlatformSetEventTrigerThread
PlatformSetPeriodicTimer
PlatformSetPMCSR
PlatformSetPMCSR() Failed!
PlatformSetPMCSR(): D3(value: %d)
PlatformSetTimer
PlatformSetTimer(%s): Status(%#x) OutStandingTimerCnt(%d)
PlatformSetTimer(): timer(%s) is alreadyreleased!!!
PlatformSetTimer(): timer(%s) is not yet initialized!!!
PlatformStopWorkItem
PlatformStopWorkItem(): %s, some workitem is pending, RefCount: %d
PlatformSwitchClkReq
PlatformSwitchDevicePciASPM
PlatformSwitchDevicePciASPM() Failed!
pMgntInfo->bAutoTurboBy8186
pMgntInfo->bEnableSwBeaconTimer=%d
pMgntInfo->bTXPowerTracking = %d
pMgntInfo->pHTInfo->bCurSuppCCK = %d
pMgntInfo->SecurityInfo.SecLv=%d
pMgntInfo->state_Synchronization_Sta = STATE_Act_Listen
pNdisCommon->RegInactivePsMode = %d
PNPCapabilities
PnpSetPower
PnpSetPower()  sleep
PnpSetPower()  try to connect to %s
PnpSetPower(): Stopping H/W Beacon...
PnpSetPower(): Stopping S/W Beacon...
PnpSetPower(): unexpected CurrentPowerState: %#X
PnPWakeUpJoinTimerCallback
PnpWorkItem
Polling  DMEM code done fail ! CPUStatus(%#x)
Polling Load Firmware ready fail ! CPUStatus(%#x)
Polling Load Firmware ready, CPUStatus(%#x)
Pomelo
PoRegisterPowerSettingCallback
PoUnregisterPowerSettingCallback
Power_DomainInit92SE
PowerSaveMode
pp|B>>q
PPPP<<<<
pppp>>>>
pPSC->bLeisurePs = %d, pMgntInfo->dot11PowerSaveMode = %d
PPxD<<%
prange
PreambleMode
PreAPConnectState = %x, CurAPConnectState = %x Dig_Ext_Port_Stage %x
PreSTAConnectState = %x, CurSTAConnectState = %x
PreState = %d, CurState = %d
PreTransmitTCB
PreTransmitTCB(): Enough packets in AMDSU Aggr queue, pass it down!
PreTransmitTCB(): Packet were handled
PreTransmitTCB(): RF is off, returnTCB!
PreTransmitTCB(): there is already packets queued in wait queue(%d)
pRfd->Status.RxMIMOSignalStrength[%d]  = %d 
Primary channel = %d
PrimaryDevType: %u
Print Firmware CMD Table.
Process_UI_RSSI_8192S
ProcessReceivedPacket
ProcessReceivedPacket(): Drop this packet from the sec status (%ld)
ProductName
ProductVersion
ProtectionImpMode
pRtThread(%s) is alreadyreleased!!!
pRtThread(%s) is not Complete, cannot set again!!!
pRtThread(%s) is not yet initialized!!! Status 0x%x
pRxDesc->BufferAddress=%08lx LEN=%ld
PsCreateSystemThread
PSPXlinkMode
pSSIDInfo Capability : %02x %02x %02x %02x 
pSSIDInfo ExtenCapab : %x 
pSSIDInfo SSIDLen : %x 
PsTerminateSystemThread
Pt*D:
Ptj@:
pTxFwInfo->AllowAggregation=%d
pTxFwInfo->CtsEnable=%d
pTxFwInfo->EnableCPUDur=%d
pTxFwInfo->RtsBandwidth=%d
pTxFwInfo->RtsEnable=%d
pTxFwInfo->RtsHT=%d
pTxFwInfo->RtsRate =%d
pTxFwInfo->RtsShort =%d
pTxFwInfo->RtsSTBC =%d
pTxFwInfo->RtsSubcarrier =%d
pTxFwInfo->RxAMD=%ld
pTxFwInfo->RxMF=%ld
pTxFwInfo->Short=%d
pTxFwInfo->TxAGCOffset=%ld
pTxFwInfo->TxAGCSign =%ld
pTxFwInfo->TxBandwidth=%d
pTxFwInfo->TxHT=%d
pTxFwInfo->TxRate=0x%02x
pTxFwInfo->TxSubCarrier =%d
pTxTs->TxAdmittedBARecord.bValid == FALSE)
Public_BssCoexist
PwrDomainProtect FAIL
pZlNr
QosAddTsTimerCallback
QosAddTsTimerCallback(): ADDTS Timeout!
QosAdmissionControl
QosAdmissionControl(): Drop packet for invalid TSID
QosAdmissionControl(): Queue packet for establishing TS
QosCalcUsedTimeAndAdmitPacket
QosCalcUsedTimeAndAdmitPacket(): Used time > Medium time
QosDataCheck
QosDataCheck(): [Warning] Mcst/Bcst Qos Data!!
QosDataCheck(): [Warning] Recvd Qos Data in QOS_DISABLE mode!
QosDecAdmittedTime
QosDecAdmittedTime(): DELTS: AC(%ld) AdmitTime(%I64d) MediumTime(%d)
QosIncAdmittedTime
QosIncAdmittedTime(): ADDTS: AC(%ld) AdmitTime(%I64d) MediumTime(%d)
QosInfo: 0x%02X
QosInitializeSTA
QosInitializeSTA(): pStaQos->CurrentQosMode = %ld
QosInitTs
QosInitTs(): pTs(%p), TSID(%d)
QosOnAssocRsp
QosOnBeaconUpdateParameter
QosOnBeaconUpdateParameter(): Update WMMPE
QosParsingDebug_AcParam
QosParsingDebug_BssDesc
QosParsingDebug_ParaElement
QosParsingDebug_STA
QosParsingDebug_STA(): CurrentQosMode is %ld
QosParsingQoSElement
QosParsingWMMElement(): WMM Element length is too long!
QosRecvTsrsIE
QosRecvTsrsIE(): returned NPR is not one we requested
QosSetLegacyWMMParamWithHT
QosSetNPR
QosSetNPR(): Invalid data rate to set!
QosSetNPR(): Invalid normal phy rate!
QosTsHash
QosTsHash() result: %d
QPeA~S
QSeA~
QUE RANGE [%d]-[%d]
Que-%d LEN=%ld
Que-%ld NumTxDesc=%d
Query  OID_DOT11_PRIVACY_EXEMPTION_LIST.
Query AP mode OID_DOT11_ADDITIONAL_IE:
Query AP mode OID_DOT11_CURRENT_FREQUENCY:
Query AP mode OID_DOT11_DESIRED_PHY_LIST:
Query AP mode OID_DOT11_ENUM_PEER_INFO:
Query AP mode OID_DOT11_WPS_ENABLED:
Query ID_RT_GET_BCN_INTVL: %d
Query Information, Current Bandwidth = %s
Query Information, Firmware Version = %d
Query Information, MgntActQuery_RT_11N_INITIAL_TX_RATES:%d Mbps
Query Information, MgntActQuery_RT_11N_TX_RATES:%d Mbps
Query Information, MgntActQuery_RT_11N_USER_SHOW_RATES-RX:%d Mbps
Query Information, MgntActQuery_RT_11N_USER_SHOW_RATES-TX:%d Mbps
Query Information, OID not supported :%08X
Query Information, OID_802_3_CURRENT_ADDRESS:%02x:%02x:%02x:%02x:%02x:%02x
Query Information, OID_802_3_MAXIMUM_LIST_SIZE:%d
Query Information, OID_802_3_PERMANENT_ADDRESS:%02x:%02x:%02x:%02x:%02x:%02x
Query Information, OID_FFP_SUPPORT: (not supported)
Query Information, OID_GEN_CURRENT_LOOKAHEAD or OID_GEN_MAXIMUM_LOOKAHEAD: %d
Query Information, OID_GEN_DRIVER_VERSION:%08x
Query Information, OID_GEN_HARDWARE_STATUS: 0x%08X
Query Information, OID_GEN_LINK_SPEED:%d Mbps
Query Information, OID_GEN_MAC_OPTIONS:%08x
Query Information, OID_GEN_MAXIMUM_FRAME_SIZE:%d
Query Information, OID_GEN_MAXIMUM_SEND_PACKETS:%d
Query Information, OID_GEN_MAXIMUM_TOTAL_SIZE:%d
Query Information, OID_GEN_MEDIA_CAPABILITIES: %d
Query Information, OID_GEN_MEDIA_CONNECT_STATUS: NdisMediaStateConnected
Query Information, OID_GEN_MEDIA_CONNECT_STATUS: NdisMediaStateDisconnected
Query Information, OID_GEN_MEDIA_SUPPORTED or OID_GEN_MEDIA_IN_USE: %08x
Query Information, OID_GEN_PHYSICAL_MEDIUM:%d(NdisPhysicalMediumWirelessLan)
Query Information, OID_GEN_RECEIVE_BUFFER_SPACE:%d
Query Information, OID_GEN_SUPPORTED_GUIDS: (not supported)
Query Information, OID_GEN_SUPPORTED_LIST
Query Information, OID_GEN_TRANSMIT_BLOCK_SIZE or OID_GEN_RECEIVE_BLOCK_SIZE:%d
Query Information, OID_GEN_TRANSMIT_BUFFER_SPACE:%d
Query Information, OID_GEN_VENDOR_DESCRIPTION:%s
Query Information, OID_GEN_VENDOR_DRIVER_VERSION:%08x
Query Information, OID_GEN_VENDOR_ID:%02x:%02x:%02x
Query Information, OID_PNP_ENABLE_WAKE_UP: %d
Query Information, OID_PNP_QUERY_POWER: %d
Query Information, OID_RT_11N_RX_LINK_SPEED:%d Mbps
Query Information, OID_RT_11N_TX_RETRY_COUNT:%d Mbps
Query Information: OID_PNP_CAPABILITIES, NOT support remote wake up
Query MH_OID_CCX_ENABLE: %d
Query MH_OID_CCX_MIXED_CELL: %d
Query MH_OID_CCX_NETWORK_EAP: %d
Query MH_OID_CCX_RM_ENABLE: %d
Query MH_OID_CCX_ROGUE_AP: %d
Query MH_OID_CCX_VERSION: %d
Query of OID 0x%08x not supported
Query OID_802_11_ASSOCIATION_INFORMATION, length=%d
Query OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeMax 
Query OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeOpen
Query OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeShared
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeAutoSwitch
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPA
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPA2
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPA2PSK
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPANone
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPAPSK
Query OID_802_11_AUTHENTICATION_MODE: unknow authmode: 0x%X
Query OID_802_11_BSSID: %02X:%02X:%02X:%02X:%02X:%02X
Query OID_802_11_CONFIGURATION: 
Query OID_802_11_DESIRED_RATES: 
Query OID_802_11_FRAGMENTATION_THRESHOLD: %d
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11AUTO <Ndis802_11IBSS>
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11IBSS
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11INFRA
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11unknown
Query OID_802_11_NETWORK_TYPE_IN_USE: A Ndis802_11OFDM5
Query OID_802_11_NETWORK_TYPE_IN_USE: B Ndis802_11DS
Query OID_802_11_NETWORK_TYPE_IN_USE: BeSetNetworkTypeByNDTest 0x%0X
Query OID_802_11_NETWORK_TYPE_IN_USE: default Ndis802_11DS
Query OID_802_11_NETWORK_TYPE_IN_USE: G Ndis802_11OFDM24
Query OID_802_11_NETWORK_TYPES_SUPPORTED: 
Query OID_802_11_POWER_MODE: 0x%X
Query OID_802_11_RSSI: %d
Query OID_802_11_RSSI_TRIGGER: %d
Query OID_802_11_RTS_THRESHOLD: %d
Query OID_802_11_SSID: NDIS_STATUS_ADAPTER_NOT_READY
Query OID_802_11_STATISTICS: 
Query OID_802_11_SUPPORTED_RATES: 
Query OID_802_11_TX_POWER_LEVEL: 
Query OID_802_3_MULTICAST_LIST:
Query OID_CCX_DIAGNOSTICS_MODE: bCcxDiagnosticMode = %d
Query OID_CCX_FRAME_LOGGING_MODE: bIhvFrameLogMode = %d
Query OID_DOT11_ACTIVE_PHY_LIST:
Query OID_DOT11_ATIM_WINDOW
Query OID_DOT11_AUTO_CONFIG_ENABLED:
Query OID_DOT11_BEACON_PERIOD
Query OID_DOT11_CF_POLLABLE
Query OID_DOT11_CIPHER_DEFAULT_KEY_ID, 0x%08x
Query OID_DOT11_CURRENT_ADDRESS or OID_DOT11_MAC_ADDRESS:
Query OID_DOT11_CURRENT_ADDRESS or OID_DOT11_MAC_ADDRESS: Invalid length (%d < %d)
Query OID_DOT11_CURRENT_CHANNEL:
Query OID_DOT11_CURRENT_OPERATION_MODE:
Query OID_DOT11_CURRENT_OPTIONAL_CAPABILITY
Query OID_DOT11_CURRENT_PHY_ID: phyid%d
Query OID_DOT11_CURRENT_REG_DOMAIN:
Query OID_DOT11_CURRENT_RX_ANTENNA: 
Query OID_DOT11_CURRENT_TX_ANTENNA: 
Query OID_DOT11_DATA_RATE_MAPPING_TABLE:
Query OID_DOT11_DESIRED_BSS_TYPE:
Query OID_DOT11_DESIRED_BSS_TYPE: dot11_BSS_type_independent
Query OID_DOT11_DESIRED_BSS_TYPE: dot11_BSS_type_infrastructure
Query OID_DOT11_DESIRED_BSS_TYPE: Ndis802_11AUTO <dot11_BSS_type_independent>
Query OID_DOT11_DESIRED_BSS_TYPE: Ndis802_11unknown <dot11_BSS_type_infrastructure>
Query OID_DOT11_DESIRED_BSSID_LIST:
Query OID_DOT11_DESIRED_PHY_LIST:
Query OID_DOT11_DESIRED_SSID_LIST:
Query OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM:
Query OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM, 0x%08x
Query OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM, 0x%08x
Query OID_DOT11_ENUM_ASSOCIATION_INFO:
Query OID_DOT11_EXCLUDE_UNENCRYPTED:
Query OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST:
Query OID_DOT11_EXTSTA_CAPABILITY:
Query OID_DOT11_FRAGMENTATION_THRESHOLD
Query OID_DOT11_HARDWARE_PHY_STATE: rf %d
Query OID_DOT11_HIDDEN_NETWORK_ENABLED:
Query OID_DOT11_IBSS_PARAMS:
Query OID_DOT11_IBSS_PARAMS: NDIS_STATUS_BUFFER_OVERFLOW
Query OID_DOT11_LONG_RETRY_LIMIT
Query OID_DOT11_MAX_RECEIVE_LIFETIME
Query OID_DOT11_MAX_TRANSMIT_MSDU_LIFETIME
Query OID_DOT11_MEDIA_STREAMING_ENABLED:
Query OID_DOT11_MPDU_MAX_LENGTH
Query OID_DOT11_MULTICAST_LIST num of multicast address:%d
Query OID_DOT11_NIC_POWER_STATE rf %d
Query OID_DOT11_OPERATION_MODE_CAPABILITY:
Query OID_DOT11_OPERATIONAL_RATE_SET
Query OID_DOT11_OPTIONAL_CAPABILITY
Query OID_DOT11_PERMANENT_ADDRESS:
Query OID_DOT11_PMKID_LIST, 0x%08x
Query OID_DOT11_POWER_MGMT_REQUEST, 0x%08x
Query OID_DOT11_PRIVACY_EXEMPTION_LIST:
Query OID_DOT11_REG_DOMAINS_SUPPORT_VALUE:
Query OID_DOT11_RTS_THRESHOLD
Query OID_DOT11_SHORT_RETRY_LIMIT
Query OID_DOT11_STATION_ID:
Query OID_DOT11_STATISTICS:
Query OID_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR:
Query OID_DOT11_SUPPORTED_PHY_TYPES
Query OID_DOT11_SUPPORTED_RX_ANTENNA: 
Query OID_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR:
Query OID_DOT11_UNICAST_USE_GROUP_ENABLED:
Query OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD:
Query OID_RT_11N_SYS_CPU_WAKE_SETTING
Query OID_RT_AP_GET_DTIM_PERIOD: %d
Query OID_RT_AP_SWITCH_INTO_AP_MODE: %d
Query OID_RT_AP_WDS_MODE: %d
Query OID_RT_AUTO_SELECT_CHANNEL: %d
Query OID_RT_CCX_IHV_SUPPORT: IhvSupport(%x)
Query OID_RT_CCX_IHV_SUPPORT: invalid length(%d < %d)
Query OID_RT_DBG_COMPONENT: %#X
Query OID_RT_DBG_LEVEL: %#X
Query OID_RT_DEVICE_ID_INFO: 
Query OID_RT_DOT11D: %d
Query OID_RT_GET_11N_MIMPO_EVM
Query OID_RT_GET_11N_MIMPO_RSSI
Query OID_RT_GET_DEFAULT_KEY_ID: %d
Query OID_RT_GET_HARDWARE_RADIO_OFF:
Query OID_RT_GET_LOGV2_ATTR_LIST failed!!! BytesNeeded: %d
Query OID_RT_GET_LOGV2_DATA_LIST failed!!! BytesNeeded: %d
Query OID_RT_GET_LOGV2_TYPE_LIST failed!!! BytesNeeded: %d
Query OID_RT_GET_PREAMBLE_MODE: %d
Query OID_RT_GET_PSP_XLINK_STATUS:
Query OID_RT_GET_WMM_ENABLE:
Query OID_RT_GET_WMM_UAPSD_ENABLE:
Query OID_RT_HIDDEN_SSID: %d
Query OID_RT_INTEL_PROXIMITY_MODE: enabled: %d, tx power %d
Query OID_RT_LOCKED_STA_ADDRESS
Query OID_RT_LOCKED_STA_ADDRESS: LockedSTACount=%d
Query OID_RT_MAC_FILTER_TYPE
Query OID_RT_MAC_FILTER_TYPE:  %d
Query OID_RT_PRO_CHK_AUTOLOAD
Query OID_RT_PRO_GET_EFUSE_UTILIZE
Query OID_RT_QUERY_DOT11K_CHANNEL_LOAD: ChannelLoad(%d), Status(%d)
Query OID_RT_QUERY_DOT11K_CHANNEL_LOAD: Invalid Length
Query OID_RT_SET_WMM_UAPSD_ENABLE: %X
Query OID_RT_TURBOMODE: %d
Query OID_RT_TX_POWER: %d dBm
Query OID_RT_TX_POWER_RANGE: min = %d dBm, max = %d
Query OID_RT_WPS_HWGET_PBC_PRESSED
Query OID_RT_WPS_RECIEVE_PACKET:
Query some OIDs for Windows ME HCT 9.6.
Query STA mode OID_DOT11_CURRENT_PHY_ID:
Query STA mode OID_DOT11_DESIRED_PHY_LIST:
Query STA mode OID_DOT11_SAFE_MODE_ENABLED:
Query STA mode OID_GEN_CURRENT_PACKET_FILTER:
Query STA mode OID_GEN_INTERRUPT_MODERATION:
Query STA mode OID_GEN_LINK_PARAMETERS:
Query/Set OID_DOT11_ENUM_BSS_LIST:
Query/Set OID_DOT11_RECV_SENSITIVITY_LIST:
Query/Set OID_DOT11_RESET_REQUEST:
Query/Set OID_Unknown: %08X
QueryAllSMBiosData
QueryAllSMBiosData()
QueryAllSMBiosData(), AllocateMemory Fail!
QueryRxDescStatus8192S
Queue Delay Avg: %04X
Queue Delay Histogram: %04X, %04X, %04X, %04X
QZ^&A
R mem addr by Dword
R##Fe
r$f9L$(r
r(f9L$(r!I
r)fD9
r*fE9
R;vM;
r|f9L$(ruI
r+fE9
r4 <Addr> {Size}Size: num of decimal dword <4096
RA: Adjustive RATR is  =%s
RA: H 2 L Thresh =%ld
RA: L 2 H Thresh for 20M =%d
RA: L 2 H Thresh for 40M =%d
RA: RATR state=%d
RA: RATR0 High_Level =0x%08lx
RA: RATR0 Low_Level_20 =0x%08lx
RA: RATR0 Low_Level_40 =0x%08lx
RA: RATR0 Middle_Level =0x%08lx
RA: RSSI Average =%ld
RA: RSSI High Thresh =%ld
RA: RSSI Low Threshold for 20M =%ld
RA: RSSI Low Threshold for 40M =%ld
RA_IDX=%d Tx_RA=%x
ractrl
ractrl <Type> <R/W/P>
RARFRC[0x1B8][0x1BC]=0x%08lx
RARFRC[0x1C0][0x1C4]=0x%08lx
RATE      [%d]-[%d]
RateBitmap 0x%lx FirstDiffRateThreshold %ld SecondDiffRateThreshold %ld
RateChangeTimer
RateIndex %d
rateRecord %ld rateCount %ld, rateCountdiff %ld bSwitchFsync %d
ratr_idx %d, ratr_val %lx
Ratrtable are full
RCR[0x48]=0x%08lx
Rcvd_HW_err
Read memory address by char
Read memory address by Double Word
Read memory address by word
Read NIC adapter
Read Rtl819XMACPHY_Array
ReadAdapterInfo8187(): Enable dot11d when RT_CHANNEL_DOMAIN_GLOBAL_DOAMIN!
ReadAdapterInfo8192S
ReadAdapterInfo8192S(), Permanent Address = %02x-%02x-%02x-%02x-%02x-%02x
ReadAdapterInfo8192SE
ReadAdapterInfo8192SUsb(), Permanent Address = %02x-%02x-%02x-%02x-%02x-%02x
Readback Thermal Meter = 0x%lx
Realtek RTL81892SE NDIS Driverr
Realtek RTL81892SE Wireless LAN PCI-E NIC                                     
Realtek RTL8192SE Wireless LAN PCI-E NIC                                     
Realtek Semiconductor Corporation                           
Realtek Wireless LAN
Received OID_DOT11_NIC_SPECIFIC_EXTENSION (method) !!!
Recommended channel width = %s
Recvd 2-way message 2
Recvd 4-way message 2
Recvd 4-way message 4
RegChannelPlan(%d) EEPROMChannelPlan(%d)
regdump
RegRoamingLimit
RegROAMSensitiveLevel
RegSWRxDecryptFlag
RegSWTxEncryptFlag
regu1=%02x  delay = %ld
Reject
ReleaseNdis6CommonResources
ReleaseNdis6CommonResources()
Reload PCI_BAR0 = %x 
Reload PCI_BAR1 = %x 
Reload PCI_CommandRegister = %x 
Reload PCI_InterruptLine = %x 
remainLen = %d
RemoveHalRATRTable8192SE
RescheduleJoinRequest(): RF is OFF. Reject JoinRequest
RescheduleJoinRequest(): Under inactive ps mode, turn on RF and continue.
Reserved. Eooro!!!
reset
Reset 92S HW block
Reset finished!! ====>[%ld]
Reset progress!! <====
ResetCcxTsmMechanism
ResetCcxTsmMechanism().....
RetrieveSegmentDataFromTCB
RetrieveSegmentDataFromTCB(): some data can not be retrived
Retry_Cnt=%I64d
RETRY_LIMIT[0x1F4]=0x%04x
ReturnRxDescBuffer8192SE
ReturnTCB
ReturnTCB(): pTcb==NULL !!! 
RF %d 3 register final value: %lx
RF Config failed
RF Config Finished!
RF Config started!
RF is in progress, need to wait until rf chang is done.
RF is OFF, return NDIS_STATUS_DOT11_POWER_STATE_INVALID.
RF Off by reason %x  Should not into this case
RF-%d CCK CHan_Area-%d = 0x%x
RF-%d OFDM-1T CHan_Area-%d = 0x%x
RF-%d OFDM-2T CHan_Area-%d = 0x%x
RF-%d PwrGroupHT20[%d] = 0x%x
RF-%d PwrGroupHT40[%d] = 0x%x
Rf-%d TxPwr CH-%d CCK/ OFDM_1T/ OFDM_2T= 0x%x/0x%x/0x%x
RF_RECOVERY
RF_TYPE=1T2R but only 1SS
r-f9L$(r&I
RF-A Ht20 to HT40 Diff[%d] = 0x%x
RF-A Legacy to Ht40 Diff[%d] = 0x%x
RF-B Ht20 to HT40 Diff[%d] = 0x%x
RF-B Legacy to HT40 Diff[%d] = 0x%x
RFChipID=%d
RFD INFO
rFf9L$(r?I
RFOff
RfTest1Timer
rHf9L$(rAA
Richn
RM_RmRequest
RmMonitorSignalStrength
RmMonitorSignalStrength(): New TA: %02X:%02X:%02X:%02X:%02X:%02X, rate(%d Mbps), RxPower(%d), AGC(%d) => %ld dBm
RmMonitorSignalStrength(): TA: %02X:%02X:%02X:%02X:%02X:%02X, rate(%d Mbps), RxPower(%d), AGC(%d) => %ld dBm
RmQueryChannelLoad
RmQueryChannelLoad: EID is invalid
RmQueryChannelLoad: EID Len is invalid
RmQueryChannelLoad: Reject it for bGoingOn == TRUE
RmQueryChannelLoad: Reject it for pRmReports->bValid
RmQueryChannelLoad: Report IE length is invalid
RmQueryChannelLoad: Report Mode is invalid
RmQueryChannelLoad: Rm Type is invalid
RmQueryChannelLoad: Token is invalid
RmQueryNoiseHistogram
RmQueryNoiseHistogram: EID is invalid
RmQueryNoiseHistogram: EID Len is invalid
RmQueryNoiseHistogram: Reject it for bGoingOn == TRUE
RmQueryNoiseHistogram: Reject it for pRmReports->bValid
RmQueryNoiseHistogram: Report IE length is invalid
RmQueryNoiseHistogram: Report Mode is invalid
RmQueryNoiseHistogram: Rm Type is invalid
RmQueryNoiseHistogram: Token is invalid
RmSetChannelLoad
RmSetChannelLoad: Reject it for bGoingOn == TRUE
RmSetChannelLoad: Reject it invalid channel
RmSetNoiseHistogram
RmSetNoiseHistogram: Reject it for bGoingOn == TRUE
RmSetNoiseHistogram: Reject it invalid channel
RmWorkitem
RmWorkitemCallback
Roaming Count = %02X
Roaming Delay = %02X
Role: %u
RQPN1[0xA0]=0x%08lx VO-VI-BE-BK=%ld-%ld-%ld-%ld
RQPN2[0xA4]=0x%08lx HQ-MGT-CMD-HCCA=-%ld-%ld-%ld-%ld
RQPN3[0xA8]=0x%08lx PUB-BCN=-%ld-%ld
RRRR;;;;
RRSR[0x181]=0x%02x
rrtl8192SE\radio_b.txt
RRvM;;
RSD PTR
RSDSB
RSNIE parsing error!
RSSI %d TimeInterval %ld MultipleTimeInterval %d
RSSI = %d
RSSI_LEVEL = %d
RSSI=%d %d %d %d
RT2RTAggregation
RtActChannelList
RtActChannelList(): <=====RT_CHNL_LIST_ACTION_CONSTRUCT_SCAN_LIST
RtActChannelList(): <=====RT_CHNL_LIST_ACTION_RESET
RtActChannelList(): NO RT_CHNL_LIST_ACTION!!!
RtAllocateHashTable
RtAllocateHashTable(): Capacity(%d), NumValuesAlloc(%ld), ValueSize(%d)
RtAllocateHashTable(): pKeysBuf: %p size: %ld
RtAllocateHashTable(): pValueBuf: %p size: %ld
RtAllocateHashTable(): table: %p size: %ld
RtCalcScanPeriod
RtConstructScanList
RtFreeHashTable
RtFreeHashTable(): hHashTable: %p, TableSize: %ld
RtFreeHashTable(): pKeysBuf: %p, KeysBufSize: %ld
RtFreeHashTable(): pValuesBuf: %p, ValuesBufSize: %ld
rtl8192se.pdb
rtl8192se.sys 
rtl8192SE\8192se.map
rtl8192SE\radio_a.txt
rtl8192SE\radio_b.txt
rtl8192SE\radio_b_gm.txt
rtl8192SE\radio_c.txt
rtl8192SE\radio_d.txt
RtlInitUnicodeString
RTP/AVP
RX HT = %ld
RX MCS = %ld
Rx OK Packet Large(>1000)=%I64d
Rx OK Packet Middle(500-1000)=%I64d
Rx OK Packet Small(0-500)=%I64d
Rx Reset =%ld
Rx Retry Packet Large(>1000)=%I64d
Rx Retry Packet Middle(500-1000)=%I64d
Rx Retry Packet Small(0-500)=%I64d
Rx:TKIP Error
Rx:TKIP Error: %d
Rx:TKIP OK
Rx:TKIP_MIC Error, Decrypted: %x, bMcstDest: %d
Rx:TKIP_MIC Ok
RX_DESC-%d -->CRC=%d PKT_LEN=%ld
RX_PKY_LIMIT[0x4E]=0x%02x=%dK
RxAdmittedBARecordTimer
RXAntenna
RxCommandPacketHandle8190Pci(): It is a command packet
RxCommandPacketHandle8192SE
RxCommandPacketHandle8192SE(): Receive unhandled C2H CMD (%d)
RXDMA[0xBD]=0x%02x
RXDRVINFO_SZ[0xB6]=0x%02x
RXERR_RPT[0x230]=0x%08lx
rXf9L$(rQI
RXFF_BNDY[0xAC]=0x%08lx
RXFF_STATUS[0xB8]=0x%02x
RxHandleInterruptThread
RxHandleInterruptTimer
RXPKT_NUM[0xBE]=0x%04x
RxPktPendingTimeout
RxPktPendingTimer
RxReorder
RxReorder_PendTime
RxReorder_WinSize
RxReorderIndicatePacket
RxReorderIndicatePacket(): Packets indication!! IndicateSeq: %d
RXRPT_BNDY[0xB0]=0x%08lx
RxRSSIPercentage[%d]  = %d 
RxTsCommonInfo_InactTimer
RxTsCommonInfo_SetupTimer
RxTSIndicate
RxTSIndicate(): No TS!! Skip the check!!
ryf9K
s fD9
s WATAUAVAWH
s WATAUH
s%9=(S
s%9=@b
s%9=C
s%9=z
s&D9-
s&D9- )
s&D9- +
s&D9%
s&D9%<
s&D9-=-
s(D9-
s*D9--,
s*D95
s,D9-&0
s,D9=
s,D95
s.D9-
s.D9%
s.D9%{i
s.D9%i!
s.D9%J#
s.D9=
s.D9=H
s.D9=Q
s;9=f
s;D9=
s@D9=
s<95y
s<D9=
s>D9=
s0D959
S11b?
s11bS
s1D9=
s2D9=
s4D9%E
s59=6
s5D9%
s5D9%Z
s5D9=
s6D9%
s7954
s8D9=
S8D9cXu
s-95|
s-9-e
SA EA=[%ld]/[%ld]
sAt$H
sBD9%
sBD95
SbEwd
sbS*?
Scan List: %u
ScanByTimer
ScanCallback
ScanCallback(): Unexpected ScanStep(%d)!!!
ScanCallback():Switch to channel(%d) period (%d)
ScanCallback():Switch to SettingBeforeScan(%d)
ScanCallback():Wait for previous channel switching
ScanCallback: Set Bandwidth to 20 MHz! 
ScanComplete
ScanComplete(): AutoSelectChnl: %d
ScanComplete(): join_action(%d) bIbssStarter(%d)
ScanMergeResult
ScanTimer
ScanType: %u
sCfA+
Schedule Disable
Schedule TxPowerTracking direct call!!
s-D9-
sDD9=
SearchAdmitTRStream get ppTS
SecCalculateCKIPMIC
SecCatPMKID
SecCatPMKID(): AP is not in current PMKID List => do nothing.
SecCheckTKIPMIC
SecCheckTKIPMIC(): Keyidx: %d > 4
SecCheckTKIPMIC(): pRfd->PacketLength < IVOffset
SecDevType Length: %u
SecDevTypes: 
SecDropForKeyAbsent
SecDropForKeyAbsent(): Not to send data frame since there is no key!
SecDropForKeyAbsent(): Tx Data Without Group Key %d
SecDropForKeyAbsent(): Tx Data Without Pairwise Key!
SecDropForKeyAbsent(): Tx Data Without WEP Key %d
SecFillHeader
SecFillHeader(): !bEncrypt => return FALSE!
SecFillHeader(): retrun TRUE
SecGetGroupCipherFromBeacon
SecGetGroupCipherFromBeacon(): GroupEncAlgorithm = %d
SecIsEAPOLKEYPacket
SecIsEAPOLPacket
SecIsEAPOLPacket(): invalid length(%d)
SecIsEAPOLPacket(): Recvd EAPOL frame. IsEAPOLPkt(%d)
SecIsInPMKIDList
SecIsInPMKIDList(): i=%d
SecRxDescryption
SecRxDescryption(): Error!!! Receive Frame(Type = 0x%02X) with WEP bit (Not support)!
SecRxDescryption(): Error!!! Receive Mgnt Frame with WEP bit (Not support)!
SecRxDescryption(): SW Descrypt Fail for data packet
SecSetPMKID
SecSetPMKID(): BSSIDInfoCount is more than NUM_PMKID_CACHE!%ld
SecSetPMKID(): Number Of PMKID on list = %ld
SecSetPMKID(): PMKIDList[%d].bUsed is TRUE
SecSetPMKID(): PMKIDList[%ld].bUsed is TRUE
SecSetPMKID(): uNumOfEntries is more than NUM_PMKID_CACHE!%d
SecSetSwEncryptionDecryption
SecSetSwEncryptionDecryption(): RegSWRxDecryptFlag = %d, bSWRxDecrypt = %d
SecSetSwEncryptionDecryption(): RegSWTxEncryptFlag = %d, bSWTxEncrypt = %d
SecSetSwEncryptionDecryption(): Warning! User and driver determined decryption mechanism mismatch.
SecSetSwEncryptionDecryption(): Warning! User and driver determined encryption mechanism mismatch.
SecSWAESDecryption
SecSWAESEncryption
SecSWAESEncryption(): Packet is too large. Truncate!!
SecSWCKIPDecryption
SecSWCKIPDecryption(): DEcok=0x%X
SecSWCKIPEncryption
SecSWCKIPEncryption(): CKIP case: Do Key Permutation.
SecSWCKIPEncryption(): Packet is too large. Truncate!!
SecSWCKIPEncryption(): Use pure WEP encryption.
SecSWMFPDecryption
SecSWMFPDecryption(): Check Packet Length failed!!
SecSWMFPDecryption(): Fail MFP packe decrypt !!
SecSWMFPDecryption(): SW Descryption OK!
SecSWTKIPDecryption
SecSWTKIPEncryption
SecSWTKIPEncryption(): Packet is too large. Truncate!!
SecSWWEPDecryption
SecSWWEPDecryption(): WEP software decrypted Fail!!! (datalen=%ld)
SecSWWEPEncryption
SecSWWEPEncryption(): Packet is too large. Truncate!!
Security control console
SelectNetworkBySSID
SelectNetworkBySSID() : secLvl = %x , Pairwise chiper = %x
SelectNetworkBySSID(): BssDescNum = %d
SelectNetworkBySSID(): In WPS Lie to Autoconfig
SelectNetworkBySSID(): no BSS matched, Regdot11networktype = %d
SelectNetworkBySSID(): RT_ROAMING_BY_SLEEP/RT_ROAMING_BY_DEAUTH Weight More
SelectRateSet
SelectSupportedRatesElement
Send 2-way message 1
Send 4-way message 1
Send 4-way message 3
SendAssociateReq
SendAssociateRsp
SendAuthenticatePacket
SendBeaconFrame
SendBeaconFrame(): Tx rate = 1 mbps!
SendBeaconFrame(): Tx rate = 6 mbps!
SendCcxRmReport
SendDeauthentication
SendDisassociation
SendDot11kRmReport
SendMagicPacket
SendMagicPacket(): StaAddr: %02X-%02X-%02X-%02X-%02X-%02X
SendProbeReq
SendProbeReq(): Tx rate = %d
SendProbeReqEx
SendProbeReqEx(): Tx rate = %d
SendProbeRsp
SendQosAddTs
SendQosDelTs
SendReassociateReq
Senondary channel =
Seq %d == NumRxWEPUndecryptableBroadcast %I64d, NumRxWEPUndecryptableMulticast %I64d, NumRxWEPUndecryptableUnicast  %I64d
Sequence = %ld
Servicd Req TLV %u: Protocol: %u
SessionRetryTimer
Set  OID_DOT11_PRIVACY_EXEMPTION_LIST.
Set AP mode OID_DOT11_ADDITIONAL_IE: Invalid length
Set AP mode OID_DOT11_AUTO_CONFIG_ENABLED: Invalid length
Set AP mode OID_DOT11_BEACON_PERIOD: Invalid length
Set AP mode OID_DOT11_DESIRED_SSID_LIST: SsidList->uNumOfEntries = %u.
Set AP mode OID_DOT11_DISASSOCIATE_PEER_REQUEST: Invalid length
Set AP mode OID_DOT11_DTIM_PERIOD: Invalid length
Set AP mode OID_DOT11_WPS_ENABLED: Invalid length
Set bToSendInvitationReqOnProbe
Set HW_VAR_AMPDU_FACTOR: %#x
Set HW_VAR_AMPDU_MIN_SPACE: %#x
Set HW_VAR_CCX_CHNL_LOAD: bToClear(%d) Duration(%d)
Set HW_VAR_CCX_CLM_NHM: bToClear(%d) Duration(%d)
Set HW_VAR_CCX_NOISE_HISTOGRAM: bToClear(%d) Duration(%d)
Set HW_VAR_SHORTGI_DENSITY: %#x
Set MH_OID_CCX_RM_ENABLE: CCXRM enable(%d)
Set N62C OID_DOT11_CREATE_MAC:
Set N62C OID_DOT11_DELETE_MAC:
Set of OID 0x%08x not supported in INIT state.
Set of OID 0x%08x not supported in OP state.
Set OID_802_11_ADD_WEP
Set OID_802_11_AUTHENTICATION_MODE: %d (0:Open, 1:Shared-Key)
Set OID_802_11_AUTHENTICATION_MODE: %d: RT_SEC_LVL_WPA
Set OID_802_11_AUTHENTICATION_MODE: %d: RT_SEC_LVL_WPA2
Set OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeAutoSwitch
Set OID_802_11_BSSID: 
Set OID_802_11_CONFIGURATION: 
Set OID_802_11_DESIRED_RATES: 
Set OID_802_11_DISASSOCIATE: 
Set OID_802_11_ENCRYPTION_STATUS: %d
Set OID_802_11_FRAGMENTATION_THRESHOLD: 
Set OID_802_11_INFRASTRUCTURE_MODE: RT_JOIN_NETWORKTYPE_ADHOC
Set OID_802_11_INFRASTRUCTURE_MODE: RT_JOIN_NETWORKTYPE_AUTO
Set OID_802_11_INFRASTRUCTURE_MODE: RT_JOIN_NETWORKTYPE_INFRA
Set OID_802_11_INFRASTRUCTURE_MODE: unknown type: 0x%X
Set OID_802_11_NETWORK_TYPE_IN_USE: 
Set OID_802_11_NUMBER_OF_ANTENNAS: 
Set OID_802_11_POWER_MODE: 0x%X
Set OID_802_11_PRIVACY_FILTER: 
Set OID_802_11_RELOAD_DEFAULTS: 
Set OID_802_11_REMOVE_KEY
Set OID_802_11_REMOVE_WEP
Set OID_802_11_RSSI_TRIGGER
Set OID_802_11_RTS_THRESHOLD: 
Set OID_802_11_RX_ANTENNA_SELECTED: 
Set OID_802_11_TX_ANTENNA_SELECTED: 
Set OID_802_11_TX_POWER_LEVEL: 
Set OID_802_3_MULTICAST_LIST: 
Set OID_CCX_DIAGNOSTICS_MODE: bCcxDiagnosticMode = %d
Set OID_CCX_FRAME_LOGGING_MODE: bIhvFrameLogMode = %d
Set OID_DOT11_ATIM_WINDOW
Set OID_DOT11_AUTO_CONFIG_ENABLED:
Set OID_DOT11_CIPHER_DEFAULT_KEY, 0x%08x
Set OID_DOT11_CIPHER_DEFAULT_KEY_ID, 0x%08x
Set OID_DOT11_CIPHER_KEY_MAPPING_KEY, 0x%08x
Set OID_DOT11_CONNECT_REQUEST, 0x%08x
Set OID_DOT11_CURRENT_CHANNEL:
Set OID_DOT11_CURRENT_OPERATION_MODE:
Set OID_DOT11_CURRENT_PHY_ID: phyid%d
Set OID_DOT11_CURRENT_REG_DOMAIN:
Set OID_DOT11_DATA_RATE_MAPPING_TABLE:
Set OID_DOT11_DESIRED_BSS_TYPE:
Set OID_DOT11_DESIRED_BSSID_LIST:
Set OID_DOT11_DESIRED_PHY_LIST:
Set OID_DOT11_DESIRED_SSID_LIST:
Set OID_DOT11_DISCONNECT_REQUEST:
Set OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM
Set OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM, 0x%08x
Set OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM
Set OID_DOT11_ENUM_BSS_LIST:
Set OID_DOT11_EXCLUDE_UNENCRYPTED:
Set OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST, 0x%08x
Set OID_DOT11_FLUSH_BSS_LIST:
Set OID_DOT11_FRAGMENTATION_THRESHOLD:
Set OID_DOT11_HIDDEN_NETWORK_ENABLED:
Set OID_DOT11_IBSS_PARAMS:
Set OID_DOT11_INCOMING_ASSOCIATION_DECISION: Invalid Length!
Set OID_DOT11_MEDIA_STREAMING_ENABLED::
Set OID_DOT11_MULTICAST_LIST:
Set OID_DOT11_NIC_POWER_STATE
Set OID_DOT11_OPERATIONAL_RATE_SET
Set OID_DOT11_PMKID_LIST, 0x%08x
Set OID_DOT11_POWER_MGMT_REQUEST, 0x%08x
Set OID_DOT11_PRIVACY_EXEMPTION_LIST:
Set OID_DOT11_RTS_THRESHOLD:
Set OID_DOT11_SCAN_REQUEST:
Set OID_DOT11_UNICAST_USE_GROUP_ENABLED:
Set OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD:
Set OID_GEN_CURRENT_LOOKAHEAD: 
Set OID_GEN_CURRENT_PACKET_FILTER: 
Set OID_GEN_LINK_PARAMETERS:
Set OID_GEN_PROTOCOL_OPTIONS: 
SET OID_PM_ADD_PROTOCOL_OFFLOAD
SET OID_PM_ADD_WOL_PATTERN: Support EapolRequestIdMessage.
SET OID_PM_ADD_WOL_PATTERN: The number of wake up pattern is more than 8 or the pattern Id is exist.
SET OID_PM_REMOVE_PROTOCOL_OFFLOAD (%x)
SET OID_PM_REMOVE_WOL_PATTERN: Cannot find the wake up pattern Id(%08X).
SET OID_PM_REMOVE_WOL_PATTERN: Cannot find the wake up pattern size(%08X).
SET OID_PM_REMOVE_WOL_PATTERN: PatternId = %08x
Set OID_PNP_ADD_WAKE_UP_PATTERN
Set OID_PNP_ENABLE_WAKE_UP(%#X)
Set OID_PNP_REMOVE_WAKE_UP_PATTERN
Set OID_PNP_SET_POWER: going to sleep: %d
Set OID_PNP_SET_POWER: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_PNP_SET_POWER: inavalid power state
Set OID_PNP_SET_POWER: PowerState(%d)
Set OID_PNP_SET_POWER: wake up from %d to D0
Set OID_PNP_SET_POWER:Alread in this  power state
Set OID_RT_11N_DYNAMIC_TX_POWER_CONTROL: disable
Set OID_RT_11N_DYNAMIC_TX_POWER_CONTROL: enable
Set OID_RT_11N_TX_POWER_TRACKING: disable
Set OID_RT_11N_TX_POWER_TRACKING: enable
Set OID_RT_AP_WDS_AP_LIST: %02X-%02X-%02X-%02X-%02X-%02X
Set OID_RT_AP_WDS_AP_LIST: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_RT_AP_WDS_MODE: %d
Set OID_RT_AP_WDS_MODE: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_RT_CCX_IHV_SUPPORT: IhvSupport(%x)
Set OID_RT_CCX_IHV_SUPPORT: invalid length(%d < %d)
Set OID_RT_CUSTOMIZED_SCAN:
Set OID_RT_DOT11D: disable
Set OID_RT_DOT11D: enable
Set OID_RT_DOT11D: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_FILTER_STA_ADDRESS: Invalid Data!
Set OID_RT_FILTER_STA_ADDRESS: Invalid Length!
Set OID_RT_INTEL_PROXIMITY_MODE: 
Set OID_RT_LOCKED_STA_ADDRESS: Invalid Data!
Set OID_RT_LOCKED_STA_ADDRESS: Invalid Length!
Set OID_RT_MAC_FILTER_TYPE: Invalid Data!
Set OID_RT_MAC_FILTER_TYPE: Invalid Length!
Set OID_RT_P2P_CAPABILITY: invalid length(%d < %d)
Set OID_RT_P2P_CONNECT_REQUEST: invalid length(%d < %d)
Set OID_RT_P2P_DEVICE_DISCOVERABILITY_REQ: invalid length(%d < %d)
Set OID_RT_P2P_DEVICE_DISCOVERY: invalid length(%d < %d)
Set OID_RT_P2P_EXTENDED_LISTEN_TIMING: bOn: %u, period: %u(ms), duration: %u(ms)
Set OID_RT_P2P_EXTENDED_LISTEN_TIMING: invalid length(%d < %d)
Set OID_RT_P2P_EXTENDED_LISTEN_TIMING: P2P NOT enabled
Set OID_RT_P2P_GO_BEACON_INTERVAL: invalid length(%d < %d)
Set OID_RT_P2P_GO_INTENT: from %u to %u with TieBreaker: %u unchanged
Set OID_RT_P2P_GO_INTENT: invalid length(%d < %d)
Set OID_RT_P2P_GO_SSID: invalid length(%d < %d)
Set OID_RT_P2P_GO_SSID: invalid SSID postfixlength(%d < %d)
Set OID_RT_P2P_INVITE_PEER: invalid length(%d < %d)
Set OID_RT_P2P_LISTEN_CHANNEL: from %u to %u 
Set OID_RT_P2P_LISTEN_CHANNEL: invalid length(%d < %d)
Set OID_RT_P2P_MODE: invalid length(%d < %d)
Set OID_RT_P2P_OP_CHANNEL: from %u to %u
Set OID_RT_P2P_OP_CHANNEL: in operating state: %u
Set OID_RT_P2P_OP_CHANNEL: invalid length(%d < %d)
Set OID_RT_P2P_PROVISION_DISCOVERY: invalid length(%d < %d)
Set OID_RT_P2P_PROVISION_IE: invalid length(%d < %d)
Set OID_RT_P2P_PROVISIONING_RESULT: %u
Set OID_RT_P2P_PROVISIONING_RESULT: invalid length(%d < %d)
Set OID_RT_P2P_SERVICE_DISCOVERY_REQ
Set OID_RT_P2P_SERVICE_DISCOVERY_REQ: P2P NOT enabled
Set OID_RT_P2P_SET_SERVICE_INFO
Set OID_RT_PER_STA_DATA_RATE: Invalid Data!
Set OID_RT_PER_STA_DATA_RATE: Invalid Length!
Set OID_RT_PRO_SET_ANTENNA_BB, antennaIndex(%#x)
Set OID_RT_RF_OFF
Set OID_RT_SCAN_AVAILABLE_BSSID: 
Set OID_RT_SET_DOT11K_CHANNEL_LOAD: Channel(%d), Duration(%d)
Set OID_RT_SET_DOT11K_CHANNEL_LOAD: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_SET_DOT11K_CHANNEL_LOAD: Set Channel Load Fail !!!
Set OID_RT_SET_DOT11K_NOISE_HISTOGRAM: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_SET_DOT11K_NOISE_HISTOGRAM: Set Channel Load Fail !!!
Set OID_RT_SET_PSP_XLINK_STATUS:
Set OID_RT_SET_WMM_ENABLE:
Set OID_RT_SET_WMM_UAPSD_ENABLE:
Set OID_RT_SimpleConfScan: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_RT_TX_POWER: %d dBm
Set OID_RT_TX_POWER: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_TX_POWER_LEVEL: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_WPS_HWSET_PBC_PRESSED: %d
Set OID_RT_WPS_HWSET_PBC_PRESSED: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_WPS_LED_CTL_START: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_WPS_LED_CTL_START: start LED blinking 0.3s
Set OID_RT_WPS_LED_CTL_START: stop LED blinking SUCCESS
Set OID_RT_WPS_LED_CTL_START_BOTTON: start LED blinking 0.3s
Set OID_RT_WPS_LED_CTL_START_BOTTON: stop LED blinking fail
Set OID_RT_WPS_LED_CTL_START_BOTTON: stop LED blinking fail session overlap
Set OID_RT_WPS_LED_CTL_START_BOTTON: WRONG parameter
Set OID_Unknown: %08X
Set TsmTimer ++++++++++++++
Set WIRELESS_MODE_A
Set WIRELESS_MODE_AUTO
Set WIRELESS_MODE_B
Set WIRELESS_MODE_G
Set WIRELESS_MODE_N_24G
Set WIRELESS_MODE_N_5G
Set WIRELESS_MODE_UNKNOWN
SetAdhocLinkStateWorkItem
SetAdhocLinkStateWorkItemCallback
SetAdhocLinkStateWorkItemCallback(): failed to write registry.
SetBWModeTimer
SetCCXAssocInfoTimer
SetCCXAssocInfoTimerCallback
SetChannelBandwidth8190Pci():8225 does not support 40M mode
SetFwCmdIOTimer
SetFwCmdIOTimerCallback
SetFwCmdIOTimerCallback(): driver is going to unload
SetFwUpdateGTKCmd
SetHalDefVar8192SE
SetHwReg8185(): [HW_VAR_ACM_CTRL] ACM set failed: eACI is %ld
SetHwReg8190pci(): [HW_VAR_ACM_CTRL] Write 0x%X
SetHwReg8192SE
SetInfo, OID_802_11_RELOAD_DEFAULTS:Ndis802_11ReloadWEPKeys
SetKey8192SE
SetRFPowerStateWorkItem
SetRFPowerStateWorkItemCallback
Setting Values are invalid: Duration (0x%08X), Interval (0x%08X) and count = %d
SetTsmRequest
SetTsmRequest(): TSM_ACTION_RESET on TSID(%d)
SetTsmRequest(): TSM_ACTION_START on TSID(%d)
SetTsmRequest(): TSM_ACTION_STOP on TSID(%d)
SetTsmRequest(): unknown action(%d) on TSID(%d)
SetupJoinIBSSInfo
SetupJoinIBSSInfo Set a CurrentQosMode = QOS_DISABLE
SetupJoinIBSSInfo Set a CurrentQosMode = QOS_WMM
SetupJoinIBSSInfo(): 
SetupJoinIBSSInfo(): bJoinInProgress = %d
SetupJoinIBSSInfo(): TurboChannelAccess.bEnabled(%d)
SetupJoinInfraInfo
SetupJoinInfraInfo(): bJoinInProgress = %d
SetupJoinInfraInfo(): TurboChannelAccess.bEnabled(%d)
SetupStartIBSSInfo
SetupStartIBSSInfo(): bJoinInProgress = %d
SetupStartIBSSInfo(): TurboChannelAccess.bEnabled(%d)
sFfD+
SG_RATE[0x1F6]=0x%04x
SG0 BW0
SG0 BW1
SG1 BW0
SG1 BW1
sGD9=+
shadow
shadow operate for RF / BB/ MAC shadow operation
ShortGI20MHz
ShortGI40MHz
Show TX Table
ShowRate
SIFS_CCK[0x8C]=%04x=TR/CT%d/%us
SIFS_OFDM[0x8E]=0x%04x=TR/CT%d/%us
Signature %x %x %x
Signature length is too long (limit = %d)
SIP/2.0
Size = %d
Size(%#lx) over MAX_FIRMWARE_CODE_SIZE(%#x)!
sKD95"
SLEEP/OFF
SLOT_TIME[0x89]=0x%02x
SMBIOS find the matched item!!
SMBIOS Not find the matched item!!
SMBIOS Type = %d, Length=0x%x, 
SMBIOS Type = %d, Length=0x%x, Handle = 0x%x, typetotallen=%d
SMBIOS_Alloc_Size = 0x%x!
SMBIOS_BUFSize = 0x%x, 
SMBIOS_STATUS_AllocateMemFail!!
SMBIOS_STATUS_WMIOpenBlockFail!!
SMBIOS_STATUS_WMIQueryDataFail!!
SmbiosMajorVersion = %d
SmbiosMinorVersion = %d
SNR=%d %d %d %d
Ssid during association !!
ssss````
STA Default Port PWDB = 0x%x 
STA_AdhocStationMaxCount
STA_BSSEntryExpireTime
STA_LostAPRoamBeaconCount
STA_RSSIRoamBeaconCount
Stack INIT Max=%d Min=%d
Stack OID Max=%d Min=%d
Stack RX Max=%d Min=%d
Stack TX Max=%d Min=%d
StaCntAll=0x%08lX
StaCntCrc8Fail=0x%08lX
StaCntParityFail=0x%08lX
StaCntRateIllegal=0x%08lX
StaEDCAParamBE
StaEDCAParamBK
StaEDCAParamVI
StaEDCAParamVO
Start 4-way handshake because of EAPOL-start.
Start Active Scanning......
Start Beacon Table mode......
Start Passive Scanning......
Start/ End / Time /Num=[%ld] / [%ld] / [%ld] / [%ld] 
StartCcxTsm
StartCcxTsm(): invalid MeasurementInterval: %d TU!!!
StartCcxTsm(): invalid TSID: %d!!!
StartCcxTsm(): MeasurementInterval(%d) => TimeOutTickNum(%d)
StartCcxTsm(): TSID: %d, MeasurementInterval: %d (TU)
Status: %u
StaUapsd
Stop aggregation: 
StopCcxTsm
StopCcxTsm(): invalid State: %d!!!
StopCcxTsm(): invalid TSID: %d!!!
StopCcxTsm(): TSID: %d
storePwrIndexDiffRateOffset
StringFileInfo
successful
Suggest to open protection
Supplicant_OnEAPOL
Supplicant_OnEAPOLKeyRecvd
Support CCK in 20/40 mode = %s
Support dbg cmd for 92SE verify
Support Short GI for 20M = %s
Support Short GI for 40M = %s
Support TX STBC = %s
Supported Channel Width = %s
SupportLowPowerState
SupportPciASPM
SUVWATAUAVAWH
SUVWATAUAVH
SUVWH
SwAntennaDiversity
SwBwTimer
SwChnlTimer
Switch dbg flag
SwLedBlink7
SwLedBlink8
SwLedBlink8 CurrLedAction %d, 
SwLedBlink9
SwLedBlink9 CurrLedState %d
SwLedControlMode9
SwLedOff
SwLEDOFF 
SwLedOn
SwLEDON 
sXD9=
sys + arg
SYS ctrl
SYS dump
sysctrl
SYSF_CFG[0x4D]=0x%02x
t!D8P
t"fA;
t#fA;
t#ve<
T$ E3
t$ f;
t$ fD
T$ H;
T$ M;
t$ s0
t$ WATAUAVAWH
t$ WATAUH
t$ WAUAVH
t$ WAUAWH
t$ WAVAWH
t$ WH
t$(@8|4@
t$(@8|4@uTH
t$(A#
T$(E3
t$(fD
T$(H9?u
T$(s@
T$,E3
T$@A8
t$@D9
T$@E:
t$@E;
T$@E3
t$@E3
T$@E3
T$@f!
T$@f#
T$@fD
T$@fD;
T$@fE
T$@fE;
t$`A*
t$`A:
t$`A;
T$`fA
T$`fA;
T$`H;
T$`I;
T$0A;
T$0D:
T$0E3
T$0f+
T$0fD
t$0fD
T$0H;
T$0I;
T$4E3
t$8A3
t$8D8
T$8E3
t$8f;
t$8fA;
T$8H96u
T$8M9
T$AD8
t$D9%
t$D9%.e
t$D9%9d
t$D95#
t$DA3
T$Dt0
t$hE3
t$HE3
T$hE9~
t$hH;
t$hHc
t$HI;
T$PA;
T$pE3
T$PE3
T$pE3
T$PE3
t$pE3
T$Pf#
T$PfD
T$pfD;S(
T$PH;
t$PH;
T$PH;
t$pHk
T$PI;
T$Ps8
t$X@"
t$XfD
t$xI;
t$xsNA
t%9=3
t%9=5
t%9=z
t&~4A
t&D9-
t&D9- p
t&D9%
t&D9%]r
t&D9%^
t&D9%0
t&D9%v
t&D9%X
t&D9=
t&D9=1
t&D9=4
t&D9=o
t&D9=q
t&D95l
t&D9-ko
t&D9-sm
t(D8A0t"
t(D9%
t(D9%;c
t(D9%{c
t(D9%3`
t(D9%7b
t(D9%Cg
t(D9%Ch
t(D9%Ci
t(D9%s`
t(D9%wa
t(D9%we
t(D9%yd
t(D95
t(fA;
t(v6<
t)9=/`
t)D9%
t)D9%6a
t)D9%go
t)D9%op
t)D9%-p
t)D9%xb
t)D9=
t)D95(
t*D9-
t*D9%
t*D9%%o
t*D9%-_
t*D9%|f
t*D9%|t
t*D9%9f
t*D9%Al
t*D9%Mm
t*D9%p_
t*D95"
t*D9-Ab
t,,X.
t,9=Q
t,95C
t,9-I
t,D9-
t,D95
t,fD;
t.D9-
t.D9%
t.D9=
t.D9=1
t.D9=Y
t.D9-Qg
t.fD9
t/95",
t/D95
t:D9%
t:fA;
'T;&&\;
t?D9%
t@95{v
t@fD;j
T[$:.6
t\D9%
t\lHBW
t_D95^
t+9-V
t+D9%H
T< L;
t<9-u
t<A8G
t<D9%F
t<D9=
t<fA;
t<vE<
t=D9=
t=D9-b
t=fA;
t=fD9X
t=v5<
t>8X$t9H
t>95x
T00`P
t0D9=\
t195l
t1D9%
t1D9%Zs
t1D95
t2D9%i
t2D9=
t2D9=&v
t3D9%
t3D9%/k
t3D9%Nj
t3D9%zk
t3D9=
t3D9-Rd
t49-5
t4D9%
t4D9%{
t4D9%Aq
t4D9=
t4D95
t4D95(&
t4D95A+
t4D95o'
t4D95X)
t5D9-
t5D9%
t5D9=
t5D9=d
T6$:.
t6D8p
t7D9=
t7D9h
t8D9-B
t-9-{k
t-9=.
t-9=a
t-9=s
t-9=u
t-95gn
t9A8sHt
t9D9=
t-9-E
t9fA;
t-9-q0
t-9-Y
tafA;\
tb951
tBD9%9t
tBfA;
TbttPollingWorkItem
TbttPollingWorkItemCallback
TbttPollingWorkItemCallback(): BcnPeriod: %ld, update Tbtt to %I64d 
TbttPollingWorkItemCallback(): bDriverStopped = %d, bSurpriseRemoved = %d, bDriverIsGoingToUnload = %d; return this workitem!!!
TbttPollingWorkItemCallback(): Now: %I64d >= Tbtt: %I64d => update beacon ...
TbttPollingWorkItemCallback(): wait %ld us
tC<Pt?
tC9-@
tC9-R
TcaCheckTimer
TcaCheckTimerCallback
TCB INFO
TCR[0x44]=0x%08lx
td@8*t_A
t-D8I
t-D9-
t-D9%
t-D9=
td95{
tDD8h$t>
tdD9%f
tdfA;
tDfA;
tE~4A
teD9=
tefA;
Test --> receive write adapter command
TEST CONFIG INFO
tfD9%C
tfD9=
tGA8^$tAH
tgD9%
tgfA;
The buffer being passed into OID_DOT11_CREATE_MAC is too small(%d)
The buffer being passed into OID_DOT11_DELETE_MAC is too small(%d)
The Data is %x and QoS is Set
The insert KEY  is %x %x 
The insert KEY length is %d
The Key ID is %ld
The port number (%d) being passed in is invalid
The Rtl819XAGCTAB_Array_Table[0] is %lx Rtl819XPHY_REGArray[1] is %lx 
The Rtl819XPHY_REGArray_Table[0] is %lx Rtl819XPHY_REGArray[1] is %lx 
The Rtl819XPHY_REGArray_Table_PG[0] is %lx Rtl819XPHY_REGArray_Table_PG[1] is %lx 
The Rtl819XPHY_REGArraytoXTXR_Table[0] is %lx Rtl819XPHY_REGArraytoXTXR_Table[1] is %lx Rtl819XPHY_REGArraytoXTXR_Table[2] is %lx 
The SECR-value %x 
The TKIP in N mode is %d 
ThermalMeter = %#x
TID = %ld
TimerGPIO
tj@8|$@t
tj95;{
tJD9-.i
tJfD9
tKD9-u_
TKIPinNmode
tl95_,
tLD9%
tLfA;
TLV %u, Protocol ID: %u
tmpvalue = %x
tND9%
tND95
TODO: Set Rts Threshold = %02x .
Total Reset =%ld
Totally %d Clients dumped
Totally %d items in Scan List dumped
tPD8 u*D8`
tQD8e$tK
tr9/t
Transit from 0x%X to 0x%X.
TranslateHeader
TranslateNdisPsToRtPs
TranslateNdisPsToRtPs(): Unknown ndisPsMode: 0x%X !!!
Translation
TransmitTcb fail
TRDMA Disable
trfE9
Trigger 92S Thermal Meter!!
TsAddBaProcess
TsAddBaProcess(): ADDBA Req is started!! 
tsD9%
TSFL = %ld
TsmTimer
TsmTimerCallback
TsmTimerCallback(): ..............
TsmTimerCallback(): TSM timer is stopped.....
TSSI_A = %#x, TSSI_B = %#x
TsStartAddBaProcess
TsStartAddBaProcess(): Delayed Start ADDBA after 60 sec!!
TsStartAddBaProcess(): Immediately Start ADDBA now!!
ttD9-
tttt""""
TTTT{{{{
tUD9-
TurboMode
TurboScan
tv9=F
tVD9%
tVD9=
tvH;O(u
TX ok=%I64d, fail=%I64d, retry_cnt=%I64d
TX PKT LEN    [%d]
TX PKT NUM    [%ld]
Tx Reset  =%ld
tX.4-6
TX/RX Disable
TX_DESC_FIRST_PKT_LEN=%ld First segment
TX_Rate =
TX_Rate =%02x
TxAdmittedBARecordTimer
TXAntenna
tXD9%
tXD95N?
TXDMAPRE2FULL
TXFF_STATUS[0xB7]=0x%02x
TxFillDescriptor8192SE
TxFillDescriptor8192SE(): Inform FW to return Tx Info (FrameNo: %d, SeqNo: %04X
TxFillDescriptor8192SE<==
TxHandleInterrupt
TxHighPwrLevel_100
TxHighPwrLevel_15
TxHighPwrLevel_35
TxHighPwrLevel_50
TxHighPwrLevel_70
TxHighPwrLevel_Level1 (TxPwr=0x10)
TxHighPwrLevel_Level2 (TxPwr=0x0)
TxHighPwrLevel_Normal
TxInsertFirmwareInfoIntoDescRing8192SE
TXOP_STALL_CTRL[0x238]=0x%02x
TxPendingBARecordTimer
TXPKTBUF_PGBNDY[0xB4]=0x%02x
TxPowerDiff = %#x
TxPowerLevel
txrahis
txtbl
TxThroughput: %ld KBps, RxThroughput: %ld KBps, TotalThroughput: %ld KBps
TxTsAddBaTimer
TxTsCommonInfo_InactTimer
TxTsCommonInfo_SetupTimer
tYD8e$tSD8
tYD8R
tYD9-
tyD9=
Type = %ld
u A8D$
u D9'u
u!!Bc
u!@8x
u"A8@
u"A8{
u"A8G
u"D8A
u"D8k
u#fA;
u$D8`
u$fA;
u%A8xEu
u(A8{
u(D8k
U(Px(
u)fD9
u*D9u
u,fD9
u.A8{
u'@8x
u\fD;
u^fD9
u_D8n
u0fD;
u1fD9
u2fD;{(t0H
u3+Rox
u3fD;
u3fD9l$H
u4A8{
u6fD;
u8EndTime = 0x%08X %08X (Low Dec = %d)
u8StartTime = 0x%08X %08X (Low Dec = %d), 
u'A8D$
uAfD9
uBc 0
ucfD;
uefD9
u'fD9
u-fD9
u'fD9t$ht
u'fE;
ugA8C
ugfD9
uHE:L
uidbg
Uindex
uJfA;
ujfA;
uJfE;
uKeyIndex=0x%X
ulRegRead: %lx, WriteData: %lx 
umA8C
umfE;
Undefine hardware Type 
uNE8u$t
Unexpected Download step!!
unhandled TLV type 0x%X.
unknow
Unknow command
UnKnow Operation
unknow pairwise EAPOL-key: info=0x%X-0x%X
unknown Bandwidth: %#X
Unknown CCX_EVENT_OID tlv type %x!
Unknown device - VendorID/DeviceID=%x/%x
Unknown reset request.
Unknown RF path!! %d
Unknown Scan Backup Operation. 
Unkown hardware Type 
Unkown Hardware Type 
UpdateBssWcnIe
UpdateBssWcnIe(): length of the recvd Wcn IE (%u) greater than the maximum length (%u) we can deal with.
UpdateDefaultSetting(): bSupportTurboMode=%d, bAutoTurboBy8186=%d
UpdateHalRAMask8192SE
UpdateHalRAMask92SE(): mask = %lx, bitmap = %lx ratr_index = %1x
UpdateHalRATRTable8192SE
UpdateLPSStatus8192CE(): RegLeisurePsMode=%d, rtPsMode=%d, pPSC->bLeisurePs=%d
UpdateLPSStatus8192SE
UpdateRxAMPDUHistogramStatistics8192S
UpdateRxAMPDUHistogramStatistics8192S(): A-MPDU too large
UpdateTxPowerWorkItem
Upper channel
uqD8AAt
uQfD9
usA8C
USAGE:
Used20CallingMethod = %d
UseDriverAssingedRate
UseRxInterruptWorkItem
uSfD9
usKeyLength=0x%X
USTIME[0x8A]=0x%04x=EDCA/TSF=%d/%dMHZ
uU9Y^u!
uuid:aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa
uuid:bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb
uuid:cccccccc-cccc-cccc-cccc-cccccccccccc
uuid:dddddddd-dddd-dddd-dddd-dddddddddddd
uuid:eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee
uuid:ffffffff-ffff-ffff-ffff-ffffffffffff
uuid:gggggggg-gggg-gggg-gggg-gggggggggggg
UUPx((
UUUU((((
UVWATAUAVAWH
UVWATAUH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAVAWH
UWATAUAVH
uwfA;
uyA8C
uyfD9
uYfD9
uz;=y
v.fA;
v/fA;
v]D8o
v0fA;
V22dN::t
value_u8 = %x
VarFileInfo
Verification Console
verify
Version: 0x%02X
VI_ADMTM[0x1EC]=0x%08lx
VirtualAddress=[%p]
VITID4_CTRL[0x138]=0x%08lx
VITID5_CTRL[0x134]=0x%08lx
VO_ADMTM[0x1E8]=0x%08lx
VOTID6_CTRL[0x130]=0x%08lx
VOTID7_CTRL[0x12C]=0x%08lx
VS_VERSION_INFO
VUUUA
VUUUL
vvvv[[[[
VVVV>>>>KKKK
VWATAUAVH
VWATAUAWH
VWATAVAWH
VWATH
VWAUAVAWH
VWAUH
VWAVH
VWifiSupport
W mem addr by Dword
W@8{ u
w4 <Addr> <Data> {Size}Size: num of decimal dword <4096
Wait for IPS leave too long!!! IPSLeaveTimeOut  = %ld
Wait for LPS leave too long!!! LPSLeaveTimeOut  = %ld
WaitTxBusyQueueComplete
WaitTxBusyQueueComplete(): %d times TcbBusyQueue[%d] != 0 !!!
WaitTxBusyQueueComplete(): %d times TcbBusyQueue[%d] !=0 !
WARNING -- ccxData is NULL
WARNING -- incorrect length
WARNING -- length too short
Warning: Operational rate set is empty !
Warning: Set periodic timer when timer is active !!
Warning: Unknown link status !!
WATAUAVAWH
WATAUH
WATAVH
WATAWH
WAUAVH
WAUAWH
WAVAWH
WdsMode
We do not find the AP currently associated !!!
WepMode
WiFi11gIbss
WiFiConfg
Wireless Mode=%02x
WIRELESS_MODE_A
WIRELESS_MODE_B
WIRELESS_MODE_G
WIRELESS_MODE_N_24G
WIRELESS_MODE_N_5G
WirelessMode
WirelessMode4ScanList
WMM_AddTsReq
WMM_AddTsRsp
WMM_DelTs
WMMPS_AwakeComplete
WMMPS_AwakeComplete(): >>>>>>>>>> Enter APSD service period >>>>>>>>>>
WMMPS_AwakeComplete(): RF is turn on ++++++++++
WMMPS_DozeComplete
WMMPS_DozeComplete(): RF is turn off ----------
WMMPS_DozeComplete(): shecule a timer to wake up in %d ms....
WMMPS_DozeComplete(): TODO............
WMMPS_DozeStart
WMMPS_DozeStart(): marked as dozed state
WnodeHeader.BufferSize = 0x%x
WnodeHeader.Linkage = 0x%x
word_en = %x efuse_addr=%x
Worker Thread creation failed with 0x%lx
WoWLANMode
WPS Attributes:
WPS Check Recieve Buffer:
WPS in  pSimpleConfig : %d 
WPS Set DISCONEECT REQUEST
Write memory address by char
Write memory address by Dword
Write memory address by word --> Cmd Index=10
Write NIC adapter
Write to FW Thermal Val = 0x%lx
Wy~$E
x ATAUAVAWA
x ATAUAVAWL
x ATAUAVH
x ATAUAWH
x ATAUE3
x ATAVAWH
x ATD
x ATE3
x ATfA
x ATH
x AUAV
x AUAVAWH
x AUH
x AVH
X UVWH
X VWAWH
x%Jo%.\r.
x((Pz
X_^][
x_^][
xA]A\_^][
xA_A^A]A\_^][
XA_A^A]A\_^][
Xt,,4.
Xt4.6-
Xtt&H
xtt'H
xxJo%%\r..8$
XXX InitializeTxRxBuffer(): N6pciAllocateRxNetBufferListPool() failed
xxxx%%%%....
XXXXXXXXXX MgntDisconnect IBSS
Yh"5gW
ypt~D8
YtPA;
YYYY''''
yyyy    
YYYYGGGG
Zero Data rate exists!!
ZwClose
Zwhat do ya want for nothing?
