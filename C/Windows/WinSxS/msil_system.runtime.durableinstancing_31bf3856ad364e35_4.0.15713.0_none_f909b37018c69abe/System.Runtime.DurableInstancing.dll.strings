 .NET Framework
 Microsoft Corporation.  All rights reserved.
 Microsoft Operations Puerto Rico1
- 'p=
 WhereSelectEnumerableIterator`2
!)SWA
!This program cannot be run in DOS mode.
"Microsoft Time Source Master Clock0
#;$pC
#Blob
#GUID
#Strings
#Vx"&6
$#I#L!v##
$`2X`F
$a9b8c4b5-b4a9-4800-8268-e8ec3b93d9ac
$Microsoft Root Certificate Authority
$Microsoft Root Certificate Authority0
$System.Runtime.DurableInstancing.dll
% moa
%hp&w
%The argument must be a non-zero Guid.
(]W%#
(f:\dd\tools\devdiv\35MSSharedLib1024.snk
)Could not resolve namespace prefix '{0}'.
)Microsoft Root Certificate Authority 20100
)Microsoft Root Certificate Authority 20110
*?*kXIc
*Bre1
.cctor
.ctor
.text
.tq[m
/~+n`
/=aJcY
:#;#<#=(>(?(@1A2
?http://crl.microsoft.com/pki/crl/products/microsoftrootcert.crl0T
?System.ServiceModel, PublicKey=00000000000000000400000000000000
?The async result state context, which was provided, in invalid.
@.reloc
@002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a
]System.Activities, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
_CorDllMain
`.rsrc
`Ge`@N
|hK,_
}\hs@
}A null name was provided in a named collection (dictionary) of InstanceValues. Null is not a valid name for an InstanceValue.
+&*.s
<.ctor>b__5_0
<>9__0
<>9__11_0
<>9__13_0
<>9__25_1
<>9__27_0
<>9__27_1
<>9__5_0
<>9__6_1
<>9__69_0
<>9__8_1
<>c__DisplayClass32_0
<>c__DisplayClass33_0
<AcquirePending>k__BackingField
<CancelRequested>k__BackingField
<CommandName>k__BackingField
<ConflictingHandle>k__BackingField
<ConflictingInstanceId>k__BackingField
<CurrentCommand>k__BackingField
<CurrentExecutionContext>k__BackingField
<CurrentTransactionalAsyncResult>k__BackingField
<DefaultInstanceOwner>k__BackingField
<Free>b__69_0
<get_IsLoadTransactionRequired>b__13_0
<get_IsSaveTransactionRequired>b__11_0
<get_Keys>b__6_0
<get_Keys>b__6_1
<get_Values>b__8_0
<get_Values>b__8_1
<GetEnumerator>b__25_0
<GetEnumerator>b__25_1
<GetInstanceOwners>b__27_0
<GetInstanceOwners>b__27_1
<HostTransaction>k__BackingField
<http://www.microsoft.com/pki/certs/MicrosoftTimeStampPCA.crt0
<InstanceDataConsistency>k__BackingField
<InstanceHandle>k__BackingField
<InstanceId>k__BackingField
<InstanceKey>k__BackingField
<InstanceKeyMetadataConsistency>k__BackingField
<InstanceKeysConsistency>k__BackingField
<InstanceKeyState>k__BackingField
<InstanceMetadataConsistency>k__BackingField
<InstanceOwner>k__BackingField
<InstanceOwnerId>k__BackingField
<InstanceOwnerIds>k__BackingField
<InstanceOwnerMetadataConsistency>k__BackingField
<InstanceOwners>k__BackingField
<InstanceState>k__BackingField
<InstanceVersion>k__BackingField
<InstanceView>k__BackingField
<IsBoundToInstance>k__BackingField
<IsComplete>k__BackingField
<IsHandleDoomedByRollback>k__BackingField
<IsHostTransaction>k__BackingField
<IsSignaled>k__BackingField
<IsValid>k__BackingField
<IsViewFrozen>k__BackingField
<LastAsyncResult>k__BackingField
<MarkerWaitHandle>k__BackingField
<Module>
<Name>k__BackingField
<NonConflicting>k__BackingField
<OfTypeIterator>d__aa`1
<OperationPending>k__BackingField
<Options>k__BackingField
<Owner>k__BackingField
<OwnerToken>k__BackingField
<Reason>k__BackingField
<RemoveHandleFromEvents>b__0
<RootAsyncResult>k__BackingField
<SelectSignaledEvents>b__0
<SerializableInstanceOwnerMetadata>k__BackingField
<State>k__BackingField
<Store>k__BackingField
<TooLateToEnlist>k__BackingField
<Value>k__BackingField
<Version>k__BackingField
<View>k__BackingField
<Wa~4
<WaitForHostTransaction>k__BackingField
>http://www.microsoft.com/pki/certs/MicCodSigPCA_08-31-2010.crt0
>http://www.microsoft.com/pki/certs/MicCodSigPCA_2010-07-06.crt0
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
040904B0
06?q)
070403125309Z
0O)/;GY
1!W"4
1(0&0
1,0*0
100.0
100701213655Z
100706204017Z
100831221932Z
110708205909Z
160907175647Z
160907175658Z
160907175855Z
170912180706Z
170912183919Z
180712201119Z
180807090613Z0#
180907175647Z0
180907175658Z0
180907175855Z0
180912180706Z0t1
180912183919Z0t1
190726201119Z0t1
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
1Jv1=+r
200831222932Z0y1
20180807002332Z
20180807010244Z
20180807090618.016Z0
20180807090625.749Z0
20180808002332Z0t0:
20180808010244Z0x0>
210403130309Z0w1
229803+4379500
230217+2423640
230865+2424060
250701214655Z0|1
250706205017Z0~1
260708210909Z0~1
3http://www.microsoft.com/pkiops/docs/primarycps.htm0@
4.0.0.0
4.7.3190.0
4.7.3190.0 built by: NET472REL1LAST_C
6+0@YHF
6f1J8
7Z>@B1
8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851
8http://www.microsoft.com/pki/certs/MicrosoftRootCert.crt0
9!0f6
A name collision was detected for the name '{0}' provided by a persistence participant of type '{1}'. A value provided by the participant's CollectValues implementation uses the same name as another value provided by this participant or a different persistence participant. Fix the participant to use a different name to avoid the collision, or remove the participant from the workflow's extensions collection.
A name collision was detected for the name '{0}' provided by a persistence participant of type '{1}'. A value provided by the participant's MapValues implementation uses the same name as another value provided by this participant or a different persistence participant.  ix the participant to use a different name to avoid the collision, or remove the participant from the workflow's extensions collection.
A null value was provided in a named collection (dictionary) of InstanceValues. The name provided for the null value was {0}. Null is not a valid InstanceValue. To specify a null value, use an instance of InstanceValue with null data by passing null to the InstanceValue constructor. To indicate that a named value should be deleted, use InstanceValue.DeletedValue.
A value of the wrong type was retrieved from the instance store.  A value of type {0} was expected, but a value of type {1} was encountered instead.
A value of the wrong type was retrieved from the instance store.  A value of type {0} was expected, but null was encountered instead.
A WaitForEvents or BeginWaitForEvents operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.
A14p,C
Abort
accumulatedMetadataWrites
accumulatedOwnerMetadataWrites
AcquireContextAsyncResult
Action`1
Action`2
ActionItem
activationNamespace
ActivationType
activationType
ActivationTypes
Activator
activitiesCommandNamespace
activitiesEventNamespace
AddHandleToEvent
AddValue
AfterCommand
AfterCommitWait
All cases covered above.
allowDelete
AllowPartiallyTrustedCallersAttribute
allowWriteOnly
AlreadyBoundToInstance
AlreadyBoundToOwner
Although no ambient transaction was present when InstanceStore.Execute or BeginExecute was invoked, an internal transaction was used in the processing of the command. The internal transaction entered the InDoubt state.
Although no ambient transaction was present when InstanceStore.Execute or BeginExecute was invoked, an internal transaction was used in the processing of the command. The internal transaction was aborted.
An incorrect InstanceOwner was provided. The InstanceOwner provided to an InstanceStore method must belong to the InstanceStore. Only use an InstanceOwner object with the InstanceStore that created it.
An InstanceHandle can have at most one outstanding WaitForEvents or BeginWaitForEvents operation in progress at a time. A second operation was attempted. Only call WaitForEvents / BeginWaitForEvents once the previous operation has completed.
An InstanceKey cannot be created with an all-zero value, such as Guid.Empty. Use InstanceKey.InvalidKey to obtain an InstanceKey with an all-zero value.
An InstancePersistenceCommand which returns true from AutomaticallyAcquiringLock must also override Validate to throw an InvalidOperationException if the command is executed using an InstanceHandle not bound to an InstanceOwner.
An IPersistenceContextInitializer implementation threw an exception. A durable service instance, such as a WorkflowServiceInstance, could not be loaded or created. The InnerException property contains the original exception.
ArgumentException
ArgumentNull
ArgumentNullException
ArgumentOutOfRange
ArgumentOutOfRangeException
array
arrayIndex
AsError
AssemblyCompanyAttribute
AssemblyCopyrightAttribute
AssemblyDefaultAliasAttribute
AssemblyDelaySignAttribute
AssemblyDescriptionAttribute
AssemblyFileVersionAttribute
AssemblyInformationalVersionAttribute
AssemblyKeyFileAttribute
AssemblyProductAttribute
AssemblySignatureKeyAttribute
AssemblyTitleAttribute
AssertAndFailFast
AssertAndThrow
AssertAndThrowFatal
AssociatedInstanceKey
associatedInstanceKeyMetadata
AsyncCallback
AsyncResult
AsyncTransactionException
AsyncWaitHandle
automaticDisassociationEnabled
baseNamespace
basis
BeforePrepareAsyncCompletion
BeginAcquireExecutionContext
BeginBindReclaimedLock
BeginCommit
BeginExecute
BeginLoad
BeginOnLoad
BeginOnSave
BeginOuterExecute
BeginSave
BeginTryCommand
BeginWaitForEvents
Bhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0
BindAcquiredLock
BindEvent
BindInstance
BindInstance called on read-only InstanceView.
BindInstanceOwner
BindLock called on read-only InstanceView.
BindLockRequiresCommandFlag
BindOwner
BindOwner called on read-only InstanceView.
BindOwnerEvent
BindReclaimedLock
BindReclaimedLockAsyncResult
BindReclaimedLockException
BindReclaimSucceeded
BlocksUsing
bookmarks
Bookmarks
boundHandles
boundOwnerEvents
bP8aV
Buffer`1
BufferedOutputStream
CacheAttribute
CacheAttrition
callback
CallbackException
Called FinishBind prematurely.
Can only reuse contexts with host transactions.
Cancel
CancelBind
Canceled
cancellationHandler
cancellationHandlerCalled
CancelReclaim
CancelReference
CancelWaiting
CannotAcquireLockDefault
CannotAcquireLockSpecific
CannotAcquireLockSpecificWithOwner
CannotCompleteWithKeys
CannotCreateContextWithNullId
CannotInvokeBindingFromNonBinding
CannotInvokeTransactionalFromNonTransactional
CannotReplaceTransaction
Check/SyncContinue cannot be called from within the PrepareTransactionalCall using block.
CheckOldestReference
CheckSyncContinue
CheckSyncValidation
Chttp://crl.microsoft.com/pki/crl/products/MicrosoftTimeStampPCA.crl0X
Chttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a
Clear
Clone
CLSCompliantAttribute
Collect called at the wrong time.
Collection`1
CollectValues
command
CommandExecutionCannotOverlap
commandName
CommandNameName
commandProcessed
Comments
CommitHelper
CommittableTransaction
Committed
CompanyName
CompareExchange
CompareTo
CompilationRelaxationsAttribute
CompilerGeneratedAttribute
complete
CompletedAsyncResult
CompletedAsyncResult`1
CompletedInstance
CompletedInstanceKey
completedInstanceKeyMetadata
CompletedMustNotHaveAssociatedKeys
CompleteOne
CompleteTransactionScope
ComVisibleAttribute
Concat
ConcludeBindReclaimedLockHelper
conflictingInstanceId
ConflictingInstanceIdName
Contains
ContainsKey
context
ContextAlreadyBoundToInstance
ContextAlreadyBoundToLock
ContextAlreadyBoundToOwner
ContextMustBeBoundToInstance
ContextMustBeBoundToOwner
ContextNotFromThisStore
ControlEndpoint
controlEndpoint
CopyTo
CouldNotResolveNamespacePrefix
CP&To
cp8k2
CreateBindReclaimedLockException
CreateInstance
CreateInstanceHandle
CreateReadOnlyException
CreateTransactionScope
creationContext
CreationContext
CrOP?
CultureInfo
currentExecution
D=xz#
DataContractAttribute
DataMemberAttribute
dCDF.CIT.Scenarios.Common, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
DDBLD438
DebuggableAttribute
DebuggingModes
Decrement
DefaultDllImportSearchPathsAttribute
DefaultMemberAttribute
deferredTransactionalResult
DefinitionIdentities
definitionIdentities
DefinitionIdentity
definitionIdentity
definitionIdentityFilter
DefinitionIdentityFilter
deletedValue
Dequeue
DiagnosticsEventProvider
Dictionary`2
DisassociateInstanceKeysExtension
DllImportSearchPath
DoAfterTransaction
DoEndCommand
DoNotCompleteTryCommandWithPendingReclaim
DoWaitForTransaction
dThe execution of InstancePersistenceCommands has been canceled because the InstanceHandle was freed.
e_.,>
E0C1)0'
EAD,,
Ehttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_08-31-2010.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_2010-07-06.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0
EmitDefaultValue
emptyKeys
EmptyMetadata
emptyMetadata
emptyProperties
EmptyQueryResult
en2N0
EndAcquireExecutionContext
EndBindReclaimedLock
EndCommit
EndExecute
EndLoad
EndOnLoad
EndOnSave
EndOuterExecute
endpointsNamespace
EndSave
EndTryCommand
EndWaitForEvents
enlistment
EnlistmentOptions
EnlistVolatile
Enqueue
EnqueueReference
Enter
Entry
Enumerable
Enumerator
EnumMemberAttribute
en-US
EqualityComparer`1
Equals
EtwDiagnosticTrace
EtwProvider
EventLogger
eventNames
EventReady
EventResetMode
events
eventTraceActivity
Exception
exception
ExceptionHandler
ExceptionTrace
Execute
ExecuteAsyncResult
executeCalledByCurrentCommand
ExecuteMustBeNested
Execution
executionContext
executionStack
existing
expectedStage
ExtensionAttribute
ExtensionsCannotBeSetByIndex
ExternalResourceAttribute
FaultBind
FileDescription
FileVersion
finalState
FinishBind
FinishBindLock
FinishBindLock called on read-only InstanceView.
FinishBindLock called with mismatched instance version.
FinishOperation
FinishReclaim
FirstOrDefault
FlagsAttribute
Flavor=Retail
Format
freezeTransaction
FriendAccessAllowedAttribute
Func`2
g?{LPl
G8AP_}
GenericEqualityComparer`1
GenericInstanceCommand
GenericInstanceCommandNull
get_AccumulatedMetadataWrites
get_AccumulatedOwnerMetadataWrites
get_AcquirePending
get_ActivationType
get_Active
get_ActivitiesCommandNamespace
get_ActivitiesEventNamespace
get_AlreadyBoundToInstance
get_AlreadyBoundToOwner
get_Assembly
get_AsyncState
get_AsyncTransactionException
get_AutomaticallyAcquiringLock
get_AutomaticDisassociationEnabled
get_BindLockRequiresCommandFlag
get_BindReclaimedLockException
get_BindReclaimSucceeded
get_Bookmarks
get_BoundHandles
get_CancellationHandler
get_CancelRequested
get_CannotAcquireLockDefault
get_CannotCompleteWithKeys
get_CannotCreateContextWithNullId
get_CannotInvokeBindingFromNonBinding
get_CannotInvokeTransactionalFromNonTransactional
get_CannotReplaceTransaction
get_CommandExecutionCannotOverlap
get_CommandName
get_CompletedMustNotHaveAssociatedKeys
get_CompletedSynchronously
get_ConflictingHandle
get_ConflictingInstanceId
get_ContextAlreadyBoundToInstance
get_ContextAlreadyBoundToLock
get_ContextAlreadyBoundToOwner
get_ContextMustBeBoundToInstance
get_ContextMustBeBoundToOwner
get_ContextNotFromThisStore
get_ControlEndpoint
get_Count
get_CreationContext
get_Culture
get_Current
get_CurrentCommand
get_CurrentExecutionContext
get_CurrentTransactionalAsyncResult
get_Default
get_DefaultInstanceOwner
get_DefinitionIdentities
get_DefinitionIdentity
get_DefinitionIdentityFilter
get_DeletedValue
get_DictionaryIsReadOnly
get_DoNotCompleteTryCommandWithPendingReclaim
get_EndpointsPath
get_Events
get_EventTraceActivity
get_Exception
get_ExecuteMustBeNested
get_ExtensionsCannotBeSetByIndex
get_GenericInstanceCommandNull
get_GuidCannotBeEmpty
get_HandleFreed
get_HandleFreedBeforeInitialized
get_HandlesLock
get_HostTransaction
get_Id
get_InProgressHandles
get_InProgressHandlesPerInstance
get_InstanceCollisionDefault
get_InstanceCompleteDefault
get_InstanceData
get_InstanceDataConsistency
get_InstanceHandle
get_InstanceHandleConflictDefault
get_InstanceId
get_InstanceKey
get_InstanceKeyMetadata
get_InstanceKeyMetadataConsistency
get_InstanceKeyRequiresValidGuid
get_InstanceKeys
get_InstanceKeysConsistency
get_InstanceKeyState
get_InstanceLockLostDefault
get_InstanceMetadata
get_InstanceMetadataConsistency
get_InstanceNotReadyDefault
get_InstanceOperationRequiresInstance
get_InstanceOperationRequiresLock
get_InstanceOperationRequiresNotCompleted
get_InstanceOperationRequiresNotUninitialized
get_InstanceOperationRequiresOwner
get_InstanceOwner
get_InstanceOwnerDefault
get_InstanceOwnerId
get_InstanceOwnerIds
get_InstanceOwnerMetadata
get_InstanceOwnerMetadataConsistency
get_InstanceOwners
get_InstanceRequired
get_InstanceState
get_InstanceStoreBoundSameVersionTwice
get_InstanceStoreQueryResults
get_InstanceType
get_InstanceVersion
get_InstanceView
get_InvalidAsyncResult
get_InvalidInstanceState
get_InvalidKey
get_InvalidKeyArgument
get_InvalidLockToken
get_InvalidStateInAsyncResult
get_IsBoundToInstance
get_IsBoundToInstanceOwner
get_IsBoundToLock
get_IsComplete
get_IsDeletedValue
get_IsEtwProviderEnabled
get_IsHandleDoomedByRollback
get_IsHostTransaction
get_IsIOParticipant
get_IsLoadTransactionRequired
get_IsPotentiallyAbandoned
get_IsReadOnly
get_IsSaveTransactionRequired
get_IsSignaled
get_IsSignalled
get_IsTransactionEnlistmentOptional
get_IsValid
get_IsViewFrozen
get_Item
get_Item1
get_Item2
get_Key
get_KeyAlreadyAssociated
get_KeyAlreadyCompleted
get_KeyAlreadyUnassociated
get_KeyCollisionDefault
get_KeyCompleteDefault
get_KeyNotAssociated
get_KeyNotCompleted
get_KeyNotReadyDefault
get_KeyProvider
get_Keys
get_LastAsyncResult
get_LastUpdate
get_LoadedWriteOnlyValue
get_LoadOpAssociateKeysCannotContainLookupKey
get_LoadOpFreeKeyRequiresAcceptUninitialized
get_LoadOpKeyMustBeValid
get_LockToken
get_MarkerWaitHandle
get_MayBindLockCommandShouldValidateOwner
get_MessageVersionForReplies
get_Metadata
get_MetadataCannotContainNullKey
get_MustSetTransactionOnFirstCall
get_Name
get_NonConflicting
get_OnCancelRequestedThrew
get_OnFreeInstanceHandleThrew
get_OperationPending
get_Options
get_OutputPath
get_Owner
get_OwnerBelongsToWrongStore
get_OwnerRequired
get_OwnerToken
get_PendingHandles
get_PersistenceInitializerThrew
get_ProviderObject
get_QueryResultsBacking
get_Reason
get_RelativeApplicationPath
get_RelativeServicePath
get_RequestReplyCorrelation
get_ResourceManager
get_RootAsyncResult
get_SerializableInstanceOwnerMetadata
get_SerializedMetadata
get_SerializedOptions
get_SerializedValue
get_Service
get_SiteName
get_State
get_Status
get_Store
get_StoreReportedConflictingLockTokens
get_SuspendException
get_SuspendReason
get_Target
get_ThisLock
get_TimedOutWaitingForLockResolution
get_TooLateToEnlist
get_Trace
get_Transaction
get_TransactionInDoubtNonHost
get_TransactionInformation
get_TransactionRolledBackNonHost
get_TryCommandCannotExecuteSubCommandsAndReduce
get_UninitializedCannotHaveData
get_UserContext
get_ValidateUnlockInstance
get_Value
get_Values
get_VariablesPath
get_Version
get_View
get_WaitAlreadyInProgress
get_WaitForHostTransaction
get_WAS
get_Workflow
get_WorkflowApplication
get_WorkflowHostType
GetEvents
GetHashCode
GetInstanceOwners
GetName
GetObjectData
GetOrCreateOwner
GetOwnerEventHelper
GetParameterTypeMismatch
GetString
GetType
GetTypeFromHandle
Gppu4
gSystem.ServiceModel.Routing, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
GuaranteeNonBlockingAttribute
GuidAttribute
GuidCannotBeEmpty
H0F0D
handle
Handle already bound to a lock.
HandleFreed
HandleFreedBeforeInitialized
handleRef
handlesPendingResolution
handleToFree
HashSet`1
hostTransaction
Hsystem.runtime.durableinstancing.dl
HSystem.Runtime.Serialization, PublicKey=00000000000000000400000000000000
hThe execution of an InstancePersistenceCommand was interrupted because the instance is already complete.
http://microsoft.com0
I0G0E
IAsyncResult
ICancelable
ICollection`1
IDictionary`2
IDisposable
idIsSet
IDurableInstancingOptions
IEnlistmentNotification
IEnumerable
IEnumerable`1
IEnumerator
IEnumerator`1
IEqualityComparer`1
IEquatable`1
If LoadByKeyOperation.InstanceIdForFreeKey is specified, AcceptUninitializedInstance must be set to true. If the key is free, it will be associated to an uninitialized instance with the instance ID provided.
If LoadWorkflowByInstanceKeyCommand.AssociateLookupKeyToInstanceId is not specified, the LookupInstanceKey must already be associated to an instance, or the LoadWorkflowByInstanceKeyCommand will fail. For this reason, it is invalid to also specify the LookupInstanceKey in the InstanceKeysToAssociate collection if AssociateLookupKeyToInstanceId isn't set.
IFormatProvider
Ihttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^
ILA\{
IList`1
Incorrect version resulting from conflict resolution.
IncorrectValueType
inDoubt
InheritThrowsAttribute
initialInstanceHandle
InitialMetadataCannotBeDeleted
initialValues
InitiateBindReclaimedLockHelper
InitiateLockResolution
InitiateLockResolution already called.
innerException
inProgressBind
inProgressHandles
inProgressHandlesPerInstance
instance
InstanceBound
InstanceBound called after trying to bind the lock version, which alredy required an instance.
InstanceCollisionDefault
InstanceCollisionException
InstanceCollisionSpecific
InstanceCompleteDefault
InstanceCompleteException
InstanceCompleteSpecific
instanceData
instanceHandle
InstanceHandleConflictDefault
InstanceHandleConflictException
InstanceHandleConflictSpecific
InstanceHandleReference
instanceId
instanceKey
InstanceKeyCollisionException
InstanceKeyCompleteException
InstanceKeyName
InstanceKeyNotReadyException
InstanceKeyRequiresValidGuid
InstanceKeyView
InstanceLockedException
InstanceLockLostDefault
InstanceLockLostException
InstanceLockLostSpecific
InstanceLockQueryResult
instanceMetadata
InstanceNormalEvent
InstanceNotReadyDefault
InstanceNotReadyException
InstanceNotReadySpecific
InstanceOperationRequiresInstance
InstanceOperationRequiresLock
InstanceOperationRequiresNotCompleted
InstanceOperationRequiresNotUninitialized
InstanceOperationRequiresOwner
InstanceOwnerDefault
InstanceOwnerException
instanceOwnerId
InstanceOwnerIdName
instanceOwnerIds
InstanceOwnerQueryResult
instanceOwners
InstanceOwnerSpecific
InstancePersistence
InstancePersistenceCommand
InstancePersistenceCommandException
instancePersistenceCommandName
instancePersistenceConflictingInstanceId
InstancePersistenceContext
InstancePersistenceEvent
InstancePersistenceEvent`1
InstancePersistenceException
instancePersistenceInstanceId
instancePersistenceInstanceKey
instancePersistenceInstanceOwnerId
instancePersistenceSerializableInstanceOwnerMetadata
InstanceRequired
InstanceStore lock state is not correct in CheckOldestReference.
InstanceStore lock state is not correct in InitiateLockResolution.
InstanceStore lock state is not correct.
InstanceStoreBoundSameVersionTwice
InstanceStoreQueryResult
instanceType
InstanceType
InstanceValue
InstanceValueConsistency
InstanceValueOptions
instanceVersion
Int32
Int64
interiorTransaction
Interlocked
InternalName
InternalSR
InternalsVisibleToAttribute
invalid
InvalidInstanceState
invalidKey
InvalidKeyArgument
InvalidLockToken
InvalidOperationException
InvalidStateInAsyncResult
Invoke
IOAsyncResult
IOThreadScheduler
IOThreadTimer
IPersistencePipelineModule
IReadOnlyCollection`1
IReadOnlyDictionary`2
IReadOnlyList`1
IsFatal
ISinglePhaseNotification
isLoad
IsOptional
IsVolatile
IsWriteOnly
Iterator`1
J7+uS
jAn exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation.
jdb!Y
jMicrosoft.CDF.Test.Persistence, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
jSystem.ServiceModel.Activation, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
jSystem.ServiceModel.Activities, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
KeyAlreadyAssociated
KeyAlreadyCompleted
KeyAlreadyUnassociated
KeyCollection
KeyCollisionDefault
KeyCollisionSpecific
KeyCollisionSpecificKeyOnly
KeyCompleteDefault
KeyCompleteSpecific
KeyNotAssociated
KeyNotCompleted
KeyNotFoundException
KeyNotReadyDefault
KeyNotReadySpecific
KeyProvider
keyProvider
KeyValuePair`2
kIx:T
KnILk
KnownXamlExternalAttribute
KThe execution of an InstancePersistenceCommand was interrupted by an error.
kThe Free method on InstanceHandle may not be called while OnNewInstanceHandle is executing for that handle.
L&*H$_Z
L0J0H
LAn invalid key of all zeroes, such as Guid.Empty, was passed as an argument.
LastUpdate
lastUpdate
Legal_Policy_Statement
Legal_policy_statement
LegalCopyright
List`1
Load called at the wrong time.
LoadedInstance
LoadedWriteOnlyValue
LoadOpAssociateKeysCannotContainLookupKey
LoadOpFreeKeyRequiresAcceptUninitialized
LoadOpKeyMustBeValid
Location
LockResolutionMarker
lockToken
lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
lThe extension collection does not support setting extensions by index. Please use the Add or Remove methods.
M0K0I
MakeReadOnly
Map called at the wrong time.
MapValues
markerWaitHandle
MaxValue
MayBindLockCommandShouldValidateOwner
MemberInfo
message
messageVersionForReplies
MessageVersionForReplies
metadata
MetadataCannotContainNullKey
MetadataCannotContainNullValue
MetadataT
methodName
Microsoft
Microsoft Code Signing PCA
Microsoft Code Signing PCA 2010
Microsoft Code Signing PCA 20100
Microsoft Code Signing PCA 2011
Microsoft Code Signing PCA 20110
Microsoft Code Signing PCA0
Microsoft Corporation
Microsoft Corporation0
Microsoft Corporation1
Microsoft Corporation1!0
Microsoft Corporation1#0!
Microsoft Corporation1&0$
Microsoft Corporation1(0&
Microsoft Corporation1200
Microsoft Time-Stamp PCA
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp PCA0
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
microsoft1-0+
module
modules
Monitor
MOPR1
MOPR1'0%
MoveNext
mscoree.dll
mscorlib
mThe key used to look up an instance, LoadByKeyOperation.LookupKey, must not be all-zeros, such as Guid.Empty.
MustSetTransactionOnFirstCall
myTransaction
N=|)H
N0L0J
NameCollisionOnCollect
NameCollisionOnMap
nCipher DSE ESN:5847-F761-4F701%0#
nCipher DSE ESN:728D-C45F-F9EB1%0#
nCipher DSE ESN:B8EC-30A4-71441%0#
nCipher NTS ESN:4DE9-0C5E-3E091+0)
nCipher NTS ESN:57F6-C1E0-554C1+0)
needFreedNotification
needsCommit
Negative instanceVersion passed to Bind.
NeutralResourcesLanguageAttribute
newState
NonThrowingAttribute
NotifyHandleFree
NotifyMarkerComplete
NotSupportedException
nThe execution of an InstancePersistenceCommand was interrupted because the instance '{0}' is already complete.
Null result returned from AcquireContextAsyncResult (synchronous).
NullAssignedToValueType
o%"Adx
O0M0K
ObjectEqualityComparer`1
OfType
OfTypeIterator
oK0D$"<
onAcquireContext
OnAcquireContext
OnBindReclaimed
onBindReclaimed
OnCancelRequestedThrew
onCommit
OnCommit
onCommitWait
OnCommitWait
OnContinueAsyncCompletion
OnFreeInstanceHandle
OnFreeInstanceHandleThrew
OnHostTransaction
onHostTransaction
OnIOComplete
Only one command at a time can be executed for a single InstanceHandle. Do not call the method Execute or BeginExecute on InstanceStore until the previous command executing for this InstanceHandle has completed.
OnNewInstanceHandle
OnPrepare
OnRollBack
OnTimeout
OnTryCommand
onTryCommand
OnWaitComplete
op_Equality
op_Inequality
OperationCanceledException
options
OptionsT
OriginalFilename
oSystem.Activities.DurableInstancing, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
Out-of-sync between InstanceExecutionContext and ExecutionAsyncResult.
outputNamespace
OutsideInstanceExecutionScope
OutsideTransactionalCommand
owner
OwnerBelongsToWrongStore
ownerId
ownerKeysIndexToScan
ownerKeysToScan
ownerMetadata
OwnerRequired
owners
PADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPAD
PADPADPa
param0
param1
param2
parent
Partial
PartialTrustHelpers
PendHandleToEvent
pendingHandles
pendingModules
pendingOwnerEvents
pendingPreparingEnlistment
pendingRollback
PersistedInstance
persistenceEvent
persistenceEvents
PersistenceInitializerThrew
PersistenceMetadataNamespace
persistenceMetadataNamespace
PersistencePipeline
PersistencePipelineAbortThrew
pipeline
Prepare should have been called first and waited until after command processing.
PrepareAsyncCompletion should only be called once per PrepareTransactionalCall.
Prepared
PrepareForReuse
PrepareInstanceHandle
PrepareTransactionalCall
PrepareTransactionalCall should only be called as the object of non-nested using statements. If the Begin succeeds, Check/SyncContinue must be called before another PrepareTransactionalCall.
PrepareTransactionalCall should only be called in a using. Dispose called multiple times.
preparingEnlistment
Prior use not yet complete!
priorAsyncResult
PrivateBuild
ProcessException
ProcessInProgressHandles
ProductName
ProductVersion
PROFILE_DATA
property
ProviderDoesNotSupportCommand
providerObject
providerObjectSet
pThe instanceId argument to InstanceStore.CreateInstanceHandle cannot specify an all-zero ID, such as Guid.Empty.
Publish
Publish called at the wrong time.
PublishValues
QEX82q'
QueriedInstanceStore
queryResult
queryResults
queryResultsBackingCollection
Queue`1
QueueAttribute
r:xcf.
r~akow
R0P0N
ReadInstanceKeyMetadata
ReadInstanceMetadata
ReadInstanceOwnerMetadata
ReadOnlyCollection`1
ReadOnlyCopy
ReadOnlyDictionaryInternal`2
ReadOnlyMergeInto
readOnlyView
readWriteValues
readWriteView
readyEvents
reason
ReconcileTransaction
Redmond1
reference
relativeApplicationPath
RelativeApplicationPath
relativeServicePath
RelativeServicePath
ReleaseExecutionContext
remainingModules
RemainingTime
Remove
RemoveHandleFromEvents
requestReplyCorrelation
RequestReplyCorrelation
RequireTransaction
RequireTransaction called when no command is active.
RequireTransaction called when transaction is frozen.
ResetCaches
ResetEvent
ResolveHandles
resourceCulture
resourceManager
result
ReuseContext
right
rolledBack
rollingBack
RThe execution of an InstancePersistenceCommand was interrupted by a key collision.
RunLoop
RunLoopCore
RuntimeCompatibilityAttribute
RuntimeTypeHandle
S0Q0O
SatelliteContractVersionAttribute
Save called at the wrong time.
scope
scopeName
SecurityAction
SecurityCriticalAttribute
SecurityNoteAttribute
SecurityPermissionAttribute
SecurityRulesAttribute
SecurityRuleSet
Select
SelectSignaledEvents
serializableInstanceOwnerMetadata
SerializableInstanceOwnerMetadataName
SerializationInfo
Service
service
set_AcquirePending
set_AutomaticDisassociationEnabled
set_CancellationHandler
set_CancelRequested
set_CommandName
set_ConflictingHandle
set_ConflictingInstanceId
set_Culture
set_CurrentCommand
set_CurrentExecutionContext
set_CurrentTransactionalAsyncResult
set_DefaultInstanceOwner
set_HostTransaction
set_Id
set_InstanceData
set_InstanceDataConsistency
set_InstanceHandle
set_InstanceId
set_InstanceKey
set_InstanceKeyMetadata
set_InstanceKeyMetadataConsistency
set_InstanceKeys
set_InstanceKeysConsistency
set_InstanceKeyState
set_InstanceMetadata
set_InstanceMetadataConsistency
set_InstanceOwner
set_InstanceOwnerId
set_InstanceOwnerIds
set_InstanceOwnerMetadata
set_InstanceOwnerMetadataConsistency
set_InstanceOwners
set_InstanceState
set_InstanceStoreQueryResults
set_InstanceVersion
set_InstanceView
set_IsBoundToInstance
set_IsComplete
set_IsHandleDoomedByRollback
set_IsHostTransaction
set_IsolationLevel
set_IsSignaled
set_IsValid
set_IsViewFrozen
set_Item
set_LastAsyncResult
set_MarkerWaitHandle
set_Metadata
set_Name
set_NonConflicting
set_OnCompleting
set_OperationPending
set_Options
set_Owner
set_OwnerToken
set_ProviderObject
set_Reason
set_RootAsyncResult
set_SerializableInstanceOwnerMetadata
set_SerializedMetadata
set_SerializedOptions
set_SerializedValue
set_State
set_Store
set_Target
set_Timeout
set_TooLateToEnlist
set_Value
set_Version
set_View
set_WaitForHostTransaction
SetBeforePrepareAsyncCompletionAction
SetCancellationHandler
SetCheckSyncValidationFunc
SetInteriorTransaction
SetLoadedValues
SetLoadedValues called at the wrong time.
setOperationPending
SetScopeName
Setting Data on frozen View.
Setting InstanceStoreQueryResults on frozen View.
Setting Keys on frozen View.
Setting Metadata on frozen View.
Setting OwnerMetadata on frozen View.
Should only be able to set the version once per handle.
Signal
SignalEvent
SignalGate
SignalGate`1
SimpleCleanup
singlePhaseEnlistment
SinglePhaseEnlistment
SiteName
siteName
SkipVerification
SkipVerificationInFullTrust
source
SRCore
Stack`1
StartBind
StartBindLock
StartBindLock called on read-only InstanceView.
StartPotentialBind
StartReclaim
StartReclaim should only be reachable if the lock hasn't been bound.
StartWaiting
state
Status
status
sThe execution of an InstancePersistenceCommand was interrupted because the instance key has already been completed.
store
StoreReportedConflictingLockTokens
StreamingContext
StringFileInfo
Strings
StringTraceRecord
success
SuspendException
suspendException
SuspendReason
suspendReason
SynchronizationKind
SynchronizationObjectAttribute
SynchronizationPrimitiveAttribute
SynchronizedPool`1
synchronous
System
System.Collections
System.Collections.Generic
System.Collections.IEnumerable.GetEnumerator
System.Collections.ObjectModel
System.Core
System.Diagnostics
System.Globalization
System.IDisposable.Dispose
System.Linq
System.Reflection
System.Resources
System.Runtime
System.Runtime.CompilerServices
System.Runtime.Diagnostics
System.Runtime.DurableInstancing
System.Runtime.DurableInstancing.dll
System.Runtime.DurableInstancing.pdb
System.Runtime.InteropServices
System.Runtime.Serialization
System.Runtime.SRCore
System.Runtime.SRCore.resources
System.Security
System.Security.Permissions
System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.ServiceModel.Internals
System.Threading
System.Transactions
System.Transactions.IEnlistmentNotification.Commit
System.Transactions.IEnlistmentNotification.InDoubt
System.Transactions.IEnlistmentNotification.Prepare
System.Transactions.IEnlistmentNotification.Rollback
System.Transactions.ISinglePhaseNotification.SinglePhaseCommit
System.Xml.Linq
The Abort implementation of a persistence participant of type '{0}' threw an exception. Exceptions should not be thrown from Abort implementations.
The ambient transaction (System.Transactions.Transaction.Current) doesn't match the transaction in use for this execution episode.  Only one transaction may be used throughout an entire execution episode.
The execution of an InstancePersistenceCommand was interrupted because another valid InstanceHandle holds a lock on instance '{0}', indicating that a non-stale copy of the instance is already loaded. The loaded copy of the instance and its associated InstanceHandle should be used or unloaded.
The execution of an InstancePersistenceCommand was interrupted because another valid InstanceHandle holds a lock on the instance, indicating that a non-stale copy of the instance is already loaded. The loaded copy of the instance and its associated InstanceHandle should be used or unloaded.
The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' has already been persisted to the instance store.
The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' has become unlocked. This error indicates that the in-memory copy of the instance has become stale and should be discarded, along with the InstanceHandle.
The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' has not yet been persisted to the instance store.
The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' is locked by a different instance owner. This error usually occurs because a different host has the instance loaded.
The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' is locked by a different instance owner. This error usually occurs because a different host has the instance loaded. The instance owner ID of the owner or host with a lock on the instance is '{1}'.
The execution of an InstancePersistenceCommand was interrupted because the instance has already been persisted to the instance store.
The execution of an InstancePersistenceCommand was interrupted because the instance has become unlocked. This error indicates that the in-memory copy of the instance has become stale and should be discarded, along with the InstanceHandle.
The execution of an InstancePersistenceCommand was interrupted because the instance has not yet been persisted to the instance store.
The execution of an InstancePersistenceCommand was interrupted because the instance is locked by a different instance owner. This error usually occurs because a different host has the instance loaded.
The execution of an InstancePersistenceCommand was interrupted because the instance key '{0}' was not associated to an instance. This can occur because the instance or key has been cleaned up, or because the key is invalid. The key may be invalid if the message it was generated from was sent at the wrong time or contained incorrect correlation data.
The execution of an InstancePersistenceCommand was interrupted because the instance key was not associated to an instance. This can occur because the instance or key has been cleaned up, or because the key is invalid. The key may be invalid if the message it was generated from was sent at the wrong time or contained incorrect correlation data.
The execution of an InstancePersistenceCommand was interrupted because the instance owner registration for owner ID '{0}' has become invalid. This error indicates that the in-memory copy of all instances locked by this owner have become stale and should be discarded, along with the InstanceHandles. Typically, this error is best handled by restarting the host.
The execution of an InstancePersistenceCommand was interrupted because the instance owner registration has become invalid. This error indicates that the in-memory copy of all instances locked by this owner have become stale and should be discarded, along with the InstanceHandles. Typically, this error is best handled by restarting the host.
The execution of an InstancePersistenceCommand was interrupted by a key collision. The instance key with value '{0}' could not be associated to the instance because it is already associated to a different instance.
The execution of an InstancePersistenceCommand was interrupted by a key collision. The instance key with value '{1}' could not be associated to instance '{0}' because it is already associated to a different instance, '{2}'.
The handle argument to InstanceStore.Execute or InstanceStore.BeginExecute must have been created by a call to CreateInstanceHandle on the same InstanceStore instance.
The instance persistence system is unable to process an invalid InstancePersistenceCommand.  The command requires an unbound handle, but the InstanceHandle is already bound to an instance owner.
The instance persistence system is unable to process an invalid InstancePersistenceCommand.  The command requires an unbound handle, but the InstanceHandle is already bound to an instance.
The instance persistence system is unable to process an invalid InstancePersistenceCommand. The command requires an instance owner, but no owner was bound to the InstanceHandle.
The instance persistence system is unable to process an invalid InstancePersistenceCommand. The command requires an instance, but no instance was bound to the InstanceHandle.
The instance persistence system is unable to process an invalid InstancePersistenceCommand. The command requires the UnlockInstance property to be set to be true if CompleteInstance property is set to true.
The instanceVersion passed to InstancePersistenceContext.BindAcquiredLock must be zero if the persistence provider doesn't implement lock versioning, or greater than zero if it does.
The parameter at index {0} requested from the InstancePersistenceAction named {1} was requested using an incorrect generic type argument. When calling GetParameter<T>, the type specified for T must match the documented type for the parameter.
The persistence provider implementation of InstanceStore doesn't support the command named {0}. Either choose a different provider, or ensure that this persistence command isn't attempted.
The persistence provider implementation of InstanceStore in use is invalid. An ambient transaction (System.Transactions.Transaction.Current) is set on the thread calling InstancePersistenceContext.Execute or InstancePersistenceContext.BeginExecute, but commands have already executed during this execution episode with no transaction set. An ambient transaction can only be set on the first call to Execute or BeginExecute (and only if no other transaction is already set for the episode).
The persistence provider implementation of InstanceStore in use is invalid. It attempted to execute a potentially lock-acquiring command while processing a non-lock-acquiring command. This exception can occur when InstancePersistenceContext.Execute or InstancePersistenceContext.BeginExecute is called with a command that returns true from InstancePersistenceCommand.AutomaticallyAcquiringLock while processing a command which returns false. Either use a persistence provider which does not do so, or override AutomaticallyAcquiringLock on one of the commands to return the correct value.
The persistence provider implementation of InstanceStore in use is invalid. It attempted to execute transactional command while processing a non-transactional command. This exception can occur when InstancePersistenceContext.Execute or InstancePersistenceContext.BeginExecute is called with a command that returns false from InstancePersistenceCommand.IsTransactionEnlistmentOptional while processing a command which returns true. Either use a persistence provider which does not do so, or override IsTransactionEnlistmentOptional on one of the commands to return the correct value.
The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock to set the locked instance version of an InstanceHandle which is already bound to a lock. An InstanceHandle may only be bound to a single lock over its lifetime.
The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock, BindReclaimedLock, BeginBindReclaimedLock, or CreateBindReclaimedLockException at an invalid time. These methods may only be called while processing a command which may acquire a lock on an instance. Either switch to a valid persistence provider, or override the InstancePersistenceCommand implementation to return true from AutomaticallyAcquiringLock.
The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock, BindReclaimedLock, BeginBindReclaimedLock, or CreateBindReclaimedLockException to bind the InstanceHandle to an instance lock version, but the InstanceHandle is not bound to an instance. An InstanceHandle must first be bound to an instance in order to bind it to a lock.
The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock, BindReclaimedLock, BeginBindReclaimedLock, or CreateBindReclaimedLockException to bind the InstanceHandle to an instance lock version, but the InstanceHandle is not bound to an owner. An InstanceHandle must first be bound to an owner in order to bind it to a lock.
The persistence provider implementation of InstanceStore in use is invalid. It called BindInstance to set the instance ID of an InstanceHandle which is already bound to an instance. An InstanceHandle may only be bound to a single instance over its lifetime.
The persistence provider implementation of InstanceStore in use is invalid. It called BindInstanceOwner twice with the same instanceOwnerId value but different lockToken values. Use a persistence provider which always uses the same lockToken for a single instance owner.
The persistence provider implementation of InstanceStore in use is invalid. It called BindOwner to set the owner of an InstanceHandle which is already bound to an owner. An InstanceHandle may only be bound to a single owner over its lifetime.
The persistence provider implementation of InstanceStore in use is invalid. It called the method {0} on InstancePersistenceContext, which requires transactional consistency, as part of performing a command that should not require transactional consistency. This can result in data corruption. This error indicates an invalid persistence provider implementation.
The persistence provider implementation of InstanceStore in use is invalid. It completed processing a TryCommand request while an attempt to reclaim a lock was in progress. Use a persistence provider which does not return or throw from TryCommand, complete the IAsyncResult returned from BeginTryCommand before the IAsyncResult returned from BeginBindReclaimedLock is complete, or complete before throwing the exception returned from CreateBindReclaimedLockException.
The persistence provider implementation of InstanceStore in use is invalid. It reported acquiring and committing the same version of a lock on the same instance twice. Each time a lock is acquired on an instance, the lock version must be incremented; or else zero should always be reported as the lock version. When a provider detects an attempt by an instance owner to lock an instance already locked by itself, the provider should call BindReclaimedLock, BeginBindReclaimedLock, or CreateBeginBindReclaimedLockException instead of BindAcquiredLock.
The persistence provider implementation of InstanceStore in use is invalid. It reported associating a key to an instance which already had the key associated to it.
The persistence provider implementation of InstanceStore in use is invalid. It reported completing a key which was already completed.
The persistence provider implementation of InstanceStore in use is invalid. It reported completing an instance with active keys associated to it. All keys associated to an instance must be completed before the instance can be completed.
The persistence provider implementation of InstanceStore in use is invalid. It reported completing or modifying a key which is not associated to the present instance.
The persistence provider implementation of InstanceStore in use is invalid. It reported disassociating a key which was associated to the present instance nor completed.
The persistence provider implementation of InstanceStore in use is invalid. It reported disassociating a key which was not yet completed.
The persistence provider implementation of InstanceStore in use is invalid. It reported loading an instance with an invalid InstanceState value.
The persistence provider implementation of InstanceStore in use is invalid. It reported loading an instance with InstanceState.Completed that has associated keys which are not completed.
The persistence provider implementation of InstanceStore in use is invalid. It reported loading an instance with InstanceState.Uninitialized that contained instance data. Uninitialized instances may not contain instance data.
The persistence provider implementation of InstanceStore in use is invalid. It reported loading an InstanceValue with InstanceValueOptions.WriteOnly set. Write-only values should not be loaded.
The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires an instance owner, but no owner is bound to the operation.
The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires an instance, but no instance is bound to the operation.
The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires the instance to be in a state other than InstanceState.Completed, but the instance is in that state.
The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires the instance to be in a state other than InstanceState.Uninitialized, but the instance is in that state.
The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires the lock on an instance to be held, but the lock is not held.
The persistence provider implementation of InstanceStore in use is invalid. It returned false from TryCommand (or EndTryCommand) after executing a nested command using InstancePersistenceContext.Execute (or BeginExecute). If a persistence provider understands and acts upon a command, it must return true.
The persistence provider implementation of InstanceStore in use is invalid. Its handler for cancel threw an exception. The handler was specified through the InstancePersistenceContext.SetCancellationHandler method.
The persistence provider implementation of InstanceStore in use is invalid. Its implementation of OnFreeInstanceHandle threw an exception.
The persistence provider implementation of InstanceStore in use is invalid. The {0} method can only be called during the processing of a command. Do not attempt to preserve an instance of InstancePersistenceContext for later use. The InstancePersistenceContext provided to TryCommand and BeginTryCommand can only be used during the processing of that command.
The persistence provider implementation of InstanceStore is invalid. It attempted to execute multiple nested commands concurrently. Only one call to InstancePersistenceContext.Execute (or BeginExecute) may be issued at a time for each call to InstanceStore.TryCommand (or BeginTryCommand). This error indicates an invalid persistence provider implementation.
The persistence provider implementation of InstanceStore successfully canceled the command. An orphaned lock was reclaimed and the command canceled via InstancePersistenceContext.CreateBindReclaimedLockException.
The persistence provider was unable to reclaim the lock within the timeout provided. This may indicate a deadlock in the pattern of commands simultaneously being executed on different InstanceHandles owned by the same InstanceOwner. This can be alleviated by using multiple InstanceOwners or by ensuring that InstancePersistenceCommand.AutomaticallyAcquiringLock returns false for commands which do not potentially acquire a lock the instance.
The persistence value named {0} is being provided as an initial metadata value, so it must have a valid InstanceValue other than InstanceValue.DeletedValue.
This exception does not represent an error and should not be caught.  It can be thrown from a persistence provider implementation of InstanceStore.TryCommand, BeginTryCommand, or EndTryCommand to indicate that an attempt should be made to reclaim the lock at the version specified in the call to InstancePersistenceContext.CreateBindReclaimedLockException.
This should only be reachable once per handle.
thisLock
ThrottleAction
ThrottleAttribute
ThrottleMetric
ThrowIfCompleted
ThrowIfNegativeArgument
ThrowIfNoInstance
ThrowIfNoOwner
ThrowIfNotActive
ThrowIfNotLocked
ThrowIfNotTransactional
ThrowIfTransactionAbortedOrInDoubt
ThrowIfUninitialized
ThrowInvalidAsyncResult
Throws
ThunkCallback
timedOut
TimedOutWaitingForLockResolution
timeout
TimeoutAttribute
timeoutCallback
timeoutException
TimeoutException
timeoutHelper
TimeoutHelper
TimeoutOnOperation
timeoutTimer
timer
TimeSpan
ToArray
ToMessage
TraceEventLevel
TracePayload
TransactedAsyncResult
transaction
TransactionAbortedException
transactionContext
TransactionHelper
TransactionInDoubtException
TransactionInDoubtNonHost
TransactionOptions
TransactionRolledBackNonHost
transactionScope
TransactionSignalScope
TransactionSignalState
TransactionStatus
transactionToCommit
Translation
TryCommandCannotExecuteSubCommandsAndReduce
TryCompleteBind
TryGetValue
Tuple`2
TypeHelper
U`kqh'
U0S0Q
UnassociatedInstanceKey
Unbind
UninitializedCannotHaveData
Unknown
Unlock
UnverifiableCodeAttribute
urn:schemas-microsoft-com:System.Activities.Persistence/command
urn:schemas-microsoft-com:System.Activities.Persistence/event
urn:schemas-microsoft-com:System.Activities/4.0/properties
urn:schemas-microsoft-com:System.Activities/4.0/properties/output
urn:schemas-microsoft-com:System.Activities/4.0/properties/variables
urn:schemas-microsoft-com:System.Activities/4.5/properties
urn:schemas-microsoft-com:System.Runtime.DurableInstancing/4.0/metadata
urn:schemas-microsoft-com:System.ServiceModel.Activation
urn:schemas-microsoft-com:System.ServiceModel.Activities/4.0/properties
urn:schemas-microsoft-com:System.ServiceModel.Activities/4.0/properties/endpoints
userContext
v4.0.30319
Validate
ValidateProperty
ValidatePropertyBag
ValidateUnlockInstance
value
Value(
value__
ValueCollection
ValueDictionaryView
values
ValueT
VarFileInfo
variablesNamespace
Vbz0y
VS_VERSION_INFO
VThe execution of the InstancePersistenceCommand named {0} was interrupted by an error.
WaitAlreadyInProgress
WaitAsync
waitComplete
WaitForEventsAsyncResult
WaitForEventsTimedOut
waitForTransaction
waitHandle
waitResult
Washington1
weakReference
WeakReference
Where
WhereEnumerableIterator`1
WindowsProcessActivationService
Workflow
workflow
Workflow45Namespace
workflow45Namespace
WorkflowApplication
workflowApplication
workflowHostType
WorkflowHostType
workflowNamespace
WorkflowNamespace
WorkflowServiceNamespace
workflowServiceNamespace
WqVNHE
WrapNonExceptionThrows
WriteEventErrorCode
writeOnly
writeOnlyValues
writeOnlyView
WroteInstanceKeyMetadataValue
WroteInstanceMetadataValue
WroteInstanceOwnerMetadataValue
XamlVisibleAttribute
XName
XNamespace
yThe execution of an InstancePersistenceCommand was interrupted because the instance key '{0}' has already been completed.
z.9Wv
