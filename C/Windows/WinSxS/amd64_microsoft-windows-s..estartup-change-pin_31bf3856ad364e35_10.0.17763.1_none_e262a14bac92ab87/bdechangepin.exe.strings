            />
            level="asInvoker"
            uiAccess="false"
          />
          language="*"
          name="Microsoft.Windows.Common-Controls"
          processorArchitecture="*"
          publicKeyToken="6595b64144ccf1df"
          type="win32"
          version="6.0.0.0"
        <requestedExecutionLevel
      />
      </requestedPrivileges>
      <assemblyIdentity
      <dpiAware xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">true</dpiAware>
      <requestedPrivileges>
      name="Microsoft.BitLocker.BitLockerChangePin"
      processorArchitecture="*"
      type="win32"
      version="1.0.0.0"
    </dependentAssembly>
    </security>
    </windowsSettings>
    <dependentAssembly>
    <security>
    <windowsSettings>
    >
    cbData,
    manifestVersion="1.0"
    xmlns="urn:schemas-microsoft-com:asm.v1"
  </application>
  </dependency>
  </trustInfo>
  <application xmlns="urn:schemas-microsoft-com:asm.v3">
  <assemblyIdentity
  <dependency>
  <description>BitLocker Drive Encryption PIN Change Tool</description>
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
  Nb$X6
 !"#$%&'
 :# #
 @ggivi
 =~{%
 A_A^A\
 A_A^A]A\_^]
 dY/KiC
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 P1r.m$
 R``n
 Windows
!|$(H
!L$0H
!L$4A
!t$(H
!This program cannot be run in DOS mode.
!X*o-
"0[+,M
"L@"e
##I66
#(-~g
#0L2a^
#FGGi4
#pragma endregion
#pragma endregion Input Buffer SAL 1 compatibility macros
#pragma once
#pragma region App Family or OneCore Family
#pragma region Application Family or OneCore Family
#pragma region Desktop Family
#pragma region Desktop Family or OneCore Family
#pragma region Desktop Family or Wintrust Package
#pragma region Input Buffer SAL 1 compatibility macros
#pragma warning(default:4214) 
#pragma warning(disable:4001) 
#pragma warning(disable:4201)   
#pragma warning(disable:4201)    
#pragma warning(disable:4214) 
#pragma warning(disable:4214)   
#pragma warning(disable:4668) 
#pragma warning(disable:4668)    
#pragma warning(disable:4820) 
#pragma warning(disable:4820)    
#pragma warning(pop)
#pragma warning(push)
$d$IY
$H-QE
$JmVWW
$KcUs
$xD8x
%h+_XWX+.%|XXN
%s %c
&,X=D
&kkkloo
(_^][
(cjwA
(r@2r]
(tX+a
)_ N-
)iZP(M
)Q0'IF
*j{hQ
*l{5>>
*PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
*PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
*PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
*PCCERT_SERVER_OCSP_RESPONSE_CONTEXT;
*PCCERT_STORE_PROV_FIND_INFO;
*PCERT_REVOCATION_CHAIN_PARA;
*PCERT_SERVER_OCSP_RESPONSE_CONTEXT;
*PCMSG_RECIPIENT_ENCODE_INFO;
*PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
*PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
*PCRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO;
*PCRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO;
*PEV_EXTRA_CERT_CHAIN_POLICY_PARA;
*PSSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA;
,GkiE
.?AVCFveHardwareEncryptionSettings@@
.?AVCFvePolicy@@
.?AVCFvePolicyImpl@@
.?AVCFvePolicyReader@@
.?AVCFvePolicySettings@@
.?AVCFveRecoverySettings@@
.?AVIFvePolicyReader@@
.[[[lom#
.\~)s
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.Ef5<
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.K+u&&
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata
//////3
:;;kP
:{{{<z
;?WA~
;wnstt
;y!|2
?"#**Y
??0BuiVolume@@QEAA@XZ
??0ClassInfoBase@DirectUI@@QEAA@XZ
??0CritSecLock@DirectUI@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
??0Edit@DirectUI@@QEAA@XZ
??0HWNDElement@DirectUI@@QEAA@XZ
??0VolumeFveStatus@@IEAA@XZ
??0VolumeFveStatus@@QEAA@K_KJW4_FVE_WIPING_STATE@@@Z
??1BuiVolume@@QEAA@XZ
??1ClassInfoBase@DirectUI@@UEAA@XZ
??1CritSecLock@DirectUI@@QEAA@XZ
??1Edit@DirectUI@@UEAA@XZ
??1HWNDElement@DirectUI@@UEAA@XZ
??1type_info@@UEAA@XZ
??4BuiVolume@@QEAAAEAV0@AEBV0@@Z
??4VolumeFveStatus@@QEAAAEAV0@$$QEAV0@@Z
??4VolumeFveStatus@@QEAAAEAV0@AEBV0@@Z
?_OnUIStateChanged@HWNDElement@DirectUI@@MEAAXGG@Z
?_SelfLayoutDoLayout@Element@DirectUI@@MEAAXHH@Z
?_SelfLayoutUpdateDesiredSize@Element@DirectUI@@MEAA?AUtagSIZE@@HHPEAVSurface@2@@Z
?ActivateTooltip@Element@DirectUI@@MEAAXPEAV12@K@Z
?ActivateTooltip@HWNDElement@DirectUI@@UEAAXPEAVElement@2@K@Z
?Add@Element@DirectUI@@UEAAJPEAPEAV12@I@Z
?AddBehavior@Element@DirectUI@@UEAAJPEAUIDuiBehavior@@@Z
?AddChild@ClassInfoBase@DirectUI@@UEAAXXZ
?AddRef@ClassInfoBase@DirectUI@@UEAAXXZ
?AssertPIZeroRef@ClassInfoBase@DirectUI@@UEBAXXZ
?CanSetFocus@HWNDElement@DirectUI@@UEAA_NXZ
?ClassExist@ClassInfoBase@DirectUI@@SA_NPEAPEAUIClassInfo@2@PEBQEBUPropertyInfo@2@IPEAU32@PEAUHINSTANCE__@@PEBG_N@Z
?Click@Button@DirectUI@@SA?AVUID@@XZ
?ContentProp@Element@DirectUI@@SAPEBUPropertyInfo@2@XZ
?Create@DUIXmlParser@DirectUI@@SAJPEAPEAV12@P6APEAVValue@2@PEBGPEAX@Z2P6AX11H2@Z2@Z
?Create@NativeHWNDHost@DirectUI@@SAJPEBGPEAUHWND__@@PEAUHICON__@@HHHHHHIPEAPEAV12@@Z
?CreateElement@DUIXmlParser@DirectUI@@QEAAJPEBGPEAVElement@2@1PEAKPEAPEAV32@@Z
?CreateHWND@Edit@DirectUI@@MEAAPEAUHWND__@@PEAU3@@Z
?CreateHWND@Edit@DirectUI@@MEAAPEAUHWND__@@PEAU3@_N@Z
?CreateStyleParser@HWNDElement@DirectUI@@UEAAJPEAPEAVDUIXmlParser@2@@Z
?DefaultAction@Element@DirectUI@@UEAAJXZ
?Destroy@DUIXmlParser@DirectUI@@QEAAXXZ
?Destroy@Element@DirectUI@@QEAAJ_N@Z
?EndDefer@Element@DirectUI@@QEAAXK@Z
?EnsureVisible@Element@DirectUI@@UEAA_NHHHH@Z
?EnumPropertyInfo@ClassInfoBase@DirectUI@@UEAAPEBUPropertyInfo@2@I@Z
?EraseBkgnd@HWNDHost@DirectUI@@MEAA_NPEAUHDC__@@PEA_J@Z
?FailedDryRun@VolumeFveStatus@@QEBA_NXZ
?FindDescendent@Element@DirectUI@@QEAAPEAV12@G@Z
?GetAccessibleImpl@HWNDElement@DirectUI@@UEAAJPEAPEAUIAccessible@@@Z
?GetAccessibleImpl@HWNDHost@DirectUI@@UEAAJPEAPEAUIAccessible@@@Z
?GetAdjacent@Element@DirectUI@@UEAAPEAV12@PEAV12@HPEBUNavReference@2@K@Z
?GetByClassIndex@ClassInfoBase@DirectUI@@UEAAPEBUPropertyInfo@2@I@Z
?GetChildren@ClassInfoBase@DirectUI@@UEBAHXZ
?GetClassInfoPtr@Edit@DirectUI@@SAPEAUIClassInfo@2@XZ
?GetClassInfoPtr@HWNDElement@DirectUI@@SAPEAUIClassInfo@2@XZ
?GetClassInfoW@HWNDElement@DirectUI@@UEAAPEAUIClassInfo@2@XZ
?GetContentSize@Edit@DirectUI@@UEAA?AUtagSIZE@@HHPEAVSurface@2@@Z
?GetContentSize@Element@DirectUI@@UEAA?AUtagSIZE@@HHPEAVSurface@2@@Z
?GetContentStringAsDisplayed@Edit@DirectUI@@UEAAPEBGPEAPEAVValue@2@@Z
?GetContentStringAsDisplayed@Element@DirectUI@@UEAAPEBGPEAPEAVValue@2@@Z
?GetElementProviderImpl@Element@DirectUI@@UEAAJPEAVInvokeHelper@2@PEAPEAVElementProvider@2@@Z
?GetEncodedContentString@Element@DirectUI@@QEAAJPEAG_K@Z
?GetExtendedFlags@VolumeFveStatus@@QEBA_KXZ
?GetFactoryLock@Element@DirectUI@@SAPEAU_RTL_CRITICAL_SECTION@@XZ
?GetGlobalIndex@ClassInfoBase@DirectUI@@UEBAIXZ
?GetHWND@HWNDElement@DirectUI@@UEAAPEAUHWND__@@XZ
?GetHWND@HWNDHost@DirectUI@@UEAAPEAUHWND__@@XZ
?GetImmersiveFocusRectOffsets@Element@DirectUI@@UEAAXPEAUtagRECT@@@Z
?GetKeyFocused@Element@DirectUI@@UEAA_NXZ
?GetKeyFocused@HWNDHost@DirectUI@@UEAA_NXZ
?GetLastConvertStatus@VolumeFveStatus@@QEBAJXZ
?GetModule@ClassInfoBase@DirectUI@@UEBAPEAUHINSTANCE__@@XZ
?GetName@ClassInfoBase@DirectUI@@UEBAPEBGXZ
?GetPICount@ClassInfoBase@DirectUI@@UEBAIXZ
?GetStatusFlags@VolumeFveStatus@@QEBAKXZ
?GetUIAElementProvider@Element@DirectUI@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetUiaFocusDelegate@Element@DirectUI@@UEAAPEAV12@XZ
?GetWindowClassNameAndStyle@HWNDElement@DirectUI@@UEAAXPEAPEBGPEAI@Z
?HandleUiaDestroyListener@Element@DirectUI@@UEAAXXZ
?HandleUiaEventListener@Element@DirectUI@@UEAAXPEAUEvent@2@@Z
?HandleUiaPropertyChangingListener@Element@DirectUI@@UEAAXPEBUPropertyInfo@2@@Z
?HandleUiaPropertyListener@Element@DirectUI@@UEAAXPEBUPropertyInfo@2@HPEAVValue@2@1@Z
?HasExternalKey@VolumeFveStatus@@QEBA_NXZ
?HasPassphraseProtector@VolumeFveStatus@@QEBA_NXZ
?HasPBKDF2RecoveryPassword@VolumeFveStatus@@QEBA_NXZ
?HasPinProtector@VolumeFveStatus@@QEBA_NXZ
?HasRecoveryData@VolumeFveStatus@@QEBA_NXZ
?HasRecoveryPassword@VolumeFveStatus@@QEBA_NXZ
?HasSmartCardProtector@VolumeFveStatus@@QEBA_NXZ
?HasStartupKeyProtector@VolumeFveStatus@@QEBA_NXZ
?HasTpmProtector@VolumeFveStatus@@QEBA_NXZ
?Host@NativeHWNDHost@DirectUI@@QEAAXPEAVElement@2@@Z
?Init@BuiVolume@@QEAAJPEAG@Z
?Initialize@ClassInfoBase@DirectUI@@QEAAJPEAUHINSTANCE__@@PEBG_NPEBQEBUPropertyInfo@2@I@Z
?Initialize@Edit@DirectUI@@QEAAJIPEAVElement@2@PEAK@Z
?Initialize@HWNDElement@DirectUI@@QEAAJPEAUHWND__@@_NIPEAVElement@2@PEAK@Z
?Insert@Element@DirectUI@@UEAAJPEAPEAV12@II@Z
?IsContentProtected@Edit@DirectUI@@UEAA_NXZ
?IsContentProtected@Element@DirectUI@@UEAA_NXZ
?IsConverting@VolumeFveStatus@@QEBA_NXZ
?IsCsvMetadataVolume@VolumeFveStatus@@QEBA_NXZ
?IsCurrentPINEnhanced@BuiVolume@@QEAAJPEAH@Z
?IsDEAutoProvisioned@VolumeFveStatus@@QEBA_NXZ
?IsDecrypted@VolumeFveStatus@@QEBA_NXZ
?IsDecrypting@VolumeFveStatus@@QEBA_NXZ
?IsDisabled@VolumeFveStatus@@QEBA_NXZ
?IsEDriveVolume@VolumeFveStatus@@QEBA_NXZ
?IsEncrypted@VolumeFveStatus@@QEBA_NXZ
?IsEncrypting@VolumeFveStatus@@QEBA_NXZ
?IsGlobal@ClassInfoBase@DirectUI@@UEBA_NXZ
?IsLocked@VolumeFveStatus@@QEBA_NXZ
?IsMSAAEnabled@HWNDElement@DirectUI@@UEAA_NXZ
?IsOn@VolumeFveStatus@@QEBA_NXZ
?IsOsCriticalVolume@VolumeFveStatus@@QEBA_NXZ
?IsOsVolume@VolumeFveStatus@@QEBA_NXZ
?IsPartiallyConverted@VolumeFveStatus@@QEBA_NXZ
?IsPaused@VolumeFveStatus@@QEBA_NXZ
?IsPreProvisioned@VolumeFveStatus@@QEBA_NXZ
?IsRoamingDevice@VolumeFveStatus@@QEBA_NXZ
?IsRTLReading@Element@DirectUI@@UEAA_NXZ
?IsSecure@VolumeFveStatus@@QEBA_NXZ
?IsSubclassOf@ClassInfoBase@DirectUI@@UEBA_NPEAUIClassInfo@2@@Z
?IsUnknownFveVersion@VolumeFveStatus@@QEBA_NXZ
?IsValidProperty@ClassInfoBase@DirectUI@@UEBA_NPEBUPropertyInfo@2@@Z
?IsWiping@VolumeFveStatus@@QEBA_NXZ
?MessageCallback@Edit@DirectUI@@UEAAIPEAUtagGMSG@@@Z
?MessageCallback@Element@DirectUI@@UEAAIPEAUtagGMSG@@@Z
?NeedsRestart@VolumeFveStatus@@QEBA_NXZ
?NO_DRIVE_LETTER@BuiVolume@@2IB
?OnAdjustWindowSize@HWNDHost@DirectUI@@UEAAHHHI@Z
?OnCompositionChanged@HWNDElement@DirectUI@@UEAAXXZ
?OnCtrlThemeChanged@HWNDHost@DirectUI@@UEAA_NI_K_JPEA_J@Z
?OnDestroy@HWNDElement@DirectUI@@UEAAXXZ
?OnDestroy@HWNDHost@DirectUI@@UEAAXXZ
?OnEvent@HWNDElement@DirectUI@@UEAAXPEAUEvent@2@@Z
?OnEvent@HWNDHost@DirectUI@@UEAAXPEAUEvent@2@@Z
?OnGetDlgCode@HWNDElement@DirectUI@@UEAAXPEAUtagMSG@@PEA_J@Z
?OnGroupChanged@Element@DirectUI@@UEAAXH_N@Z
?OnGroupChanged@HWNDElement@DirectUI@@UEAAXH_N@Z
?OnHosted@Element@DirectUI@@MEAAXPEAV12@@Z
?OnHosted@HWNDHost@DirectUI@@MEAAXPEAVElement@2@@Z
?OnImmersiveColorSchemeChanged@HWNDElement@DirectUI@@UEAAXXZ
?OnInput@Edit@DirectUI@@UEAAXPEAUInputEvent@2@@Z
?OnInput@HWNDElement@DirectUI@@UEAAXPEAUInputEvent@2@@Z
?OnKeyFocusMoved@Element@DirectUI@@UEAAXPEAV12@0@Z
?OnMessage@HWNDHost@DirectUI@@UEAA_NI_K_JPEA_J@Z
?OnMouseFocusMoved@Element@DirectUI@@UEAAXPEAV12@0@Z
?OnNoChildWithShortcutFound@HWNDElement@DirectUI@@UEAAXPEAUKeyboardEvent@2@@Z
?OnNotify@Edit@DirectUI@@UEAA_NI_K_JPEA_J@Z
?OnPropertyChanged@Edit@DirectUI@@UEAAXPEBUPropertyInfo@2@HPEAVValue@2@1@Z
?OnPropertyChanged@Element@DirectUI@@UEAAXPEAUPropertyInfo@2@HPEAVValue@2@1@Z
?OnPropertyChanged@HWNDElement@DirectUI@@UEAAXPEBUPropertyInfo@2@HPEAVValue@2@1@Z
?OnPropertyChanging@Element@DirectUI@@UEAA_NPEAUPropertyInfo@2@HPEAVValue@2@1@Z
?OnPropertyChanging@Element@DirectUI@@UEAA_NPEBUPropertyInfo@2@HPEAVValue@2@1@Z
?OnSinkThemeChanged@HWNDHost@DirectUI@@UEAA_NI_K_JPEA_J@Z
?OnSysChar@HWNDHost@DirectUI@@UEAA_NG@Z
?OnThemeChanged@HWNDElement@DirectUI@@UEAAXPEAUThemeChangedEvent@2@@Z
?OnUnHosted@Element@DirectUI@@MEAAXPEAV12@@Z
?OnUnHosted@HWNDHost@DirectUI@@MEAAXPEAVElement@2@@Z
?OnWindowStyleChanged@HWNDHost@DirectUI@@UEAAX_KPEBUtagSTYLESTRUCT@@@Z
?OnWmSettingChanged@HWNDElement@DirectUI@@UEAAX_K_J@Z
?OnWmThemeChanged@HWNDElement@DirectUI@@UEAAX_K_J@Z
?Paint@Element@DirectUI@@UEAAXPEAUHDC__@@PEBUtagRECT@@1PEAU4@2@Z
?Paint@HWNDHost@DirectUI@@UEAAXPEAUHDC__@@PEBUtagRECT@@1PEAU4@2@Z
?QueryInterface@Element@DirectUI@@UEAAJAEBU_GUID@@PEAPEAX@Z
?Register@ClassInfoBase@DirectUI@@QEAAJXZ
?Register@Edit@DirectUI@@SAJXZ
?Register@HWNDElement@DirectUI@@SAJXZ
?Release@ClassInfoBase@DirectUI@@UEAAHXZ
?Remove@Element@DirectUI@@UEAAJPEAPEAV12@I@Z
?RemoveBehavior@Element@DirectUI@@UEAAJPEAUIDuiBehavior@@@Z
?RemoveChild@ClassInfoBase@DirectUI@@UEAAXXZ
?RemoveTooltip@Element@DirectUI@@MEAAXPEAV12@@Z
?RemoveTooltip@HWNDElement@DirectUI@@UEAAXPEAVElement@2@@Z
?SetContentString@Element@DirectUI@@QEAAJPEBG@Z
?SetEnabled@Element@DirectUI@@QEAAJ_N@Z
?SetKeyFocus@Element@DirectUI@@UEAAXXZ
?SetKeyFocus@HWNDHost@DirectUI@@UEAAXXZ
?SetLayoutPos@Element@DirectUI@@QEAAJH@Z
?SetVisible@Element@DirectUI@@QEAAJ_N@Z
?SetWindowDirection@HWNDHost@DirectUI@@UEAAXPEAUHWND__@@@Z
?SetXMLFromResource@DUIXmlParser@DirectUI@@QEAAJIPEAUHINSTANCE__@@0@Z
?ShowWindow@NativeHWNDHost@DirectUI@@QEAAXH@Z
?terminate@@YAXXZ
?UpdateTooltip@Element@DirectUI@@MEAAXPEAV12@@Z
?UpdateTooltip@HWNDElement@DirectUI@@UEAAXPEAVElement@2@@Z
?WndProc@HWNDElement@DirectUI@@UEAA_JPEAUHWND__@@I_K_J@Z
@.data
@.reloc
@.rsrc
@_[]H
@A^_^
@A_A^]
@BLRVV`.<XMMI32;9"
@USVWH
@USWH
[[[=XXX
[7ortt
[W[_w
[W8??/
[X.8.
\$ UH
\$ UVWH
\$(E3
\$PIc
\.LOO
\.RoTp
\\.\x:
\\\,]]]WVVV
\K(Ml
\Windows\System32\Config\SOFTWARE
\Windows\System32\Config\SYSTEM
]]]%WWW-O
]|s$Uk
]4Ed(#
]Mwn6
]N4r]
__C_specific_handler
__cdecl
__CxxFrameHandler3
__set_app_type
__setusermatherr
__stdcall
__wgetmainargs
_>>55u:
_amsg_exit
_callnewh
_cexit
_commode
'_dfz
_exit
_fmode
_initterm
_vsnwprintf
_wcmdln
_XcptFilter
`.rdata
`GT<7
`J)\.
`kk+b
`Ofd.
`t4({5
`WWWY__'
{ ATAVAWH
{ AVH
{p`O`
{wm_a
|!KJr5
|$ AVH
|$ UATAUAVAWH
|$(E3
|$PIc
|:M-A
|hkc"
}  CRYPT_ECC_PRIVATE_KEY_INFO, *PCRYPT_ECC_PRIVATE_KEY_INFO;
}  CRYPT_PRIVATE_KEY_INFO, *PCRYPT_PRIVATE_KEY_INFO;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA,
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS,
} AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA,
} BCRYPT_ALGORITHM_IDENTIFIER;
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
} BCRYPT_DH_KEY_BLOB, *PBCRYPT_DH_KEY_BLOB;
} BCRYPT_DH_PARAMETER_HEADER;
} BCRYPT_DSA_KEY_BLOB, *PBCRYPT_DSA_KEY_BLOB;
} BCRYPT_DSA_KEY_BLOB_V2, *PBCRYPT_DSA_KEY_BLOB_V2;
} BCRYPT_DSA_PARAMETER_HEADER;
} BCRYPT_DSA_PARAMETER_HEADER_V2;
} BCRYPT_ECC_CURVE_NAMES;
} BCRYPT_ECCFULLKEY_BLOB, *PBCRYPT_ECCFULLKEY_BLOB;
} BCRYPT_ECCKEY_BLOB, *PBCRYPT_ECCKEY_BLOB;
} BCRYPT_HASH_OPERATION_TYPE;
} BCRYPT_INTERFACE_VERSION, *PBCRYPT_INTERFACE_VERSION;
} BCRYPT_KEY_BLOB;
} BCRYPT_KEY_DATA_BLOB_HEADER, *PBCRYPT_KEY_DATA_BLOB_HEADER;
} BCRYPT_KEY_LENGTHS_STRUCT;
} BCRYPT_MULTI_HASH_OPERATION;
} BCRYPT_MULTI_OBJECT_LENGTH_STRUCT;
} BCRYPT_MULTI_OPERATION_TYPE;
} BCRYPT_OAEP_PADDING_INFO;
} BCRYPT_OID;
} BCRYPT_OID_LIST;
} BCRYPT_PKCS1_PADDING_INFO;
} BCRYPT_PROVIDER_NAME;
} BCRYPT_PSS_PADDING_INFO;
} BCRYPT_RSAKEY_BLOB;
} BCryptBuffer, * PBCryptBuffer;
} BCryptBufferDesc, * PBCryptBufferDesc;
} BLOBHEADER, PUBLICKEYSTRUC;
} CERT_ACCESS_DESCRIPTION, *PCERT_ACCESS_DESCRIPTION;
} CERT_ALT_NAME_ENTRY, *PCERT_ALT_NAME_ENTRY;
} CERT_ALT_NAME_INFO, *PCERT_ALT_NAME_INFO;
} CERT_AUTHORITY_INFO_ACCESS, *PCERT_AUTHORITY_INFO_ACCESS,
} CERT_AUTHORITY_KEY_ID_INFO, *PCERT_AUTHORITY_KEY_ID_INFO;
} CERT_AUTHORITY_KEY_ID2_INFO, *PCERT_AUTHORITY_KEY_ID2_INFO;
} CERT_BASIC_CONSTRAINTS_INFO, *PCERT_BASIC_CONSTRAINTS_INFO;
} CERT_BASIC_CONSTRAINTS2_INFO, *PCERT_BASIC_CONSTRAINTS2_INFO;
} CERT_BIOMETRIC_DATA, *PCERT_BIOMETRIC_DATA;
} CERT_BIOMETRIC_EXT_INFO, *PCERT_BIOMETRIC_EXT_INFO;
} CERT_CHAIN, *PCERT_CHAIN;
} CERT_CHAIN_ELEMENT, *PCERT_CHAIN_ELEMENT;
} CERT_CHAIN_ENGINE_CONFIG, *PCERT_CHAIN_ENGINE_CONFIG;
} CERT_CHAIN_FIND_ISSUER_PARA, *PCERT_CHAIN_FIND_ISSUER_PARA,
} CERT_CHAIN_PARA, *PCERT_CHAIN_PARA;
} CERT_CHAIN_POLICY_PARA, *PCERT_CHAIN_POLICY_PARA;
} CERT_CHAIN_POLICY_STATUS, *PCERT_CHAIN_POLICY_STATUS;
} CERT_CONTEXT, *PCERT_CONTEXT;
} CERT_CREATE_CONTEXT_PARA, *PCERT_CREATE_CONTEXT_PARA;
} CERT_CRL_CONTEXT_PAIR, *PCERT_CRL_CONTEXT_PAIR;
} CERT_DH_PARAMETERS, *PCERT_DH_PARAMETERS;
} CERT_DSS_PARAMETERS, *PCERT_DSS_PARAMETERS;
} CERT_ECC_SIGNATURE, *PCERT_ECC_SIGNATURE;
} CERT_EXTENSION, *PCERT_EXTENSION;
} CERT_EXTENSIONS, *PCERT_EXTENSIONS;
} CERT_FORTEZZA_DATA_PROP;
} CERT_GENERAL_SUBTREE, *PCERT_GENERAL_SUBTREE;
} CERT_HASHED_URL, *PCERT_HASHED_URL;
} CERT_ID, *PCERT_ID;
} CERT_INFO, *PCERT_INFO;
} CERT_ISSUER_SERIAL_NUMBER, *PCERT_ISSUER_SERIAL_NUMBER;
} CERT_KEY_ATTRIBUTES_INFO, *PCERT_KEY_ATTRIBUTES_INFO;
} CERT_KEY_CONTEXT, *PCERT_KEY_CONTEXT;
} CERT_KEY_USAGE_RESTRICTION_INFO, *PCERT_KEY_USAGE_RESTRICTION_INFO;
} CERT_KEYGEN_REQUEST_INFO, *PCERT_KEYGEN_REQUEST_INFO;
} CERT_LDAP_STORE_OPENED_PARA, *PCERT_LDAP_STORE_OPENED_PARA;
} CERT_LOGOTYPE_AUDIO, *PCERT_LOGOTYPE_AUDIO;
} CERT_LOGOTYPE_AUDIO_INFO, *PCERT_LOGOTYPE_AUDIO_INFO;
} CERT_LOGOTYPE_DATA, *PCERT_LOGOTYPE_DATA;
} CERT_LOGOTYPE_DETAILS, *PCERT_LOGOTYPE_DETAILS;
} CERT_LOGOTYPE_EXT_INFO, *PCERT_LOGOTYPE_EXT_INFO;
} CERT_LOGOTYPE_IMAGE, *PCERT_LOGOTYPE_IMAGE;
} CERT_LOGOTYPE_IMAGE_INFO, *PCERT_LOGOTYPE_IMAGE_INFO;
} CERT_LOGOTYPE_INFO, *PCERT_LOGOTYPE_INFO;
} CERT_LOGOTYPE_REFERENCE, *PCERT_LOGOTYPE_REFERENCE;
} CERT_NAME_CONSTRAINTS_INFO, *PCERT_NAME_CONSTRAINTS_INFO;
} CERT_NAME_INFO, *PCERT_NAME_INFO;
} CERT_NAME_VALUE, *PCERT_NAME_VALUE;
} CERT_OR_CRL_BLOB, * PCERT_OR_CRL_BLOB;
} CERT_OR_CRL_BUNDLE, *PCERT_OR_CRL_BUNDLE;
} CERT_OTHER_LOGOTYPE_INFO, *PCERT_OTHER_LOGOTYPE_INFO;
} CERT_OTHER_NAME, *PCERT_OTHER_NAME;
} CERT_PAIR, *PCERT_PAIR;
} CERT_PHYSICAL_STORE_INFO, *PCERT_PHYSICAL_STORE_INFO;
} CERT_POLICIES_INFO, *PCERT_POLICIES_INFO;
} CERT_POLICY_CONSTRAINTS_INFO, *PCERT_POLICY_CONSTRAINTS_INFO;
} CERT_POLICY_ID, *PCERT_POLICY_ID;
} CERT_POLICY_INFO, *PCERT_POLICY_INFO;
} CERT_POLICY_MAPPING, *PCERT_POLICY_MAPPING;
} CERT_POLICY_MAPPINGS_INFO, *PCERT_POLICY_MAPPINGS_INFO;
} CERT_POLICY_QUALIFIER_INFO, *PCERT_POLICY_QUALIFIER_INFO;
} CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
} CERT_POLICY_QUALIFIER_USER_NOTICE, *PCERT_POLICY_QUALIFIER_USER_NOTICE;
} CERT_POLICY95_QUALIFIER1, *PCERT_POLICY95_QUALIFIER1;
} CERT_PRIVATE_KEY_VALIDITY, *PCERT_PRIVATE_KEY_VALIDITY;
} CERT_PUBLIC_KEY_INFO, *PCERT_PUBLIC_KEY_INFO;
} CERT_QC_STATEMENT, *PCERT_QC_STATEMENT;
} CERT_QC_STATEMENTS_EXT_INFO, *PCERT_QC_STATEMENTS_EXT_INFO;
} CERT_RDN, *PCERT_RDN;
} CERT_RDN_ATTR, *PCERT_RDN_ATTR;
} CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;
} CERT_REGISTRY_STORE_ROAMING_PARA, *PCERT_REGISTRY_STORE_ROAMING_PARA;
} CERT_REQUEST_INFO, *PCERT_REQUEST_INFO;
} CERT_REVOCATION_CRL_INFO, *PCERT_REVOCATION_CRL_INFO;
} CERT_REVOCATION_INFO, *PCERT_REVOCATION_INFO;
} CERT_REVOCATION_PARA, *PCERT_REVOCATION_PARA;
} CERT_REVOCATION_STATUS, *PCERT_REVOCATION_STATUS;
} CERT_SERVER_OCSP_RESPONSE_OPEN_PARA, *PCERT_SERVER_OCSP_RESPONSE_OPEN_PARA;
} CERT_SIGNED_CONTENT_INFO, *PCERT_SIGNED_CONTENT_INFO;
} CERT_SIMPLE_CHAIN, *PCERT_SIMPLE_CHAIN;
} CERT_STORE_PROV_FIND_INFO, *PCERT_STORE_PROV_FIND_INFO;
} CERT_STORE_PROV_INFO, *PCERT_STORE_PROV_INFO;
} CERT_STRONG_SIGN_PARA, *PCERT_STRONG_SIGN_PARA;
} CERT_STRONG_SIGN_SERIALIZED_INFO, *PCERT_STRONG_SIGN_SERIALIZED_INFO;
} CERT_SUPPORTED_ALGORITHM_INFO, *PCERT_SUPPORTED_ALGORITHM_INFO;
} CERT_SYSTEM_STORE_INFO, *PCERT_SYSTEM_STORE_INFO;
} CERT_SYSTEM_STORE_RELOCATE_PARA, *PCERT_SYSTEM_STORE_RELOCATE_PARA;
} CERT_TEMPLATE_EXT, *PCERT_TEMPLATE_EXT;
} CERT_TPM_SPECIFICATION_INFO, *PCERT_TPM_SPECIFICATION_INFO;
} CERT_TRUST_LIST_INFO, *PCERT_TRUST_LIST_INFO;
} CERT_TRUST_STATUS, *PCERT_TRUST_STATUS;
} CERT_USAGE_MATCH, *PCERT_USAGE_MATCH;
} CERT_X942_DH_PARAMETERS, *PCERT_X942_DH_PARAMETERS;
} CERT_X942_DH_VALIDATION_PARAMS, *PCERT_X942_DH_VALIDATION_PARAMS;
} CertKeyType;
} CMC_ADD_ATTRIBUTES_INFO, *PCMC_ADD_ATTRIBUTES_INFO;
} CMC_ADD_EXTENSIONS_INFO, *PCMC_ADD_EXTENSIONS_INFO;
} CMC_DATA_INFO, *PCMC_DATA_INFO;
} CMC_PEND_INFO, *PCMC_PEND_INFO;
} CMC_RESPONSE_INFO, *PCMC_RESPONSE_INFO;
} CMC_STATUS_INFO, *PCMC_STATUS_INFO;
} CMC_TAGGED_ATTRIBUTE, *PCMC_TAGGED_ATTRIBUTE;
} CMC_TAGGED_CERT_REQUEST, *PCMC_TAGGED_CERT_REQUEST;
} CMC_TAGGED_CONTENT_INFO, *PCMC_TAGGED_CONTENT_INFO;
} CMC_TAGGED_OTHER_MSG, *PCMC_TAGGED_OTHER_MSG;
} CMC_TAGGED_REQUEST, *PCMC_TAGGED_REQUEST;
} CMS_DH_KEY_INFO, *PCMS_DH_KEY_INFO;
} CMS_KEY_INFO, *PCMS_KEY_INFO;
} CMSG_CMS_RECIPIENT_INFO, *PCMSG_CMS_RECIPIENT_INFO;
} CMSG_CMS_SIGNER_INFO, *PCMSG_CMS_SIGNER_INFO;
} CMSG_CNG_CONTENT_DECRYPT_INFO, *PCMSG_CNG_CONTENT_DECRYPT_INFO;
} CMSG_CONTENT_ENCRYPT_INFO, *PCMSG_CONTENT_ENCRYPT_INFO;
} CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
} CMSG_CTRL_DECRYPT_PARA, *PCMSG_CTRL_DECRYPT_PARA;
} CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
} CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
} CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
} CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
} CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
} CMSG_ENCRYPTED_ENCODE_INFO, *PCMSG_ENCRYPTED_ENCODE_INFO;
} CMSG_ENVELOPED_ENCODE_INFO, *PCMSG_ENVELOPED_ENCODE_INFO;
} CMSG_HASHED_ENCODE_INFO, *PCMSG_HASHED_ENCODE_INFO;
} CMSG_KEY_AGREE_ENCRYPT_INFO, *PCMSG_KEY_AGREE_ENCRYPT_INFO;
} CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
} CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
} CMSG_KEY_AGREE_RECIPIENT_INFO, *PCMSG_KEY_AGREE_RECIPIENT_INFO;
} CMSG_KEY_TRANS_ENCRYPT_INFO, *PCMSG_KEY_TRANS_ENCRYPT_INFO;
} CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
} CMSG_KEY_TRANS_RECIPIENT_INFO, *PCMSG_KEY_TRANS_RECIPIENT_INFO;
} CMSG_MAIL_LIST_ENCRYPT_INFO, *PCMSG_MAIL_LIST_ENCRYPT_INFO;
} CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
} CMSG_MAIL_LIST_RECIPIENT_INFO, *PCMSG_MAIL_LIST_RECIPIENT_INFO;
} CMSG_RC2_AUX_INFO, *PCMSG_RC2_AUX_INFO;
} CMSG_RC4_AUX_INFO, *PCMSG_RC4_AUX_INFO;
} CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO,
} CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
} CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
} CMSG_SIGNED_ENCODE_INFO, *PCMSG_SIGNED_ENCODE_INFO;
} CMSG_SIGNER_ENCODE_INFO, *PCMSG_SIGNER_ENCODE_INFO;
} CMSG_SIGNER_INFO, *PCMSG_SIGNER_INFO;
} CMSG_SP3_COMPATIBLE_AUX_INFO, *PCMSG_SP3_COMPATIBLE_AUX_INFO;
} CMSG_STREAM_INFO, *PCMSG_STREAM_INFO;
} CPS_URLS, *PCPS_URLS;
} CRL_CONTEXT, *PCRL_CONTEXT;
} CRL_DIST_POINT, *PCRL_DIST_POINT;
} CRL_DIST_POINT_NAME, *PCRL_DIST_POINT_NAME;
} CRL_DIST_POINTS_INFO, *PCRL_DIST_POINTS_INFO;
} CRL_ENTRY, *PCRL_ENTRY;
} CRL_FIND_ISSUED_FOR_PARA, *PCRL_FIND_ISSUED_FOR_PARA;
} CRL_INFO, *PCRL_INFO;
} CRL_ISSUING_DIST_POINT, *PCRL_ISSUING_DIST_POINT;
} CRL_REVOCATION_INFO, *PCRL_REVOCATION_INFO;
} CROSS_CERT_DIST_POINTS_INFO, *PCROSS_CERT_DIST_POINTS_INFO;
} CRYPT_3DES_KEY_STATE, *PCRYPT_3DES_KEY_STATE;
} CRYPT_AES_128_KEY_STATE, *PCRYPT_AES_128_KEY_STATE;
} CRYPT_AES_256_KEY_STATE, *PCRYPT_AES_256_KEY_STATE;
} CRYPT_ALGORITHM_IDENTIFIER, *PCRYPT_ALGORITHM_IDENTIFIER;
} CRYPT_ASYNC_RETRIEVAL_COMPLETION, *PCRYPT_ASYNC_RETRIEVAL_COMPLETION;
} CRYPT_ATTRIBUTE, *PCRYPT_ATTRIBUTE;
} CRYPT_ATTRIBUTE_TYPE_VALUE, *PCRYPT_ATTRIBUTE_TYPE_VALUE;
} CRYPT_ATTRIBUTES, *PCRYPT_ATTRIBUTES;
} CRYPT_BIT_BLOB, *PCRYPT_BIT_BLOB;
} CRYPT_BLOB_ARRAY, *PCRYPT_BLOB_ARRAY;
} CRYPT_CONTENT_INFO, *PCRYPT_CONTENT_INFO;
} CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
} CRYPT_CREDENTIALS, *PCRYPT_CREDENTIALS;
} CRYPT_CSP_PROVIDER, * PCRYPT_CSP_PROVIDER;
} CRYPT_DECODE_PARA, *PCRYPT_DECODE_PARA;
} CRYPT_DECRYPT_MESSAGE_PARA, *PCRYPT_DECRYPT_MESSAGE_PARA;
} CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
} CRYPT_DES_KEY_STATE, *PCRYPT_DES_KEY_STATE;
} CRYPT_ECC_CMS_SHARED_INFO, *PCRYPT_ECC_CMS_SHARED_INFO;
} CRYPT_ENCODE_PARA, *PCRYPT_ENCODE_PARA;
} CRYPT_ENCRYPT_MESSAGE_PARA, *PCRYPT_ENCRYPT_MESSAGE_PARA;
} CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
} CRYPT_ENROLLMENT_NAME_VALUE_PAIR, * PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;
} CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO,
} CRYPT_HASH_INFO, *PCRYPT_HASH_INFO;
} CRYPT_HASH_MESSAGE_PARA, *PCRYPT_HASH_MESSAGE_PARA;
} CRYPT_INTEGER_BLOB, *PCRYPT_INTEGER_BLOB,
} CRYPT_KEY_PROV_INFO, *PCRYPT_KEY_PROV_INFO;
} CRYPT_KEY_PROV_PARAM, *PCRYPT_KEY_PROV_PARAM;
} CRYPT_KEY_SIGN_MESSAGE_PARA, *PCRYPT_KEY_SIGN_MESSAGE_PARA;
} CRYPT_KEY_VERIFY_MESSAGE_PARA, *PCRYPT_KEY_VERIFY_MESSAGE_PARA;
} CRYPT_MASK_GEN_ALGORITHM, *PCRYPT_MASK_GEN_ALGORITHM;
} CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE, *PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;
} CRYPT_OBJID_TABLE, *PCRYPT_OBJID_TABLE;
} CRYPT_OID_FUNC_ENTRY, *PCRYPT_OID_FUNC_ENTRY;
} CRYPT_OID_INFO, *PCRYPT_OID_INFO;
} CRYPT_PASSWORD_CREDENTIALSA, *PCRYPT_PASSWORD_CREDENTIALSA;
} CRYPT_PASSWORD_CREDENTIALSW, *PCRYPT_PASSWORD_CREDENTIALSW;
} CRYPT_PKCS8_EXPORT_PARAMS, *PCRYPT_PKCS8_EXPORT_PARAMS;
} CRYPT_PKCS8_IMPORT_PARAMS, *PCRYPT_PKCS8_IMPORT_PARAMS, CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS, *PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;
} CRYPT_PSOURCE_ALGORITHM, *PCRYPT_PSOURCE_ALGORITHM;
} CRYPT_RC2_CBC_PARAMETERS, *PCRYPT_RC2_CBC_PARAMETERS;
} CRYPT_RC4_KEY_STATE, *PCRYPT_RC4_KEY_STATE;
} CRYPT_RETRIEVE_AUX_INFO, *PCRYPT_RETRIEVE_AUX_INFO;
} CRYPT_RSA_SSA_PSS_PARAMETERS, *PCRYPT_RSA_SSA_PSS_PARAMETERS;
} CRYPT_RSAES_OAEP_PARAMETERS, *PCRYPT_RSAES_OAEP_PARAMETERS;
} CRYPT_SEQUENCE_OF_ANY, *PCRYPT_SEQUENCE_OF_ANY;
} CRYPT_SIGN_MESSAGE_PARA, *PCRYPT_SIGN_MESSAGE_PARA;
} CRYPT_SMART_CARD_ROOT_INFO, *PCRYPT_SMART_CARD_ROOT_INFO;
} CRYPT_SMIME_CAPABILITIES, *PCRYPT_SMIME_CAPABILITIES;
} CRYPT_SMIME_CAPABILITY, *PCRYPT_SMIME_CAPABILITY;
} CRYPT_TIME_STAMP_REQUEST_INFO, *PCRYPT_TIME_STAMP_REQUEST_INFO;
} CRYPT_TIMESTAMP_ACCURACY, *PCRYPT_TIMESTAMP_ACCURACY;
} CRYPT_TIMESTAMP_CONTEXT, *PCRYPT_TIMESTAMP_CONTEXT;
} CRYPT_TIMESTAMP_INFO, *PCRYPT_TIMESTAMP_INFO;
} CRYPT_TIMESTAMP_PARA, *PCRYPT_TIMESTAMP_PARA;
} CRYPT_TIMESTAMP_REQUEST, *PCRYPT_TIMESTAMP_REQUEST;
} CRYPT_TIMESTAMP_RESPONSE, *PCRYPT_TIMESTAMP_RESPONSE;
} CRYPT_URL_ARRAY, *PCRYPT_URL_ARRAY;
} CRYPT_URL_INFO, *PCRYPT_URL_INFO;
} CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO,
} CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO,
} CRYPT_VERIFY_MESSAGE_PARA, *PCRYPT_VERIFY_MESSAGE_PARA;
} CRYPT_X942_OTHER_INFO, *PCRYPT_X942_OTHER_INFO;
} CRYPTNET_URL_CACHE_FLUSH_INFO, *PCRYPTNET_URL_CACHE_FLUSH_INFO;
} CRYPTNET_URL_CACHE_PRE_FETCH_INFO, *PCRYPTNET_URL_CACHE_PRE_FETCH_INFO;
} CRYPTNET_URL_CACHE_RESPONSE_INFO, *PCRYPTNET_URL_CACHE_RESPONSE_INFO;
} CRYPTPROTECT_PROMPTSTRUCT, *PCRYPTPROTECT_PROMPTSTRUCT;
} CTL_ANY_SUBJECT_INFO, *PCTL_ANY_SUBJECT_INFO;
} CTL_CONTEXT, *PCTL_CONTEXT;
} CTL_ENTRY, *PCTL_ENTRY;
} CTL_FIND_SUBJECT_PARA, *PCTL_FIND_SUBJECT_PARA;
} CTL_FIND_USAGE_PARA, *PCTL_FIND_USAGE_PARA;
} CTL_INFO, *PCTL_INFO;
} CTL_USAGE, *PCTL_USAGE,
} CTL_USAGE_MATCH, *PCTL_USAGE_MATCH;
} CTL_VERIFY_USAGE_PARA, *PCTL_VERIFY_USAGE_PARA;
} CTL_VERIFY_USAGE_STATUS, *PCTL_VERIFY_USAGE_STATUS;
} Data;
} DHPRIVKEY_VER3, DSSPRIVKEY_VER3;
} DHPUBKEY, DSSPUBKEY, KEAPUBKEY, TEKPUBKEY;
} DHPUBKEY_VER3, DSSPUBKEY_VER3;
} DSAFIPSVERSION_ENUM;
} DSSSEED;
} DUMMYUNIONNAME;
} DUMMYUNIONNAME;                                   
} DUMMYUNIONNAME2;
} ECC_CURVE_ALG_ID_ENUM;
} ECC_CURVE_TYPE_ENUM;
} EV_EXTRA_CERT_CHAIN_POLICY_PARA,
} EV_EXTRA_CERT_CHAIN_POLICY_STATUS, *PEV_EXTRA_CERT_CHAIN_POLICY_STATUS;
} FVE_AUTH_DPAPI_NG, *PFVE_AUTH_DPAPI_NG;
} FVE_AUTH_ELEMENT, *PFVE_AUTH_ELEMENT;
} FVE_AUTH_EXTERNAL_KEY, *PFVE_AUTH_EXTERNAL_KEY;
} FVE_AUTH_INFO_CLEAR_KEY, *PFVE_AUTH_INFO_CLEAR_KEY;
} FVE_AUTH_INFO_PUBLIC_KEY, *PFVE_AUTH_INFO_PUBLIC_KEY;
} FVE_AUTH_INFORMATION, *PFVE_AUTH_INFORMATION;
} FVE_AUTH_PASSPHRASE, *PFVE_AUTH_PASSPHRASE;
} FVE_AUTH_PIN, *PFVE_AUTH_PIN;
} FVE_AUTH_PRIVATE_KEY, *PFVE_AUTH_PRIVATE_KEY;
} FVE_AUTH_PUBLIC_KEY, *PFVE_AUTH_PUBLIC_KEY;
} FVE_AUTH_RECOVERY_PASSWORD, *PFVE_AUTH_RECOVERY_PASSWORD;
} FVE_AUTH_TPM, *PFVE_AUTH_TPM;
} FVE_DE_SUPPORT, *PFVE_DE_SUPPORT;
} FVE_DEVICE_TYPE, *PFVE_DEVICE_TYPE;
} FVE_FIND_DATA_V1, *PFVE_FIND_DATA_V1;
} FVE_HANDLE_TYPE, *PFVE_HANDLE_TYPE;
} FVE_INTERFACE_TYPE, *PFVE_INTERFACE_TYPE;
} FVE_PROTECTOR_TYPE, *PFVE_PROTECTOR_TYPE;
} FVE_QUERY_TYPE, *PFVE_QUERY_TYPE;
} FVE_SECUREBOOT_BINDING_STATE, *PFVE_SECUREBOOT_BINDING_STATE;
} FVE_STATUS_V1, *PFVE_STATUS_V1;
} FVE_STATUS_V2, *PFVE_STATUS_V2;
} FVE_STATUS_V3, *PFVE_STATUS_V3;
} FVE_STATUS_V4, *PFVE_STATUS_V4;
} FVE_STATUS_V5, *PFVE_STATUS_V5;
} FVE_STATUS_V6, *PFVE_STATUS_V6;
} FVE_STATUS_V7, *PFVE_STATUS_V7;
} FVE_TPM_CAPS, *PFVE_TPM_CAPS;
} FVE_TPM_CAPS_TPM_PRESENCE, *PFVE_TPM_CAPS_TPM_PRESENCE;
} FVE_WIPING_STATE, *PFVE_WIPING_STATE;
} HASHALGORITHM_ENUM;
} HMAC_INFO, *PHMAC_INFO;
} HTTPSPolicyCallbackData, *PHTTPSPolicyCallbackData,
} KEY_TYPE_SUBTYPE, *PKEY_TYPE_SUBTYPE;
} NCRYPT_ALLOC_PARA;
} NCRYPT_CIPHER_PADDING_INFO, *PNCRYPT_CIPHER_PADDING_INFO;
} NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE, *PNCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE;
} NCRYPT_EXPORTED_ISOLATED_KEY_HEADER, *PNCRYPT_EXPORTED_ISOLATED_KEY_HEADER;
} NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES, *PNCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES;
} NCRYPT_KEY_ATTEST_PADDING_INFO;
} NCRYPT_KEY_BLOB_HEADER, *PNCRYPT_KEY_BLOB_HEADER;
} NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO;
} NCRYPT_PCP_RAW_POLICYDIGEST_INFO;
} NCRYPT_PCP_TPM_FW_VERSION_INFO;
} NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT,*PNCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT;
} NCRYPT_PLATFORM_ATTEST_PADDING_INFO;
} NCRYPT_SUPPORTED_LENGTHS;
} NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER, *PNCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER;
} NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT, *PNCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT;
} NCRYPT_UI_POLICY;
} NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS, *PNCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS;
} NCRYPT_VSM_KEY_ATTESTATION_STATEMENT, *PNCRYPT_VSM_KEY_ATTESTATION_STATEMENT;
} NCryptAlgorithmName;
} NCryptKeyName;
} NCryptProviderName;
} OCSP_BASIC_RESPONSE_ENTRY, *POCSP_BASIC_RESPONSE_ENTRY;
} OCSP_BASIC_RESPONSE_INFO, *POCSP_BASIC_RESPONSE_INFO;
} OCSP_BASIC_REVOKED_INFO, *POCSP_BASIC_REVOKED_INFO;
} OCSP_BASIC_SIGNED_RESPONSE_INFO, *POCSP_BASIC_SIGNED_RESPONSE_INFO;
} OCSP_CERT_ID, *POCSP_CERT_ID;
} OCSP_REQUEST_ENTRY, *POCSP_REQUEST_ENTRY;
} OCSP_REQUEST_INFO, *POCSP_REQUEST_INFO;
} OCSP_RESPONSE_INFO, *POCSP_RESPONSE_INFO;
} OCSP_SIGNATURE_INFO, *POCSP_SIGNATURE_INFO;
} OCSP_SIGNED_REQUEST_INFO, *POCSP_SIGNED_REQUEST_INFO;
} PKCS12_PBES2_EXPORT_PARAMS, *PPKCS12_PBES2_EXPORT_PARAMS; 
} PROV_ENUMALGS;
} PROV_ENUMALGS_EX;
} ROOT_INFO_LUID, *PROOT_INFO_LUID;
} RSAPUBKEY;
} SCHANNEL_ALG, *PSCHANNEL_ALG;
} SSL_ECCKEY_BLOB, *PSSL_ECCKEY_BLOB;
} SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS, *PSSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS;
} SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA,
} SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA, *PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA;
} SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS, *PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS;
}^PZm
}8ZLQ
}eVXn#
}NCRYPT_KEY_ACCESS_POLICY_BLOB;
}WZo'(
~^6EQ
~~o,X*)
~Cjp~~
~-i6XX
~jjo~
~qgjj*z
~vljjr~
~vvqlCCo~
+%%%)
+3340
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
</duixml>
</Element>
</stylesheets>
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<<22b
<7lnl
<assembly
<CCCheckbox
<CCPushButton
<CCSysLink
<duixml>
<Element
<IZH)
<m*e/
<M@q?
<PassphraseEdit
<stylesheets>
<unknown>
= 011
="1*155GQfI
=bdd$j
=lNwOo
=MWB"V
=VV:4[m:
>#.n#
>?666t
0)2d!lQK"d`
040904B0
054]A
099I&#Q*
0A^_^
0FctN:
0m8??O"
0RJa<
1"uq 
1=@jFJBh
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
18@Z2
19y6e
1APz}
1'''L&
2(wEP
2)TWi6
2a\dt
2Is  
2S5VY
3?Xeg
31wp{xx
3379p
36{1/_
3h@JI
45)H$
4e2MI
4-j>1::
4MkFb
5##1+
5:+k$
5bSZE
627551
68LT[WS*
6I.SR
7@GCS^
7ctO5`pb5_og5`pe:j{(
7H&3lK
7w778
8# X_
8'_|%
8=9a8
888m[[[$
8S0~E
9::b8
9;{{{x13w
9pydT
A.*,A
A:TU5,
a@Kvz
A^A\]
A_A^A\
A_A^A\_^
A_A^A]A\]
a0AZ>
A0S)~
a7A]XYae
absorbsshortcut = "true"
accdesc = "ASCII Warning Icon"
accdesc = "Cancel Button"
accdesc = "Change Password Button"
accdesc = "Change Password Dialog Title"
accdesc = "Change Password For Non-OS Dialog Title"
accdesc = "Change PIN Button"
accdesc = "Change PIN Dialog Title"
accdesc = "Close Button"
accdesc = "Confirmation Text"
accdesc = "Elevation Icon"
accdesc = "Enter Existing Password Edit Field"
accdesc = "Enter Existing Password Label"
accdesc = "Enter Existing PIN Edit Field"
accdesc = "Enter Existing PIN Label"
accdesc = "Enter New Password Confirm Edit Field"
accdesc = "Enter New Password Confirm Label"
accdesc = "Enter New Password Edit Field"
accdesc = "Enter New Password Label"
accdesc = "Enter New PIN Confirm Edit Field"
accdesc = "Enter New PIN Confirm Label"
accdesc = "Enter New PIN Edit Field"
accdesc = "Enter New PIN Label"
accdesc = "Error Icon"
accdesc = "Help Link"
accdesc = "Info Icon"
accdesc = "Manage BitLocker Link"
accdesc = "Manage BitLocker Passphrase Link"
accdesc = "Password Confirmation Text"
accdesc = "Password Constraints Text"
accdesc = "PIN Constraints Text"
accdesc = "Status Text"
accdesc = "Warning Icon"
accessible = "false"
accessible = "true"
accessible = "true">
accname = "resstr(4201)"
accname = "resstr(4202)"
accname = "resstr(4203)"
accname = "resstr(4204)"
accname = "resstr(4205)"
accname = "resstr(4207)"
accname = "resstr(4208)"
accname = "resstr(4210)"
accname = "resstr(4213)"
accname = "resstr(4214)"
accname = "resstr(4215)"
accname = "resstr(4216)"
accname = "resstr(4217)"
accname = "resstr(4218)"
accname = "resstr(4219)"
accname = "resstr(4220)"
accname = "resstr(4222)"
accname = "resstr(4223)"
accname = "resstr(4225)"
accrole = "graphic"
accrole = "link"
accrole = "pushbutton"
accrole = "statictext"
accrole = "text"
AcquireSRWLockExclusive
active = "mouse|keyboard"
ADVAPI32.dll
aea696=64
AJ.\vw
ALG_ID          Algid;                              
ALG_ID      Algid,
ALG_ID      Algid;
ALG_ID    aiAlgid;
ALG_ID  aiKeyAlg;
ALG_ID  Algid;
ALG_ID  Algid;                              
ALG_ID  HashAlgid;
ALG_ID aiKeyAlg,
ALG_ID Algid,
AllocateAndInitializeSid
asciiwarningicon
Assert
assertVersion
ATAVAWH
B *_G
B+VVVX\\
background = "ARGB(0, 0, 0, 0)"
background = "ARGB(0, 0, 0, 0)">
background = "menubar">
baP/^
BCRYPT_ALG_HANDLE   *phAlgorithm,
BCRYPT_ALG_HANDLE   hAlgorithm,
BCRYPT_ALG_HANDLE   hPrf,
BCRYPT_ALG_HANDLE   hTargetAlg,
BCRYPT_ALG_HANDLE hAlgorithm,
BCRYPT_ALGORITHM_IDENTIFIER **ppAlgList,
BCRYPT_ECC_PRIME_MONTGOMERY_CURVE           = 0x3
BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE    = 0x1,
BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE      = 0x2,
BCRYPT_HANDLE   hObject,
BCRYPT_HASH_HANDLE  *phHash,
BCRYPT_HASH_HANDLE  *phNewHash,
BCRYPT_HASH_HANDLE  hHash);
BCRYPT_HASH_HANDLE  hHash,
BCRYPT_HASH_HANDLE hHash,
BCRYPT_HASH_OPERATION_FINISH_HASH = 2,
BCRYPT_HASH_OPERATION_HASH_DATA = 1,
BCRYPT_HASH_OPERATION_TYPE      hashOperation;  
BCRYPT_KEY_HANDLE           hCNGContentEncryptKey;
BCRYPT_KEY_HANDLE       hPrivKey,
BCRYPT_KEY_HANDLE       hPubKey,
BCRYPT_KEY_HANDLE   *phKey,
BCRYPT_KEY_HANDLE   *phNewKey,
BCRYPT_KEY_HANDLE   hExportKey,
BCRYPT_KEY_HANDLE   hKey);
BCRYPT_KEY_HANDLE   hKey,
BCRYPT_KEY_HANDLE *phKey
BCRYPT_KEY_HANDLE *phKey,
BCRYPT_KEY_HANDLE Handle;
BCRYPT_KEY_HANDLE hBCryptKey,
BCRYPT_KEY_HANDLE hImportKey,
BCRYPT_KEY_HANDLE hKey,
BCRYPT_NO_CURVE_GENERATION_ALG_ID = 0x0
BCRYPT_OID  *pOIDs;
BCRYPT_OPERATION_TYPE_HASH = 1,     
BCRYPT_PROVIDER_NAME    **ppImplList,
BCRYPT_SECRET_HANDLE    *phAgreedSecret,
BCRYPT_SECRET_HANDLE   hSecret);
BCRYPT_SECRET_HANDLE hSharedSecret,
BCryptAddContextFunction(
BCryptBufferDesc     *pParameterList,
BCryptCloseAlgorithmProvider(
BCryptConfigureContext(
BCryptConfigureContextFunction(
BCryptCreateContext(
BCryptCreateHash(
BCryptDecrypt(
BCryptDeleteContext(
BCryptDeriveKey(
BCryptDeriveKeyCapi(
BCryptDeriveKeyPBKDF2(
BCryptDestroyHash(
BCryptDestroyKey(
BCryptDestroySecret(
BCryptDuplicateHash(
BCryptDuplicateKey(
BCryptEncrypt(
BCryptEnumAlgorithms(
BCryptEnumContextFunctionProviders(
BCryptEnumContextFunctions(
BCryptEnumContexts(
BCryptEnumProviders(
BCryptEnumRegisteredProviders(
BCryptExportKey(
BCryptFinalizeKeyPair(
BCryptFinishHash(
BCryptFreeBuffer(
BCryptGenerateKeyPair(
BCryptGenerateSymmetricKey(
BCryptGenRandom(
BCryptGetFipsAlgorithmMode(
BCryptGetProperty(
BCryptHash(
BCryptHashData(
BCryptImportKey(
BCryptImportKeyPair(
BCryptKeyDerivation(
BCryptOpenAlgorithmProvider(
BCryptQueryContextConfiguration(
BCryptQueryContextFunctionConfiguration(
BCryptQueryContextFunctionProperty(
BCryptQueryProviderRegistration(
BCryptRegisterConfigChangeNotify(
BCryptRemoveContextFunction(
BCryptResolveProviders(
BCryptSecretAgreement(
BCryptSetContextFunctionProperty(
BCryptSetProperty(
BCryptSignHash(
BCryptUnregisterConfigChangeNotify(
BCryptVerifySignature(
bdechangepin.exe
bdechangepin.pdb
BDEUI.dll
BitLocker Drive Encryption: PIN Change Tool
BitLockerSoftwareRoot
BitLockerSystemRoot
BitLockerWizard.exe
BitLockerWizardElev.exe
BJL\]
BL1#y
BOOL                                fProxyCacheRetrieval;
BOOL                        fCertReq;               
BOOL                        fCNG;
BOOL                        fHasFreshnessTime;
BOOL                        fInhibitPolicyMapping;
BOOL                        fOrdering;                  
BOOL                        fRequestCerts;              
BOOL                        fRequireExplicitPolicy;
BOOL                    fCA;
BOOL                    fDeltaCrlEntry; 
BOOL                    fHasFreshnessTime;
BOOL                    fHasRevocationFreshnessTime;
BOOL                    fIndirectCRL;
BOOL                    fMaximum;
BOOL                    fOnlyContainsCACerts;
BOOL                    fOnlyContainsUserCerts;
BOOL                    fPathLenConstraint;
BOOL                   fHasRevocationFreshnessTime;
BOOL                fCommercial;
BOOL                fCommercial;        
BOOL                fCritical;
BOOL                fIV;            
BOOL                fMinorVersion;      
BOOL        Final,
BOOL     ForceDismount
BOOL    Final,
BOOL *Allow
BOOL *IsCompatible
BOOL *IsDeviceLocked
BOOL *pfCallerFreeProvOrNCryptKey
BOOL Allow
BOOL bNeedWriteAccess,
BOOL Enabled
BOOL Enabled,
BOOL fDetachedHash,
BOOL fDetachedSignature,
BOOL fFinal
BOOL ForceDismount
BOOL TpmPresent;
BOOLEAN
BOOLEAN * IsValid
BOOLEAN *pfEnabled
BOOLEAN AutoStartOnReinsertion
BOOLEAN ForceDismount
BOOLEAN IceIsUsedForFve : 1;    
BOOLEAN IsEfiEsp : 1;           
BOOLEAN IsRecovery : 1;         
BOOLEAN WcosBsp : 1;            
BOOLEAN WcosDePolicy : 1;       
BOOLEAN WcosEfiEsp : 1;         
BOOLEAN WcosMainOs : 1;         
BOOLEAN WcosOsData : 1;         
BOOLEAN WcosPreInstalled : 1;   
BOOLEAN WcosUserData : 1;       
BOOLEAN WcosWsp : 1;            
BOOLEAN WimBootHashCompleted : 1;   
BOOLEAN WimBootVolume : 1;  
BRBeFf
BVTZV
BYTE                        *pbCNGContentEncryptKeyObject;
BYTE                        *pbContentEncryptKey;
BYTE                        *pbEncoded;
BYTE                        rgbSuppPubInfo[4];
BYTE                    *pbCertEncoded;
BYTE                    *pbCrlEncoded;
BYTE                    *pbCtlContent;
BYTE                    *pbCtlEncoded;
BYTE                    *pbEncoded;
BYTE                rgbCardID [16];
BYTE                rgbCounter[4];
BYTE                rgbIV[8];
BYTE                rgbKeyLength[4];
BYTE            *pbData;
BYTE        *pbData,
BYTE        *pbEncodedOcspResponse;
BYTE        *pbSignature,
BYTE        pabHMAC[32];
BYTE        pabNonce[32];
BYTE        pabPolicyRef[32];
BYTE    *pbBuffer
BYTE    *pbData,
BYTE    *pbData;
BYTE    *pbInnerString;
BYTE    *pbOID;                             
BYTE    *pbOuterString;
BYTE    bType;
BYTE    bVersion;
BYTE    seed[20];
BYTE **pData,
BYTE **ppbData,      
BYTE *pbBinary,
BYTE *pbComputedHash,
BYTE *pbCtlContent,
BYTE *pbData,
BYTE *pbDecoded,
BYTE *pbDecrypted,
BYTE *pbDetachedHashBlob,
BYTE *pbElement,
BYTE *pbEncoded,
BYTE *pbEncryptedBlob,
BYTE *pbHash,
BYTE *pbHashedBlob,
BYTE *pbKeyUsage,
BYTE *pbSignature,
BYTE *pbSignedAndEncryptedBlob,
BYTE *pbSignedBlob,
BYTE *pbToBeHashed,
BYTE *pbValueData,
BYTE HashedPassPhrase[32];
BYTE HashedPin[32];
BYTE Key[32];
BYTE Nothing[1];
BYTE Salt[16];
BYTE* CertThumbprint
BYTE* pbClearTextKey,
BYTE* pbEncodedIssuerName,   
BYTE* pbEncryptedKey,
BYTE* pbPrivateKeyBlob,   
C@BB.>O
C}:!0
cancelbutton
cbApplicationSid;
cbUserSid;
CCCLOMr
ccct:
CDUIHost
CERT_ALT_NAME_ENTRY     Base;
CERT_ALT_NAME_ENTRY AccessLocation;
CERT_ALT_NAME_INFO      CRLIssuer;          
CERT_ALT_NAME_INFO      FullName;       
CERT_ALT_NAME_INFO  AuthorityCertIssuer;    
CERT_BLOB    Forward;        
CERT_BLOB    Reverse;        
CERT_BLOB, *PCERT_BLOB,
CERT_CHAIN_FIND_BY_ISSUER_PARA, *PCERT_CHAIN_FIND_BY_ISSUER_PARA;
CERT_ENHKEY_USAGE Usage;
CERT_ENHKEY_USAGE, *PCERT_ENHKEY_USAGE;
CERT_EXTENSION rgExtensions[]
CERT_HASHED_URL             HashedUrl;      
CERT_ID                     OriginatorCertId;
CERT_ID                     RecipientId;
CERT_ID                     SignerId;
CERT_ISSUER_SERIAL_NUMBER   IssuerSerialNumber;
CERT_LOGOTYPE_DETAILS       LogotypeDetails;
CERT_LOGOTYPE_INFO          LogotypeInfo;
CERT_NAME_BLOB                          *rgIssuer;
CERT_NAME_BLOB              ByNameResponderId;
CERT_NAME_BLOB              DirectoryName;      
CERT_NAME_BLOB              Issuer;
CERT_NAME_BLOB              Subject;
CERT_NAME_BLOB          *rgSubtreesConstraint;
CERT_NAME_BLOB          Subject;
CERT_NAME_BLOB      CertIssuer;
CERT_NAME_BLOB      Issuer;
CERT_NAME_BLOB, *PCERT_NAME_BLOB,
CERT_POLICIES_INFO          IntendedCertPolicies;   
CERT_POLICY_INFO            *rgPolicyInfo;
CERT_POLICY_QUALIFIER_INFO  *rgPolicyQualifier;
CERT_POLICY_QUALIFIER_NOTICE_REFERENCE  *pNoticeReference;  
CERT_PUBLIC_KEY_INFO        OriginatorPublicKeyInfo;
CERT_PUBLIC_KEY_INFO        SubjectPublicKeyInfo;
CERT_PUBLIC_KEY_INFO    SubjectPublicKeyInfo;
CERT_RDN_VALUE_BLOB     Value;
CERT_RDN_VALUE_BLOB Value;
CERT_RDN_VALUE_BLOB, *PCERT_RDN_VALUE_BLOB,
CERT_REVOCATION_CHAIN_PARA,
CERT_SELECT_CHAIN_PARA, *PCERT_SELECT_CHAIN_PARA;
CERT_SELECT_CRITERIA, *PCERT_SELECT_CRITERIA;
CERT_SERVER_OCSP_RESPONSE_CONTEXT,
CERT_SUBJECT_INFO_ACCESS, *PCERT_SUBJECT_INFO_ACCESS;
CERT_TRUST_STATUS       TrustStatus;
CERT_TRUST_STATUS     TrustStatus;
CERT_USAGE_MATCH RequestedUsage;
CertAddCertificateContextToStore(
CertAddCertificateLinkToStore(
CertAddCRLContextToStore(
CertAddCRLLinkToStore(
CertAddCTLContextToStore(
CertAddCTLLinkToStore(
CertAddEncodedCertificateToStore(
CertAddEncodedCertificateToSystemStoreA(
CertAddEncodedCertificateToSystemStoreW(
CertAddEncodedCRLToStore(
CertAddEncodedCTLToStore(
CertAddEnhancedKeyUsageIdentifier(
CertAddRefServerOcspResponse(
CertAddRefServerOcspResponseContext(
CertAddSerializedElementToStore(
CertAddStoreToCollection(
CertAlgIdToOID(
CertChainErrorStatusMask
CertCloseServerOcspResponse(
CertCloseStore(
CertCompareCertificate(
CertCompareCertificateName(
CertCompareIntegerBlob(
CertComparePublicKeyInfo(
CertControlStore(
CertCreateCertificateChainEngine (
CertCreateCertificateContext(
CertCreateContext(
CertCreateCRLContext(
CertCreateCTLContext(
CertCreateCTLEntryFromCertificateContextProperties(
CertCreateSelfSignCertificate(
CertDeleteCertificateFromStore(
CertDeleteCRLFromStore(
CertDeleteCTLFromStore(
CertDuplicateCertificateChain (
CertDuplicateCertificateContext(
CertDuplicateCRLContext(
CertDuplicateCTLContext(
CertDuplicateStore(
CertEnumCertificateContextProperties(
CertEnumCertificatesInStore(
CertEnumCRLContextProperties(
CertEnumCRLsInStore(
CertEnumCTLContextProperties(
CertEnumCTLsInStore(
CertEnumPhysicalStore(
CertEnumSubjectInSortedCTL(
CertEnumSystemStore(
CertEnumSystemStoreLocation(
CertFindAttribute(
CertFindCertificateInCRL(
CertFindCertificateInStore(
CertFindChainInStore(
CertFindCRLInStore(
CertFindCTLInStore(
CertFindExtension(
CertFindRDNAttr(
CertFindSubjectInCTL(
CertFindSubjectInSortedCTL(
CertFreeCertificateChain (
CertFreeCertificateChainEngine (
CertFreeCertificateChainList(
CertFreeCertificateContext(
CertFreeCRLContext(
CertFreeCTLContext(
CertFreeServerOcspResponseContext(
CertGetCertificateChain (
CertGetCertificateContextProperty(
CertGetCRLContextProperty(
CertGetCRLFromStore(
CertGetCTLContextProperty(
CertGetEnhancedKeyUsage(
CertGetIntendedKeyUsage(
CertGetIssuerCertificateFromStore(
CertGetNameStringA(
CertGetNameStringW(
CertGetPublicKeyLength(
CertGetServerOcspResponseContext(
CertGetStoreProperty(
CertGetSubjectCertificateFromStore(
CertGetValidUsages(
CertIsRDNAttrsInCertificateName(
CertIsStrongHashToSign(
CertIsValidCRLForCertificate(
CertIsWeakHash(
CertNameToStrA(
CertNameToStrW(
CertOIDToAlgId(
CertOpenServerOcspResponse(
CertOpenStore(
CertOpenSystemStoreA(
CertOpenSystemStoreW(
CertRDNValueToStrA(
CertRDNValueToStrW(
CertRegisterPhysicalStore(
CertRegisterSystemStore(
CertRemoveEnhancedKeyUsageIdentifier(
CertRemoveStoreFromCollection(
CertResyncCertificateChainEngine (
CertRetrieveLogoOrBiometricInfo(
CertSaveStore(
CertSelectCertificateChains(
CertSerializeCertificateStoreElement(
CertSerializeCRLStoreElement(
CertSerializeCTLStoreElement(
CertSetCertificateContextPropertiesFromCTLEntry(
CertSetCertificateContextProperty(
CertSetCRLContextProperty(
CertSetCTLContextProperty(
CertSetEnhancedKeyUsage(
CertSetStoreProperty(
CertStrToNameA(
CertStrToNameW(
CertUnregisterPhysicalStore(
CertUnregisterSystemStore(
CertVerifyCertificateChainPolicy(
CertVerifyCRLRevocation(
CertVerifyCRLTimeValidity(
CertVerifyCTLUsage(
CertVerifyRevocation(
CertVerifySubjectCertificateContext(
CertVerifyTimeValidity(
CertVerifyValidityNesting(
changepassphrasebutton
changepassphrasedialogtitle
changepassphrasenonosdialogtitle
changepinbutton
CHAR      szLongName[40];
CHAR      szName[20];
closebutton
CloseHandle
CMSG_ENVELOPED_ENCODE_INFO  EnvelopedInfo;
CMSG_SIGNED_ENCODE_INFO     SignedInfo;
CngGetFipsAlgorithmMode(
CoInitialize
COMCTL32.dll
CommandLineToArgvW
CompanyName
confirmationtextpanel
const BYTE      *pbOptionalPassword,
const BYTE  *pbData,
const BYTE  *pbSignature,
const BYTE  *pbTSContentInfo,
const BYTE *    pbCertEncoded,
const BYTE * const rgpbValueData[],
const BYTE *pbBinary,
const BYTE *pbCertEncoded,
const BYTE *pbCrlEncoded,
const BYTE *pbCtlEncoded,
const BYTE *pbData,
const BYTE *pbDetachedSignBlob,
const BYTE *pbElement,
const BYTE *pbEncoded,
const BYTE *pbEncodedBlob,
const BYTE *pbEncodedToBeSigned,
const BYTE *pbEncryptedBlob,
const BYTE *pbSignedBlob,
const BYTE *pbToBeEncrypted,
const BYTE *pbToBeSigned,
const BYTE *pbToBeSignedAndEncrypted,
const BYTE *pbValueData,
const BYTE *rgpbToBeHashed[],
const BYTE *rgpbToBeSigned[],
const CRYPT_HASH_BLOB *pKeyIdentifier,
const CRYPT_OID_FUNC_ENTRY rgFuncEntry[],
const CRYPT_TIMESTAMP_PARA *pPara,
const DWORD rgcbValueData[],
const DWORD rgdwValueType[],
const PUBLICKEYSTRUC *pPubKeyStruc,
const void               *pvObject,
const void          *pvFindPara;
const void *
const void **ppvContext
const void *pvArg,
const void *pvData
const void *pvDefaultPara,
const void *pvFindPara,
const void *pvHashAuxInfo,
const void *pvPara
const void *pvPara,
const void *pvStructInfo,
const void *pvSystemStore,
content = ""
content = "_"
content = "do not localize"
content = "icon(78,sysmetric(49),sysmetric(50),library(imageres.dll))"
content = "icon(81,sysmetric(49),sysmetric(50),library(imageres.dll))"
content = "icon(84,sysmetric(49),sysmetric(50),library(imageres.dll))"
content = "icon(98,sysmetric(49),sysmetric(50),library(imageres.dll))"
content = "resstr(4201)"
content = "resstr(4202)"
content = "resstr(4203)"
content = "resstr(4204)"
content = "resstr(4205)"
content = "resstr(4207)"
content = "resstr(4208)"
content = "resstr(4210)"
content = "resstr(4213)"
content = "resstr(4214)"
content = "resstr(4215)"
content = "resstr(4216)"
content = "resstr(4217)"
content = "resstr(4218)"
content = "resstr(4219)"
content = "resstr(4220)"
content = "resstr(4222)"
content = "resstr(4223)"
content = "resstr(4225)"
content = "resstr(IDS_DIALOG_ASCII_WARNING)"
contentalign = "wrapleft"
contentalign = "wrapleft"/>
CoUninitialize
count
CPS_URLS    *rgCPSURLs;                 
CreateEventW
CreateMutexW
CRL_BLOB, *PCRL_BLOB,
CRL_DIST_POINT_NAME     DistPointName;      
CRL_DIST_POINT_NAME     DistPointName;              
CRYPT_ALGORITHM_IDENTIFIER    Algorithm;
CRYPT_ALGORITHM_IDENTIFIER  *pAlgorithm; 
CRYPT_ALGORITHM_IDENTIFIER  Algorithm;
CRYPT_ALGORITHM_IDENTIFIER  ContentEncryptionAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  EncryptionAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  HashAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  HashAlgorithm;  
CRYPT_ALGORITHM_IDENTIFIER  HashEncryptionAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  KeyEncryptionAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  KeyWrapAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  PubKeyAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  SignatureAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER  SubjectAlgorithm;
CRYPT_ALGORITHM_IDENTIFIER Algorithm,
CRYPT_ALGORITHM_IDENTIFIER* pAlgorithm,
CRYPT_ATTR_BLOB, *PCRYPT_ATTR_BLOB;
CRYPT_ATTRIBUTE     Attribute;
CRYPT_ATTRIBUTE rgAttr[]
CRYPT_ATTRIBUTES            AuthAttrs;
CRYPT_ATTRIBUTES            UnauthAttrs;
CRYPT_BIT_BLOB                  OriginatorPublicKey;
CRYPT_BIT_BLOB                PublicKey;
CRYPT_BIT_BLOB              FailureInfo;            
CRYPT_BIT_BLOB              IntendedKeyUsage;
CRYPT_BIT_BLOB              IntendedKeyUsage;       
CRYPT_BIT_BLOB              IssuerUniqueId;
CRYPT_BIT_BLOB              PublicKey;  
CRYPT_BIT_BLOB              RecipientPublicKey;
CRYPT_BIT_BLOB              Signature;
CRYPT_BIT_BLOB              SubjectUniqueId;
CRYPT_BIT_BLOB          OnlySomeReasonFlags;        
CRYPT_BIT_BLOB          ReasonFlags;        
CRYPT_BIT_BLOB          RestrictedKeyUsage;
CRYPT_BIT_BLOB          SubjectType;
CRYPT_BIT_BLOB      seed;
CRYPT_BIT_BLOB  Signature;
CRYPT_CONTEXT_CONFIG, *PCRYPT_CONTEXT_CONFIG;
CRYPT_CONTEXT_FUNCTION_CONFIG, *PCRYPT_CONTEXT_FUNCTION_CONFIG;
CRYPT_CONTEXT_FUNCTION_PROVIDERS, *PCRYPT_CONTEXT_FUNCTION_PROVIDERS;
CRYPT_CONTEXT_FUNCTIONS, *PCRYPT_CONTEXT_FUNCTIONS;
CRYPT_CONTEXTS, *PCRYPT_CONTEXTS;
CRYPT_DATA_BLOB             *pDigest;    
CRYPT_DATA_BLOB             EncodingParameters;
CRYPT_DATA_BLOB             EncryptedHash;
CRYPT_DATA_BLOB             EncryptedKey;
CRYPT_DATA_BLOB             EncryptedPrivateKey;
CRYPT_DATA_BLOB             EntityUInfo;    
CRYPT_DATA_BLOB             IPAddress;          
CRYPT_DATA_BLOB             KeyId;
CRYPT_DATA_BLOB             ListIdentifier;     
CRYPT_DATA_BLOB             PendToken;
CRYPT_DATA_BLOB             SubjectIdentifier;
CRYPT_DATA_BLOB             UserKeyingMaterial;
CRYPT_DATA_BLOB             UserKeyingMaterial;     
CRYPT_DATA_BLOB         ListIdentifier;     
CRYPT_DATA_BLOB     blob;
CRYPT_DATA_BLOB     KeyId;
CRYPT_DATA_BLOB     ListIdentifier; 
CRYPT_DATA_BLOB     OpenParameters;         
CRYPT_DATA_BLOB     PubInfo;    
CRYPT_DATA_BLOB     SubjectIdentifier;          
CRYPT_DATA_BLOB CertIssuerPubKeyBitLengthPropData;
CRYPT_DATA_BLOB CertSignHashCNGAlgPropData;
CRYPT_DATA_BLOB EncryptedPrivateKey,
CRYPT_DATA_BLOB ExtraInfo;
CRYPT_DATA_BLOB PubInfo;            
CRYPT_DATA_BLOB* pClearTextPrivateKey,
CRYPT_DATA_BLOB* pPFX);
CRYPT_DATA_BLOB* pPFX,
CRYPT_DATA_BLOB, *PCRYPT_DATA_BLOB,
CRYPT_DER_BLOB              ContentInfo;            
CRYPT_DER_BLOB              HashedMessage;
CRYPT_DER_BLOB              Nonce;                      
CRYPT_DER_BLOB              PrivateKey;
CRYPT_DER_BLOB              PrivateKey; 
CRYPT_DER_BLOB              ToBeSigned;
CRYPT_DER_BLOB              ToBeSigned;     
CRYPT_DER_BLOB              ToBeSigned;             
CRYPT_DER_BLOB              Tsa;                        
CRYPT_DER_BLOB      Content;
CRYPT_DER_BLOB      EncodedContentInfo;
CRYPT_DER_BLOB      SignedCertRequest;
CRYPT_DER_BLOB, *PCRYPT_DER_BLOB,
CRYPT_DIGEST_BLOB               PrivateKey;             
CRYPT_DIGEST_BLOB, *PCRYPT_DIGEST_BLOB,
CRYPT_HASH_BLOB              ByKeyResponderId;
CRYPT_HASH_BLOB             Hash;
CRYPT_HASH_BLOB             HashId;
CRYPT_HASH_BLOB             IssuerKeyHash;  
CRYPT_HASH_BLOB             IssuerNameHash; 
CRYPT_HASH_BLOB             KeyId;
CRYPT_HASH_BLOB, *PCRYPT_HASH_BLOB,
CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF;
CRYPT_IMAGE_REG, *PCRYPT_IMAGE_REG;
CRYPT_INTEGER_BLOB          Nonce;                  
CRYPT_INTEGER_BLOB          Nonce;                      
CRYPT_INTEGER_BLOB          SequenceNumber;     
CRYPT_INTEGER_BLOB          SerialNumber;
CRYPT_INTEGER_BLOB  AuthorityCertSerialNumber;
CRYPT_INTEGER_BLOB  CertSerialNumber;
CRYPT_INTEGER_BLOB  SerialNumber;
CRYPT_INTERFACE_REG, *PCRYPT_INTERFACE_REG;
CRYPT_KEY_PROV_INFO     keyLocatorInfo; 
CRYPT_MASK_GEN_ALGORITHM    MaskGenAlgorithm;
CRYPT_OBJID_BLOB            Qualifier;              
CRYPT_OBJID_BLOB            Value;      
CRYPT_OBJID_BLOB        Content;
CRYPT_OBJID_BLOB    Parameters;
CRYPT_OBJID_BLOB    StatementInfo;      
CRYPT_OBJID_BLOB    Value;
CRYPT_OBJID_BLOB, *PCRYPT_OBJID_BLOB,
CRYPT_PKCS12_PBE_PARAMS;
CRYPT_PKCS8_EXPORT_PARAMS* psExportParams,                 
CRYPT_PKCS8_IMPORT_PARAMS sPrivateKeyAndParams,    
CRYPT_PRIVATE_KEY_INFO      *pPrivateKeyInfo,
CRYPT_PRIVATE_KEY_INFO* pPrivateKeyInfo,  
CRYPT_PRIVATE_KEY_INFO* pPrivateKeyInfo,   
CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF;
CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF;
CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS;
CRYPT_PROVIDER_REG, *PCRYPT_PROVIDER_REG;
CRYPT_PROVIDERS, *PCRYPT_PROVIDERS;
CRYPT_PSOURCE_ALGORITHM     PSourceAlgorithm;
CRYPT_UINT_BLOB     g;
CRYPT_UINT_BLOB     g;          
CRYPT_UINT_BLOB     j;          
CRYPT_UINT_BLOB     p;
CRYPT_UINT_BLOB     p;          
CRYPT_UINT_BLOB     q;
CRYPT_UINT_BLOB     q;          
CRYPT_UINT_BLOB     r;
CRYPT_UINT_BLOB     s;
CRYPT_UINT_BLOB, *PCRYPT_UINT_BLOB,
CryptAcquireCertificatePrivateKey(
CryptAcquireContextA(
CryptAcquireContextW(
CryptBinaryToStringA(
CryptBinaryToStringW(
CryptCancelAsyncRetrieval (
CryptCloseAsyncHandle (
CryptContextAddRef(
CryptCreateAsyncHandle (
CryptCreateHash(
CryptCreateKeyIdentifierFromCSP(
CryptDecodeMessage(
CryptDecodeObject(
CryptDecodeObjectEx(
CryptDecrypt(
CryptDecryptAndVerifyMessageSignature(
CryptDecryptMessage(
CryptDeriveKey(
CryptDestroyHash(
CryptDestroyKey(
CryptDuplicateHash(
CryptDuplicateKey(
CryptEncodeObject(
CryptEncodeObjectEx(
CryptEncrypt(
CryptEncryptMessage(
CryptEnumKeyIdentifierProperties(
CryptEnumOIDFunction(
CryptEnumOIDInfo(
CryptEnumProvidersA(
CryptEnumProvidersW(
CryptEnumProviderTypesA(
CryptEnumProviderTypesW(
CryptExportKey(
CryptExportPKCS8(
CryptExportPKCS8Ex(
CryptExportPublicKeyInfo(
CryptExportPublicKeyInfoEx(
CryptExportPublicKeyInfoFromBCryptKeyHandle(
CryptFindCertificateKeyProvInfo(
CryptFindLocalizedName(
CryptFindOIDInfo(
CryptFlushTimeValidObject (
CryptFormatObject(
CryptFreeOIDFunctionAddress(
CryptGenKey(
CryptGenRandom(
CryptGetAsyncParam (
CryptGetDefaultOIDDllList(
CryptGetDefaultOIDFunctionAddress(
CryptGetDefaultProviderA(
CryptGetDefaultProviderW(
CryptGetHashParam(
CryptGetKeyIdentifierProperty(
CryptGetKeyParam(
CryptGetMessageCertificates(
CryptGetMessageSignerCount(
CryptGetObjectUrl (
CryptGetOIDFunctionAddress(
CryptGetOIDFunctionValue(
CryptGetProvParam(
CryptGetTimeValidObject (
CryptGetUserKey(
CryptHashCertificate(
CryptHashCertificate2(
CryptHashData(
CryptHashMessage(
CryptHashPublicKeyInfo(
CryptHashSessionKey(
CryptHashToBeSigned(
CryptImportKey(
CryptImportPKCS8(
CryptImportPublicKeyInfo(
CryptImportPublicKeyInfoEx(
CryptImportPublicKeyInfoEx2(
CryptInitOIDFunctionSet(
CryptInstallCancelRetrieval(
CryptInstallDefaultContext(
CryptInstallOIDFunctionAddress(
CryptMemAlloc (
CryptMemFree (
CryptMemRealloc (
CryptMsgCalculateEncodedLength(
CryptMsgClose(
CryptMsgControl(
CryptMsgCountersign(
CryptMsgCountersignEncoded(
CryptMsgDuplicate(
CryptMsgEncodeAndSignCTL(
CryptMsgGetAndVerifySigner(
CryptMsgGetParam(
CryptMsgOpenToDecode(
CryptMsgOpenToEncode(
CryptMsgSignCTL(
CryptMsgUpdate(
CryptMsgVerifyCountersignatureEncoded(
CryptMsgVerifyCountersignatureEncodedEx(
CRYPTPROTECT_PROMPTSTRUCT*  pPromptStruct,
CryptProtectData(
CryptProtectDataNoUI(
CryptProtectMemory(
CryptQueryObject(
CryptRegisterDefaultOIDFunction(
CryptRegisterOIDFunction(
CryptRegisterOIDInfo(
CryptReleaseContext(
CryptRetrieveObjectByUrlA (
CryptRetrieveObjectByUrlW (
CryptRetrieveTimeStamp(
CryptSetAsyncParam (
CryptSetHashParam(
CryptSetKeyIdentifierProperty(
CryptSetKeyParam(
CryptSetOIDFunctionValue(
CryptSetProviderA(
CryptSetProviderExA(
CryptSetProviderExW(
CryptSetProviderW(
CryptSetProvParam(
CryptSignAndEncodeCertificate(
CryptSignAndEncryptMessage(
CryptSignCertificate(
CryptSignHashA(
CryptSignHashW(
CryptSignMessage(
CryptSignMessageWithKey(
CryptStringToBinaryA(
CryptStringToBinaryW(
CryptUninstallCancelRetrieval(
CryptUninstallDefaultContext(
CryptUnprotectData(
CryptUnprotectDataNoUI(
CryptUnprotectMemory(
CryptUnregisterDefaultOIDFunction(
CryptUnregisterOIDFunction(
CryptUnregisterOIDInfo(
CryptUpdateProtectedState(
CryptVerifyCertificateSignature(
CryptVerifyCertificateSignatureEx(
CryptVerifyDetachedMessageHash(
CryptVerifyDetachedMessageSignature(
CryptVerifyMessageHash(
CryptVerifyMessageSignature(
CryptVerifyMessageSignatureWithKey(
CryptVerifySignatureA(
CryptVerifySignatureW(
CryptVerifyTimeStampSignature (
CS\Vgozzt.>7, 
CTL_USAGE                   SubjectUsage;
CTL_USAGE           SubjectUsage;   
CTL_USAGE Usage;
CUhx~
CurrentControlSet\Policies\Microsoft\FVE
D"!MOO3=
D$ E3
D$$I;
D$0E3
D$HE3
D$HH!L$HH
d(NNN
d+vn`X,
d2e:M9
D4M9^
DATA_BLOB*      pDataIn,
DATA_BLOB*      pDataIn,             
DATA_BLOB*      pDataOut
DATA_BLOB*      pDataOut            
DATA_BLOB*      pOptionalEntropy,
DATA_BLOB, *PDATA_BLOB,
DBcqq
DD$`3
DDD>5;
DefaultRecoveryFolderPath
DeleteCriticalSection
DisableExternalDMAUnderLock
DisallowStandardUserPINReset
double ConvertedPercent; 
double WipedPercent;     
dP/&i0
dRGUe
DSA_FIPS186_2,
DSA_FIPS186_3
DSA_HASH_ALGORITHM_SHA1,
DSA_HASH_ALGORITHM_SHA256,
DSA_HASH_ALGORITHM_SHA512
DSAFIPSVERSION_ENUM                     standardVersion;
DSAFIPSVERSION_ENUM     standardVersion;
DSSSEED DSSSeed;
DUI70.dll
DWORD
DWORD 
DWORD                                           *pcbUsedSize;
DWORD                                           cbSize;
DWORD                                           dwFlags;
DWORD                                       cRecipientEncryptedKeys;
DWORD                                   cbSize;
DWORD                                   cIssuer;
DWORD                                   dwAcquirePrivateKeyFlags;
DWORD                                   dwKeySpec;
DWORD                                cRecipientEncryptedKeys;
DWORD                               cbSize;
DWORD                               dwHttpStatusCode;
DWORD                               dwMaxUrlRetrievalByteCount;
DWORD                               dwMsgAndCertEncodingType;
DWORD                           cbSize;
DWORD                           cPara;
DWORD                           dwKeyChoice;
DWORD                           dwKeySpec;
DWORD                           dwRecipientEncryptedKeyIndex;
DWORD                           dwRecipientIndex;
DWORD                           dwType;
DWORD                       *rgdwBodyList;
DWORD                       *rgdwCertReference;
DWORD                       cAccDescr;
DWORD                       cAttribute;
DWORD                       cAuthAttr;
DWORD                       cbContentEncryptKey;
DWORD                       cbEncoded;
DWORD                       cBiometricData;
DWORD                       cbMaxUrlRetrievalByteCount;
DWORD                       cBodyList;
DWORD                       cbSize;
DWORD                       cCertEncoded;
DWORD                       cCertReference;
DWORD                       cCertStore;
DWORD                       cCommunityLogo;
DWORD                       cCrlEncoded;
DWORD                       cCRLEntry;
DWORD                       cCTLEntry;
DWORD                       cExtension;
DWORD                       cFreeText;              
DWORD                       cHashedUrl;
DWORD                       cKeyAgreeKeyEncryptInfo;
DWORD                       cLogotypeAudio;
DWORD                       cLogotypeImage;
DWORD                       cMsgCert;
DWORD                       cMsgCrl;
DWORD                       cOtherLogo;
DWORD                       cPolicyInfo;
DWORD                       cPolicyMapping;
DWORD                       cPolicyQualifier;       
DWORD                       cRecipients;
DWORD                       cRequestEntry;
DWORD                       cResponseEntry;
DWORD                       cSigners;
DWORD                       cTaggedAttribute;
DWORD                       cTaggedContentInfo;
DWORD                       cTaggedOtherMsg;
DWORD                       cTaggedRequest;
DWORD                       cUnauthAttr;
DWORD                       dwBitLen;
DWORD                       dwCertStatus;
DWORD                       dwChainFlags;
DWORD                       dwChannels;     
DWORD                       dwCmcDataReference;
DWORD                       dwCrlReasonCode;
DWORD                       dwEncryptFlags;
DWORD                       dwFailInfo;
DWORD                       dwFileSize;     
DWORD                       dwFlags,
DWORD                       dwFlags;
DWORD                       dwFreshnessTime;    
DWORD                       dwInhibitPolicyMappingSkipCerts;
DWORD                       dwInnerContentType;
DWORD                       dwKeyChoice;
DWORD                       dwKeySpec;
DWORD                       dwLevel;
DWORD                       dwLogotypeImageInfoChoice;
DWORD                       dwLogotypeImageResolutionChoice;
DWORD                       dwLogotypeInfoChoice;
DWORD                       dwMicros;                   
DWORD                       dwMillis;                   
DWORD                       dwMsgAndCertEncodingType;
DWORD                       dwMsgEncodingType;
DWORD                       dwNumBits;      
DWORD                       dwOriginatorChoice;
DWORD                       dwOtherInfoChoice;
DWORD                       dwPlayTime;     
DWORD                       dwPredefined;
DWORD                       dwRecipientIndex;
DWORD                       dwRequireExplicitPolicySkipCerts;
DWORD                       dwResponderIdChoice;
DWORD                       dwRevision;
DWORD                       dwRevocationResult;
DWORD                       dwSaltLength;
DWORD                       dwSampleRate;   
DWORD                       dwSeconds;                  
DWORD                       dwStatus;
DWORD                       dwTableSize;    
DWORD                       dwTrailerField;
DWORD                       dwTypeOfBiometricDataChoice;
DWORD                       dwUrlRetrievalTimeout;     
DWORD                       dwVersion;
DWORD                       dwVersion;  
DWORD                       dwVersion;              
DWORD                       dwVersion;                  
DWORD                       dwXSize;        
DWORD                       dwYSize;        
DWORD                       Version;
DWORD                    dwExpectedContentTypeFlags,
DWORD                    dwExpectedFormatTypeFlags,
DWORD                    dwFlags,
DWORD                    dwObjectType,
DWORD                   cAltEntry;
DWORD                   cAttribute;
DWORD                   cbCertEncoded;
DWORD                   cbContent;
DWORD                   cbCrlEncoded;
DWORD                   cbCtlContent;
DWORD                   cbCtlEncoded;
DWORD                   cbEncoded;
DWORD                   cbSize;
DWORD                   cbSize;     
DWORD                   cCapability;
DWORD                   cCertPolicyElementId;
DWORD                   cCertPolicyId;
DWORD                   cCerts;     
DWORD                   cCertStore;
DWORD                   cChain;
DWORD                   cCtlStore;
DWORD                   cDistPoint;
DWORD                   cExcludedSubtree;
DWORD                   cItem;
DWORD                   cLowerQualityChainContext;
DWORD                   cPermittedSubtree;
DWORD                   cProvParam;
DWORD                   cSignerStore;
DWORD                   cStatement;
DWORD                   cSubtreesConstraint;
DWORD                   dwCertEncodingType;
DWORD                   dwChoice;
DWORD                   dwCreateFlags;
DWORD                   dwCtlEntryIndex;
DWORD                   dwError;
DWORD                   dwFlags;
DWORD                   dwFreshnessTime;    
DWORD                   dwIndex;
DWORD                   dwInfoChoice;
DWORD                   dwKeySpec;
DWORD                   dwMaximum;
DWORD                   dwMinimum;
DWORD                   dwMsgAndCertEncodingType;
DWORD                   dwMsgEncodingType;
DWORD                   dwPathLenConstraint;
DWORD                   dwProvType;
DWORD                   dwReason;
DWORD                   dwRevocationFreshnessTime;    
DWORD                   dwSignerIndex;
DWORD                   dwSubjectType;
DWORD                   dwSyncDeltaTime;
DWORD                   dwValueType;
DWORD                   dwVersion;
DWORD                  dwRevocationFreshnessTime;    
DWORD                 cbSize;
DWORD                 cElement;
DWORD                *pcbResult,
DWORD                cAttr;
DWORD                cbDerivedKey,
DWORD               *pcbResult,
DWORD               *pdwContentType,
DWORD               *pdwFormatType,
DWORD               *pdwMsgAndCertEncodingType,
DWORD               cAttribute;
DWORD               cbClaimBlob,
DWORD               cbDerivedKey,
DWORD               cbSize;
DWORD               cExtension;
DWORD               cOID;
DWORD               cStoreProvFunc;
DWORD               cUsageIdentifier;
DWORD               cValue;
DWORD               dwBodyPartID;
DWORD               dwClaimType,
DWORD               dwFindFlags;
DWORD               dwFindType;
DWORD               dwFlags);
DWORD               dwFlags;
DWORD               dwFlags;                
DWORD               dwMajorVersion;
DWORD               dwMinorVersion;
DWORD               dwMsgAndCertEncodingType;
DWORD               dwOpenEncodingType;     
DWORD               dwOpenFlags;            
DWORD               dwPriority;             
DWORD               dwRegPolicySettings;
DWORD               dwReserved;
DWORD               dwRootProgramQualifierFlags;
DWORD               dwSignerIndex;
DWORD               dwSignerType;
DWORD               dwStoreProvFlags;
DWORD               dwTaggedRequestChoice;
DWORD               dwUnauthAttrIndex;
DWORD               dwValueType;
DWORD               dwVersion;
DWORD               dwVersion;                      
DWORD               pgenCounter;
DWORD             dwType;
DWORD            cBlob;
DWORD            cbSize;
DWORD           *pdwFailureCount);
DWORD           *pdwSuccessCount,
DWORD           cbCertEncoded
DWORD           cbData;
DWORD           cbDataIn,            
DWORD           cbOptionalPassword,
DWORD           cbSize;
DWORD           cbSize;         
DWORD           cbSize;           
DWORD           cbStruct;       
DWORD           cExtension;
DWORD           cRDNAttr;
DWORD           dwAuthType;
DWORD           dwError;
DWORD           dwExemptSeconds;
DWORD           dwFlags
DWORD           dwFlags,
DWORD           dwFlags;
DWORD           dwGroupId;
DWORD           dwKeySpec;
DWORD           dwMaxAge;
DWORD           dwObjectType;
DWORD           dwParam;
DWORD           dwProxyId;
DWORD           dwReserved;
DWORD           fdwChecks;
DWORD         cbSize;
DWORD       *pdwDataLen
DWORD       *pdwReserved,
DWORD       *pdwSigLen
DWORD       cAdditionalStore;
DWORD       cbData,
DWORD       cbEncodedOcspResponse;
DWORD       cbSize;
DWORD       cbTSContentInfo,
DWORD       cCPSURLs;
DWORD       cRDN;
DWORD       CycleDetectionModulus;
DWORD       dwDataLen,
DWORD       dwExclusiveFlags;
DWORD       dwFlags
DWORD       dwFlags,
DWORD       dwFlags;
DWORD       dwKeySpec,
DWORD       dwKeySpec;
DWORD       dwLength;
DWORD       dwParam,
DWORD       dwProvType
DWORD       dwProvType,
DWORD       dwRecipientIndex;
DWORD       dwRetrievalFlags,
DWORD       dwSigLen,
DWORD       dwTimeout,
DWORD       dwUrlRetrievalTimeout;      
DWORD       dwValue;
DWORD       dwVersion;
DWORD       dwVersion;                      
DWORD       MaximumCachedCertificates;
DWORD     dwBitLen;
DWORD     dwDefaultLen;
DWORD     dwLongNameLen;
DWORD     dwMaxLen;
DWORD     dwMinLen;
DWORD     dwNameLen;
DWORD     dwProtocols;
DWORD     dwType;
DWORD   *pcbProvName
DWORD   *pcbTypeName
DWORD   *pdwDataLen
DWORD   *pdwDataLen,
DWORD   *pdwProvType,
DWORD   *pdwReserved,
DWORD   *rgcGroupEntry;
DWORD   bitlen;                 
DWORD   bitlenJ;                
DWORD   bitlenP;                
DWORD   bitlenQ;                
DWORD   bitlenX;                
DWORD   cbData,
DWORD   cbData;
DWORD   cbDigest;
DWORD   cbHashValue,
DWORD   cbInnerString;
DWORD   cbInput,
DWORD   cBits;
DWORD   cbOID;                              
DWORD   cbOuterString;
DWORD   cbOutput,
DWORD   cbSignature,
DWORD   cbSize;
DWORD   cCNGHashAlgid;
DWORD   cGroup;
DWORD   cNoticeNumbers;
DWORD   counter;
DWORD   cUnusedBits;
DWORD   cUrl;
DWORD   dwAlgId;
DWORD   dwAlgOperations,
DWORD   dwAlgOperations;    
DWORD   dwAltNameChoice;
DWORD   dwBlobType,
DWORD   dwBufLen
DWORD   dwClass;            
DWORD   dwDataLen,
DWORD   dwDefaultLength;
DWORD   dwDistPointNameChoice;
DWORD   dwErrorCategory;
DWORD   dwErrorLevel;
DWORD   dwFlags
DWORD   dwFlags);
DWORD   dwFlags,
DWORD   dwFlags;
DWORD   dwIdChoice;
DWORD   dwIncrement;
DWORD   dwIndex,
DWORD   dwIssuanceUsageIndex;
DWORD   dwKeySpec;
DWORD   dwLegacyKeySpec,
DWORD   dwLegacyKeySpec;
DWORD   dwLen,
DWORD   dwMaxLength;
DWORD   dwMinLength;
DWORD   dwParam,
DWORD   dwPolicyFlags;
DWORD   dwProvType,
DWORD   dwQualifiers;
DWORD   dwRecipientChoice;
DWORD   dwReserved;
DWORD   dwSyncDeltaTime;
DWORD   dwUse;
DWORD   dwVersion;
DWORD   dwWeakIndex;
DWORD   magic;
DWORD   magic;                  
DWORD   pubexp;                 
DWORD  *pcbBinary,
DWORD  cbSize;
DWORD  dwLegacyKeySpec,
DWORD * pcbResult,
DWORD * pdwAlgCount,
DWORD * pdwProviderCount,
DWORD *dwDecSize
DWORD *pcbCertChains,
DWORD *pcbComputedHash
DWORD *pcbContent,
DWORD *pcbCtlEntry
DWORD *pcbData
DWORD *pcbData,
DWORD *pcbDecoded
DWORD *pcbDecoded,
DWORD *pcbDecrypted,
DWORD *pcbElement
DWORD *pcbEncoded
DWORD *pcbEncoded,
DWORD *pcbEncryptedBlob
DWORD *pcbFormat
DWORD *pcbHash
DWORD *pcbHashedBlob,
DWORD *pcbInfo
DWORD *pcbOIDs);
DWORD *pcbPrivateKeyBlob                                
DWORD *pcbSignature
DWORD *pcbSignedAndEncryptedBlob
DWORD *pcbSignedBlob
DWORD *pcbStructInfo
DWORD *pcbToBeHashed,
DWORD *pcbUsage
DWORD *pcbValueData
DWORD *pcCertChains,        
DWORD *pcchDllList
DWORD *pcchString
DWORD *pdwContextType,
DWORD *pdwExpectedObjectCount,
DWORD *pdwFlags
DWORD *pdwInnerContentType,
DWORD *pdwKeySpec,
DWORD *pdwMsgType,
DWORD *pdwReserved,
DWORD *pdwSignerIndex
DWORD *pdwSkip,
DWORD *pdwValueType,
DWORD *rgcbData
DWORD *rgdwPropId,
DWORD BufferSize
DWORD cAttr,
DWORD cbBinary,
DWORD cbCertEncoded
DWORD cbCertEncoded,
DWORD cbComputedHash,
DWORD cbCrlEncoded
DWORD cbCrlEncoded,
DWORD cbCtlContent,
DWORD cbCtlEncoded
DWORD cbCtlEncoded,
DWORD cbData
DWORD cbData,
DWORD cbDetachedHashBlob,
DWORD cbDetachedSignBlob,
DWORD cbElement,
DWORD cbEncoded,
DWORD cbEncodedBlob,
DWORD cbEncodedIssuerName,   
DWORD cbEncodedKey,
DWORD cbEncodedToBeSigned,
DWORD cbEncryptedBlob,
DWORD cbHashedBlob,
DWORD cbHeader;
DWORD cbKeyUsage
DWORD cbName;
DWORD cbPrivate;
DWORD cbPubKeyStruc,
DWORD cbPublic;
DWORD cbRemainEncoded,
DWORD cbSignature
DWORD cbSignedBlob
DWORD cbSignedBlob,
DWORD cbSignerInfo,
DWORD cbSignerInfoCountersignature,
DWORD cbSize;
DWORD cbToBeEncrypted,
DWORD cbToBeSigned,
DWORD cbToBeSignedAndEncrypted,
DWORD cbTotalEncoded,
DWORD cbValueData
DWORD cCerts,
DWORD cchNameString
DWORD cchString,
DWORD cContext,
DWORD cCountersigners,
DWORD cCriteria,
DWORD cCrlInfo,
DWORD cEntry,
DWORD CertThumbprintSize,
DWORD cExtensions,
DWORD cFuncEntry,
DWORD ChangedBcd
DWORD cOptAttr,
DWORD cProp,
DWORD cRecipientCert,
DWORD cSignerStore,
DWORD csz
DWORD cToBeHashed,
DWORD cToBeSigned,
DWORD cValue,
DWORD dwAddDisposition,
DWORD dwAlgId
DWORD dwCertEncodingType,
DWORD dwChainFlags,
DWORD dwCompletionCode,
DWORD dwContextType,
DWORD dwContextTypeFlags,
DWORD dwCtrlType,
DWORD dwDefaultType,
DWORD dwEncodingType,
DWORD dwErrorStatus;
DWORD dwFindFlags,
DWORD dwFindType,
DWORD dwFlags
DWORD dwFlags);
DWORD dwFlags,
DWORD dwFlags,                 
DWORD dwFlags,                   
DWORD dwFlags,                             
DWORD dwFlags,                                     
DWORD dwFlags,                                             
DWORD dwFormatStrType,
DWORD dwFormatType,
DWORD dwGroupId
DWORD dwGroupId,
DWORD dwHashUseType,
DWORD dwIdentifierOrNameListCount); 
DWORD dwIndex,
DWORD dwInfoStatus;
DWORD dwIssuerType,
DWORD dwKeySpec              
DWORD dwKeySpec,
DWORD dwKeySpec,       
DWORD dwKeySpec,               
DWORD dwKeySpec,                                           
DWORD dwKeyType,
DWORD dwMsgAndCertEncodingType,
DWORD dwMsgEncodingType,
DWORD dwMsgType,
DWORD dwMsgTypeFlags,
DWORD dwNameType,
DWORD dwParamType,
DWORD dwPrevInnerContentType,
DWORD dwPriority
DWORD dwPromptFlags;
DWORD dwPropId
DWORD dwPropId,
DWORD dwProvType,
DWORD dwReason,
DWORD dwRetrievalFlags,
DWORD dwRevType,
DWORD dwSaveAs,
DWORD dwSaveTo,
DWORD dwSignerIndex,
DWORD dwSignerType,
DWORD dwSize;            
DWORD dwStrType,
DWORD dwSubjectType,
DWORD dwTimeout,                     
DWORD dwTimeout,                         
DWORD dwTimeout,                             
DWORD dwType,
DWORD dwUpdateFlags,
DWORD dwValueType,
DWORD dwWriteOcspFileError
DWORD KeySpec;
DWORD LowPart;
DWORD magic;
DWORD RecoveryReason,
DWORD rgcbToBeHashed[],
DWORD rgcbToBeSigned[],
DWORD* BufferSize
DWORD* pcbClearTextKey,
DWORD* pcbEncryptedKey,
DWORD* pcbPrivateKeyBlob                                
DWORD* pcbPrivateKeyInfo    
DWORD* pcbUrlArray,
DWORD* pcbUrlInfo,
E%`U^s
E1Yu`
-e-42
EBFDF
ECC_CURVE_ALG_ID_ENUM   dwCurveGenerationAlgId; 
ECC_CURVE_TYPE_ENUM     dwCurveType;            
EEE@;7
elevationicon
EnableBDEWithNoTPM
Enabled
enabled = "false"
EncryptionMethod
EncryptionMethodNoDiffuser
EncryptionMethodWithXtsFdv
EncryptionMethodWithXtsOs
EncryptionMethodWithXtsRdv
EnterCriticalSection
enum _FVE_SECUREBOOT_BINDING_STATE {
en-US
errortextpanel
EU5\o
EventProviderEnabled
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
existingpassphraseedit
existingpinedit
eYA<C.
F#677
F1FDH
F47F- *47888M6(
f9H\u
FcD4E85
fD98t
FDVActiveDirectoryBackup
FDVActiveDirectoryInfoToStore
FDVAllowedHardwareEncryptionAlgorithms
FDVAllowSoftwareEncryptionFailover
FDVAllowUserCert
FDVDenyWriteAccess
FDVDiscoveryVolumeType
FDVEncryptionType
FDVEnforcePassphrase
FDVEnforceUserCert
FDVHardwareEncryption
FDVHideRecoveryPage
FDVManageDRA
FDVNoBitLockerToGoReader
FDVPassphrase
FDVPassphraseComplexity
FDVPassphraseLength
FDVRecovery
FDVRecoveryKey
FDVRecoveryPassword
FDVRequireActiveDirectoryBackup
FDVRestrictHardwareEncryptionAlgorithms
fff8z
fFfFF
fggi4j
FGkE^(
Fi4,v
FileDescription
FILETIME                            *pLastSyncTime;
FILETIME                    Date;
FILETIME                    ftTime;
FILETIME                    NextUpdate;
FILETIME                    NextUpdate; 
FILETIME                    NextUpdate;         
FILETIME                    NotAfter;
FILETIME                    NotBefore;
FILETIME                    PendTime;
FILETIME                    ProducedAt;
FILETIME                    RevocationDate;
FILETIME                    ThisUpdate;
FILETIME            NotAfter;
FILETIME            NotBefore;
FILETIME            RevocationDate;
FILETIME        ExpireTime;
FILETIME        LastModifiedTime;
FILETIME        NextUpdateTime;
FILETIME        PublishTime;    
FILETIME        ThisUpdateTime;
FILETIME CreationTime;
FileVersion
FindCertsByIssuer(
FindWindowW
font = "gtf(TaskDialogStyle, 2, 0)"
FORCEINLINE
foreground = "gtc(TaskDialogStyle, 2, 0, 3803)"/>
FormatMessageW
FreeSid
fttTz
Fv0HD
FVE_AUTH_DPAPI_NG DpapiNgInfo;
FVE_AUTH_EXTERNAL_KEY ExternalKey;
FVE_AUTH_INFO_CLEAR_KEY ClearKeyInfo;
FVE_AUTH_INFO_PUBLIC_KEY PublicKeyInfo;
FVE_AUTH_PASSPHRASE PassPhrase;
FVE_AUTH_PIN Pin;
FVE_AUTH_PRIVATE_KEY PrivateKey;
FVE_AUTH_PUBLIC_KEY PublicKey;
FVE_AUTH_RECOVERY_PASSWORD RecoveryPassword;
FVE_AUTH_TPM Tpm;
FVE_DEVICE_CSV_VOLUME,
FVE_DEVICE_MAX
FVE_DEVICE_TYPE DevType;
FVE_DEVICE_UNKNOWN = -1,
FVE_DEVICE_UNSUPPORTED = 0,
FVE_DEVICE_VOLUME,
FVE_HANDLE_FVE = 0,
FVE_HANDLE_MAX
FVE_HANDLE_NONFVE,
FVE_HANDLE_TYPE HandleType,
FVE_HANDLE_UNKNOWN = -1,
FVE_INTERFACE_HEI,
FVE_INTERFACE_MAX
FVE_INTERFACE_SEI = 0,
FVE_INTERFACE_SYS,
FVE_INTERFACE_TYPE IfcType,
FVE_INTERFACE_UNKNOWN = -1,
FVE_PROTECTOR_TYPE ProtectorType
FVE_PROTECTOR_TYPE ProtectorType,
FVE_QUERY_CSV_VOLUMES,
FVE_QUERY_MAX
FVE_QUERY_TYPE FveQueryType,
FVE_QUERY_UNKNOWN = 0,
FVE_QUERY_UNSUPPORTED,
FVE_QUERY_VOLUMES,
FVE_SECUREBOOT_BINDING_BOUND
FVE_SECUREBOOT_BINDING_DISABLED_BY_POLICY,
FVE_SECUREBOOT_BINDING_NOT_POSSIBLE = 0,
FVE_SECUREBOOT_BINDING_POSSIBLE,
FVE_SECUREBOOT_BINDING_UNKNOWN = -1,
FVE_WIPING_STATE_INACTIVE = 1,   
FVE_WIPING_STATE_INPROGRESS = 4, 
FVE_WIPING_STATE_PENDING = 2,    
FVE_WIPING_STATE_STOPPED = 3,    
FVE_WIPING_STATE_UNSPECIFIED = 0,
FveAddAuthMethodInformation(
FveAddAuthMethodSid(
FveApplyGroupPolicy(
FveApplyNkpCertChanges(
FveAttemptAutoUnlock(
FveAuthElementFromPassPhraseW(
FveAuthElementFromPinW(
FveAuthElementFromRecoveryPasswordW(
FveAuthElementGetKeyFileNameW(
FveAuthElementReadExternalKeyW(
FveAuthElementToRecoveryPasswordW(
FveAuthElementWriteExternalKeyW(
FveBackupRecoveryInformationToAD(
FveBindDataVolume(
FveCanPinExceptionPolicyBeApplied(
FveCanStandardUsersChangePassphraseByProxy(
FveCanStandardUsersChangePin(
FveCheckBootFileW(
FveCheckPassphrasePolicy(
FveCheckTpmCapability(
FveClearUserFlags(
FveCloseHandle(
FveCloseVolume(
FveCommitChanges(
FveConversionDecrypt(
FveConversionDecryptEx(
FveConversionEncrypt(
FveConversionEncryptEx(
FveConversionEncryptPendingReboot(
FveConversionEncryptPendingRebootEx(
FveConversionPause(
FveConversionResume(
FveConversionStop(
FveConversionStopEx(
FveDecrementClearKeyCounter(
FveDeleteAuthMethod(
FveDeleteDeviceEncryptionOptOutForVolumeW(
FveDisableDeviceLockoutState(
FveDiscardChanges(
FveDraCertPresentInRegistry(
FveEnableRawAccess(
FveEnableRawAccessEx(
FveEnableRawAccessW(
FveEraseDrive(
FveEraseDriveExW(
FveEscrowEncryptedRecoveryKeyForRetailUnlock(
FveFindFirstVolume(
FveFindNextVolume(
FveFlagsToProtectorType(
FveGenerateNbp(
FveGenerateNkpSessionKeys(
FveGetAllowKeyExport(
FveGetAuthMethodGuids(
FveGetAuthMethodInformation(
FveGetAuthMethodSid(
FveGetAuthMethodSidInformation(
FveGetClearKeyCounter(
FveGetDataSet(
FveGetDescriptionW(
FveGetDeviceLockoutData(
FveGetExternalKeyBlob(
FveGetFipsAllowDisabled(
FveGetFveMethod(
FveGetFveMethodEDrv(
FveGetFveMethodEx(
FveGetIdentificationFieldW(
FveGetIdentity(
FveGetKeyPackage(
FveGetSecureBootBindingState(
FveGetStatus(
FveGetStatusW(
FveGetUserFlags(
FveGetVolumeNameW(
FveInitializeDeviceEncryption(
FveInitializeDeviceEncryption2(
FveInitVolume(
FveInitVolumeEx(
FveIsAnyDataVolumeBoundToOSVolume(
FveIsBoundDataVolume(
FveIsBoundDataVolumeToOSVolume(
FveIsDeviceLockable(
FveIsDeviceLockedOut(
FveIsHardwareReadyForConversion(
FveIsHybridVolume(
FveIsHybridVolumeW(
FveIsPassphraseCompatibleW(
FveIsRecoveryPasswordGroupValidW(
FveIsRecoveryPasswordValidW(
FveIsSchemaExtInstalled(
FveIsTpmProtectorType(
FveIsVolumeEncryptable(
FveKeyManagement(
FveKeyProtTypeCertificate,
FveKeyProtTypeDpapiNg,
FveKeyProtTypeKey,
FveKeyProtTypePassPhrase,
FveKeyProtTypePassword,
FveKeyProtTypeTpm,
FveKeyProtTypeTpmAndCertificate,
FveKeyProtTypeTpmAndKey,
FveKeyProtTypeTpmAndPin,
FveKeyProtTypeTpmAndPinAndKey,
FveKeyProtTypeUnknown = 0,
FveLockDevice(
FveLockVolume(
FveLogRecoveryReason(
FveNeedsDiscoveryVolumeUpdate(
FveNotifyVolumeAfterFormat(
FveOpenVolumeByHandle(
FveOpenVolumeExW(
FveOpenVolumeW(
FvepCanPinExceptionPolicyBeApplied(
FveProtectorTypeToFlags(
FveQuery(
FveQueryDeviceEncryptionSupport(
FveRecalculateOffsetsAndMoveMetadata(
FveRegenerateNbpSessionKey(
FveResetTpmDictionaryAttackParameters(
FveRevertVolume(
FveSaveRecoveryPasswordBackupFlag(
FveServiceDiscoveryVolume(
FveSetAllowKeyExport(
FveSetDescriptionW(
FveSetFipsAllowDisabled(
FveSetFveMethod(
FveSetIdentificationFieldW(
FveSetUserFlags(
FveSysClearUserFlags(
FveSysCloseVolume(
FveSysGetUserFlags(
FveSysOpenVolumeW(
FveSysSetUserFlags(
FveUnbindAllDataVolumeFromOSVolume(
FveUnbindDataVolume(
FveUnlockVolume(
FveUnlockVolumeAuthMethodSid(
FveUnlockVolumeWithAccessMode(
FveUpdateBandIdBcd(
FveUpdateDeviceLockoutState(
FveUpdateDeviceLockoutStateEx(
FveUpdatePinW (
FveUpgradeVolume(
FveValidateDeviceLockoutState(
FveValidateExistingPassphraseW(
FveValidateExistingPinW(
FVEWIZ_INIT|
G QEf
g&:2J
g1Op\
G5[cV#
GDqL(
GetCommandLineW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetEncSChannel(
GetFileAttributesW
GetLastError
GetModuleFileNameA
GetModuleHandleW
GetProcessHeap
GetStartupInfoW
GetSystemMetrics
GetSystemTimeAsFileTime
GetSystemWindowsDirectoryW
GetTickCount
GGG;edc
GGGKX
GIDAT
GjrNo
GlobalCollection
GUID                    ChainId;
GUID    Subtype;
GUID    Type;
GUID Identifier;
H VWAVH
H!]8H
H!|$ E3
H!t$ E3
H!t$@H!t$0
h$$qB
H&4DA
h~F2;d48
h<askH
h4Y\\d8
h69rh
h6QEN
H9|$0u
HANDLE * phFveSys
HANDLE * phVolume
HANDLE *phEvent);
HANDLE *phEvent,
HANDLE FveFindHandle,
HANDLE FveHandle
HANDLE FveHandle,
HANDLE FveSys
HANDLE FveSysHandle,
HANDLE FveVolumeHandle
HANDLE FveVolumeHandle,
HANDLE Handle,
HANDLE hEvent);
HANDLE hFveVolume
HANDLE hFveVolume,
HASHALGORITHM_ENUM                      hashAlgorithm;
HASHALGORITHM_ENUM      hashAlgorithm;
HB7'a
HcA<H
HCERT_SERVER_OCSP_RESPONSE
HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse
HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,
HCERTCHAINENGINE            hChainEngine;
HCERTCHAINENGINE    hChainEngine;
HCERTCHAINENGINE hChainEngine
HCERTCHAINENGINE hChainEngine,
HCERTCHAINENGINE* phChainEngine
HCERTSTORE
HCERTSTORE                  *rgCertStore;
HCERTSTORE                  hAdditionalStore;
HCERTSTORE                  hCrlStore;
HCERTSTORE              *rghCertStore;
HCERTSTORE              *rghCtlStore;       
HCERTSTORE              *rghSignerStore;    
HCERTSTORE              hCertStore;
HCERTSTORE          *phCertStore,
HCERTSTORE          hAdditionalStore;
HCERTSTORE  *phStore
HCERTSTORE  hAdditionalStore,
HCERTSTORE  hExclusiveRoot;
HCERTSTORE  hExclusiveTrustedPeople;
HCERTSTORE  hRestrictedOther;
HCERTSTORE  hRestrictedRoot;
HCERTSTORE  hRestrictedTrust;
HCERTSTORE *rghSignerStore,
HCERTSTORE hAdditionalStore,
HCERTSTORE hCertStore
HCERTSTORE hCertStore,
HCERTSTORE hCollectionStore,
HCERTSTORE hMsgCertStore
HCERTSTORE hSiblingStore
HCERTSTORE hSiblingStore,
HCERTSTORE hStore,
HCERTSTORE* rghAdditionalStore;
HCERTSTOREPROV      hStoreProv;
HCERTSTOREPROV hStoreProv,
HCRYPTASYNC hAsync
HCRYPTASYNC hAsync,
HCRYPTASYNC hAsyncRetrieval
HCRYPTASYNC hAsyncRetrieve
HCRYPTASYNC hAsyncRetrieve,
HCRYPTDEFAULTCONTEXT *phDefaultContext
HCRYPTDEFAULTCONTEXT hDefaultContext,
HCRYPTHASH  *phHash
HCRYPTHASH  hBaseData,
HCRYPTHASH  hHash
HCRYPTHASH  hHash,
HCRYPTKEY                       hKeyEncryptionKey;
HCRYPTKEY                   hContentEncryptKey;
HCRYPTKEY                   hKeyEncryptionKey;
HCRYPTKEY   *phKey
HCRYPTKEY   *phUserKey
HCRYPTKEY   hExpKey,
HCRYPTKEY   hKey
HCRYPTKEY   hKey,
HCRYPTKEY   hPubKey,
HCRYPTKEY *phContentEncryptKey
HCRYPTKEY *phEncryptKey
HCRYPTKEY *phEncryptKey,
HCRYPTKEY *phKey
HCRYPTKEY CspKeyHandle;
HCRYPTKEY hEncryptKey,
HCRYPTKEY hLegacyKey,
HCRYPTMSG
HCRYPTMSG               hCryptMsg;
HCRYPTMSG           *phMsg,
HCRYPTMSG hCryptMsg
HCRYPTMSG hCryptMsg,
HCRYPTOIDFUNCADDR   hStoreProvFuncAddr2;
HCRYPTOIDFUNCADDR *phFuncAddr
HCRYPTOIDFUNCADDR hFuncAddr,
HCRYPTOIDFUNCSET
HCRYPTOIDFUNCSET hFuncSet,
HCRYPTPROV                      hCryptProv;
HCRYPTPROV                  *phCryptProv,
HCRYPTPROV                  hCryptProv;
HCRYPTPROV          hCryptProv;
HCRYPTPROV  *phProv,
HCRYPTPROV  hProv,
HCRYPTPROV *phCryptProv,
HCRYPTPROV *phCryptProv,                      
HCRYPTPROV CspProviderHandle;
HCRYPTPROV hCryptProv,
HCRYPTPROV hCryptProv,         
HCRYPTPROV hCryptProv,                     
HCRYPTPROV hCryptProv,                                     
HCRYPTPROV hLegacyProv,
HCRYPTPROV_LEGACY                   hCryptProv;
HCRYPTPROV_LEGACY           hCryptProv;
HCRYPTPROV_LEGACY       hCryptProv;
HCRYPTPROV_LEGACY      hProv,
HCRYPTPROV_LEGACY   hCryptProv;
HCRYPTPROV_LEGACY hCryptProv,
HCRYPTPROV_LEGACY hCryptProv,           
HCRYPTPROV_OR_NCRYPT_KEY_HANDLE *phCryptProvOrNCryptKey,
HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,
HeapAlloc
HeapFree
height = "20rp"
height = "23rp"
height = "45rp"
height = "60rp"
hfgdheVah
HHHt\\\2WWW
HKEY                hKey;
HKEY                hKeyBase;
HMODULE hModule,         
HRESULT
HRESULT LastConvertStatus; 
HRESULT NotUsed;
HRESULT SupportStatus;
HRESULT TpmStatus;    
ht-)j
http://go.microsoft.com/fwlink/?LinkID=
HWND  hwndApp;
i\=A9
I=*De
i4d8w
id = "atom(cancelbutton)"
id = "atom(changepassphrasebutton)"
id = "atom(changepassphrasedialogtitle)"
id = "atom(changepassphrasenonosdialogtitle)"
id = "atom(changepinbutton)"
id = "atom(changepindialogtitle)"
id = "atom(closebutton)"
id = "atom(confirmationtextpanel)"
id = "atom(elevationicon)"
id = "atom(errortextpanel)"
id = "atom(existingpassphraseedit)"
id = "atom(existingpinedit)"
id = "atom(mainpanel)"
id = "atom(managebitlockerlink)"
id = "atom(managebitlockerpassphraselink)"
id = "atom(newpassphraseconfirmedit)"
id = "atom(newpassphraseedit)"
id = "atom(newpinconfirmedit)"
id = "atom(newpinedit)"
id = "atom(normalbuttonpanel)"
id = "atom(passphrasechangepanel)"
id = "atom(passphraseconfirmationtextpanel)"
id = "atom(passphraseconstraintstext)"
id = "atom(passphrasehelplink)"
id = "atom(pinchangepanel)"
id = "atom(pinconstraintstext)"
id = "atom(pinerrortextpanel)"
id = "atom(pinstatustexterroricon)"
id = "atom(showpassphrasebox)"
id = "atom(statustexterroricon)"
id ="atom(asciiwarningicon)"
id ="atom(pinstatustext)"
id ="atom(pinwarningicon)"
id ="atom(statustext)"
IDATx
IdentificationField
IdentificationFieldString
IfggI
IjP_)
imageName
imageSize
InitializeCriticalSection
InitProcessPriv
InitThread
int                         iDeltaCrlIndicator;
int                 iIterations;        
int             CertIndex;
int     *rgNoticeNumbers;
int *cNumOIDs,
INT FveMethod
INT32       iExpiration;
InternalName
InvalidateRect
Iq07Y
iswalpha
iw8:z
J#,WrlU<
j."t]
j.5M\
J-?e4
J@`@:QyS
J`ossh^QJ(&/Y"Ud W
J+$9Jg
j4X^Z
j6#rR
jK{}6]
jt;mDID
JUDQ 
k,/-S.
K`vvn
k+TJ[
KBvYxs
KERNEL32.dll
KeyTypeHardware          = 6,
KeyTypeOther             = 0,
KeyTypePassport          = 3,
KeyTypePassportRemote    = 4,
KeyTypePassportSmartCard = 5,
KeyTypePhysicalSmartCard = 2,
KeyTypeSelfSigned        = 8,
KeyTypeSoftware          = 7,
KeyTypeVirtualSmartCard  = 1,
kiXw%
L$ SUVWH
L$@E3
L$0H3
L$8E3
L$XH3
layout = "borderlayout()"
layout = "rowlayout(1)"
layout = "rowlayout(2)"
layoutpos = "bottom"
layoutpos = "left"
layoutpos = "left"/>
layoutpos = "none"
layoutpos = "none">
layoutpos = "right"
layoutpos = "top"
layoutpos = "top">
LcA<E3
LeaveCriticalSection
LegalCopyright
lFMCC
lj5h6sj5
lL.m2
llWfN
lmmqxxXPR[
LMMUUUbgiii0Y&g`#:
lnnR.
LoadImageW
LoadStringW
Local\
Local\BitLockerChangePinTaskDialogMutex
LocalAlloc
LocalFree
LONG                    lChainIndex;
LONG                    lElementIndex;
LONG    lError;
LONG HighPart;
LONGLONG VolArriveTime;  
LPCGUID AuthMethodGUID
LPCGUID AuthMethodGuid
LPCGUID AuthMethodGUID
LPCGUID AuthMethodGuid,
LPCGUID Identifier,
LPCGUID pRecoveryPasswordGuid,
LPCGUID ProtectorGuid
LPCGUID pSelectionContext,
LPCSTR
LPCSTR                                  pszUsageIdentifier;
LPCSTR                      pszRevocationOid;
LPCSTR                      pszTSAPolicyId;             
LPCSTR              pszSystemStore;
LPCSTR            szCertStoreName,
LPCSTR            szSubsystemProtocol
LPCSTR          pszOID;
LPCSTR      pszHashId,
LPCSTR    pszProvName,
LPCSTR    szContainer,
LPCSTR    szDescription,
LPCSTR    szProvider,
LPCSTR  pszObjId;
LPCSTR  pszOID;
LPCSTR *ppszError
LPCSTR lpszLogoOrBiometricType,
LPCSTR lpszStoreProvider,
LPCSTR lpszStructType,
LPCSTR lpszStructType,       
LPCSTR pszCredentialsOid;
LPCSTR pszFlushTimeValidOid,
LPCSTR pszFuncName,
LPCSTR pszObjectOid,
LPCSTR pszObjId
LPCSTR pszObjId,
LPCSTR pszOID
LPCSTR pszOID,
LPCSTR pszOverrideFuncName
LPCSTR pszPolicyOID,
LPCSTR pszProvName,
LPCSTR pszPubKeyOID,
LPCSTR pszString,
LPCSTR pszTimeValidOid,
LPCSTR pszUrl,
LPCSTR pszUrlOid,
LPCSTR pszUsageIdentifier
LPCSTR pszX500,
LPCWSTR
LPCWSTR               pwszExtendedErrorInfo;    
LPCWSTR              pwszKDF,
LPCWSTR             pwszSystemStore;
LPCWSTR            szCertStoreName,
LPCWSTR            szSubsystemProtocol
LPCWSTR         pwszETag;
LPCWSTR         pwszName;
LPCWSTR         pwszOldPassword,
LPCWSTR         szDataDescr,
LPCWSTR     pwszLdapUrl;
LPCWSTR     wszUrl,
LPCWSTR    pszProvName,
LPCWSTR    szContainer,
LPCWSTR    szDescription,
LPCWSTR    szProvider,
LPCWSTR *ppszError
LPCWSTR const rgpwszValueName[],
LPCWSTR NewPin,
LPCWSTR pszAlgId,
LPCWSTR pszAlgId;
LPCWSTR pszBlobType,
LPCWSTR pszContext);
LPCWSTR pszContext,
LPCWSTR pszCreationTitle;
LPCWSTR pszDescription;
LPCWSTR pszFriendlyName;
LPCWSTR pszFunction);
LPCWSTR pszFunction,
LPCWSTR pszImplementation,
LPCWSTR pszKeyName,
LPCWSTR pszProperty,
LPCWSTR pszProvider,
LPCWSTR pszProviderName,
LPCWSTR pszProvName,
LPCWSTR pszScope,
LPCWSTR pszString,
LPCWSTR pszUrl,
LPCWSTR pszX500,
LPCWSTR pwszCNGHashAlgid,
LPCWSTR pwszCNGPubKeyAlgid,    
LPCWSTR pwszComputerName,
LPCWSTR pwszCryptName
LPCWSTR pwszDll
LPCWSTR pwszDll,
LPCWSTR pwszFileName
LPCWSTR pwszPurpose,     
LPCWSTR pwszStoreLocation,
LPCWSTR pwszStoreName
LPCWSTR pwszStoreName,
LPCWSTR pwszValueName,
LPCWSTR szPassword,
LPCWSTR szPrompt;
LPFILETIME                          pftCacheResync;
LPFILETIME                  pftCacheResync;
LPFILETIME                  pftCurrentTime;
LPFILETIME                  pftTimeToUse;
LPFILETIME                  pLastSyncTime;
LPFILETIME                  pMaxAgeTime;
LPFILETIME pftValidFor,
LPFILETIME pTime,
LPFILETIME pTimeStamp,
LPFILETIME pTimeToVerify,
LPGUID AuthMethodGuid
LPGUID AuthMethodGuidArray,
LPGUID AuthMethodGuids,
LPGUID GUIDProtector
LPGUID IdentityGuid
LPGUID ProtectorGuid
LPGUID UnlockGUID
LPSTR                               pszOID;
LPSTR                           pszPrivateKeyObjId;
LPSTR                       pszIssuerDomainPolicy;      
LPSTR                       pszObjId;
LPSTR                       pszObjId;   
LPSTR                       pszPolicyIdentifier;    
LPSTR                       pszPolicyQualifierId;   
LPSTR                       pszRegisteredID;    
LPSTR                       pszSubjectDomainPolicy;     
LPSTR                       pszTSAPolicyId;
LPSTR                       pszTSAPolicyId;         
LPSTR                       szCurveOid; 
LPSTR                   *rgpszCertPolicyElementId;  
LPSTR                   pszContentType;          
LPSTR                   pszObjId;
LPSTR                   pszTimeStampAlgorithm;   
LPSTR               *rgpszOID;
LPSTR               *rgpszUsageIdentifier;      
LPSTR               pszAccessMethod;        
LPSTR               pszContentEncryptionObjId;
LPSTR               pszObjId;
LPSTR               pszOpenStoreProvider;   
LPSTR               pszStatementId;     
LPSTR               rgpszHpkpValue[2];
LPSTR           pszContentEncObjId; 
LPSTR       pszNoticeIdentifier;        
LPSTR       pszNSINoticeIdentifier;     
LPSTR   pszOrganization;
LPSTR   pszPassword;
LPSTR   pszUsername;
LPSTR *rghOIDs,
LPSTR psz,
LPSTR pszInnerContentObjID,
LPSTR pszNameString,
LPSTR pszObjectOid,
LPSTR pszParamOid,
LPSTR pszPrivateKeyObjId,      
LPSTR pszPrivateKeyObjId,                                  
LPSTR pszProvName,
LPSTR pszPublicKeyObjId,
LPSTR pszString,
LPSTR szProvName,
LPSTR szTypeName,
LPVOID
LPVOID                          pVoidDecryptFunc;
LPVOID                          pVoidEncryptFunc;
LPVOID                          pVoidResolveFunc;       
LPVOID                      pVoidResolveFunc);
LPVOID                      pvOidSpecificInfo;
LPVOID          pDataIn,             
LPVOID pContext,
LPVOID pPluginContext);
LPVOID pPluginContext,
LPVOID pv
LPVOID pv,
LPVOID pvCompletion,
LPVOID pvCompletion;
LPVOID pvCredentials;
LPVOID pvFreeContext
LPVOID pvObject
LPVOID pVoidDecryptFunc);
LPVOID pVoidEncryptFunc);
LPVOID pvPara,
LPVOID pvParam
LPVOID pvParam,
LPVOID pvReserved
LPVOID pvReserved,
LPVOID pvVerify,
LPVOID* ppvObject,
LPVOID* ppvParam,
LPWSTR
LPWSTR                                  pszDisplayText;     
LPWSTR                              *ppwszErrorResponseHeaders;
LPWSTR                              pwszCacheFileNamePrefix;
LPWSTR                      pszURL;
LPWSTR                      pwszDNSName;        
LPWSTR                      pwszFamily;             
LPWSTR                      pwszLanguage;   
LPWSTR                      pwszMimeType;   
LPWSTR                      pwszRfc822Name;     
LPWSTR                      pwszStatusString;   
LPWSTR                      pwszUrl;    
LPWSTR                      pwszURL;            
LPWSTR                  pwszChallengeString;        
LPWSTR                  pwszCNGPubKeyMinBitLengths; 
LPWSTR                  pwszCNGSignHashAlgids;
LPWSTR                  pwszContainerName;
LPWSTR                  pwszProvName;
LPWSTR              pwszRegPath;
LPWSTR              pwszServerName;
LPWSTR              pwszStoreDirectory;
LPWSTR          pwszProviderName;
LPWSTR      pszPracticesReference;      
LPWSTR      pwszName;
LPWSTR      pwszValue;
LPWSTR  *pEccCurveNames;
LPWSTR  pszAlgid;
LPWSTR  pszComment;
LPWSTR  pszName;
LPWSTR  pszPassword;
LPWSTR  pszProviderName;
LPWSTR  pszUsername;
LPWSTR *ppwszCNGHashAlgid      
LPWSTR *ppwszMimeType         
LPWSTR eDriveMethod,
LPWSTR psz,
LPWSTR pszNameString,
LPWSTR pszProvName,
LPWSTR pszString,
LPWSTR pwszPbes2Alg; 
LPWSTR szProvName,
LPWSTR szTypeName,
LPWSTR VolumeName
LPWSTR*                     rgFreeText;
LPWSTR*     ppszDataDescr,       
LPWSTR* rgwszUrl;
'lrU]
m:mo7
malloc
managebitlockerlink
managebitlockerpassphraselink
margin = "rect(0rp,0rp,0rp,0rp)"/>
margin = "rect(0rp,0rp,0rp,0rp)">
margin = "rect(0rp,0rp,0rp,11rp)"
margin = "rect(0rp,0rp,0rp,11rp)"/>
margin = "rect(0rp,0rp,0rp,11rp)">
margin = "rect(7rp,0rp,0rp,0rp)"
margin = "rect(7rp,0rp,0rp,0rp)"/>
margin = "rect(7rp,0rp,0rp,11rp)"
maxlength = "20"
maxlength = "256"
memcpy
memmove
memset
Mi4Z<
Microsoft
Microsoft Corporation
Microsoft.Windows.Security.BitLocker.BcdUpdate
Microsoft.Windows.Security.BitLocker.EncryptionDelay
MinimumPIN
minsize = "size(150rp, 0rp)"
minsize = "size(75rp, 23rp)"
ml,nPh]
mmmhj
ModuleCollection
mOYk=C
mrymD2B6BFGig6  
msvcrt.dll
multiline = "false"
n<FJjmJ1#
ncalrpc
NCRYPT_EXPORTED_ISOLATED_KEY_HEADER Header;
NCRYPT_HANDLE hObject);
NCRYPT_HANDLE hObject,
NCRYPT_KEY_HANDLE           hNCryptKey;
NCRYPT_KEY_HANDLE   hAuthorityKey,
NCRYPT_KEY_HANDLE   hKey,
NCRYPT_KEY_HANDLE   hNCryptKey;
NCRYPT_KEY_HANDLE   hSubjectKey,
NCRYPT_KEY_HANDLE *phKey,
NCRYPT_KEY_HANDLE hExportKey,
NCRYPT_KEY_HANDLE hImportKey,
NCRYPT_KEY_HANDLE hKey);
NCRYPT_KEY_HANDLE hKey,
NCRYPT_KEY_HANDLE hNCryptKey,
NCRYPT_KEY_HANDLE hPrivKey,
NCRYPT_KEY_HANDLE hPubKey,
NCRYPT_KEY_HANDLE KspKeyHandle;
NCRYPT_PROV_HANDLE *phProvider,
NCRYPT_PROV_HANDLE hProvider,
NCRYPT_SECRET_HANDLE *phAgreedSecret,
NCRYPT_SECRET_HANDLE hSharedSecret,
NCryptAlgorithmName **ppAlgList,
NCryptBufferDesc     *pParameterList,
NCryptBufferDesc    *pOutput,
NCryptBufferDesc    *pParameterList,
NCryptBufferDesc *pParameterList,
NCryptCreateClaim(
NCryptCreatePersistedKey(
NCryptDecrypt(
NCryptDeleteKey(
NCryptDeriveKey(
NCryptEncrypt(
NCryptEnumAlgorithms(
NCryptEnumKeys(
NCryptEnumStorageProviders(
NCryptExportKey(
NCryptFinalizeKey(
NCryptFreeBuffer(
NCryptFreeObject(
NCryptGetProperty(
NCryptImportKey(
NCryptIsAlgSupported(
NCryptIsKeyHandle(
NCryptKeyDerivation(
NCryptKeyName **ppKeyName,
NCryptNotifyChangeKey(
NCryptOpenKey(
NCryptOpenStorageProvider(
NCryptProviderName **ppProviderList,
NCryptSecretAgreement(
NCryptSetProperty(
NCryptSignHash(
NCryptTranslateHandle(
NCryptVerifyClaim(
NCryptVerifySignature(
NdrClientCall3
newpassphraseconfirmedit
newpassphraseedit
newpinconfirmedit
newpinedit
NGlmm
NMMGwtt
nqrrB
NTAPI
ntdll.dll
NTSTATUS
NTSTATUS __stdcall
NTSYSAPI
nXPX`v
N'zMU%,
O3{h:
OCSP_CERT_ID                CertId;
OCSP_SIGNATURE_INFO         SignatureInfo;
ole32.dll
OOO+a
Oox6_8
OriginalFilename
OSActiveDirectoryBackup
OSActiveDirectoryInfoToStore
OSAllowedHardwareEncryptionAlgorithms
OSAllowSecureBootForIntegrity
OSAllowSoftwareEncryptionFailover
OSAllowUserCert
OSBcdAdditionalExcludedSettings
OSBcdAdditionalSecurityCriticalSettings
OSEnablePrebootInputProtectorsOnSlates
OSEnablePreBootPinExceptionOnDECapableDevice
OSEncryptionType
OSEnforceUserCert
OSHardwareEncryption
OSHideRecoveryPage
OSManageDRA
OSPassphrase
OSPassphraseASCIIOnly
OSPassphraseComplexity
OSPassphraseLength
OSRecovery
OSRecoveryKey
OSRecoveryPassword
OSRequireActiveDirectoryBackup
OSRestrictHardwareEncryptionAlgorithms
OSUseEnhancedBcdProfile
p AWH
P(0>>N
p]brT
P_[]H
padding = "rect(0rp,11rp,11rp,11rp)"/>
padding = "rect(0rp,11rp,7rp,11rp)"/>
padding = "rect(23rp,0rp,0rp,0rp)"/>
padding = "rect(28rp,11rp,11rp,11rp)">
passphrasechangepanel
passphraseconfirmationtextpanel
passphraseconstraintstext
PassphraseEdit
passphrasehelplink
passwordcharacter = "9679"
PBCryptBuffer pBuffers;       
PBOOL ExistingPassphraseValidates,
PBOOL ExistingPinValidates,
PBOOL IsAutoUnlockEnabled,
PBOOL IsHybrid
PBOOL NeedsUpdate
PBOOL ptCertPresent
PBOOL ptStandardUsersCanChangePassphraseByProxy
PBOOL ptStandardUsersCanChangePin
PBOOL ReadOnly
PBOOL Result
PBOOL SchemExtInstalled
PBYTE *ppbContent,
PBYTE *ppbEncryptParameters,
PBYTE Blob;         
PBYTE Buffer,
PBYTE InputBuffer,
PBYTE OutputBuffer,
PBYTE pbClaimBlob,
PBYTE pbCountersignature,
PBYTE pbData
PBYTE pbData,
PBYTE pbDerivedKey,
PBYTE pbEncodedKey,
PBYTE pbHashValue,
PBYTE pbInput,
PBYTE pbOutput,
PBYTE pbSignature,
PBYTE pbSignerInfo,
PBYTE pbSignerInfoCountersignature,
PBYTE PerUserData,
PBYTE* Buffer,
PCCERT_CHAIN_CONTEXT
PCCERT_CHAIN_CONTEXT pChainContext
PCCERT_CHAIN_CONTEXT pChainContext,
PCCERT_CHAIN_CONTEXT pCrlIssuerChain;
PCCERT_CHAIN_CONTEXT pPrevChainContext
PCCERT_CHAIN_CONTEXT pSignerChainContext,
PCCERT_CHAIN_CONTEXT*   rgpLowerQualityChainContext;
PCCERT_CHAIN_CONTEXT* ppChainContext
PCCERT_CHAIN_CONTEXT* prgpSelection
PCCERT_CHAIN_CONTEXT** pprgpSelection
PCCERT_CONTEXT
PCCERT_CONTEXT              *rgpMsgCert;
PCCERT_CONTEXT              pIssuerCert;
PCCERT_CONTEXT              pSigningCert;
PCCERT_CONTEXT              pSubjectCert;
PCCERT_CONTEXT          *ppSigner;          
PCCERT_CONTEXT          pCertContext;
PCCERT_CONTEXT        pCertContext;
PCCERT_CONTEXT *ppCertContext
PCCERT_CONTEXT *ppProvCertContext
PCCERT_CONTEXT *ppSigner,
PCCERT_CONTEXT *ppSignerCert
PCCERT_CONTEXT *ppStoreContext
PCCERT_CONTEXT *ppTsSigner,
PCCERT_CONTEXT *ppXchgCert
PCCERT_CONTEXT *ppXchgCert,
PCCERT_CONTEXT *rghCerts,
PCCERT_CONTEXT pCert,
PCCERT_CONTEXT pCertContext
PCCERT_CONTEXT pCertContext,
PCCERT_CONTEXT pIssuer,
PCCERT_CONTEXT pIssuerContext,
PCCERT_CONTEXT pPrevCertContext
PCCERT_CONTEXT pPrevCertContext,
PCCERT_CONTEXT pPrevIssuerContext,
PCCERT_CONTEXT pSigningCert
PCCERT_CONTEXT pStoreCertContext,
PCCERT_CONTEXT pSubject,
PCCERT_CONTEXT pSubjectContext,
PCCERT_CONTEXT rgpRecipientCert[],
PCCERT_SELECT_CHAIN_PARA pChainParameters,
PCCERT_SELECT_CRITERIA rgpCriteria,
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext,
PCCERT_STORE_PROV_FIND_INFO pFindInfo,
PCCERT_STRONG_SIGN_PARA pStrongSignPara,
PCCRL_CONTEXT
PCCRL_CONTEXT               *rgpMsgCrl;
PCCRL_CONTEXT           pBaseCrlContext;
PCCRL_CONTEXT           pCrlContext;
PCCRL_CONTEXT           pDeltaCrlContext;
PCCRL_CONTEXT        pCrlContext;
PCCRL_CONTEXT *ppCrlContext
PCCRL_CONTEXT *ppProvCrlContext
PCCRL_CONTEXT *ppStoreContext
PCCRL_CONTEXT pCrl,
PCCRL_CONTEXT pCrlContext
PCCRL_CONTEXT pCrlContext,
PCCRL_CONTEXT pNewCrlContext,
PCCRL_CONTEXT pPrevCrlContext
PCCRL_CONTEXT pPrevCrlContext,
PCCRL_CONTEXT pStoreCrlContext,
PCCRYPT_OID_INFO
PCCRYPT_OID_INFO pInfo
PCCRYPT_OID_INFO pInfo,
PCCTL_CONTEXT
PCCTL_CONTEXT           *ppCtl;             
PCCTL_CONTEXT *ppCtlContext
PCCTL_CONTEXT *ppProvCtlContext
PCCTL_CONTEXT *ppStoreContext
PCCTL_CONTEXT pCtlContext
PCCTL_CONTEXT pCtlContext,
PCCTL_CONTEXT pCtlContext;
PCCTL_CONTEXT pPrevCtlContext
PCCTL_CONTEXT pPrevCtlContext,
PCCTL_CONTEXT pStoreCtlContext,
PCERT_ACCESS_DESCRIPTION    rgAccDescr;
PCERT_ALT_NAME_ENTRY        pRequestorName;     
PCERT_ALT_NAME_ENTRY    rgAltEntry;
PCERT_ALT_NAME_INFO     rgDistPoint;
PCERT_BIOMETRIC_DATA        rgBiometricData;
PCERT_BLOB                  rgCertEncoded;
PCERT_BLOB              certs;      
PCERT_CHAIN pCertChains,
PCERT_CHAIN_ELEMENT*  rgpElement;
PCERT_CHAIN_ENGINE_CONFIG pConfig,
PCERT_CHAIN_PARA    pChainPara;
PCERT_CHAIN_PARA pChainPara,
PCERT_CHAIN_POLICY_PARA pPolicyPara,
PCERT_CHAIN_POLICY_STATUS pPolicyStatus
PCERT_CREATE_CONTEXT_PARA pCreatePara
PCERT_ENHKEY_USAGE    pApplicationUsage;    
PCERT_ENHKEY_USAGE    pIssuanceUsage;       
PCERT_ENHKEY_USAGE pUsage
PCERT_ENHKEY_USAGE pUsage,
PCERT_EXTENSION
PCERT_EXTENSION             rgExtension;
PCERT_EXTENSION             rgExtension;        
PCERT_EXTENSION             rgExtension;            
PCERT_EXTENSION             rgExtension;                
PCERT_EXTENSION     rgExtension;
PCERT_EXTENSION rgExtension;
PCERT_EXTENSIONS            pExtensions
PCERT_GENERAL_SUBTREE   rgExcludedSubtree;
PCERT_GENERAL_SUBTREE   rgPermittedSubtree;
PCERT_HASHED_URL            rgHashedUrl;
PCERT_ID                    pSenderId;
PCERT_INFO                  *rgpRecipients;
PCERT_INFO                  pCertInfo;
PCERT_INFO              pCertInfo;
PCERT_INFO          pSigner;        
PCERT_INFO pCertId           
PCERT_INFO pCertId,          
PCERT_INFO pCertId1,
PCERT_INFO pCertId2
PCERT_INFO pCertInfo
PCERT_INFO pCertInfo,
PCERT_INFO pciCountersigner
PCERT_INFO pIssuerInfo
PCERT_INFO pRecipientInfo,
PCERT_INFO pSignerId,    
PCERT_INFO pSubjectInfo,
PCERT_LOGOTYPE_AUDIO        rgLogotypeAudio;
PCERT_LOGOTYPE_AUDIO_INFO   pLogotypeAudioInfo; 
PCERT_LOGOTYPE_DATA         pLogotypeDirectInfo;
PCERT_LOGOTYPE_IMAGE        rgLogotypeImage;
PCERT_LOGOTYPE_IMAGE_INFO   pLogotypeImageInfo; 
PCERT_LOGOTYPE_INFO         pIssuerLogo;        
PCERT_LOGOTYPE_INFO         pSubjectLogo;       
PCERT_LOGOTYPE_INFO         rgCommunityLogo;
PCERT_LOGOTYPE_REFERENCE    pLogotypeIndirectInfo;
PCERT_NAME_BLOB             pSubjectIssuerBlob,
PCERT_NAME_BLOB *rgIdentifierOrNameList,
PCERT_NAME_BLOB pCertName,
PCERT_NAME_BLOB pCertName1,
PCERT_NAME_BLOB pCertName2
PCERT_NAME_BLOB pName,
PCERT_NAME_BLOB pNameBlob,
PCERT_NAME_INFO pName
PCERT_OR_CRL_BLOB       rgItem;
PCERT_OTHER_LOGOTYPE_INFO   rgOtherLogo;
PCERT_OTHER_NAME            pOtherName;         
PCERT_PHYSICAL_STORE_INFO pStoreInfo,
PCERT_POLICY_ID         rgCertPolicyId;
PCERT_POLICY_MAPPING        rgPolicyMapping;
PCERT_PRIVATE_KEY_VALIDITY  pPrivateKeyUsagePeriod;     
PCERT_PUBLIC_KEY_INFO pInfo,
PCERT_PUBLIC_KEY_INFO pPubKeyInfo,
PCERT_PUBLIC_KEY_INFO pPublicKey
PCERT_PUBLIC_KEY_INFO pPublicKey1,
PCERT_PUBLIC_KEY_INFO pPublicKey2
PCERT_PUBLIC_KEY_INFO pPublicKeyInfo,
PCERT_QC_STATEMENT      rgStatement;
PCERT_RDN   rgRDN;
PCERT_RDN pRDN
PCERT_RDN_ATTR
PCERT_RDN_ATTR  rgRDNAttr;
PCERT_RDN_VALUE_BLOB pValue,
PCERT_REVOCATION_CHAIN_PARA pChainPara;
PCERT_REVOCATION_CRL_INFO   pCrlInfo;
PCERT_REVOCATION_INFO pRevocationInfo;
PCERT_REVOCATION_PARA pRevPara,
PCERT_REVOCATION_STATUS pRevStatus
PCERT_SERVER_OCSP_RESPONSE_OPEN_PARA pOpenPara
PCERT_SIMPLE_CHAIN*     rgpChain;
PCERT_STORE_PROV_INFO pStoreProvInfo
PCERT_STRONG_SIGN_SERIALIZED_INFO   pSerializedInfo;
PCERT_SYSTEM_STORE_INFO pStoreInfo,
PCERT_TRUST_LIST_INFO pTrustListInfo;
PCERT_X942_DH_VALIDATION_PARAMS pValidationParams;  
PCFVE_AUTH_ELEMENT AuthElement,
PCFVE_AUTH_ELEMENT pRecoveryPassword
PCFVE_AUTH_INFORMATION Information
PCFVE_AUTH_INFORMATION Information,
PCMC_PEND_INFO              pPendInfo;
PCMC_TAGGED_ATTRIBUTE       rgTaggedAttribute;
PCMC_TAGGED_CERT_REQUEST   pTaggedCertRequest;
PCMC_TAGGED_CONTENT_INFO    rgTaggedContentInfo;
PCMC_TAGGED_OTHER_MSG       rgTaggedOtherMsg;
PCMC_TAGGED_REQUEST         rgTaggedRequest;
PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo,
PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo,
PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA pKeyAgreeDecryptPara,
PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA pKeyTransDecryptPara,
PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA pMailListDecryptPara,
PCMSG_KEY_AGREE_ENCRYPT_INFO pKeyAgreeEncryptInfo,
PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO *rgpKeyAgreeKeyEncryptInfo;
PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO   pKeyAgree;
PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgreeEncodeInfo,
PCMSG_KEY_AGREE_RECIPIENT_INFO   pKeyAgree;
PCMSG_KEY_AGREE_RECIPIENT_INFO  pKeyAgree;
PCMSG_KEY_TRANS_ENCRYPT_INFO pKeyTransEncryptInfo,
PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO   pKeyTrans;
PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTransEncodeInfo,
PCMSG_KEY_TRANS_RECIPIENT_INFO   pKeyTrans;
PCMSG_KEY_TRANS_RECIPIENT_INFO  pKeyTrans;
PCMSG_MAIL_LIST_ENCRYPT_INFO pMailListEncryptInfo,
PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO   pMailList;
PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailListEncodeInfo,
PCMSG_MAIL_LIST_RECIPIENT_INFO   pMailList;
PCMSG_MAIL_LIST_RECIPIENT_INFO  pMailList;
PCMSG_RECIPIENT_ENCODE_INFO rgCmsRecipients;
PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO   *rgpRecipientEncryptedKeys;
PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO   *rgpRecipientEncryptedKeys;
PCMSG_SIGNED_ENCODE_INFO pSignInfo,
PCMSG_SIGNER_ENCODE_INFO    rgSigners;
PCMSG_SIGNER_ENCODE_INFO rgCountersigners
PCMSG_SIGNER_ENCODE_INFO rgCountersigners,
PCMSG_SIGNER_INFO   pSignerInfo;                
PCMSG_STREAM_INFO pStreamInfo
PCRL_BLOB                   rgCrlEncoded;
PCRL_DIST_POINT         rgDistPoint;
PCRL_ENTRY                  rgCRLEntry;
PCRL_ENTRY              pCrlEntry;
PCRL_ENTRY           pCrlEntry;
PCRL_ENTRY *ppCrlEntry
PCRL_INFO               pCrlInfo;
PCRL_INFO pCrlInfo
PCRL_INFO rgpCrlInfo[]
PCRYPT_ALGORITHM_IDENTIFIER paiEncrypt,
PCRYPT_ALGORITHM_IDENTIFIER paiPubKey,
PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm,
PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,
PCRYPT_ATTR_BLOB    rgValue;
PCRYPT_ATTRIBUTE
PCRYPT_ATTRIBUTE            rgAttribute;
PCRYPT_ATTRIBUTE            rgAuthAttr;
PCRYPT_ATTRIBUTE            rgUnauthAttr;
PCRYPT_ATTRIBUTE        rgAttribute;
PCRYPT_ATTRIBUTE     rgAttr;
PCRYPT_ATTRIBUTE    rgAttribute;                
PCRYPT_ATTRIBUTE rgOptAttr,
PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
PCRYPT_ATTRIBUTES           pAttributes;
PCRYPT_BLOB_ARRAY pObject,
PCRYPT_CONTEXT_CONFIG *ppBuffer);
PCRYPT_CONTEXT_CONFIG pConfig);
PCRYPT_CONTEXT_CONFIG pConfig); 
PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer);
PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig);
PCRYPT_CONTEXT_FUNCTION_PROVIDERS *ppBuffer);
PCRYPT_CONTEXT_FUNCTIONS *ppBuffer);
PCRYPT_CONTEXTS *ppBuffer);
PCRYPT_CREDENTIALS pCredentials,
PCRYPT_DATA_BLOB                    *ppErrorContentBlob;
PCRYPT_DATA_BLOB *ppIdentifier);
PCRYPT_DATA_BLOB pIdentifier);
PCRYPT_DATA_BLOB pIdentifier,
PCRYPT_DATA_BLOB pSubjectIdentifier,
PCRYPT_DATA_BLOB rgBlob;
PCRYPT_DECODE_PARA pDecodePara,
PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara,
PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc;
PCRYPT_DER_BLOB     rgValue;
PCRYPT_DER_BLOB pEncodedAttributes
PCRYPT_DER_BLOB pSubjectIdentifier,
PCRYPT_ENCODE_PARA pEncodePara,
PCRYPT_ENCRYPT_MESSAGE_PARA pEncryptPara,
PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC pEncryptPrivateKeyFunc;
PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo
PCRYPT_HASH_MESSAGE_PARA pHashPara,
PCRYPT_IMAGE_REF pKM;
PCRYPT_IMAGE_REF pUM;
PCRYPT_IMAGE_REG pKM;
PCRYPT_IMAGE_REG pUM;
PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
PCRYPT_INTEGER_BLOB pInt1,
PCRYPT_INTEGER_BLOB pInt2
PCRYPT_INTERFACE_REG *rgpInterfaces;
PCRYPT_KEY_PROV_INFO        pKeyProvInfo,
PCRYPT_KEY_PROV_PARAM   rgProvParam;
PCRYPT_KEY_SIGN_MESSAGE_PARA pSignPara,
PCRYPT_KEY_VERIFY_MESSAGE_PARA pVerifyPara,
PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE *ppFuncTable,
PCRYPT_PROPERTY_REF *rgpProperties;
PCRYPT_PROVIDER_REF *rgpProviders;
PCRYPT_PROVIDER_REFS *ppBuffer);
PCRYPT_PROVIDER_REG *ppBuffer);
PCRYPT_PROVIDERS *ppBuffer);
PCRYPT_RESOLVE_HCRYPTPROV_FUNC  pResolvehCryptProvFunc; 
PCRYPT_RETRIEVE_AUX_INFO pAuxInfo
PCRYPT_SIGN_MESSAGE_PARA pSignPara,
PCRYPT_SMIME_CAPABILITY rgCapability;
PCRYPT_TIMESTAMP_ACCURACY   pvAccuracy;                 
PCRYPT_TIMESTAMP_CONTEXT   *ppTsContext,
PCRYPT_TIMESTAMP_CONTEXT *ppTsContext,
PCRYPT_TIMESTAMP_INFO       pTimeStamp;
PCRYPT_URL_ARRAY pUrlArray,
PCRYPT_URL_INFO pUrlInfo,
PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara,
PCRYPTNET_URL_CACHE_FLUSH_INFO      pFlushInfo;
PCRYPTNET_URL_CACHE_PRE_FETCH_INFO  pPreFetchInfo;
PCRYPTNET_URL_CACHE_RESPONSE_INFO   *ppResponseInfo;
PCTL_ENTRY
PCTL_ENTRY                  rgCTLEntry;         
PCTL_ENTRY    pCtlEntry;
PCTL_ENTRY pCtlEntry,
PCTL_FIND_USAGE_PARA    pUsagePara; 
PCTL_INFO               pCtlInfo;
PCTL_INFO pCtlInfo,
PCTL_USAGE pSubjectUsage,
PCTL_VERIFY_USAGE_PARA pVerifyUsagePara,
PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus
PCWSTR   Path
PCWSTR   VolumeName,
PCWSTR  *rgpwszCNGHashAlgid;
PCWSTR  pwszServerName;
PCWSTR *ppwszPassword,
PCWSTR ApplicationPath,
PCWSTR Description;
PCWSTR DiscoveryVolumeType
PCWSTR ExistingPassphrase,
PCWSTR ExistingPin,
PCWSTR FriendlyName,
PCWSTR IdentificationField
PCWSTR KeyFullFilePath,
PCWSTR Passphrase
PCWSTR Passphrase,
PCWSTR PassPhrase,
PCWSTR Passphrase,
PCWSTR PassphraseGroup,
PCWSTR pcwszDiscoveryVolumeType,
PCWSTR Pin,
PCWSTR pwszPassword
PCWSTR VolumeDescription
PCWSTR VolumeName,
PCWSTR VolumePath
PDWORD pcbCountersignature
PDWORD pcbData
PDWORD pcbEncryptParameters
PDWORD pcSelection,
Pe|Dar$
PFILETIME           pTime;
PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
PFN_CERT_CREATE_CONTEXT_SORT_FUNC   pfnSort;    
PFN_CERT_ENUM_PHYSICAL_STORE pfnEnum
PFN_CERT_ENUM_SYSTEM_STORE pfnEnum
PFN_CERT_ENUM_SYSTEM_STORE_LOCATION pfnEnum
PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK   pfnUpdateCallback;
PFN_CMSG_ALLOC              pfnAlloc;
PFN_CMSG_ALLOC pfnAlloc,
PFN_CMSG_FREE               pfnFree;
PFN_CMSG_STREAM_OUTPUT  pfnStreamOutput;
PFN_CRYPT_ALLOC         pfnAlloc;           
PFN_CRYPT_ASYNC_PARAM_FREE_FUNC pfnFree
PFN_CRYPT_ASYNC_PARAM_FREE_FUNC* ppfnFree
PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC pfnCompletion;
PFN_CRYPT_CANCEL_RETRIEVAL pfnCancel,
PFN_CRYPT_ENUM_KEYID_PROP pfnEnum
PFN_CRYPT_ENUM_OID_FUNC pfnEnumOIDFunc
PFN_CRYPT_ENUM_OID_INFO pfnEnumOIDInfo
PFN_CRYPT_FREE                      pfnFree;    
PFN_CRYPT_FREE          pfnFree;            
PFN_CRYPT_GET_SIGNER_CERTIFICATE    pfnGetSignerCertificate;
PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH pfnFlush,
PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE pfnFree;
PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER pfnFreeIdentifier;
PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD pfnFreePassword;
PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET pfnGet;
PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE pfnRelease;
PFN_NCRYPT_ALLOC        pfnAlloc;
PFN_NCRYPT_FREE         pfnFree;
PFVE_AUTH_ELEMENT * Elements;
PFVE_AUTH_ELEMENT AuthElement
PFVE_AUTH_INFORMATION Information,
PFVE_DE_SUPPORT DeviceEncryptionSupport
PFVE_FIND_DATA_V1 FindData
PFVE_PROTECTOR_TYPE ProtectorType
PFVE_SECUREBOOT_BINDING_STATE SecureBootBindingState
PFVE_STATUS_V7 Status
PFVE_TPM_CAPS Capability
PFXExportCertStore(
PFXExportCertStoreEx(
PFXImportCertStore(
PFXIsPFXBlob(
PFXVerifyPassword(
PHANDLE FveFindHandle,
PHCRYPTASYNC phAsync
pinchangepanel
pinconstraintstext
pinerrortextpanel
pinstatustext
pinstatustexterroricon
PINT FveMethod
PINT FveMethod,
pinwarningicon
PMM-\.
P-oc&s
POCSP_BASIC_RESPONSE_ENTRY  rgResponseEntry;
POCSP_BASIC_REVOKED_INFO    pRevokedInfo;
POCSP_REQUEST_ENTRY         rgRequestEntry;
POCSP_SIGNATURE_INFO        pOptionalSignatureInfo; 
Policies\Microsoft\FVE
Policies\Microsoft\FVE\OSPlatformValidation_BIOS
Policies\Microsoft\FVE\OSPlatformValidation_UEFI
Policies\Microsoft\FVE\PlatformValidation
PostMessageW
PreferCspUsage
ProductName
ProductVersion
ProtectorType == FveKeyProtTypeTpmAndCertificate;
ProtectorType == FveKeyProtTypeTpmAndKey ||
ProtectorType == FveKeyProtTypeTpmAndPin ||
ProtectorType == FveKeyProtTypeTpmAndPinAndKey ||
PsHT$
PSID            pOldSid,
PSID Sid,
PSYSTEMTIME                 pEndTime,
PSYSTEMTIME                 pStartTime,
PUCHAR                          pbBuffer;       
PUCHAR              pbDerivedKey,
PUCHAR              pbInput,
PUCHAR              pbOutput,
PUCHAR              pbPassword,
PUCHAR              pbSalt,
PUCHAR              pbSecret,   
PUCHAR      pbAuthData;
PUCHAR      pbIV;
PUCHAR      pbMacContext;
PUCHAR      pbNonce;
PUCHAR      pbOtherInfo;
PUCHAR      pbTag;
PUCHAR   pbHash,
PUCHAR   pbHashObject,
PUCHAR   pbInput,
PUCHAR   pbIV,
PUCHAR   pbKeyObject,
PUCHAR   pbLabel;
PUCHAR   pbOutput,
PUCHAR   pbSecret,
PUCHAR   pbSecret,   
PUCHAR   pbSignature,
PUCHAR  pbBuffer,
PUCHAR  pbKeyAuth;
PUCHAR  pbKeyBlob;
PUCHAR  pbOID;
PUCHAR *ppbValue);
PUCHAR Buffer,
PUCHAR DataSetBuffer,
PUCHAR pbDerivedKey,
PUCHAR pbValue);
PUCHAR pbValue;
PUINT NumGuids
PULONG AuthMethodCount
PULONG ClearKeyCounter
PULONG Count
PULONG FlagsOut
PULONG FveMethodFlags
PULONG SidBufferSize
PULONG TypeFlags
PULONG UserFlags
PULONG VolumeNameBufferCchLen,
PUSHORT Flags,
PVOID                                           pvUpdateCallbackArg;
PVOID           pvReserved,
PVOID   pvBuffer);
PVOID   pvBuffer;             
PVOID   pvInput);
PVOID * ppEnumState,
PVOID hNcryptDescriptor;
PVOID pvArg,
PVOID pvEncryptAuxInfo,
PVOID rgpvContext[],
PWSTR                                           pwszOcspDirectory;
PWSTR *rgpszAliases;
PWSTR *rgpszContexts;
PWSTR *rgpszFunctions;
PWSTR *rgpszProviders;
PWSTR IdentificationField,
PWSTR KeyFileName,
PWSTR Passphrase,
PWSTR pszFunction;
PWSTR pszImage;
PWSTR pszProperty;
PWSTR pszProvider;
PWSTR VolumeDescription,
q@SU\
qKMKT`j
qln=j
qq]]Eg
QueryPerformanceCounter
qx4`2
r*.,51c
r~uuU
R+<`f<
r6?@0
r9TUUa
rCG`\n
RDVActiveDirectoryBackup
RDVActiveDirectoryInfoToStore
RDVAllowBDE
RDVAllowedHardwareEncryptionAlgorithms
RDVAllowSoftwareEncryptionFailover
RDVAllowUserCert
RDVConfigureBDE
RDVDenyCrossOrg
RDVDenyWriteAccess
RDVDisableBDE
RDVDiscoveryVolumeType
RDVEncryptionType
RDVEnforcePassphrase
RDVEnforceUserCert
RDVHardwareEncryption
RDVHideRecoveryPage
RDVManageDRA
RDVNoBitLockerToGoReader
RDVPassphrase
RDVPassphraseComplexity
RDVPassphraseLength
RDVRecovery
RDVRecoveryKey
RDVRecoveryPassword
RDVRequireActiveDirectoryBackup
RDVRestrictHardwareEncryptionAlgorithms
RecoveryKeyMessage
RecoveryKeyMessageSource
RecoveryKeyURL
RegCloseKey
RegGetValueW
RegLoadKeyW
RegOpenKeyExW
RegUnLoadKeyW
ReleaseSRWLockExclusive
resid = "main"
return ProtectorType == FveKeyProtTypeTpm ||
rhnn.
RichN
riKc$*
RJVWW
ROOT_INFO_LUID      luid;
RpcBindingFree
RpcBindingFromStringBindingW
RpcBindingSetAuthInfoExW
RPCRT4.dll
RpcStringBindingComposeW
RpcStringFreeW
RtlCaptureContext
RtlCheckPortableOperatingSystem
RtlCompareMemory
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlVerifyVersionInfo
RtlVirtualUnwind
RVV/^B
SecondaryIdentificationField
SECURITY_STATUS
SelfEncryptionDriveEncryptionMethod);
SelfSignedCertificates
SendMessageW
SetForegroundWindow
SetUnhandledExceptionFilter
SHELL32.dll
ShellExecuteExW
ShellExecuteW
shortcut = "auto"
showpassphrasebox
SIZE_T * ActualDataSetBufferSize
SIZE_T * DataSize
SIZE_T * RequiredSize
SIZE_T BufferLength
SIZE_T BufferLength,
SIZE_T BufferSize,
size_t cb
SIZE_T cbSize
size_t cbSize
SIZE_T DataSetBufferSize,
SIZE_T PassphraseLength
Sleep
Software
S'oz.
sqQ9T
SSL_EXTRA_CERT_CHAIN_POLICY_PARA, *PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;
sss76
SSSLOM!H"
StartMessagePump
statustext
statustexterroricon
StringFileInfo
StrToID
struct _CERT_CHAIN_CONTEXT {
struct _CERT_REVOCATION_CHAIN_PARA {
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT {
struct _CMSG_RECIPIENT_ENCODE_INFO {
struct _NCRYPT_CIPHER_PADDING_INFO
struct {
sttT(
SVWWI
System
t$ E3
t&fD9
t(fD9
t*M~` 
T_[M6544=L=J6
T-BGFGNQ
TBmeRZ
TelemetryAssert
TelemetryAssertDiagTrack
TerminateProcess
themedborder = "true"
timestamp
T-Jai
tMHc|$dI
totalHits
toupper
towupper
TpmAutoReseal
Translation
TsMMM-
typedef
typedef  
typedef   BOOL (__stdcall *PFN_CERT_STORE_PROV_FIND_CERT)(
typedef   BOOL (__stdcall *PFN_CERT_STORE_PROV_FIND_CRL)(
typedef   BOOL (__stdcall *PFN_CERT_STORE_PROV_FIND_CTL)(
typedef   BOOL (__stdcall *PFN_CERT_STORE_PROV_READ_CERT)(
typedef   BOOL (__stdcall *PFN_CERT_STORE_PROV_READ_CRL)(
typedef   BOOL (__stdcall *PFN_CERT_STORE_PROV_READ_CTL)(
typedef   BOOL (__stdcall *PFN_CMSG_GEN_ENCRYPT_KEY) (
typedef   long HRESULT;
typedef   LONG NTSTATUS;
typedef   struct _BCRYPT_DH_PARAMETER_HEADER
typedef  BOOL (__stdcall *PFN_CERT_IS_WEAK_HASH)(
typedef BCRYPT_KEY_LENGTHS_STRUCT BCRYPT_AUTH_TAG_LENGTHS_STRUCT;
typedef BCryptBuffer     NCryptBuffer;
typedef BCryptBuffer*    PNCryptBuffer;
typedef BCryptBufferDesc NCryptBufferDesc;
typedef BCryptBufferDesc* PNCryptBufferDesc;
typedef BOOL (__stdcall *PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(
typedef BOOL (__stdcall *PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(
typedef BOOL (__stdcall *PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(
typedef BOOL (__stdcall *PFN_CANCEL_ASYNC_RETRIEVAL_FUNC) (
typedef BOOL (__stdcall *PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(
typedef BOOL (__stdcall *PFN_CERT_CREATE_CONTEXT_SORT_FUNC)(
typedef BOOL (__stdcall *PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(
typedef BOOL (__stdcall *PFN_CERT_ENUM_PHYSICAL_STORE)(
typedef BOOL (__stdcall *PFN_CERT_ENUM_SYSTEM_STORE)(
typedef BOOL (__stdcall *PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_CONTROL)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_DELETE_CERT)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_DELETE_CRL)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_DELETE_CTL)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CERT)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CRL)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_FREE_FIND_CTL)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_WRITE_CERT)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_WRITE_CRL)(
typedef BOOL (__stdcall *PFN_CERT_STORE_PROV_WRITE_CTL)(
typedef BOOL (__stdcall *PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY) (
typedef BOOL (__stdcall *PFN_CMSG_CNG_IMPORT_KEY_AGREE) (
typedef BOOL (__stdcall *PFN_CMSG_CNG_IMPORT_KEY_TRANS) (
typedef BOOL (__stdcall *PFN_CMSG_EXPORT_ENCRYPT_KEY) (
typedef BOOL (__stdcall *PFN_CMSG_EXPORT_KEY_AGREE) (
typedef BOOL (__stdcall *PFN_CMSG_EXPORT_KEY_TRANS) (
typedef BOOL (__stdcall *PFN_CMSG_EXPORT_MAIL_LIST) (
typedef BOOL (__stdcall *PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY) (
typedef BOOL (__stdcall *PFN_CMSG_IMPORT_ENCRYPT_KEY) (
typedef BOOL (__stdcall *PFN_CMSG_IMPORT_KEY_AGREE) (
typedef BOOL (__stdcall *PFN_CMSG_IMPORT_KEY_TRANS) (
typedef BOOL (__stdcall *PFN_CMSG_IMPORT_MAIL_LIST) (
typedef BOOL (__stdcall *PFN_CMSG_STREAM_OUTPUT)(
typedef BOOL (__stdcall *PFN_CRYPT_CANCEL_RETRIEVAL)(
typedef BOOL (__stdcall *PFN_CRYPT_ENUM_KEYID_PROP)(
typedef BOOL (__stdcall *PFN_CRYPT_ENUM_OID_FUNC)(
typedef BOOL (__stdcall *PFN_CRYPT_ENUM_OID_INFO)(
typedef BOOL (__stdcall *PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC) (
typedef BOOL (__stdcall *PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC) (
typedef BOOL (__stdcall *PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC)(
typedef BOOL (__stdcall *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH)(
typedef BOOL (__stdcall *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET)(
typedef BOOL (__stdcall *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE)(
typedef BOOL (__stdcall *PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC)(
typedef BOOL (__stdcall *PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC)(
typedef BOOL (__stdcall *PFN_EXPORT_PRIV_KEY_FUNC) (
typedef BOOL (__stdcall *PFN_IMPORT_PRIV_KEY_FUNC) (
typedef BOOL (__stdcall *PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC) (
typedef const CERT_CHAIN_CONTEXT *PCCERT_CHAIN_CONTEXT;
typedef const CERT_CHAIN_ELEMENT* PCCERT_CHAIN_ELEMENT;
typedef const CERT_CONTEXT *PCCERT_CONTEXT;
typedef const CERT_CRL_CONTEXT_PAIR *PCCERT_CRL_CONTEXT_PAIR;
typedef const CERT_ENHKEY_USAGE* PCCERT_ENHKEY_USAGE;
typedef const CERT_EXTENSION* PCCERT_EXTENSION;
typedef const CERT_SELECT_CHAIN_PARA*    PCCERT_SELECT_CHAIN_PARA;
typedef const CERT_SELECT_CRITERIA*     PCCERT_SELECT_CRITERIA;
typedef const CERT_SERVER_OCSP_RESPONSE_CONTEXT
typedef const CERT_SIMPLE_CHAIN* PCCERT_SIMPLE_CHAIN;
typedef const CERT_STORE_PROV_FIND_INFO CCERT_STORE_PROV_FIND_INFO,
typedef const CERT_STRONG_SIGN_PARA *PCCERT_STRONG_SIGN_PARA;
typedef const CRL_CONTEXT *PCCRL_CONTEXT;
typedef const CRYPT_OID_INFO CCRYPT_OID_INFO, *PCCRYPT_OID_INFO;
typedef const CTL_CONTEXT *PCCTL_CONTEXT;
typedef const CTL_USAGE* PCCTL_USAGE;
typedef const FVE_AUTH_DPAPI_NG *PCFVE_AUTH_DPAPI_NG;
typedef const FVE_AUTH_ELEMENT *PCFVE_AUTH_ELEMENT;
typedef const FVE_AUTH_EXTERNAL_KEY * PCFVE_AUTH_EXTERNAL_KEY;
typedef const FVE_AUTH_INFO_PUBLIC_KEY * PCFVE_AUTH_INFO_PUBLIC_KEY;
typedef const FVE_AUTH_INFORMATION *PCFVE_AUTH_INFORMATION;
typedef const FVE_AUTH_PASSPHRASE * PCFVE_AUTH_PASSPHRASE;
typedef const FVE_AUTH_PIN * PCFVE_AUTH_PIN;
typedef const FVE_AUTH_PRIVATE_KEY * PCFVE_AUTH_PRIVATE_KEY;
typedef const FVE_AUTH_PUBLIC_KEY * PCFVE_AUTH_PUBLIC_KEY;
typedef const FVE_AUTH_RECOVERY_PASSWORD * PCFVE_AUTH_RECOVERY_PASSWORD;
typedef const FVE_AUTH_TPM * PCFVE_AUTH_TPM;
typedef const FVE_DE_SUPPORT * PCFVE_DE_SUPPORT;
typedef const FVE_STATUS_V1 * PCFVE_STATUS_V1;
typedef const FVE_STATUS_V2 * PCFVE_STATUS_V2;
typedef const FVE_STATUS_V3 * PCFVE_STATUS_V3;
typedef const FVE_STATUS_V4 * PCFVE_STATUS_V4;
typedef const FVE_STATUS_V5 * PCFVE_STATUS_V5;
typedef const FVE_STATUS_V6 * PCFVE_STATUS_V6;
typedef const FVE_STATUS_V7 * PCFVE_STATUS_V7;
typedef const FVE_TPM_CAPS * PCFVE_TPM_CAPS;
typedef const FVE_TPM_CAPS_TPM_PRESENCE * PCFVE_TPM_CAPS_TPM_PRESENCE;
typedef CRYPT_ATTRIBUTES *PCMSG_ATTR;
typedef CRYPT_ATTRIBUTES CMSG_ATTR;
typedef CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALS;
typedef enum
typedef enum _FVE_DEVICE_TYPE {
typedef enum _FVE_HANDLE_TYPE {
typedef enum _FVE_INTERFACE_TYPE {
typedef enum _FVE_PROTECTOR_TYPE {
typedef enum _FVE_QUERY_TYPE {
typedef enum _FVE_WIPING_STATE {
typedef enum {
typedef enum CertKeyType 
typedef enum{
typedef HANDLE HCERTCHAINENGINE;
typedef HANDLE HCRYPTASYNC, *PHCRYPTASYNC;
typedef LONG SECURITY_STATUS;
typedef LPVOID (__stdcall *PFN_CRYPT_ALLOC)(
typedef LPVOID (__stdcall *PFN_NCRYPT_ALLOC)(
typedef NTSTATUS *PNTSTATUS;
typedef PCCERT_CONTEXT (__stdcall *PFN_CRYPT_GET_SIGNER_CERTIFICATE)(
typedef PCRYPT_PASSWORD_CREDENTIALSA PCRYPT_PASSWORD_CREDENTIALS;
typedef PVOID BCRYPT_ALG_HANDLE;
typedef PVOID BCRYPT_HANDLE;
typedef PVOID BCRYPT_HASH_HANDLE;
typedef PVOID BCRYPT_KEY_HANDLE;
typedef PVOID BCRYPT_SECRET_HANDLE;
typedef struct  _CRYPTPROTECT_PROMPTSTRUCT
typedef struct __BCRYPT_KEY_LENGTHS_STRUCT
typedef struct __NCRYPT_KEY_ACCESS_POLICY_BLOB
typedef struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO
typedef struct __NCRYPT_PCP_RAW_POLICYDIGEST
typedef struct __NCRYPT_PCP_TPM_FW_VERSION_INFO
typedef struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT
typedef struct __NCRYPT_SUPPORTED_LENGTHS
typedef struct __NCRYPT_UI_POLICY
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {
typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {
typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
typedef struct _BCRYPT_DH_KEY_BLOB
typedef struct _BCRYPT_DSA_KEY_BLOB
typedef struct _BCRYPT_DSA_KEY_BLOB_V2
typedef struct _BCRYPT_DSA_PARAMETER_HEADER
typedef struct _BCRYPT_DSA_PARAMETER_HEADER_V2
typedef struct _BCRYPT_ECC_CURVE_NAMES
typedef struct _BCRYPT_ECCFULLKEY_BLOB
typedef struct _BCRYPT_ECCKEY_BLOB
typedef struct _BCRYPT_INTERFACE_VERSION
typedef struct _BCRYPT_KEY_BLOB
typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER
typedef struct _BCRYPT_MULTI_HASH_OPERATION {
typedef struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT
typedef struct _BCRYPT_OAEP_PADDING_INFO
typedef struct _BCRYPT_OID
typedef struct _BCRYPT_OID_LIST
typedef struct _BCRYPT_PKCS1_PADDING_INFO
typedef struct _BCRYPT_PROVIDER_NAME
typedef struct _BCRYPT_PSS_PADDING_INFO
typedef struct _BCRYPT_RSAKEY_BLOB
typedef struct _BCryptBuffer {
typedef struct _BCryptBufferDesc {
typedef struct _CERT_ACCESS_DESCRIPTION {
typedef struct _CERT_ALT_NAME_ENTRY {
typedef struct _CERT_ALT_NAME_INFO {
typedef struct _CERT_AUTHORITY_INFO_ACCESS {
typedef struct _CERT_AUTHORITY_KEY_ID_INFO {
typedef struct _CERT_AUTHORITY_KEY_ID2_INFO {
typedef struct _CERT_BASIC_CONSTRAINTS_INFO {
typedef struct _CERT_BASIC_CONSTRAINTS2_INFO {
typedef struct _CERT_BIOMETRIC_DATA {
typedef struct _CERT_BIOMETRIC_EXT_INFO {
typedef struct _CERT_CHAIN {
typedef struct _CERT_CHAIN_CONTEXT CERT_CHAIN_CONTEXT, *PCERT_CHAIN_CONTEXT;
typedef struct _CERT_CHAIN_ELEMENT {
typedef struct _CERT_CHAIN_ENGINE_CONFIG {
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
typedef struct _CERT_CHAIN_PARA {
typedef struct _CERT_CHAIN_POLICY_PARA {
typedef struct _CERT_CHAIN_POLICY_STATUS {
typedef struct _CERT_CONTEXT {
typedef struct _CERT_CREATE_CONTEXT_PARA {
typedef struct _CERT_CRL_CONTEXT_PAIR {
typedef struct _CERT_DH_PARAMETERS {
typedef struct _CERT_DSS_PARAMETERS {
typedef struct _CERT_ECC_SIGNATURE {
typedef struct _CERT_EXTENSION {
typedef struct _CERT_EXTENSIONS {
typedef struct _CERT_FORTEZZA_DATA_PROP {
typedef struct _CERT_GENERAL_SUBTREE {
typedef struct _CERT_HASHED_URL {
typedef struct _CERT_ID {
typedef struct _CERT_INFO {
typedef struct _CERT_ISSUER_SERIAL_NUMBER {
typedef struct _CERT_KEY_ATTRIBUTES_INFO {
typedef struct _CERT_KEY_CONTEXT {
typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO {
typedef struct _CERT_KEYGEN_REQUEST_INFO {
typedef struct _CERT_LDAP_STORE_OPENED_PARA {
typedef struct _CERT_LOGOTYPE_AUDIO {
typedef struct _CERT_LOGOTYPE_AUDIO_INFO {
typedef struct _CERT_LOGOTYPE_DATA {
typedef struct _CERT_LOGOTYPE_DETAILS {
typedef struct _CERT_LOGOTYPE_EXT_INFO {
typedef struct _CERT_LOGOTYPE_IMAGE {
typedef struct _CERT_LOGOTYPE_IMAGE_INFO {
typedef struct _CERT_LOGOTYPE_INFO {
typedef struct _CERT_LOGOTYPE_REFERENCE {
typedef struct _CERT_NAME_CONSTRAINTS_INFO {
typedef struct _CERT_NAME_INFO {
typedef struct _CERT_NAME_VALUE {
typedef struct _CERT_OR_CRL_BLOB {
typedef struct _CERT_OR_CRL_BUNDLE {
typedef struct _CERT_OTHER_LOGOTYPE_INFO {
typedef struct _CERT_OTHER_NAME {
typedef struct _CERT_PAIR {
typedef struct _CERT_PHYSICAL_STORE_INFO {
typedef struct _CERT_POLICIES_INFO {
typedef struct _CERT_POLICY_CONSTRAINTS_INFO {
typedef struct _CERT_POLICY_ID {
typedef struct _CERT_POLICY_INFO {
typedef struct _CERT_POLICY_MAPPING {
typedef struct _CERT_POLICY_MAPPINGS_INFO {
typedef struct _CERT_POLICY_QUALIFIER_INFO {
typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {
typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE {
typedef struct _CERT_POLICY95_QUALIFIER1 {
typedef struct _CERT_PRIVATE_KEY_VALIDITY {
typedef struct _CERT_PUBLIC_KEY_INFO {
typedef struct _CERT_QC_STATEMENT {
typedef struct _CERT_QC_STATEMENTS_EXT_INFO {
typedef struct _CERT_RDN {
typedef struct _CERT_RDN_ATTR {
typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {
typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA {
typedef struct _CERT_REQUEST_INFO {
typedef struct _CERT_REVOCATION_CHAIN_PARA
typedef struct _CERT_REVOCATION_CRL_INFO {
typedef struct _CERT_REVOCATION_INFO {
typedef struct _CERT_REVOCATION_PARA {
typedef struct _CERT_REVOCATION_STATUS {
typedef struct _CERT_SELECT_CHAIN_PARA
typedef struct _CERT_SELECT_CRITERIA
typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT
typedef struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA {
typedef struct _CERT_SIGNED_CONTENT_INFO {
typedef struct _CERT_SIMPLE_CHAIN {
typedef struct _CERT_STORE_PROV_FIND_INFO {
typedef struct _CERT_STORE_PROV_INFO {
typedef struct _CERT_STRONG_SIGN_PARA {
typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO {
typedef struct _CERT_SUPPORTED_ALGORITHM_INFO {
typedef struct _CERT_SYSTEM_STORE_INFO {
typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA {
typedef struct _CERT_TEMPLATE_EXT {
typedef struct _CERT_TPM_SPECIFICATION_INFO {
typedef struct _CERT_TRUST_LIST_INFO {
typedef struct _CERT_TRUST_STATUS {
typedef struct _CERT_USAGE_MATCH {
typedef struct _CERT_X942_DH_PARAMETERS {
typedef struct _CERT_X942_DH_VALIDATION_PARAMS {
typedef struct _CMC_ADD_ATTRIBUTES_INFO {
typedef struct _CMC_ADD_EXTENSIONS_INFO {
typedef struct _CMC_DATA_INFO {
typedef struct _CMC_PEND_INFO {
typedef struct _CMC_RESPONSE_INFO {
typedef struct _CMC_STATUS_INFO {
typedef struct _CMC_TAGGED_ATTRIBUTE {
typedef struct _CMC_TAGGED_CERT_REQUEST {
typedef struct _CMC_TAGGED_CONTENT_INFO {
typedef struct _CMC_TAGGED_OTHER_MSG {
typedef struct _CMC_TAGGED_REQUEST {
typedef struct _CMS_DH_KEY_INFO {
typedef struct _CMS_KEY_INFO {
typedef struct _CMSG_CMS_RECIPIENT_INFO {
typedef struct _CMSG_CMS_SIGNER_INFO {
typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO {
typedef struct _CMSG_CONTENT_ENCRYPT_INFO {
typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {
typedef struct _CMSG_CTRL_DECRYPT_PARA {
typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {
typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {
typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {
typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {
typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {
typedef struct _CMSG_ENCRYPTED_ENCODE_INFO {
typedef struct _CMSG_ENVELOPED_ENCODE_INFO {
typedef struct _CMSG_HASHED_ENCODE_INFO {
typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO {
typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {
typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO {
typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO {
typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {
typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO {
typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO {
typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {
typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO {
typedef struct _CMSG_RC2_AUX_INFO {
typedef struct _CMSG_RC4_AUX_INFO {
typedef struct _CMSG_RECIPIENT_ENCODE_INFO CMSG_RECIPIENT_ENCODE_INFO,
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {
typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {
typedef struct _CMSG_SIGNED_ENCODE_INFO {
typedef struct _CMSG_SIGNER_ENCODE_INFO {
typedef struct _CMSG_SIGNER_INFO {
typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO {
typedef struct _CMSG_STREAM_INFO {
typedef struct _CPS_URLS {
typedef struct _CRL_CONTEXT {
typedef struct _CRL_DIST_POINT {
typedef struct _CRL_DIST_POINT_NAME {
typedef struct _CRL_DIST_POINTS_INFO {
typedef struct _CRL_ENTRY {
typedef struct _CRL_FIND_ISSUED_FOR_PARA {
typedef struct _CRL_INFO {
typedef struct _CRL_ISSUING_DIST_POINT {
typedef struct _CRL_REVOCATION_INFO {
typedef struct _CROSS_CERT_DIST_POINTS_INFO {
typedef struct _CRYPT_3DES_KEY_STATE {
typedef struct _CRYPT_AES_128_KEY_STATE {
typedef struct _CRYPT_AES_256_KEY_STATE {
typedef struct _CRYPT_ALGORITHM_IDENTIFIER {
typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {
typedef struct _CRYPT_ATTRIBUTE {
typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE {
typedef struct _CRYPT_ATTRIBUTES {
typedef struct _CRYPT_BIT_BLOB {
typedef struct _CRYPT_BLOB_ARRAY {
typedef struct _CRYPT_CONTENT_INFO {
typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {
typedef struct _CRYPT_CONTEXT_CONFIG
typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG
typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS
typedef struct _CRYPT_CONTEXT_FUNCTIONS
typedef struct _CRYPT_CONTEXTS
typedef struct _CRYPT_CREDENTIALS {
typedef struct _CRYPT_CSP_PROVIDER {
typedef struct _CRYPT_DECODE_PARA {
typedef struct _CRYPT_DECRYPT_MESSAGE_PARA {
typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {
typedef struct _CRYPT_DES_KEY_STATE {
typedef struct _CRYPT_ECC_CMS_SHARED_INFO {
typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO{
typedef struct _CRYPT_ENCODE_PARA {
typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA {
typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO{
typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {
typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {
typedef struct _CRYPT_HASH_INFO {
typedef struct _CRYPT_HASH_MESSAGE_PARA {
typedef struct _CRYPT_IMAGE_REF
typedef struct _CRYPT_IMAGE_REG
typedef struct _CRYPT_INTERFACE_REG
typedef struct _CRYPT_KEY_PROV_INFO {
typedef struct _CRYPT_KEY_PROV_PARAM {
typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA {
typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {
typedef struct _CRYPT_MASK_GEN_ALGORITHM {
typedef struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE
typedef struct _CRYPT_OBJID_TABLE {
typedef struct _CRYPT_OID_FUNC_ENTRY {
typedef struct _CRYPT_OID_INFO {
typedef struct _CRYPT_PASSWORD_CREDENTIALSA {
typedef struct _CRYPT_PASSWORD_CREDENTIALSW {
typedef struct _CRYPT_PKCS12_PBE_PARAMS
typedef struct _CRYPT_PKCS8_EXPORT_PARAMS{
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS{
typedef struct _CRYPT_PRIVATE_KEY_INFO{
typedef struct _CRYPT_PROPERTY_REF
typedef struct _CRYPT_PROVIDER_REF
typedef struct _CRYPT_PROVIDER_REFS
typedef struct _CRYPT_PROVIDER_REG
typedef struct _CRYPT_PROVIDERS
typedef struct _CRYPT_PSOURCE_ALGORITHM {
typedef struct _CRYPT_RC2_CBC_PARAMETERS {
typedef struct _CRYPT_RC4_KEY_STATE {
typedef struct _CRYPT_RETRIEVE_AUX_INFO {
typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS {
typedef struct _CRYPT_RSAES_OAEP_PARAMETERS {
typedef struct _CRYPT_SEQUENCE_OF_ANY {
typedef struct _CRYPT_SIGN_MESSAGE_PARA {
typedef struct _CRYPT_SMART_CARD_ROOT_INFO {
typedef struct _CRYPT_SMIME_CAPABILITIES {
typedef struct _CRYPT_SMIME_CAPABILITY {
typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO {
typedef struct _CRYPT_TIMESTAMP_ACCURACY
typedef struct _CRYPT_TIMESTAMP_CONTEXT
typedef struct _CRYPT_TIMESTAMP_INFO
typedef struct _CRYPT_TIMESTAMP_PARA
typedef struct _CRYPT_TIMESTAMP_REQUEST
typedef struct _CRYPT_TIMESTAMP_RESPONSE
typedef struct _CRYPT_URL_ARRAY {
typedef struct _CRYPT_URL_INFO {
typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO {
typedef struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO {
typedef struct _CRYPT_VERIFY_MESSAGE_PARA {
typedef struct _CRYPT_X942_OTHER_INFO {
typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO {
typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO {
typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO {
typedef struct _CRYPTOAPI_BLOB {
typedef struct _CTL_ANY_SUBJECT_INFO {
typedef struct _CTL_CONTEXT {
typedef struct _CTL_ENTRY {
typedef struct _CTL_FIND_SUBJECT_PARA {
typedef struct _CTL_FIND_USAGE_PARA {
typedef struct _CTL_INFO {
typedef struct _CTL_USAGE {
typedef struct _CTL_USAGE_MATCH {
typedef struct _CTL_VERIFY_USAGE_PARA {
typedef struct _CTL_VERIFY_USAGE_STATUS {
typedef struct _DSSSEED {
typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA {
typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS {
typedef struct _FVE_AUTH_DPAPI_NG
typedef struct _FVE_AUTH_ELEMENT {
typedef struct _FVE_AUTH_EXTERNAL_KEY {
typedef struct _FVE_AUTH_INFO_CLEAR_KEY {
typedef struct _FVE_AUTH_INFO_PUBLIC_KEY {
typedef struct _FVE_AUTH_INFORMATION {
typedef struct _FVE_AUTH_PASSPHRASE
typedef struct _FVE_AUTH_PIN {
typedef struct _FVE_AUTH_PRIVATE_KEY {
typedef struct _FVE_AUTH_PUBLIC_KEY {
typedef struct _FVE_AUTH_RECOVERY_PASSWORD {
typedef struct _FVE_AUTH_TPM {
typedef struct _FVE_DE_SUPPORT {
typedef struct _FVE_FIND_DATA_V1 {
typedef struct _FVE_STATUS_V1 {
typedef struct _FVE_STATUS_V2 {
typedef struct _FVE_STATUS_V3 {
typedef struct _FVE_STATUS_V4 {
typedef struct _FVE_STATUS_V5 {
typedef struct _FVE_STATUS_V6 {
typedef struct _FVE_STATUS_V7 {
typedef struct _FVE_TPM_CAPS {
typedef struct _FVE_TPM_CAPS_TPM_PRESENCE {
typedef struct _HMAC_Info {
typedef struct _HTTPSPolicyCallbackData
typedef struct _KEY_TYPE_SUBTYPE {
typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE
typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER
typedef struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES
typedef struct _NCRYPT_KEY_ATTEST_PADDING_INFO {
typedef struct _NCRYPT_KEY_BLOB_HEADER
typedef struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO {
typedef struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT
typedef struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS
typedef struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT
typedef struct _NCryptAlgorithmName
typedef struct _OCSP_BASIC_RESPONSE_ENTRY {
typedef struct _OCSP_BASIC_RESPONSE_INFO {
typedef struct _OCSP_BASIC_REVOKED_INFO {
typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO {
typedef struct _OCSP_CERT_ID {
typedef struct _OCSP_REQUEST_ENTRY {
typedef struct _OCSP_REQUEST_INFO {
typedef struct _OCSP_RESPONSE_INFO {
typedef struct _OCSP_SIGNATURE_INFO {
typedef struct _OCSP_SIGNED_REQUEST_INFO {
typedef struct _PKCS12_PBES2_EXPORT_PARAMS 
typedef struct _PRIVKEYVER3 {
typedef struct _PROV_ENUMALGS {
typedef struct _PROV_ENUMALGS_EX {
typedef struct _PUBKEY {
typedef struct _PUBKEYVER3 {
typedef struct _PUBLICKEYSTRUC {
typedef struct _ROOT_INFO_LUID {
typedef struct _RSAPUBKEY {
typedef struct _SCHANNEL_ALG {
typedef struct _SSL_ECCKEY_BLOB
typedef struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS {
typedef struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA {
typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA {
typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS {
typedef struct NCRYPT_ALLOC_PARA {
typedef struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER
typedef struct NCryptKeyName
typedef struct NCryptProviderName
typedef ULONG_PTR HCRYPTHASH;
typedef ULONG_PTR HCRYPTKEY;
typedef ULONG_PTR HCRYPTPROV;
typedef ULONG_PTR HCRYPTPROV_LEGACY;
typedef ULONG_PTR HCRYPTPROV_OR_NCRYPT_KEY_HANDLE;
typedef ULONG_PTR NCRYPT_HANDLE;
typedef ULONG_PTR NCRYPT_HASH_HANDLE;
typedef ULONG_PTR NCRYPT_KEY_HANDLE;
typedef ULONG_PTR NCRYPT_PROV_HANDLE;
typedef ULONG_PTR NCRYPT_SECRET_HANDLE;
typedef unsigned int ALG_ID;
typedef void (__stdcall * PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE)(
typedef VOID (__stdcall *PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK)(
typedef void (__stdcall *PFN_CERT_STORE_PROV_CLOSE)(
typedef void (__stdcall *PFN_CMSG_FREE)(
typedef VOID (__stdcall *PFN_CRYPT_ASYNC_PARAM_FREE_FUNC) (
typedef VOID (__stdcall *PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC) (
typedef VOID (__stdcall *PFN_CRYPT_FREE)(
typedef void (__stdcall *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE)(
typedef void (__stdcall *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER)(
typedef void (__stdcall *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD)(
typedef VOID (__stdcall *PFN_FREE_ENCODED_OBJECT_FUNC) (
typedef VOID (__stdcall *PFN_NCRYPT_FREE)(
typedef void * (__stdcall *PFN_CMSG_ALLOC) (
typedef VOID *HCERT_SERVER_OCSP_RESPONSE;
typedef void *HCERTSTORE;
typedef void *HCERTSTOREPROV;
typedef void *HCRYPTDEFAULTCONTEXT;
typedef void *HCRYPTMSG;
typedef void *HCRYPTOIDFUNCADDR;
typedef void *HCRYPTOIDFUNCSET;
u HcA<H
u$L97t
u*9Q<|%
U?ZmC
u]FGG
u]j5O{W6
u}u=S
UATAUAVAWH
UAVAWH
UCHAR                                   Count[4];
UCHAR                   Count[4];
UCHAR           Count[4];
UCHAR           q[20];
UCHAR           Seed[20];
UCHAR   Count[4];
UCHAR   q[20];
UCHAR   Seed[20];
UCHAR Count;
ufjiY/
UIFILE
UINT MaxNumGuids,
UINT16      major1;
UINT16      major2;
UINT16      minor1;
UINT16      minor2;
UINT32 cbCertifyInfo;
UINT32 cbSignature;
UINT32 cbTpmPublic;
UINT32 HeaderSize;  
UINT32 Magic;  
UINT32 Version;  
uLLL(`5
ULONG                                   cbGroupSize;
ULONG                                   cbKey;
ULONG                                   cbSeedLength;
ULONG                                   dwMagic;
ULONG                           cbBuffer;       
ULONG                           iHash;          
ULONG                   cbCofactor;             
ULONG                   cbFieldLength;          
ULONG                   cbGroupSize;
ULONG                   cbKeyLength;
ULONG                   cbLength;
ULONG                   cbSeed;                 
ULONG                   cbSeedLength;
ULONG                   cbSubgroupOrder;        
ULONG                   dwFlags);
ULONG                   dwMagic;
ULONG                   dwVersion;              
ULONG                *pcbResult,
ULONG                cbDerivedKey,
ULONG                dwFlags);
ULONG               cbDerivedKey,
ULONG               cbInput,
ULONG               cbOutput );
ULONG               cbPassword,
ULONG               cbSalt,
ULONG               cbSalt;             
ULONG               cbSecret,   
ULONG               dwFlags);
ULONG           cbKeyLength;
ULONG           cbLength;
ULONG           dwMagic;
ULONG       cbAAD;
ULONG       cbAuthData;
ULONG       cbIV;
ULONG       cbMacContext;
ULONG       cbNonce;
ULONG       cbOtherInfo;
ULONG       cbSize;
ULONG       cbTag;
ULONG       dwFlags;
ULONG       dwInfoVersion;
ULONG       dwOIDCount;
ULONG   *pAlgCount,
ULONG   *pcbResult,
ULONG   *pImplCount,
ULONG   BitLength;
ULONG   BufferType;           
ULONG   cbAlgName;          
ULONG   cbBuffer,
ULONG   cbBuffer;             
ULONG   cbHash,
ULONG   cbHashObject,
ULONG   cbInput,
ULONG   cbIV,
ULONG   cbKey;
ULONG   cbKeyAuth;
ULONG   cbKeyBlob;
ULONG   cbKeyData;
ULONG   cbKeyObject,
ULONG   cbLabel;
ULONG   cbModulus;
ULONG   cbOID;
ULONG   cbOutput,
ULONG   cbPerElement;           
ULONG   cbPerObject;
ULONG   cbPrime1;
ULONG   cbPrime2;
ULONG   cbPublicExp;
ULONG   cbSalt;
ULONG   cbSecret,
ULONG   cbSecret,   
ULONG   cbSignature,
ULONG   cbSize;             
ULONG   cBuffers;             
ULONG   dwAlgOperations,
ULONG   dwClass;
ULONG   dwCurveType;
ULONG   dwEccCurveNames;
ULONG   dwFlags);
ULONG   dwFlags;
ULONG   dwIncrement;
ULONG   dwLength,
ULONG   dwMagic;
ULONG   dwMaxLength;
ULONG   dwMinLength;
ULONG   dwVersion;
ULONG   Magic;
ULONG   magic;  
ULONG   ulVersion;            
ULONG  Flags;         
ULONG  Flags;            
ULONG  magic;  
ULONG  pcrMask;
ULONG  StructureSize;
ULONG  StructureVersion;
ULONG *OutputSize
ULONG *PerUserSize
ULONG AllowDebugging : 1; 
ULONG AuthFlags;
ULONG BlobOffset;
ULONG BlobSize;
ULONG cAliases;
ULONG cbAlgName;       
ULONG cbAttributes; 
ULONG cbAuthTag;       
ULONG cbIsolatedKey;   
ULONG cbNonce;         
ULONG cbPcrs;       
ULONG cbPublicKeyBlob;
ULONG cbQuote;      
ULONG cbReport;     
ULONG cbSignature;  
ULONG cbSize
ULONG cbValue,
ULONG cbValue;
ULONG cbWrappingKey;   
ULONG cContexts;
ULONG cFunctions;
ULONG cInterfaces;
ULONG ConversionFlags
ULONG cProperties;
ULONG cProviders;
ULONG DEInitializationFlags
ULONG dwFlags,
ULONG dwFlags;
ULONG dwInterface,
ULONG dwInterface;
ULONG dwMode,
ULONG dwPosition);
ULONG dwReserved;
ULONG dwTable,
ULONG ElementFlags;
ULONG ElementsCount;
ULONG ElementType;
ULONG ExportedPublicKeyOffset;
ULONG ExportedPublicKeySize;
ULONG Flags
ULONG Flags;   
ULONG FlagsExpected;      
ULONG FlagsIn,
ULONG FlagsMask;          
ULONG FveFindVersion;
ULONG HandleFlags,
ULONG InitializationFlags
ULONG InputSize,
ULONG KeyUsage;        
ULONG Magic;        
ULONG MinSvn;             
ULONG NameFlags,
ULONG NotUsed2;
ULONG pcrAlg;       
ULONG PcrBitmap;
ULONG PerBootKey : 1;  
ULONG PerUserSize
ULONG PerUserSize,
ULONG QueryFlags;
ULONG Reserved : 31;   
ULONG Reserved : 31;      
ULONG StructureSize;
ULONG StructureSize;     
ULONG StructureVersion;
ULONG StructureVersion;  
ULONG SupportFlags;
ULONG TypeFlags,
ULONG UserFlags
ULONG Version; 
ULONG Version;      
ULONG Version;         
ULONG Version;            
ULONG WcosBspProtectLevel;
ULONG WcosOsDataProtectLevel;
ULONG WcosOsMainProtectLevel;
ULONG WcosPreInstalledProtectLevel;
ULONG WcosUserDataProtectLevel;
ULONG WcosWspProtectLevel;
ULONG WipeCount;         
ULONG WipeState;         
ULONG* pcbBuffer,
ULONG* pcbValue,
ULONGLONG           cIterations,
ULONGLONG   cbData;
ULONGLONG ExtendedFlags; 
ULONGLONG ExtendedFlags2;
ULONGLONG TrustletId;     
ULONGLONG WimBootHashedSizeActual;  
ULONGLONG WimBootHashedSizeRequired;    
UnhandledExceptionFilter
UnInitProcessPriv
UnInitThread
union  {
union {
union {                                             
unsigned char   CertLabel[36];
unsigned char   SerialNumber[8];
unsigned char DecryptionState[11][16];
unsigned char DecryptionState[15][16];
unsigned char EncryptionState[11][16];      
unsigned char EncryptionState[15][16];      
unsigned char Feedback[16];
unsigned char Feedback[8];
unsigned char i;
unsigned char IV[16];
unsigned char IV[8];
unsigned char j;
unsigned char Key[16];
unsigned char Key[24];
unsigned char Key[32];
unsigned char Key[8];
unsigned char SBox[256];
ury{{/W#ig 1
UseAdvancedStartup
UseEnhancedPin
USER32.dll
UseTPM
UseTPMKey
UseTPMKeyPin
UseTPMPIN
USHORT Block[(8)];
USHORT DescriptorLength;
USHORT DpapiNgFlags;        
USHORT Flags,
USHORT FveVersion;
USHORT MajorVersion;
USHORT MinorVersion;
UsS)9;;
UVWATAUAVAWH
v[PYD
v\%0i
VarFileInfo
vbuuU*
VerSetConditionMask
visible = "true"/>
vnu`#*g
void                                    *pvFindArg;
void                                *pvFree;    
void                                *pvGetArg;
void                                *pvInfo;
void                                *pvSort;    
void                            *pvKeyEncryptionKey;
void                        *pvEncryptionAuxInfo;
void                        *pvHashAuxInfo;
void                        *pvKeyEncryptionAuxInfo;
void                        *pvKeyEncryptionKey;
void                        *pvKeyWrapAuxInfo;
void                    *pvArg;
void                    *pvExtraPolicyPara;     
void                    *pvExtraPolicyStatus;   
void                    *pvSubject;
void                **rgpvStoreProvFunc;
void                *pvBase;
void                *pvSigner;
void                *pvSystemStore;
void            *pReserved;         
void        *pvLdapSessionHandle;   
VOID    *pPaddingInfo,
void    *pvFuncAddr;
void  *pvArg
void **ppPluginContext);
void **ppvDecodedSignPara, 
void **ppvFuncAddr,
void **ppvNextSubject,
void **ppvStoreProvFindInfo,
void **rgpvData,
void *pbFormat,
void *pFormatStruct,
VOID *pPaddingInfo,
void *pv
void *pvArg
void *pvArg,
void *pvAuxInfo,
void *pvData,
void *pvDecodedSignPara,
void *pvEncoded,
void *pvExtra
void *pvFindArg
void *pvGetArg,
void *pvIssuer,
void *pvKey,
void *pvParameters,
void *pvReserved
void *pvReserved,
void *pvSaveToPara,
void *pvSigner,
void *pvSort
void *pvStoreProvFindInfo,
void *pvStructInfo,
void *pvSubject,
void *pvSystemStoreLocationPara,
void *pvTypePara,
void const *pvCtrlPara
void const *pvMsgEncodeInfo,
void* pvAuxInfo                        
void* pvAuxInfo                                
void* pvAuxInfo,           
void* pvAuxInfo,                                       
void* pvPara,
void**    ppPara;
VS_VERSION_INFO
vUzSj
VWATAVAWH
VWAVH
vXTKNB4
W&{u #
w&''O
W,\.s
W^aww
W_}u,
w_BjjHDE/1 
w<gjkld7:>8B=#
w337790
w3yssyy
WaitForSingleObject
WCHAR           *pwszServerName; 
WCHAR   wszErrorText[256];  
WCHAR   wszErrorText[512];  
WCHAR *pwszDllList,
WCHAR ClearPassPhrase[256 + 1];
WCHAR DpapiNgDescriptor[ANYSIZE_ARRAY];
wcscmp
wg^@3
WI =_===LP:
width = "200rp"
width = "400rp"
width = "420rp">
WORD            wResponseFlags;
WORD            wResponseType;
WORD    reserved;
wQU52
wvv8|
WVVk][[
WWW0WWW
WXW7GF=NBvNKK
x ATAVAWH
x AVH
x UATAVH
X,F7cX
X,fMef
X[[ckk
X\\D$
X_^[]
X__/\
x<a4I
xDJk!
Xl[%(
XWn_W_7@Ij\R\`5+4/# 
XWXW_W_orr<ggJiB#:::F:
XXnnaaWNXX`nxxuR
XXo[_[n
xxs77w7
Y&''Q
Y(t?E
Y[[+w
Y[[c:
Y]]ekk
y{y{70
yF8{L
yojjoo
yoolor
YYYEWWW
YZZbee
z>g'G<
z177W8|
Z8mVWW
zAYjbD
zKHB 
zrr`*
zrr`Q|
zrT5h
zzz;rrr
ZZZEccc
