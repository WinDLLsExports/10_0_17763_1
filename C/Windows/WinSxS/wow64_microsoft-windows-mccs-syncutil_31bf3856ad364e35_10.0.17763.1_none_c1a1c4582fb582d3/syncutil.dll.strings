 0N0f0
 0O0w0
 Microsoft Corporation. All rights reserved.
 Operating System
 SVW3
 Windows
!( ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwLower != ((ULONG_PTR) ((INT_PTR) -1 ))) && ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwUpper != ((ULONG_PTR) ((INT_PTR) -1 ))) )
!accessToken.empty() && !_IsCurrentTimePastExpirationTime(expirationTime)
!SecIsValidHandle(&info->sslCredentialHandle[(UINT)handleType])
!This program cannot be run in DOS mode.
!token.empty() && ((nullptr == pCurrentToken) || (token != pCurrentToken))
#$#$#DataStoresLock#$#$#
#0H0\0
#D$LPS
$tD9L
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%d)\%hs!%p: 
%s %s
%s%s-%d/%u.%u.%u
%s%s%s-%d.txt
%s:%s
%s\%s
%s\%s-%d.txt
%s\Ping %s-%d.txt
%s\SKZ %s.txt
%s\WebAuth\%s
%x - %s
&client_secret=
&code=
&device_model=
&device_name=
&grant_type=authorization_code
&grant_type=refresh_token
&login_hint=
&redirect_uri=
&refresh_token=
&response_type=
&scope=
( ( 0x10a40000 | 31 ) ) == propertyValues[0].propid
( *pMutexHandle ) != 0
(!!parsed)
((&nameVar)->vt) == VT_BSTR
(((HRESULT)(_IsValidToken(currentToken, &valid))) >= 0) && (0 != valid)
(((HRESULT)(error)) < 0)
(((HRESULT)(hr)) >= 0)
(((HRESULT)(hr)) >= 0) && (info != 0)
(((HRESULT)(hr)) >= 0) && (info != nullptr)
(((HRESULT)(hr)) >= 0) || (((HRESULT)0x85050002) == hr)
(((NTSTATUS)(_ntStatus)) >= 0)
((*pPropNotEmptyFilterIndices)[i] >= 0) && ((*pPropNotEmptyFilterIndices)[i] < c_numGalContactPimProps)
((HRESULT)(50L) <= 0 ? ((HRESULT)(50L)) : ((HRESULT) (((50L) & 0x0000FFFF) | (7 << 16) | 0x80000000))) == hr
((HRESULT)0x80070057L)
((HRESULT)0x80070057L) != hr
(_itow_s((int)expirationTime, conversionBuffer, 10) == 0)
(0 != nSize)
(0 != ret)
(070B0a0
(200 == httpStatus)
(accessorType == __uuidof(PopImapAccountAccessor)) || (accessorType == __uuidof(ExternalAccountAccessor)) || (accessorType == __uuidof(ActiveSyncAccountAccessor))
(caller: %p) 
(dwType == ( 4ul ))
(expirationTime == (double)((int)expirationTime))
(nullptr != pAuthTarget) && (L'\0' != *pAuthTarget)
(size > 0)
(StringFromGUID2(accountId, pEnd, (INT)[](size_t num) { INT out = 2147483647; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToInt(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\credutil.cpp", 580  ); } } while(0,0); return out; }(countCharsRemaining)) > 0)
(utl::wstring::npos != beginIndex)
)9;u)
*~*~*~*~*~*~*~*~*~*
*pEndToken == 0
*pEndToken == NULL
*ppszMultiByteStr == 0
*ppszMultiByteStr == NULL
*ppwszWideCharStr == 0
*ppwszWideCharStr == NULL
*QjZ3
,SVWPj
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.hotmail.com
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.outlook.com
.rdata
.rdata$brc
.rdata$sxdata
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
:":(:L:g:s:
:#:W:h:q:
:#;{;
:#;};
:%:9:
:&:0:::D:N:[:i:s:
:&:S:v:
:&;<;
:):U:z:
:*:L:W:^:v:
:,:v:~:
:.:f:
:.;_;m;
:.;8;B;o;
:/:T:h:
:':/:R:j:~:
:-:I:]:
::StringCchCatW(deviceTypeDefault, sizeof(*__countof_helper(deviceTypeDefault)), deviceTypeFamily)
::StringCchCopyW(pwszUserAgent, userAgentLength, userAgent.c_str())
:;;P;k;
:?:g:~:
:?;~;
:@:w:
:[:t:
:+;9;H;b;
:<:h:
:=:m:
:0:;:
:1;M;X;p;
:2:@;
:4:V:
:4;O;[;$<=<\<h<
:5:a:
:6;<;I;m;
:6;>;U;[;a;g;m;s;};
:7:\:p:
:A:U:|:
:D;t;
:F:w:
:I:a:y:
:L:P:T:X:h:l:p:t:x:|:
:M;S;x;
:O:_:g:m:s:x:}:
:R:k:
; <1<<<E<l<r<
;!<f<
;";Y;
;%;=;Z;
;)<h<
;)<l<
;*;e;~;
;*<1<J<
;,;`;
;.;J;P;`;
;.;U;
;';N;z;
;-;T;
;+;3;@;H;
;+<D<~<
;'<R<a<n<
;>;L;
;0<E<
;1;7;U;
;1;R;t;
;3<Z=
;5;Z;n;
;5<b<
;6;[;o;
;6<H<T<f<}<
;8;>;K;];e;
;8<i<
;A;d;
;A;m;
;D$<u
;G;l;
;I;v;
;R;|;
;T;m;y;
?!?B?
?"?<?b?y?
?"?B?
?$?{?
?&?.?y?
?(?P?g?
?,?p?
?.?B?i?
?/?C?j?
?;?g?
?<?D?L?\?l?t?|?
?<?Z?
?0?d?{?
?0?t?z?
?3?[?r?
?3?X?l?
?6?J?q?
?7?J?[?
?access_token=
?client_id=
?E?m?
?F?O?\?f?j?p?v?z?
?K?{?
?M?\?g?
?terminate@@YAXXZ
@.didat
@.reloc
@f94Bu
@v3j@V
[%02d/%02d/%04d %02d:%02d:%02d.%03d] 
[%hs(%hs)]
[%hs]
[f9\$0t
\$ PR
\$<hp
\$4YY
\$8YY
\MailContactsCalendarSync\LiveDomainList.txt
^SSSSh\
_^[Y]
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_errno
_except_handler4_common
_ftol2_sse
_GetAADToken
_GetBackendType() == c_pExchangeServiceType
_i64tow_s
_initterm
_IsValidToken(accessToken.GetRawBuffer(nullptr))
_IsValidToken(refreshToken)
_itow_s
_lock
_onexit
_purecall
_statusTemp == 0L
_strnicmp
_TranslateNotFoundErrors(AwaitOperationResult( findAccountOperation.p, &webAccount))
_TranslateNotFoundErrors(AwaitOperationResult( findAccountProviderOperation.p, &webAccountProvider))
_TranslateNotFoundErrors(AwaitOperationResult( getDefaultSignInAccountResultOperation.p, &result))
_unlock
_vsnprintf
_vsnwprintf
_vsnwprintf_s
_wcsicmp
_wcstoui64
_wtoi
_XcptFilter
`.data
{5B04B775-356B-4AA0-AAF8-6491FFEA5614}
|$ PQ
~$9~(t
~(9~<t
~,_^]
~<9~8t
~89~,t
+|$(PSW
+0Z0m0
< <L<q<
< =P=x=
<"<,<6<@<J<T<^<h<r<|<
<"</<7<W<d<o<
<#<,<Y<z<
<$=I=]=
<%<;<H<l<
<%=*=3=X=i=
<&<.<_<
<&=K=_=
<(=A=z=N>
<)=.=R=\=
<*<Y<`<K=R=
</=5=B=f=
<@<V<
<+<?<f<
<=<Q<x<
<-=3=X=
<>=_=e=y=;>
<1<E<l<
<1<H<_<v<
<3<_<
<4<G<W<p<
<5=I=
<7<\<
<7=<=A=h=x=}=
<9<e<
<9=@=
<D<Q<y<
<E<n<
<K<j<w<
<N<^<j<
<Q<[<~<
<V=}=
--= Protocol logs for PARTNER='%S', CTRLLOG ID=0x%08X =--
="=,=6=@=J=T=^=
=#>G>z>
=#>O>t>
=&=@=\=k=
=&>;>
=(=o=
=(=R=x=
=(>S>|>
=)=T=s=~=
=,>i>
=.>>>T>i>
=:=]=
=;=B=S=f=
=@=r=
=+=6=^=s=
=-= Build %d =-=
=-=-=-= Client Request =-=-=-  Timestamp: 
=-=-=-= Server Response =-=-=- Timestamp: 
=-=R=
='>D>g>
=1=P=q=
=3=[=r=
=3=b=
=3=N=i=
=7=\=p=
=7=>=
=9=a=
=9=T=o=
=A@cr
=C=W=~=
=D=N=
=l=~=
=Q>r>
=t={=
=X=j=
>!>@>J>y>
>!><>J>`>}>
>"?N?T?h?
>">0>7>>>O>t>
>$>K>
>%?Y?
>&>N>e>
>(>5>@>|>
>)?^?o?
>)?A?n?
>,>5>?>H>R>[>y>
>,>B>w>
>.???J?[?
>.>]>
>/>9>d>{>
>:>H>U>[>a>
>;?l?
>?>g>~>
>@?U?
>@>T>{>
>+?>?F?S?[?
>+?H?m?
>=?H?f?
>'><>f>
>>>_>u>
>'>V>~>
>0>Z>h>
>1><>B>H>S>Y>r>x>
>1>9>@>F>L>z>
>3>G>n>
>6>[>o>
>6>A>
>7>I>V>
>9?j?
>D>i>}>
>E>Z>
>f>w>
>q?{?
>U>^>p>
>U>n>
>Z>_>i>
0 != *pCustomerId
0 != hashValueSize
0 != m_activityRefCount
0 != ppResumeState
0 != pScopeMetadata
0 != pServerName
0 != pSyncPartner
0 != sessionScope
0 != wideCount
0 == (clientSecretSize % sizeof(WCHAR))
0 == sessionScope
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0
0 0$0(0,080<0@0L0t0
0 0$0(0004080<0@0D0H0L0P0T0X0`0d0h0l0p0t0|0
0 0(0,04080X0t0x0
0 1'1M1
0 1C1i1
0"020G0
0#0)0-050;0?0K0W0`0y0
0#161O1n1
0%0<0M0T0f0m0
0&020>0X0
0&1N1e1
0)0Q0h0
0*0S0
0*0U0
0*111@1
0*1s1
0,0S0
0,1b1f1l1p1v1z1
0.1A1I1V1^1
0.w/X#
0;0C0N0
0?0l0
0+0R0
0=0I0P0
0=1L1W1
0>1f1k1
0'0:0Q0i0
00000000-0000-0000-0000-000000000000
000000004011621F
0'1<1m1
01181P1
020L0q0
030F0O0{0
040`0
040904B0
040D0
040d0
050A0M0T0n0
051T1a1
080a0
090H0S0p0}0
0A1H1W1
0C1t1t2
0L == lResult
0o0y0~1
0S0w0
0T1V2
0Y0r0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1#101T1m1
1#1J1y1
1$1[1t1
1%1L1
1&202?2E2I2Q2W2[2g2s2|2
1(1R1
1)2@2p2
1*1A1p1
1*1D1
1*1V1m1
1,1d1
1,1T1x1|1
1.1?1N1l1
1.1w1
1.3.6.1.4.1.311.71.1.2
1.3.6.1.5.5.7.3.2
1;1`1t1
1+2=2L2
1+2E2
1+2k203B3t3
1=2`2y2
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
101\1
132;2
151]1
161M1|1
163.com
181d1
181O1~1
181O1u1
181X1x1
1A2e2
1B2_2
1D1{1
1D2v2
1f;2u
1G2{2
1R1\1x1
1T1Z1x1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,2024282<2@2D2H2L2P2X2\2`2d2h2l2p2t2x2|2
2 2'2?2a2
2 343[3
2!20292B2Q2e2k2p2
2!2H2t2
2"2d2
2"343N3h3
2#3|3
2)2P2|2
2.2_2
2;2O2v2
2@2_2}2
2@2Z2
2|2p3u3
202_2
222b2g2
2'2S2x2
2'3L3`3
253?3F3P3u3
272?2K2X2h2r2
282K2t2
283\3
283T3z3
292M2t2
2E2\2
2E2l2
2I3P3
2L2t2
2O2a2
2P2Y2l2
2UuwarE
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3D3P3h3t3x3|3
3 3@3M3X3
3 3P3h3n3{3
3 4E4Y4
3 4y4
3!4>5
3"4Z4
3#393@3J3c3y3
3$4;4U4m4
3%3-393B3G3M3W3a3q3
3%3S3[3a3
3%4C4m4|4
3&4N4e4
3(3>3K3v3
3)3b3
3)3X3
3*3H3a3j3
3.3S3g3
3:4B4U4
3;4S4
3_3r3z3
3+4P4d4
3<3I3T3|3
3<3U3[3o3
3<4z4
303]3|3
30A0P0l0
313X3
32393]3t3+4
325D5
3-3A3h3
353H3P3]3e3
383L3s3
383O3s3
3C3s3
3D3i3}3
3E3Z3
3F3P3
3H3_3q3
3o3v3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4!424x4
4!4H4
4!4I4h4r4
4"4'4
4"5>5e5
4"5A5|5
4#464
4#5-5:5h5
4%414<4A4F4L4V4`4p4y4
4%4U4p4
4)5A5X5r5{5
4)5I5
4*5O5c5
4.4<4K4i4
4?4d4x4
4?4S4z4
4+4>4[4
4+494Z4p4
4+4E4|4
4+5P5d5
415=5B5o5
434;4H4
434W4k4
455_6
4-5c5}5
484L4s4
485W5
494N4
494Z4o4v4
4B5H5N5T5Z5`5
4C4f4
4F4`4
4H4|4
4I5Z5c5p5
4K5P5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5P5u5
5"5)5A5M5R5|5
5#5)5G5V5^5g5
5#5R5
5#6v7
5$5,595A5l5
5$6P6u6
5%5:5K5`5~5
5(5@5
5)6A6l6
5*6e6
5.6[6
5:5K5`5p5~5
5:5K5d5i5|5
5?6N6
5@5_5y5
5@5S5[5h5p5
5+5Z5m5u5
525l5
545K5b5y5
555L5
5'595^5
585]5q5
5A5Z5
5C5h5|5
5F5j5
5f5o5|5
5J5]5x5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6P6i6
6 7M7h7
6!6,636>6E6
6#6)6=6
6#7(7Q7y7
6$7)7
6$7Q7v7
6%787\7
6&7=7l7
6(6`6j6
6(6B6K6s6
6(6H6N6l6
6)6Y6
6)7`7
6)7Q7h7
6)7W7h7
6,6Q6e6
6/6[6
6/6G6
6?6T6
6?6V6
6?7S7x7
6[6r6D7
6<6a6u6
6=7]7q7
60656
617H7`7
627K7[7`7
647;7
656M6Z6_6
656Q6
6'6L6
6'6N6z6
677S7
6A6G6
6A7{7
6A7'8B8j8
6B6r6
6C6h6|6
6C6R6w6
6C6s6
6d6s6
6E6i6Y7
6G7g7
6I6S6g6
6K6R6
6L6n6
6L7b7
6Z7`7m7
7 7,7D7H7L7P7d7l7x7|7
7 8E8Y8
7!7H7
7!8I8`8
7%8J8^8
7&7:7a7
7&7k7u7
7(7F7e7
7)8R8
7*7_7y7
7*7I7S7g7
7,727F7
7/7>7F7Q7Y7v7
7^7i7
7+7?7f7
7+7[7~7
7<7h7
7<7P7w7
7<7S7
7<8a8k8
7=7G7V7
727h7}7
758:8
778\8p8
778L9
787O7~7
797P7
7B7V7}7
7D7i7}7
7G8r8
7K8w8
7L8V8
7U8o8
8 888<8@8X8\8`8h8x8|8
8"9/9:9Z9m9u9
8"9G9[9
8$9P9u9
8%8/898C8M8W8a8k8u8
8&9,9y9
8(8u8
8(9A9~9
8)8P8r8
8,848A8I8}8
8.:N:[:t:
8/9<9
8:8M8U8b8j8
8:8s8
8+888\8x8
8+8R8~8
8=8C8W8
8=8l8
818X8
849:9G9m9}9
858e8
862726500644-mba83qqf9kq69c5mk9u5h2dn4iocdspq.apps.googleusercontent.com
878U8z8
879W9
8-8T8
898P8g8
8F8k8
8G8r8
8H8z8
8J8c8u8
8J8W8b8
8k8p8
8M8u8
9":P:
9#9+9^9u9
9#959<9
9#9A9T9\9i9q9
9$:U:h:p:}:
9%:2:=:s:
9%919p9
9(9@9X9p9
9*989E9S9]9j9x9
9*9Y9
9,:i:v:
9,:x:
9.9D9
9.9U9
9.9Z9
9/9_9
9::P:W:y:
9':?:L:
9;9^9}9
9;9R9v9
9?9E9j9
9?9R9Z9g9o9
9?t#V
9\$ |7Q
9~(s2Wj
9+9B9q9
9+9O9~9
9=9b9v9
90t6jb_W
90u3jz^
919H9g9m9z9
92999N9-:
929a9
939W9m9
989]9q9
9-9;9
9-9S9
9a9m9
9A9S9}9
9C9a9
9D$ u>
9D$(t
9I9n9
9R9Y9
9t$ uA
9Z:d:
A0+A4
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
access_token
access_type=offline
accessor.CoCreateInstance(__uuidof(ActiveSyncAccountAccessor))
accessor.CoCreateInstance(__uuidof(PopImapAccountAccessor))
accessor.CoCreateInstance(m_accessorType)
account
account->get_WebAccountProvider(&provider)
accountAbsent
accountConfig.CoCreateInstance(__uuidof(ActiveSyncApp))
accountId.reserve(accountIdBufferLength)
accountInternal->get_Id(accountId.GetAddressOf())
accountInternal->get_Properties(&accountProperties)
accountInternal->get_Properties(&properties)
accountProperties->HasKey( HStringReference(AccountAutorityPropertyName).Get(), &hasAuthrority)
accountProperties->Lookup( HStringReference(AccountAutorityPropertyName).Get(), authority.GetAddressOf())
AcquireDataStoreLock
AcquireDataStoreLockEx
AcquireSRWLockExclusive
ActivateInstance( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_PPIDeviceCredentialReader).Get(), &reader)
ActivateInstance( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &listener)
ACTIVESYNC_DATASOURCE_EXCHANGE == accountType
ActiveSyncCredential
ActiveSyncCredentialDefaultUser
ActiveSyncCredentialSchema
ActiveSyncUnistoreLockTemplate
added.first != nullptr
AggregateAccountSyncStats
AggregateSessionSyncStats
AirSync:FolderSyncFlags
AirSync:IsSearchResult
AirSync:LongID
AirSync:ParentID
AirSync:ParentServerID
AirSync:PermanentDelete
AirSync:PermanentID
AirSync:SyncOptionsHash
AllowSMIMEEncryptionAlgorithmNegotiation
AllowSMIMESoftCerts
apidata.googleusercontent.com
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-downlevel-shlwapi-l1-1-1.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
APPID
Assert
ASync3dF[^
ATL$__a
ATL$__m
ATL$__z
Authority
authority
AuthUri
AwaitOperationResult( webTokenRequestResultOperation.p, &result)
backendType == c_pMSAServiceType
Basic
Basic %hs
BytesToDigits
bytesWritten == bytesToCommit
C ;L$
C(QPh |
C@QPh
C<QPh
C8QPh
caldav.calendar.yahoo.com
CalendarAgeFilter
callContext
CallContext:[%hs] 
carddav.address.yahoo.com
cbWrite == chunkSize
CEMAPI.dll
CertCompareCertificateName
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertGetCertificateChain
CertGetCertificateContextProperty
CertGetEnhancedKeyUsage
CertGetNameStringW
charsConverted != 0
CHttpTransport_CreateInstance
client_id=
client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s
client_secret
clientSecret.reserve(clientSecretSize / sizeof(WCHAR))
ClientUnreadToReadCount
CloseDataStoreLock
CloseHandle
CloseHandle ( lockHandle )
CloseThreadpoolTimer
CLSID_MailSyncEngine == sds.engineID
CLSIDFromString
cNames
CoCreateInstance
CoCreateInstanceElevated
code=
CoGetObject
CoGetObject( monikerName.c_str(), &bindOptions, interfaceId, ppInstance)
CoInitializeEx
CommsService
CompanyName
CompareFileTime
componentId
componentName
CompressWhitespaceNW
consumers
Content-Type: application/x-www-form-urlencoded
convertedBufferSize != 0
ConvertVariantTimeToFileTime
ConvertVariantTimeToFileTime(0, &(lastSyncTimeAsDate.date), &lastSyncTime)
CoTaskMemFree
CoUninitialize
CoWaitForMultipleObjects
CreateAuthHandler
CreateDataStoreLock
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreateMutexW
CreateSemaphoreExW
CreateSyncBufferedStream
CreateThreadpoolTimer
CreateWrapFileStm
credential.assign(password)
credential->get_Password(&securePassword)
CredUtil_UpdatePasswordForAccount
CredVaultDelete
CredVaultRead
CredVaultWrite
CRYPT32.dll
CryptAcquireContextW
CryptAcquireContextW( tlx::replace(provider), 0, 0, 1, 0xF0000000)
CryptBinaryToStringA
CryptBinaryToStringA( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptBinaryToStringW
CryptBinaryToStringW( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptCreateHash
CryptCreateHash( provider, ((4 << 13) | (0) | 4), 0, 0, tlx::replace(hash))
CryptDestroyHash
CryptGetHashParam
CryptGetHashParam( hash, 0x0002, hashValue, &hashValueSize, 0)
CryptGetHashParam( hash, 0x0004, (LPBYTE)&hashValueSize, &dwordSize, 0)
CryptHashData
CryptHashData(hash, (LPBYTE)pUserId, (DWORD)[](size_t num) { DWORD out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\asutil.cpp", 524 ); } } while(0,0); return out; }(userIdSize), 0)
CryptReleaseContext
CRYPTSP.dll
CryptStringToBinaryA
CryptStringToBinaryA( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
CryptStringToBinaryW
CryptStringToBinaryW( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
currentContextId
currentContextMessage
currentContextName
currRefreshTokenValid
customAuthParams.append(escapedUsername.c_str())
customAuthParams.append(idParams)
customAuthParams.append(L"&")
customAuthParams.append(L"access_type=offline")
customAuthParams.append(L"username=")
D$ 9D$
D$ j@3
D$ Ph
D$ PhtD
D$ Pj
D$ QQ
D$ SV
D$ SVW
D$$9D$
D$$PV
D$$PW
D$$SP
D$(9D$
D$(9D$ t
D$(Ph
D$(Ph|X
D$(Pj
D$(SVW
D$,9D$$t
D$,Ph
D$@9D$8
D$@9D$8t
D$@hX
D$@SV3
D$\9D$T
D$\9D$Tt
D$\Ph
D$`9D$X
D$`Pj Z
D$`PS
D$<Q+
D$>Php
D$09D$(
D$09D$(t
D$09D$(t3S
D$0PVV
D$0QP
D$0SVWj@jA
D$49D$,t
D$4CV3
D$4Pj
D$4PW
D$8;D$<
D$89D$0t
D$d9D$\t
D$D9D$<t
D$DPh
D$DPj
D$dSP
D$H+D$
D$H9D$@t
D$HPVh0
D$hSVW
D$L9D$Dt
D$LPj
D$p9D$ht
D$P9D$Ht
D$Pj'PV
D$T9D$Lt
D$tj@SP
D$TPj
D$TSP
D$XPj
D$XSVW
data.reserve((1024 * 60)+1)
DebugBreak
DefaultLogging
DefaultStoreDirty
DefaultWindowsLiveCid
DelayLoadFailureHook
DeleteAuthCertHash
DeleteCriticalSection
DeleteDataSource
DeletedMailCount
DeleteFileW
DeleteHttpTransport
DeleteInProgress
DeleteOAuthRefreshTokenForPartnership
DeletePwd
Device
device_id=
deviceFamily < 100
DeviceID
deviceID.valid()
deviceModel.assign(values)
deviceName.assign(values)
DeviceNeedsProvisioning
DeviceType
DisablePIIStripping
dj0yJmk9QzFFaHJsUnphMjlnJmQ9WVdrOVZUVk9iMWhCTXpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYw--
DllCanUnloadNow
DllGetClassObject
DMCfgUtils.dll
DoesServerSupportAutoMoveSentItem
Domain
DuplicateHandle
dwRC == 0L
dwSize == sizeof(DWORD)
E,SVW
E_INVALIDARG != hr
Elevation:Highest!new:%s
email
Email
EmailAgeFilter
emails
Enabled
EnabledDavFeatures
EnableInProcTracingForProvider
encodedCredentials.reserve(encodedSize)
Engine
EnterCriticalSection
en-US
EOe41.3.6.1.4.1.311.71.1.1
error
Error
errorCode
EscapeURL
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Exception
Exchange
expirationTime
expires_in
expression
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f&8).
F@+F<
F0+F,
f9\$ u
factory->ActivateInstance(&inspectable)
FAILED(error)
FailFast
failureCount
failureId
FailureTrigger
failureType
FallbackError
FALSE
FileDescription
fileHandle != ((HANDLE)(LONG_PTR)-1)
fileName
filePos
FileTimeToSystemTime
FileVersion
FindErrorCode
FlushInProcTraceSession
Fonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourceinfo.cpp
FormatMessageW
FreeCredentialsHandle
FreeLibrary
FreeProws
FreeTransientObjectSecurityDescriptor
function
functionName
g_hServerReady != 0
GetAADToken
GetAccountSyncStats
GetAccountUsernameFromToken
GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &tokenBroker)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &webAuthCore)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebTokenRequest).Get(), &requestFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_WebAuthenticationBroker).Get(), &wabBrokerStatics)
GetAuthCertHash
GetAuthCertTargetAndUser
GetAuthority
GetBatterySaverWnfName
GetCurrentProcess
GetCurrentProcessId
GetCurrentSyncStats
GetCurrentSyncStatsForMessage
GetCurrentSyncStatsForStore
GetCurrentThread
GetCurrentThreadId
GetDefaultDeviceType
GetDefaultMsaWebAccountId
GetDefaultStoreDirty
GetDomainFromEmail
GetFileAttributesExW
GetFileSize
GetGalSearchResultsFolderAndPartnerGuidEx
GetGoldenPartnershipId
GetLastError
GetLocalTime
GetMeetingNotificationFromMessage
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMonitorDisplayState
GetMsaCustomerId
GetMsgStoreFromMessage
GetOAuthAccessTokenForPartnership
GetOAuthHelperForAccount
GetOAuthHelperForProvider
GetOrCreateNullPowerDependencyCoordinatorManager
GetOutgoingMessageSizeLimit
GetPartnerGUID
GetProcAddress
GetProcessHeap
GetProviderUri
GetSessionSyncStats
GetSHA1HashOfString
GetSyncTargetName
GetSyncWorkOnBehalfTicket
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTokenInformation
GetVersionExW
GetWebAccountId
GetWebAccountProvider
GetWebAccountProviderFromProviderId
GetWebTokenSilentlyEx
GetWebTokenTimedOut
Gmail
gmail.com
GO:#cR
GoldenPartnershipId
GoogleDefaultPadding
GoogleOAuthRedirectURI
GoogleOAuthTokenURI
GoogleOAuthURI
GoogleUserInfoURI
gvType == GUID_VALIDATION_GUID || gvType == GUID_VALIDATION_DATASOURCE
H!ZIg\
H0[0c0p0x0
HasNeverSyncedSuccessfully
HeapAlloc
HeapFree
hr == ((HRESULT)0L)
hr == ((HRESULT)0L) || 0 != rghObjects[1]
hr == ((HRESULT)0L) || hMutex != 0
hr == ((HRESULT)0x85050013)
hr == E_ACCOUNT_NOTFOUND
hr == S_OK
hr == S_OK || hMutex != 0
hr == S_OK || NULL != rghObjects[1]
hrDelete
hresult
HRESULT
hresult
HrGetOneProp
hrRewrite
HrSetOneProp
HTMLTruncation
http://
https%3A%2F%2Fmail.google.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcarddav
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email
https://
https://login.microsoft.com
icloud.com
IeRtUtil.dll
info != nullptr
InitializeCredVault
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeMeContact
InitializeMsaStore
InitializeServerReadyEvents
InitializeSRWLock
InitializeSyncStatus
InitOnceBeginInitialize
InitOnceComplete
initWithWindow->Initialize(callerWindow)
InProcLogger.DLL
InprocLogger.dll
inspectable.As(&initWithWindow)
internal\onecoreuapbase\inc\commspoomhelpers.h
internal\onecoreuapbase\inc\hashkeyhelper.h
internal\onecoreuapbase\inc\safemapiprops.h
internal\onecoreuapbase\inc\unistorehelper.h
internal\onecoreuapbase\inc\wrlwinrthelpers.h
internal\sdk\inc\wil\resource.h
InternalName
InvalidateOAuthAccessTokenForPartnership
IPM.Schedule.Meeting.Canceled
IPM.Schedule.Meeting.Notification.Forward
IPM.Schedule.Meeting.Request
IPM.Schedule.Meeting.Resp.Neg
IPM.Schedule.Meeting.Resp.Pos
IPM.Schedule.Meeting.Resp.Tent
IsACOn
isalnum
IsDebuggerPresent
IsFirstSyncEver
IsMatchingClientCertificateEx
IsNotSupposedToSync
IsPwdSaved
IsScreenOn
IsValidAADAuthUri
it != m_objectMap.npos()
it == 0
j)[SP
j;j<3
j=Zf;T^
jI^PQ
joBh8C
jPRPj
jPSPQRV
jsonObject->GetNamedString( HStringReference(L"access_token").Get(), accessToken.GetAddressOf())
kD$(<
kD$8<
kD$H<
kD$X<
kernelbase.dll
L$ HP
L$ Qh`
L$ Qh}
L$ Qj
L$ SV
L$$+C\
L$$+C<
L$(+D$
L$(Qhb
L$,_^[3
L$,SP
L$,SV
L$@Qh{
L$@Qj
L$@Qj7P
L$\_^[3
L$`Qj
L$<_^[3
L$<GW
L$0j(QP
L$0Qh|
L$0Qj
L$0Qj,P
L$8h`U
L$d_^[3
L$H+D$8
L$l_^[3
L$L_^[3
L$PQhz
L$PQj
L$pQj
L$t_^[3
LASTATTEMPTTIME
LastSuccessfulHeartbeat
LASTSUCCESSTIME
LastSyncAttempt
LastSyncSuccess
LCMapStringW
LeaveCriticalSection
LegalCopyright
lineNumber
listener->add_AccountAdded(addedHandler.Get(), &addedToken)
listener->add_AccountChanged(changedHandler.Get(), &changedToken)
listener->add_AccountDeleted(deletedHandler.Get(), &deletedToken)
LMNOPQYZ[_`abdemq
LoadHeartbeatValues
LoadLibraryExW
LoadLibraryW
LoadStringW
Local\SM0:%d:%d:%hs
LocalAlloc
LocalFree
LogHr
LogRollOverSize
LogSyncBiweeklySQM
lstrcmpiW
lstrcmpW
M QRSP
m.google.com
m_accountName.assign(L"ServerLog")
m_accountName.assign(pSettings->pAccountName)
m_activityRefCount == 0
m_clientId.assign(pClientId)
m_clientSecret.assign(pClientSecret)
m_completedEvent != 0
m_customAuthParams.assign(pCustomAuthParams)
m_datatypeList.push_back(guidType)
m_datatypeList.reserve(4)
m_endURL.assign(pEndURL)
m_EngineGuid != GUID_INVALID
m_ge.IsInitialized()
m_Name != 0
m_pPdcReference
m_redirectURL.assign(pRedirectURL)
m_refreshURL.assign(pRefreshURL)
m_scopes.assign(pScopes)
m_sources.push_back(mailSourcesList[i])
m_sources.push_back(serverSourcesList[i])
m_startURL.assign(pStartURL)
m_userNameHint.assign(pUsernameHint)
m_watchdogDisabled
mac.com
MailBodyTruncation
MailFileAttachments
MailIncoming
MailOutgoing
MailReceivedCount10kTo20k
MailReceivedCount20kTo40k
MailReceivedCount5kTo10k
MailReceivedCountOver40k
MailReceivedCountUnder5k
MailReceivedKB
mailSourcesList.push_back(guidSource)
mail-x
malloc
MAPIAllocateBuffer
MAPIFreeBuffer
MAPIInitialize
MAPILogonEx
MAPIUninitialize
MarkServerReady
MarkServerShutdown
MarkUserDataAccountAsHidden
MaxAttachmentSize
MaxCalendarAgeFilter
MaxEmailAgeFilter
MaxEmailBodyTruncationSize
MaxEmailHTMLBodyTruncationSize
MCCS\
MCCSPal.dll
me.com
Meeting:AllDay
Meeting:DisallowNewTimeProposal
Meeting:Occurences
Meeting:Reminder
Meeting:Timezone
memcmp
memcpy
memcpy_s
memmove
memset
message
Microsoft
Microsoft Corporation
Microsoft Smart Card Key Storage Provider
Microsoft.PPI.CredentialManagement.PPIDeviceCredentialReader
Microsoft.Windows.OneSync.DiagCritical
Microsoft.Windows.OneSync.DiagError
Microsoft.Windows.OneSync.DiagTrace
Microsoft.Windows.OneSync.DiagWarning
Microsoft.Windows.OneSync.SyncUtil
Microsoft.Windows.Unistack.FailureTrigger
MicrosoftDefaultPadding
MicrosoftOAuthRedirectURI
MicrosoftOAuthTokenURI
MicrosoftOAuthURI
MicrosoftUserInfoURI
Microsoft-Windows-MCCS-SyncUtil
MinutesBetweenFT
mode != Access_Create
module
MSFT-
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
N0`0l0~0
name.assign(pName)
ndrPropValues[0].ulPropTag == ((((ULONG)(0x0037))<<16)|((ULONG)(((ULONG) 31))))
ndrPropValues[1].ulPropTag == ((((ULONG)(0x0C1F))<<16)|((ULONG)(((ULONG) 31))))
NetworkHelper.dll
newAccessTokenValid
NextLogNumber
notificationData && (0 != byteCountNotificationData)
ntdll.dll
NULL != ppResumeState
NULL != pScopeMetadata
NULL != pServerName
NULL != pSyncPartner
NULL != sessionScope
NULL == sessionScope
nullptr != m_activationHandle
nullptr != m_pTpTimer
nullptr != pDisplayName
nullptr == buffer.insert( buffer.end(), readBuffer, readBuffer + readCount)
nullptr == m_activationHandle
NumberOfLogs
O PVS
OAuth
OAuthHelper_CreateInstance
OAuthRefreshToken
OG[Rz
OLEAUT32.dll
OMTP11
onecoreuap\base\appmodel\UserDataAccess\
onecoreuap\base\MailContactsCalendarSync\
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\AutoVariant.h
onecoreuap\base\mailcontactscalendarsync\porting\inc\entryidex.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Idl\objfre\i386\AccountAccessorTypes.h
onecoreuap\base\mailcontactscalendarsync\publishedinternal\inc\enummapitable.h
onecoreuap\base\mailcontactscalendarsync\publishedinternal\inc\syncdeadlockwatchdog.h
onecoreuap\base\mailcontactscalendarsync\publishedinternal\inc\syncpdcreference.h
onecoreuap\base\mailcontactscalendarsync\publishedinternal\inc\syncresettabletimer.h
onecoreuap\base\mailcontactscalendarsync\utils\syncsqm\lib\sqmpartnertype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accessorutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accountpropertyutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\activesyncsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\asutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\base64.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\basicauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\comelevation.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\contactsyncutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\credutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\delayeddbpropertiesstream.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\domutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easaadauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easheartbeatcontroller.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumdatatypereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsource.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourcereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourceregsimple.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\fileutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\guidenumerator.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\heartbeatalgorithmbase.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\jsonhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\liveendpoints.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\mapiutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\msautils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthaccountutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhelper.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthtokenutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\password.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\plaintextauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\pluginerror.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\policyutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\popimapsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ppiauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\radiomanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\registryutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\serverreadyindictor.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\smtpauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourcelock.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoaccountscallbackregistration.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncbufferedstream.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synccalendaringutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncds.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synchttputils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synclogger.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncsessionhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatshelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatusnotification.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\tokenbrokerutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\updaterestoreutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthsettings.cpp
OneStopFactory
OneSyncError
OPCOT
OpenMimeBufferedStream
OpenMutexW
OpenProcessToken
OpenProviderKey
OpenSemaphoreW
OpenThreadToken
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originTag.append(timeStamp)
originTag.assign(pOriginTag)
outcome
outlook.at
outlook.be
outlook.ca
outlook.ch
outlook.cl
outlook.cn
outlook.co.id
outlook.co.il
outlook.co.in
outlook.co.jp
outlook.co.kr
outlook.co.nz
outlook.co.th
outlook.co.uk
outlook.co.za
outlook.com
outlook.com.ar
outlook.com.au
outlook.com.br
outlook.com.hk
outlook.com.mx
outlook.com.my
outlook.com.pt
outlook.com.sg
outlook.com.tr
outlook.com.tw
outlook.com.vn
outlook.cz
outlook.de
outlook.dk
outlook.es
outlook.fi
outlook.fr
outlook.gr
outlook.hk
outlook.hu
outlook.ie
outlook.in
outlook.it
outlook.jp
outlook.lt
outlook.lv
outlook.my
outlook.nl
outlook.no
outlook.ph
outlook.rs
outlook.ru
outlook.se
outlook.sg
outlook.sk
outlookApp.CoCreateInstance(__uuidof(Application))
OutputDebugStringW
P1_HexInt32
P1_HResult
P1_Int32
P1_UnicodeString
P2_String
P3_UInt32
pAccessToken->assign(accessToken.GetRawBuffer(nullptr))
pAccount->get_UserName(userName.GetAddressOf())
pAccount->get_WebAccountProvider(&provider)
pAccountId->assign( WindowsGetStringRawBuffer(accountId.Get(), nullptr))
pAcessToken->assign(accessToken.GetRawBuffer(nullptr))
packageName.append(L"!")
packageName.append(storeIdAsString)
packageName.assign(c_emailProductId)
packages\ActiveSync\LocalState\DiagOutputDir
Padding
ParseDelimitedString
partnerId
PathCchAddBackslash
PathCchAddBackslash(pPath, pathLength)
PathCchCombine
PathCchCombine(pPath, pathLength, localDataPath, pRelativePath)
pBackendServiceType->assign(pServiceType)
pCidTemp.valid()
pCredential->assign(pPassword, passwordLength)
pCredential->get_Domain(&domain)
pCredential->get_Username(&userName)
pCredential->get_UserPrincipalName(&userPrincipalName)
pDeviceId->assign(deviceID)
pDeviceType->assign(deviceTypeDefault)
pdhrResult != 0
pDisplayState != nullptr
pDomain->assign(pszDomainName)
pEndPoint->assign(pStringValue.get())
pEndToken == pToken
pEntryId->assign(tempEntryId)
Performance
pEventData
pGuid != 0
pIdParams->append(L"&device_model=")
pIdParams->append(L"&device_name=")
pIdParams->append(L"device_id=")
PIMPR_DISPLAY_NAME == propertyValues[0].propid
PIMSTORE.dll
pIsTimeoutError
pKey != 0
pKey != NULL
pMsgStore
pName
policyKey.append(L"\\")
policyKey.append(partnerString)
policyKey.append(pPolicyInfo->pwszPolicyKey)
policyKey.append(pPolicyInfo->pwszPolicyName)
position != nullptr
postLocation.assign(m_refreshUri)
POutlookAppManager_CreateInstance
pPeriod != nullptr
PPPPVRP
pProperty->assign( WindowsGetStringRawBuffer(propertyValue.Get(), nullptr))
pProvider->get_Id(providerId.GetAddressOf())
ppSyncStatusNotification
ppTagArray
ppwszPassword
PQQQQ
PreferredBodyType
pRefreshToken->assign(refreshToken.GetRawBuffer(nullptr))
pReportError
pRequest->get_Properties(&requestProperties)
pResult->get_ResponseData(&responseData)
pResult->get_ResponseStatus(&requestStatus)
ProductName
ProductVersion
Prop_AnsiString
Prop_Dword
Prop_FileTime1
Prop_HexInt32
Prop_String
Prop_String1
Prop_String2
Prop_String3
Prop_StringA_1
Prop_StringA_2
properties->HasKey( HStringReference(pPropertyName).Get(), &hasProperty)
properties->Insert( HStringReference(L"client_secret").Get(), HStringReference(pClientSecret).Get(), &replaced)
properties->Insert( HStringReference(parameter.first.c_str()).Get(), HStringReference(parameter.second.c_str()).Get(), &replaced)
properties->Lookup( HStringReference(pPropertyName).Get(), propertyValue.GetAddressOf())
props!=0
props!=NULL
props==0
props==NULL
protocolReturnData.assign(pAuthCodeResponse)
providerErrorText
providerWithAuthotity->get_Authority(authority.GetAddressOf())
PRVAT
pServerName->assign(L"m.google.com")
PSSh8
pString->Get(&length, &pStringValue)
pSyncAttemptTime
pSyncSuccessTime
pszMultiByteStr
pszValue
pTags->cValues == (sizeof(*RtlpNumberOf(spta.aulPropTag)))
pTags->cValues == ARRAYSIZE(spta.aulPropTag)
pTargetType == AuthTargetType::GetAuthTargetType(AuthTargetKind::ExchangeActiveSync)
pToken->assign( WindowsGetStringRawBuffer(token.Get(), nullptr))
pTokenExpirationTime->assign(conversionBuffer)
pTokenType->assign(tokenType.GetRawBuffer(nullptr))
pUrlParam->append(escapedUrl.c_str())
pUser->assign(((&userVar)->bstrVal))
pUserName->assign( WindowsGetStringRawBuffer(userName.Get(), nullptr))
pUsername->assign(account.GetRawBuffer(nullptr))
pUsername->assign(hstrAccount.GetRawBuffer(nullptr))
pusOid != 0
pValue == tlx::iwstring_view_ascii(pStringValue, length)
pValue->append(uri, beginIndex, valueLength)
pValue->assign(GetVariantString(&propValue, L""))
PVQh?
PVSh?
PVSSh
PVVVVC
PWSh?
pwszWideCharStr
Q 9Q(}
q(9>u
Qf99u=h
Qj6Q3
Qj9h 5
QjaW3
QjcQ3
QjCQB
QjJhH.
QjkW3
QjLh 5
QjlQ3
QjNQ3
QjoW3
QQhD(
QQhH(
QQQh`
QQQQQ
QQSVW
QQSVWh
QQVW3
QQVWQ
QRPh$a
QRPh$b
QRPhDa
QRPhda
QRPhdb
QRPhDb
QueryPerformanceCounter
QueryTransientObjectSecurityDescriptor
QVh 5
QVh0]
QVh0^
QVhd]
QVhT^
r=VWju_
r0;1t1`2
RadioManager::MarkInterfaceAsActive
RaiseException
RaiseFailFastException
reader->Read(&credential)
ReadFile
ReadOAuthRefreshTokenForPartnership
ReadPasswordForPartnership
reason
ReceivedMailCount
refresh_token
RefreshUri
RefreshWebTokenSilentlyEx
RegCloseKey
RegCreateKeyExW
RegDeleteKeyW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
RegisterSsoAccountsCallback
RegOpenKeyExW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseDataStoreLock
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
REPORT.IPM.Note.NDR
request.append( (OAuthGrantType::Implicit == grantType) ? L"token" : L"code")
request.append(accountInfoURI)
request.append(escapedRedirectUri.c_str())
request.append(escapedUsername.c_str())
request.append(L"&")
request.append(L"&client_secret=")
request.append(L"&code=")
request.append(L"&grant_type=authorization_code")
request.append(L"&grant_type=refresh_token")
request.append(L"&login_hint=")
request.append(L"&redirect_uri=")
request.append(L"&refresh_token=")
request.append(L"&response_type=")
request.append(L"&scope=")
request.append(L"?access_token=")
request.append(L"?client_id=")
request.append(L"client_id=")
request.append(m_clientId)
request.append(m_clientSecret)
request.append(m_customAuthParams)
request.append(m_scopes)
request.append(m_startURL)
request.append(pAccessToken)
request.append(pRefreshToken)
request.append(protocolReturnData, beginIndex, authCodeLength)
request->get_Properties(&properties)
requestFactory->Create( pProvider, HStringReference(pScope).Get(), HStringReference(pClientId).Get(), &request)
requestParameters.emplace(L"authority", pAuthUri).first != nullptr
requestParameters.emplace(L"resource", utl::move(resourceUri)).first != nullptr
requestProperties->Insert( HStringReference(RequestAutorityPropertyName).Get(), authority.Get(), &replaced)
RequiredEncryptionSMIMEAlgorithm
RequiredSignedSMIMEAlgorithm
RequireEncryptedSMIMEMessages
RequireManualSyncWhenRoaming
RequireSignedSMIMEMessages
res == 0L
ResetEvent
ResolveDelayLoadedAPI
resource
resourcesLib.valid()
resourceUri.assign(pResourceUri, uriLength)
response->get_Token(token.GetAddressOf())
responseBody.reserve(++wideCount)
responseData->GetAt(0, &response)
result->get_DefaultWebAccount(&account)
ReturnHr
rgName
RoActivateInstance
RoGetActivationFactory
rpmsg.message
RPSToken
RQhHj
RRRRRRhN
RSDS\
RtlCaptureContext
RtlClearThreadWorkOnBehalfTicket
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetThreadWorkOnBehalfTicket
RtlIsCriticalSectionLockedByThread
RtlIsCriticalSectionLockedByThread(&(_pAtlModule->m_csStaticDataInitAndTypeInfo.m_sec))
RtlIsMultiSessionSku
RtlReportException
RtlSetThreadWorkOnBehalfTicket
s!Qh>
s_objectManager != 0
s_objectManager != NULL
SafeCustomerId
SafeCustomerId is: '%S', parsed value: %I64d, end index: %d
SafeLPWSTR
ScheduledSyncPeriod
Scheme
Scope
scopes->append(pProviderInfo->ScopeAccountInfo)
scopes->append(pProviderInfo->ScopeCalendar)
scopes->append(pProviderInfo->ScopeContacts)
scopes->append(pProviderInfo->ScopeMail)
scopes->append(pProviderInfo->ScopeSeperator)
sdct-w
sdpp-w
securePassword->Get(&passwordLength, &pPassword)
SelectionLanguage
SelectionNamespaces
SentMailCount
Server
ServerLog
serverSourcesList.push_back(guidSource)
ServerSync:AttOID
ServerSync:FileURI
ServerSync:FolderName
service::ssl.live.com::MBI_SSL
SetAuthCertHash
SetBatterySaverWnfName
SetConversationId
SetDefaultStoreDirty
SetEvent
SetLastError
SetMonitorDisplayState
SetOutgoingMessageSizeLimit
SetSyncWorkOnBehalfTicket
SetThreadpoolTimer
SetUnhandledExceptionFilter
SHCreateMemStream
SHGetKnownFolderPath
SHGetKnownFolderPath( knownFolderId, KF_FLAG_DONT_VERIFY, nullptr, replace(localDataPath))
ShouldReportAssertionFailure
sizeof(CEENTRYID) == storeEntryIdPropVal->Value.bin.cb
Sleep
SleepConditionVariableSRW
SMIMEAlwaysEncrypt
SMIMEAlwaysSign
SNProviderAccountName
Software\Microsoft\AccountSettings
Software\Microsoft\ActiveSync
Software\Microsoft\ActiveSync\Environment
Software\Microsoft\ActiveSync\Partners
Software\Microsoft\ActiveSync\Security\Provision
source != GUID_INVALID
source != GUID_NULL
SPERF_TAG_LOAD_XMLDOM
srcText
SSj P
SsoId
SsoProviderMSA == providerType
SsoTokenTarget
SspiCli.dll
SSQPV
StateTransition
Status
StoreId
storeIds[0] != storeIds[1]
StoreType
strcspn
StringCbLengthA(pData, 2147483647 * sizeof(CHAR), &stringSize)
StringCbLengthW( credentialValue, credentialValueMaxLength * sizeof(WCHAR), &pwdSizeInBytes)
StringCchCatW(filePath, (sizeof(*RtlpNumberOf(filePath))), pFileName)
StringCchCatW(pwszBuffer, cchBufferSize, s_ServerTypeTable[type])
StringCchCatW(pwszBuffer, cchBufferSize, wszDataSource)
StringCchCopyExW( target, targetLength, pPrefix, &pEnd, &countCharsRemaining, 0)
StringCchCopyW( m_logPostfix, (sizeof(*RtlpNumberOf(m_logPostfix))), pSettings->logFilePostfix)
StringCchCopyW( m_logPrefix, (sizeof(*RtlpNumberOf(m_logPrefix))), pSettings->logFilePrefix)
StringCchCopyW(lineBuffer + HEX_LINE_CHARS, destinationSize, L"\r\n\0")
StringCchCopyW(pBuffer, bufferLength, value.c_str())
StringCchCopyW(pDestinationFileName, 260, pDefaultName)
StringCchCopyW(pPassword, passwordLen, pTmp)
StringCchCopyW(pwszBuffer, cchBufferSize, wszCredentialName)
StringCchCopyW(pwszPassword, dwPasswordLen, szNoPassword)
StringCchCopyW(retVal, addressLength, pMatchedAddress)
StringCchCopyW(retVal, bufferLength, localUsername.c_str())
StringCchLengthW(pBody, c_maxNDRBodySize, &contentLength)
StringCchLengthW(pMatchedAddress, (2147483647 - 1), &addressLength)
StringCchLengthW(pSubjectFormat, c_maxSubjectSize, &subjectFormatSize)
StringCchLengthW(pwszBuffer, cchBufferSize, &cchTempTargetName)
StringCchLengthW(pwszServer, MAX_SERVER_NAME_LENGTH, &cchServerSize)
StringCchPrintfA( partnerHeader, (sizeof(*RtlpNumberOf(partnerHeader))), c_partnerMapping, partnerGuid, TraceGetPartnerId(m_partner))
StringCchPrintfA(timeStamp, (sizeof(*RtlpNumberOf(timeStamp))), "[%02d/%02d/%04d %02d:%02d:%02d.%03d] \r\n", SystemTime.wDay, SystemTime.wMonth, SystemTime.wYear, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wMilliseconds)
StringCchPrintfExW( deviceTypeFamily, sizeof(*__countof_helper(deviceTypeFamily)), nullptr, nullptr, 0x00000800, L"%u", deviceFamily)
StringCchPrintfW( pFileName, 260, L"%s%s%s-%d.txt", m_logPrefix, sanitizedFileName, m_logPostfix, logNumber)
StringFileInfo
StringFromGUID2
StringFromGUID2 ( partnerGuid, wszDataStoresLockName, 40 )
StringFromGUID2(dataTypeID, wszType, (sizeof(*RtlpNumberOf(wszType))))
StringFromGUID2(partner, partnerString, (sizeof(*RtlpNumberOf(partnerString))))
StringFromGUID2(source, wszDataSource, (sizeof(*RtlpNumberOf(wszDataSource)))) != 0
strspn
StrStrIW
SUCCEEDED(_IsValidToken(currentToken, &valid)) && (FALSE != valid)
SUCCEEDED(hr)
SUCCEEDED(hr) && (info != NULL)
SUCCEEDED(hr) && (info != nullptr)
success
SVWh8
SVWj@3
SVWj@jA
SVWj<j=
SVWj8
SVWjE
SVWPh0x
SVWu4jS_W
SVWu6
SVWu7
Sync utilities for mail, contacts, calendar
SYNC_CERT
SyncGetDeviceUniqueID
SyncPassword
SyncPdcReference_WatchdogReport
SyncPdcReference_WatchdogsEnabled
syncPeriodInMinutes != invalidPeriod
SyncRes.dll
SyncServer
syncServices.CoCreateInstance(__uuidof(POSyncServices))
SyncSqmUpdateStats
SyncStatusEventType_None == pEventData->eventType || SyncStatusEventType_Reset == pEventData->eventType
SyncUseSSL
SyncUtil
SyncUtil.dll
SYNCUTIL.dll
SyncUtil.pdb
SyncUtil_OAuth_GetTokensFromAuthCode
SyncUtil_OAuth_RefreshTokens
SyncUtil_XMLParse_LoadFailFilePos
SyncUtil_XMLParse_LoadFailHresult
SyncUtil_XMLParse_LoadFailReason
SyncUtil_XMLParse_LoadFailSrcText
SyncUtil_XMLParse_LoadFailUrl
SyncWerReportComponentName
SyncWerReportGenerator
SyncWhenRoaming
SystemTimeToFileTime
t!SVP
t$ PQ
T$ RP
t$ Yt@+
t$$PQ
T$$RP
T$,;T$
t$,PQ
t$<WP
t$0PQ
t$DPQ
t$pVQ
t%h@+
t(j<^
t:j7^V
t[PQR
t]jN_W
t+Qho
t=jE^V
t0ju^
t1j_^V
t8WjJ_W
TASKX
tDjV^V
TempContact:DisplayName
TEMPH
TEMPP
TEMPT
tempUserId.append(L"\\")
tempUserId.append(pUserName)
tempUserId.assign(pDomain)
TerminateProcess
tg!\$
threadId
tlx::append_sprintf(tempString, L"%s=", paramName)
tlx::assign_sprintf( *pAuthorization, L"%s %s", m_authScheme.c_str(), pCredential)
tlx::assign_sprintf( *pAuthorization, L"Basic %hs", encodedCredentials.c_str())
tlx::assign_sprintf( keyPath, L"%s\\WebAuth\\%s", c_wszActiveSyncKey, pProviderId)
tlx::assign_sprintf( m_account, L"%s\\%s", domain.c_str(), userId.c_str())
tlx::assign_sprintf( monikerName, L"Elevation:Highest!new:%s", classIdString)
tlx::assign_sprintf( requestBody, L"client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s", _GetClientId().c_str(), _GetClientSecret().c_str(), pRefreshToken, _GetScope().c_str())
tlx::assign_sprintf( subject, pSubjectFormat, c_maxSubjectSize - subjectFormatSize, pOriginalSubject)
tlx::assign_sprintf( wideCredentials, L"%s:%s", GetAccount(), pCredential)
tlx::assign_sprintf(userAgent, L"%s%s-%d/%u.%u.%u", c_wszHttpUserAgent, pwszDevice.get(), deviceFamily, OSVersionInfo.dwMajorVersion, OSVersionInfo.dwMinorVersion, OSVersionInfo.dwBuildNumber)
tlx::assign_wide( multiByteCredentials, wideCredentials, 0)
token
token_type
tokenBroker->GetDefaultSignInAccountAsync( &getDefaultSignInAccountResultOperation)
TokenBrokerError
tokenType
Tonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\internetmailauthtargettype.cpp
Trace
Translation
true == m_watchdogDisabled
TryGetDefaultSignInAccountInfo
tUVSV
u j:^
u j\^
u jl^
u!h((
u#j/^
u#jf^
u#jg^
u#jL^
u#jV^
u#jY^
u$WSQ
u(j ^
u(j"^
u(jQ^
u(jS^
u)j[^
u)jX^
u*QhY
u,j!_
u,ja^
u.QhY
u/j[^
u/jt^
u/jT^
u:j\^
u:j6_W
u:jm^
u:WjP_W
u?Sj=[S
U|SzZK#2J
u<jU^
u1j:^V
u1jK^V
u1jX[S
u2j8_W
u2jj^
u2jR^
u3j]^
u4j`^V
u5j*[S
u5j@^
u5j<^V
u5j>^V
u5jB^
u5jC^V
u5jo^V
u5jp^V
u7j"[
u7j]^V
u8jn^V
u9j0^
UIntPtrToInt(buffer.size(), &bufferSize)
ULongAdd((ULONG)[](size_t num) { ULONG out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\password.cpp", 139  ); } } while(0,0); return out; }(pwdSizeInBytes), sizeof(WCHAR), &blobSizeInBytes)
UnhandledExceptionFilter
UninitializeServerReadyEvents
uNPPV
UpdatedMailCount
UpdateYahooAccountType
uQj`^
uri.assign(pProtocolReturnData)
uriFactory->CreateUri(HStringReference(m_redirectURL.c_str()).Get(), &callbackUri)
uriFactory->CreateUri(HStringReference(request.c_str()).Get(), &startUri)
url.append(pAppend->c_str())
url.append(pAppend->c_str(), c_MaxParamSize)
UrlUnescapeW
UrlUnescapeW(pValue->data(), nullptr, nullptr, 0x00100000)
UserDataTimeUtil.dll
UserDataTypeHelperUtil.dll
username=
USOIDfromCEENTRYID
uZj;^
V,_^[
V_VT(&nameVar) == VT_BSTR
value.assign(pValue)
VarFileInfo
VaultAddItem
VAULTCLI.dll
VaultCloseVault
VaultCreateItemType
VaultFree
VaultGetItem
VaultGetItemType
VaultOpenVault
VaultRemoveItem
VerifyDataStoreLockOwner
vLhH'
VQPWV
VS_VERSION_INFO
VSWQh
VVSWVh
VVVVGW
VVVVj
VWh,X
VWjEjF
VWjPj
VWPh|{
w PQQQQS
W0^0{0
wabBrokerStatics->AuthenticateWithCallbackUriAndContinue( startUri.Get(), callbackUri.Get())
WaitForMultipleObjects
WaitForServerReady
WaitForSignalOrShutdown
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
Warning
watchdogDurationMs
watchdogStartTime
wcscat_s
wcschr
wcscspn
wcsncmp
wcsnlen
wcsrchr
wcsstr
wcstok_s
webAuthCore->FindAccountAsync( pProvider, HStringReference(pAccountId).Get(), &findAccountOperation)
webAuthCore->FindAccountProviderAsync( HStringReference(pProviderUri).Get(), &findAccountProviderOperation)
webAuthCore->FindAccountProviderWithAuthorityAsync( HStringReference(pProviderUri).Get(), HStringReference(pAuthority).Get(), &findAccountProviderOperation)
webAuthCore->GetTokenSilentlyAsync( pRequest, &webTokenRequestResultOperation)
webAuthCore->GetTokenSilentlyWithWebAccountAsync( pRequest, pAccount, &webTokenRequestResultOperation)
WebTokenRequestStatus_Success != requestStatus
WEVT_TEMPLATE
WideCharToMultiByte
WilError_02
wilResult
win:Error
win:Informational
win:Start
win:Stop
win:Verbose
win:Warning
Windows.Data.Json.JsonObject
Windows.Foundation.Uri
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Authentication.Web.WebAuthenticationBroker
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsLiveActiveSync
WindowsLiveServiceTarget
WindowsLiveStorage
WindowsMail
WINHTTP.dll
WinHttpCrackUrl
WinHttpCrackUrl(pResourceUri, 0, 0, &urlComponents)
WinHttpCrackUrl(providerUri.c_str(), 0, 0, &urlComponents)
WinSqmAddToStreamEx
WinSqmEndSession
WinSqmStartSession
WjEjF
WLAccountSyncEnabled
WriteOAuthRefreshTokenForPartnership
WritePasswordForPartnership
wszName != 0
WVSh@|
WWVSWh
www.google.com
WWWRQ
X0e0j0
Xf9D$
Xf9D$ 
XPath
xZSVW
y Qjn3
y!j\^
y!jF^
y$jK^
y%jb^
y%jl^
y%Qjj
y&j"^
y&QjH3
y(QjB3
y)Qh<
y*j=^
y*jC^
y*Qh8
y*QjH3
y,Qjc3
y.Qh?
y/jW^
y/jz^
y?Qhx
y]Qhg
Y__^[
y1jf[S
y2jF^
y5jC_
y7ju^
Yahoo
yahoo
YahooDefaultPadding
YahooOAuthRedirectURI
YahooOAuthTokenURI
YahooOAuthURI
YahooUserInfoURI
yBQji
ycal-w
y-j"^
y-j(^
y-j5^
y-j6^
y-j9^
y-jb[
y-jh^
y-jt^
y-jw^
yMQjH3
y'Qj4
y'QjfQ3
y-Qjm3
ySQh_
YY_^]
YY9?u
