    '1' = s '131473'
 A^_^
 A_A^_
 A_A^A\
 ClipboardPasteWW
 fFlagsWW
 H3E H3E
 IAG_RightLeftWWWH&
 IRM_AutoSpaceWWW
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!0pClassID
!ConfidenceAlternates
!IRCACM_FullW(#
!This program cannot be run in DOS mode.
"*AppearanceWW
"_userHBITMAP
"MpohHwndW
"XRemoteBindToStorageW
#txMouseWW
$IMP_CrosshairWWWt'
$pwszServerPrincNameW
%aAlternatesFromSelectionW
%hgrfFlags
%IES_RecognizingW
%pRemoteMediumWWW
%SetTransform
&DISPID_ScrollBarsWWW
&hInproc64WWW0
&IRC_StrokeReorderWWWx
&pformatetcWW
&RemoteCopyToX
&rgrfStatFlagW
(8OvInkRecognizerCharacterAutoCompletionMode(#
(BpInkInsertModeWWW
(libOffsetWWW
(NewInkWW
)SplitWWW
*IAG_RightDownWWWH&
*SelCharOffsetWWW
,*cbSizeWW
,1CurrentHeightWWW 
,BackgroundRecognizeWithAlternatesWWW
,RemoteGetDataHereWWW
,SelfIntersectionsWWW
.?AVbad_alloc@std@@
.?AVexception@@
.?AVlength_error@std@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.00cfg
.aKeyDownW
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.giats
.hGeneric
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pAppearanceW
.pdata
.rdata
.rdata$brc
.rdata$T$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.tls$
.tls$ZZZ
.xdata
.xdata$x
/IPCM_NoCompressionWW
/RemoteBindToObjectWW
/StrokeWW
:IMP_SizeNESWt'
:pvarSelCharOffsetWWW
;DataL
;eM11`
;eM12`
;eM21`
;eM22`
;IRM_LineMode
;pchEaten
;t$8|
?,cColumns
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBV0@@Z
??0exception@@QEAA@XZ
??1exception@@UEAA@XZ
??1type_info@@UEAA@XZ
?PasswordLengthWW@
?pmkRight
?tagXFORM
?terminate@@YAXXZ
?what@exception@@UEBAPEBDXZ
@.data
@.reloc
@.rsrc
@A^_^
@A^_^[]
@A_A^_
@A_A^_^]
@dwReserved1W
@dwReserved2W
@PropertyValueWWW
@SUVWATAVAWH
@SUVWH
@SVWH
@UATAUAVAWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWATAWH
@USVWAVH
@UVWH
@UWAVH
@v'fA
@VWAUAVAWH
[dwReduceHowFarWW
[gDeletedW
[plMaxLengthW
[XFORMWWW(
\$ A;
\$ A9]
\$ E3
\$ UH
\$ UVWH
\bmTypeWW
\cbWW
\MSFTEDIT.DLL
\RICHED20.DLL
\sfClearDirtyW
]@H9_
]_RemoteOnViewChangeWW,
]ButtonsW
]DISPID_IeeMouseUpWWW,
]dwValueW
]IAG_DownLeftH&
]IDWW
^dwCapabilitiesWWx
^PrefixTextWW
^pvWW
__C_specific_handler
__CxxFrameHandler3
_+ReleaseBoundObjectsW
_amsg_exit
_callnewh
_COAUTHINFOW
_COSERVERINFOWWWx
_CxxThrowException
_DISPID_SelItalic
_FILETIMEWWWL
_IInkEditEvents InterfaceWI
_initterm
_LARGE_INTEGERWW 
_MSuffixWW
_purecall
_remoteMETAFILEPICTW0
_STGMEDIUM_UNION
_ULARGE_INTEGERWX
_userBITMAPW
_userCLIPFORMATW
_userHENHMETAFILEWWW$
_XcptFilter
` AUAVAWH
`.rdata
`A_A^_^]
`A_A^A\_^][
`A_A^A]A\_^]
`ppFontWW
{ UAVAWH
{ClipboardCopyWWW
{IRO_CopyPenW
{Left
{VerticalComponentWWW`
{wireFLAG_STGMEDIUMWW
|$ AVH
|$ E3
|$ UH
}h><PP:
}hMetaFilePictWWW
}IAG_TapWH&
}IInkCursorWW
}IMP_NoDropWWt'
}RemoveStrokesWWW@
~IAG_ArrowUpWH&
~IsRunningWWW
+DISPID_IeeCursorDown,
+ListenWW
+pformatetcIn
+pmkObjectNameWWW
+StatusWW
+TSelTextW
<abDataWW
=GetDisplayNameWW
=LineAlternatesWW
>{uXD
>=uYH
>fE;/
>ResetWWW`
>SetRectangle
>yMove
0" IDM_Text
0$aIRS_InterruptedW
0$IIRO_NoOperationW
0)UIRM_PrefixOk
0,_IAG_LeftRightWWWH&
0.aIRC_LeftAndDownWx
0/!DISPID_RefreshWW,
0/HrtfFlatW
0?'ICBS_Unavailable
0]ODISPID_IeeMouseDownW,
0`BDISPID_IeeMouseMoveW,
0}GIAG_DownRightLongWWWH&
0}nIEF_DefaultW
0~<DISPID_SelColorW
02QDISPID_IeeSelChangeW,
040904B0
05:IMP_SizeNSWWt'
06DrtfBothW
06QIAG_UpWWH&
09]IAG_SemiCircleRightWH&
0A^_]
0A^_^[]
0A_A^_
0A_A^A\_^
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^]
0A_A^A]A\_H
0A_A^A]H
0aCIAG_UpLeftWWH&
0f$IEF_RemoveFromOriginalWW
0f{IAG_UpLeftLongWWH&
0l!IAG_ExclamationWH&
0lpDISPID_RTSelLengthWW
0N<THWC_CursorMustTouchh)
0NSDISPID_IeeClickW,
0O;IMP_SizeWEWWt'
0O?IMP_Handt'
0PArtfFixedSingleWW
0Q{ICF_DefaultW
0r5fA
0v9IAG_UpRightWH&
0vCountWWWL
0w/NO_BUTTONWWW
0y&DISPID_IeeStroke,
0yfICB_ExtractOnlyW
0yMouseWW<(
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
2_userHGLOBALp
2ClipboardFormats
2FColorWWW
2IsPacketPropertySupportedWWW
2rtfHorizontalWWW
2Stat
3IAG_DoubleTapWWW
3riid
4!RectangleWWW
4peGreenW
4RemoteOnRenameWW
5dBackgroundRecognizeW
5IInkCursorButton
6VfRelease
7plSelStartWW
7SelectionRectangleWW
7uCharacterAutoCompletionModeW
8 ClipboardCopyWithRectangleWW
8.?TabletPropertyMetricUnit
8:=wireASYNC_STGMEDIUMWd
8\QInkBoundingBoxModeWWl
8_D_userHMETAFILEWW
83GISequentialStreamWWW
88f_userHPALETTEWWW
88pBorderStyleConstants
8A^_^[
8c/IBindCtx
8DFtagDVTARGETDEVICEWWWt
8GcInkApplicationGestureWWWH&
8hg_GDI_OBJECTW
8hrIInkRecognitionResultWWW
8ppwireCLIPFORMATWW
8Q$IStreamW
8q>IInkExtendedPropertiesWWL
8V>IPersist
8xQIRunningObjectTableW
8ybIInkStrokeDispWW
8zlInkPenTipWWW
9|$@@
92DrawingAttributesWWW
9A98u6A9x
9GetSizeMaxWW
9IRC_PrefersParagraphBreakingx
9v(fA
A!~0H
A!~0I
A^_^[]
A^A]_^]
A_A\_^]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^]H
A_userHMETAFILEPICTWW
A+_HA
a9InkStrokeWWW@
AcquireSRWLockExclusive
AddStrokesAtRectangle methodWWB
AddStrokesAtRectangleWWW
AddStrokesWW
AddWordW
ADISPID_MultiLine
advapi32.dll
advf4!
AGetClassIDWW
AlternatesWithConstantPropertyValues
AlternateWWW
aMouseIconWWWt'
AntiAliasedW 
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-l2-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
Appearance
AppearanceConstantsW
ApplyOnPenWidthW
appunkObjectW
Arrow and hourglass mouse pointer.&
Arrow and question mark mouse pointer.
Arrow mouse pointer.WW(
ASetResultOnStrokesWW@
atagPALETTEENTRYW
ATAVAWH
atimeWWW
ATL:%p
AtlThunk_AllocateData
AtlThunk_DataToCode
AtlThunk_FreeData
AtlThunk_InitData
AttributesWW
BackColor
BackColorWWW
Barrel Switch
Baseline
BbmPlanes
bExtractedInk
Bezier Cusps propertyW
BezierCuspsW
BezierPoints
Black pen color.WW
bmBitsPixelW
bmHeight
bmWidthBytes
bmWidthW
BorderStyle
BorderStyleW
Both horizontal and vertical scroll bars.W
BoundingBox propertyWW
BoundingBoxModeW
BoundingBoxW@
bPenTipWW
bpvarSelUnderline
ButtonWW
bxppmkPrefixWW,
C^mmWW0
CallWindowProcW
CancelWW
CanPaste
CanPasteWW
CapabilitiesFlagsWWW
cbStruct
CDISPID_SelCharOffset
cfContext
cfFormatt
ChangeWW<(
Char<(
CharNextW
CharPrevW
CIAG_DoubleCurlicueWWH&
cICF_CopyMask
ClearWWWL
ClickWWW<(
Clip methodWWW
ClipboardCopyW
ClipboardCopyWithRectangle
ClipboardModesWW
ClipboardPaste=
Clone methodWW
CloneWWW
CloseEnhMetaFile
CLSID
CLSID = s '{E5CA59F5-57C4-4DD8-9BD6-1DEEEDD27AF4}'
clsidWWW
clSizeWW\
CoCreateInstance
Combination of the colors common to both the pen and the display.W
Combination of the colors common to both the pen and the inverse of the display.WW
Combination of the colors common to the background color and the inverse of the pen.WW
Combination of the colors in the pen and in the display color, but not in both.WWW
Combination of the display color and the inverse of the pen color.
Combination of the pen color and the display color.WWW
Combination of the pen color and the inverse of the display color.3
CommitWW
CommonPrefixWith
CompanyName
ComposeWithW
CompressionModeW
Contains a collection of CursorButton objects that represent the buttons on a given cursor.WWW
Contains a collection of user-defined Strokes collections.O
Contains the collection of Stroke objects that represent a single ink stroke.W
Contains the ExtendedProperty objects that represent application-defined data that is stored with a stroke.WWW!
Contents
ContextFlags
Control appears 3D; paints with three-dimensional effects.C
Control appears flat; paints without visual effects.WW:
Control has a fixed single border.=
Control has no border."
Copy the ink to the clipboard.)
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not set the character Autocomplete mode.
Could not set the factoid.'
Could not set the flags.WW
Could not set the guide.WW
Could not set the strokes.
Could not set the suffix or the prefix.WWW
Could not set the word list.WWm
CreateCompatibleBitmap
CreateCompatibleDC
CreateDataAdviseHolder
CreateDCW
CreateEnhMetaFileW
CreateILockBytesOnHGlobal
CreateOleAdviseHolder
CreateRecognizerContextW
CreateRectRgnIndirect
CreateSolidBrush
CreateStreamOnHGlobal
CreateStroke
CreateStroke methodWWWW
CreateStrokes methodWW
CreateWindowExW
Cross mouse pointer (crosshair pointer).WW
cRowsWWWT$
ctimeWWW
CurrentColor 
CurrentPenTipWWWL
CurrentRasterOperationWW
CurrentState
CurrentWidth 
CurVer = s 'InkEd.InkEdit.1'
CuspsWWW
Custom mouse pointer specified by the MouseIcon property.WF
CustomDataWW
CustomStrokesWWW
Cut the ink and copy it to the clipboard.W%
CwityH
D$ A;E
D$ E3
D$ H+
D$$9C
D$(9C
D$(E3
D$,9C
D$@+D$P
D$@9D$Pt
D$\tKH
D$`H+
D$HE3
D__MIDL_IAdviseSink_0002WP
D__MIDL_IAdviseSink_0003Wh
D9|$8~3M
D9c@u
D9khI
D9u t
DataObjectWW
DblClick<(
DecodePointer
DEFAULT
Default mouse pointer.
Defines values for performing raster operations on drawn ink.Wq
Defines values for the compression modes used to save the Ink object to a serialized format.WW
Defines values that determine what part of a stroke to remove from an Ink object.W
Defines values that specify how a selection is displayed on the control.WWc
Defines values that specify how ink is inserted onto the control.Wg
Defines values that specify how ink is persisted.WU
Defines values that specify the collection mode settings for drawn ink - whether ink collection is disabled, whether ink is collected, or whether ink and gestures are being collected.WWW
Defines values that specify the copy options of the clipboard.
Defines values that specify the format of ink that is stored on the clipboard.
Defines values that specify the type of mouse pointer to be displayed.M
Defines values that specify whether a paragraph is aligned along the left margin, along the right margin, or between the left and right margin of the control.
Defines values that specify whether an error occurred during recognition, and if so, which error(s) occurred.W|
Defines values that specify whether the control appears flat or 3D.WWW
Defines values that specify whether the control has a border.WI
Defines values that specify whether the control has no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both horizontal and vertical scroll bars.WWK
Defines values that specify whether the pen tip is round or rectangular.WWk
Defines values that specify which mouse button was pressed.WWW/
DefWindowProcW
Delete
DeleteCriticalSection
Deleted propertyWW
DeleteDC
DeleteObject
DeleteStroke methodWWW&
DeleteStroke<(
DeleteStrokes methodWW
DeleteStrokesWWW
DescenderWWW
DestroyAcceleratorTable
DestroyWindow
DIAG_ChevronUpWWWH&
DIPF_InkSerializedFormatW
DIRM_MaxW
DIRM_WordModeOnly
Dirty property   W
DisableNoScroll
DisableNoScrollW
DisableThreadLibraryCalls
DispatchMessageW
DISPID_DisableNoScrollWW
DISPID_DragIconW
DISPID_DrawAttrW
DISPID_EnabledWW
DISPID_FactoidWW
DISPID_GetGestStatus
DISPID_HwndW
DISPID_IeeChange,
DISPID_IeeDblClickWW,
DISPID_IeeGestureWWW,
DISPID_IeeKeyDownWWW,
DISPID_IeeKeyPressWW,
DISPID_IeeKeyUpW,
DISPID_IeeRecognitionResultW
DISPID_InkEditEvents,
DISPID_InkEditWW
DISPID_InkInsertMode
DISPID_InkModeWW
DISPID_LockedWWW
DISPID_MaxLength
DISPID_RecognizerWWW
DISPID_RecoTimeoutWW
DISPID_RTSelText
DISPID_SelBoldWW
DISPID_SelFontNameWW
DISPID_SelFontSizeWW
DISPID_SelInksDisplayModeWWW
DISPID_SelInkWWW
DISPID_SelRTFWWW
DISPID_SelUnderlineW
DISPID_SetGestStatus
DISPID_StatusWWW
DISPID_TextRTFWW
DISPID_TextW
DISPLAY
'Distance
djpvarSelItalicWWW
dlibMove
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
Do not copy the ink to the clipboard.W~
DoesPropertyExistWWW 
DomainLength@
DomainWW@
DrawAttrsWWW
DrawnBox
DUMMYUNIONNAMEWW<
DUnadviseWWW4!
dwAspect
dwAuthnLevel
dwAuthzSvcWW
dwClassContextWW
dwConnection
dwDirectionW
dwHighDateTimeWW
dwImpersonationLevel@
dwLockTypeWWX
dwLowDateTimeWWWL
dwOrigin
dwRegisterWW
dwTickCountDeadlineW
dwTrackFlags
E H9O8t!H
E(=csm
E*SelUnderline
e|selectionStartWW
e0A_A^A]A\]
E8=csm
eDAdviseW4!
eDxW`
eDyW`
eeCapabilities
EH=csm
Eh=csm
EIAG_CircleWWH&
EIRC_BoxedInputWWx
El`I2
Enabled
EnabledW
EnableWindow
EncodePointer
EnterCriticalSection
EnumDAdviseW
Enumerate next item in Buttons
Enumerate next item in PropertiesW
EnumFormatEtcWWW
EnumObjectParamW
EnumRunningW
ePA_A^A]A\]
epmkOtherMonikerW,
EqualRect
Ex=csm
EX=csm
ExtendedPropertiesWW
ExtenedProperties collectionWW
ExtractFlags
ExtractStrokes methodW
ExtractStrokesWW
ExtractWithRectangle
ExtractWithRectangle methodWWW
f;L$8H
f?tdDeviceNameOffsetWWt
f9(t"
f9\$H
f9E'u
Factoid
FactoidW
fB9\ ,u
fB9\!,
fD;;u
fD;0t
fD;8u~H
fD9|$ht
fD9>t
fD90u
fD94Fu
fD9jl
fD9kl
fForward,
fIAdviseSinkW
FileDescription
FileVersion
FillRect
FindIntersectionsWWW
FindResourceExW
FInkRecoGuideT$
FIsSystemMonikerW
FitToCurveWW
Flag 
Flag that can be used to verify whether any formats are present by checking against it.WWW^
FlushInstructionCache
fOnlyIfNotGenericWWW
For a Strokes collection, returns the recognized text of the strokes.W
ForceRemove
ForceRemove {E5CA59F5-57C4-4DD8-9BD6-1DEEEDD27AF4} = s 'Microsoft InkEdit Control'
ForceRemove 'Control'
ForceRemove 'Insertable'
ForceRemove 'Programmable'
ForceRemove 'ToolboxBitmap32' = s '%MODULE%, 101'
Forces a complete repaint of a control.WWW
fp>GuF
fRecoStringWW`"
FreeLibrary
FtHD;
g_TranslateWWW
GDI32.dll
Gestures
GestureW
GetCapture
GetClassInfoExW
GetClassInfoW
GetClientRect
GetClipBox
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetCursorInfo
GetCursorPos
GetDC
GetDeviceCaps
GetDoubleClickTime
GetFlattenedBezierPoints
GetFocus
GetGestureStatus<(
GetHGlobalFromStream
GetKeyState
GetLastError
GetMapMode
GetMessageExtraInfo
GetModuleFileNameW
GetModuleHandleW
GetObjectParamWW
GetObjectType
GetObjectWWW
GetPacketDataWWW
GetPacketDescriptionPropertyMetrics method
GetPacketDescriptionPropertyMetricsW
GetParent
GetPointsWWW
GetProcAddress
GetProcessHeap
GetPropertyMetricsWW
GetRectangle
GetRectangleIntersectionsWWW
Gets the InkTransform member data."
GetStrokesFromStrokeRangesWW
GetSysColor
GetSystemDirectoryW
GetSystemInfo
GetSystemMetrics
GetSystemTimeAsFileTime
GetTextRangeFromStrokesW
GetTickCount
GetTimeOfLastChangeW
GetUserDefaultLangID
GetWindowLongPtrW
GetWindowLongW
gIAG_StarH&
GlobalAlloc
GlobalFree
GlobalLock
GlobalUnlock
g-pcbReadW
grfCommitFlagsWWX
grfLocksSupportedWWW
grfModeW
grfStateBits
GuideDataWWW
GuideWWW
H!l$@H
H;}(t
H;G@t
h_userFLAG_STGMEDIUMW
H{BottomWW
H+A H
H9]Xu
H9_ s
H9_0t
H9A r
H9A v
H9Kxu
H9Q r H
H9wxt(H
hA^_^[
Hand mouse pointer.WWW9
HardwareCapabilities
hBitmapW|
HbstrPropertyName
HcD$8H
HeapAlloc
HeapDestroy
HeapFree
HeightWW
hGdiHandleWW
hGlobalW
hHEnhMetaFileWWW
HIntersectPercent
HIRC_PrefersSegmentationWx
HitTestCircle method W
HitTestWithLasso
HitTestWithRectangle
HitTestWithRectangle methodWWW
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
hNWidthWWW
Horizontal scroll bar only.WWW
HorizontalComponentW
Horizontally
HorizontalMultiplier
Hourglass mouse pointer (wait).WWW
hPalette
hRemoteW
hrpszDisplayNameWW
I beam mouse pointer.WI
i_FLAGGED_BYTE_BLOBWW
I94$t
I9GxA
IAG_AllGesturesWH&
IAG_ArrowDownWWWH&
IAG_ArrowLeftWWWH&
IAG_ArrowRightWWH&
IAG_CheckWWWH&
IAG_ChevronDownWH&
IAG_ChevronLeftWH&
IAG_ChevronRightH&
IAG_CurlicueH&
IAG_DoubleCircleH&
IAG_DownH&
IAG_DownLeftLongH&
IAG_DownRightWWWH&
IAG_DownUpWWH&
IAG_LeftDownH&
IAG_LeftH&
IAG_LeftUpWWH&
IAG_RightUpWH&
IAG_RightWWWH&
IAG_ScratchoutWWH&
IAG_SemiCircleLeftWWH&
IAG_SquareWWH&
IAG_TriangleH&
IAG_UpRightLongWH&
IB|.atlthunk.dll
IBBM_CurveFitWWWl
IBBM_Defaultl
IBBM_NoCurveFitWl
IBBM_PointsOnlyWl
IBBM_UnionWW
ICB_Copy
ICB_DefaultW
ICB_DelayedCopyW
ICBS_DownWWW0*
ICBS_UpW
ICF_BitmapWW
ICF_EnhancedMetafile
ICF_InkSerializedFormatW
ICF_Metafile
ICF_None
ICF_PasteMaskWWW
ICF_SketchInkWWW
ICF_TextInkW
IDataObjectW
IdentifierWWL
IDISPID_UseMouseForInputW
IDM_InkW
IEF_CopyFromOriginal
IEM_DisabledX
IEM_InkAndGestureWWW
IEM_InkWX
IEM_InsertTextWW
IEnumFORMATETCWW
IEnumMoniker
IEnumSTATDATAWWW4!
IEnumStringW
IgnorePressureWW 
IInkCursor InterfaceWW7
IInkCursorButton Interface
IInkCursorButtons InterfaceWWW[
IInkCursorButtonsWWW0*
IInkCustomStrokes InterfaceWWW:
IInkCustomStrokesWWW
IInkDisp
IInkDisp Interface
IInkDrawingAttributes InterfaceWWW@
IInkDrawingAttributesWWW 
IInkEdit Interface8
IInkExtendedProperties InterfaceWWk
IInkExtendedProperty
IInkExtendedProperty Interfacef
IInkRecognitionAlternate
IInkRecognitionAlternate Interface+
IInkRecognitionAlternates InterfaceWWWG
IInkRecognitionAlternatesWWW
IInkRecognitionResult InterfaceWWW)
IInkRecognizer InterfaceWWg
IInkRecognizerContext InterfaceWWW
IInkRecognizerGuide InterfaceWE
IInkRecognizerGuideW
IInkRecognizerWW
IInkRectangle InterfaceWWW6
IInkRectangleWWW
IInkStrokeDisp InterfaceWW
IInkStrokes InterfaceWM
IInkStrokesW
IInkTablet InterfaceWW`
IInkTabletWW
IInkTransform InterfaceWWWK
IInkTransformWWW`
IInkWordList
IInkWordList InterfaceL
IMP_ArrowHourglassWWt'
IMP_ArrowQuestionWWWt'
IMP_ArrowWWWt'
IMP_CustomWW
IMP_DefaultWt'
IMP_HourglassWWWt'
IMP_IbeamWWWt'
IMP_SizeAllWt'
IMP_SizeNWSEt'
'IMP_UpArrowWt'
IndexWWW
InflateRect
InitializeCriticalSection
Ink collection is disabled.WWW)
Ink is collected and single stroke gestures are accepted.W
Ink propertyWW
InkClipboardModesWWW
InkDisplayModeWW
InkEd.dll
InkEd.DLL
InkEd.dll
InkEd.InkEdit = s 'InkEdit Class'
InkEd.InkEdit.1 = s 'InkEdit Class'
InkEd.pdb
InkEdit
INKEDIT
InkEdit ControlWWW
InkEditReflectClass
InkEditStatusWWW
InkEditW
InkExtendedPropertyWL
InkExtractFlagsW
InkInsertMode
InkMode
InkModeWX
InkMousePointerWt'
InkPersistenceCompressionModeWWWT
InkPersistenceFormat
InkRasterOperationWW
InkRecoAlternate
InkRecognitionConfidence`"
InkRecognitionModesW
InkRecognizerCapabilitiesWWWx
InkStrokesWW@
INKTEXTBOX
InprocServer32 = s '%MODULE%'
Insert As InkWA
Insert As Text
InterlockedPopEntrySList
InterlockedPushEntrySList
InternalName
IntersectionsWWW
IntersectRect
invalid string position
InvalidateRect
Inverse of CopyPen.WWWP
Inverse of MaskPen.WWWA
Inverse of MergePen.WWT
Inverse of the display color.WO
Inverse of XOrPen.+
InverseW
IPCM_DefaultT
IPCM_MaximumCompressionWT
IPersistStreamWW
IPF_Base64GIFWWWT
IPF_Base64InkSerializedFormatWWW
IPF_GIFW
IPT_Ball
IPT_RectangleWWW 
IRC_AdviseInkChangeWx
IRC_AlphaWWWx
IRC_ArbitraryAngleWWx
IRC_Beta
IRC_CharacterAutoCompletionInputx
IRC_CursiveWx
IRC_DontCarex
IRC_DownAndLeftWx
IRC_DownAndRightx
IRC_FreeInputWWWx
IRC_Intermediate`"
IRC_LinedInputWWx
IRC_ObjectWWx
IRC_PersonalizableWWx
IRC_Poor
IRC_PrefersArbitraryAngleWWWx
IRC_RightAndDownx
IRC_StrongWW`"
IRC_TextPredictionWWx
IRCACM_PrefixWWW(#
IRCACM_RandomWWW
IRM_CoerceWW
IRM_DisablePersonalizationWW
IRM_None
IRM_TopInkBreaksOnly
IRO_BlackWWW
IRO_MaskNotPenWW
IRO_MaskPenNotWW
IRO_MaskPenW
IRO_MergeNotPenW
IRO_MergePen
IRO_MergePenNotW
IRO_NotCopyPenWW
IRO_NotMaskPenWW
IRO_NotMergePenW
IRO_NotXOrPenWWW
IRO_WhiteWWW 
IRS_InkAddedFailedWW
IRS_NoErrorW
IRS_ProcessFailedWWW
IRS_SetAutoCompletionModeFailedW
IRS_SetFactoidFailed
IRS_SetFlagsFailedWW
IRS_SetGuideFailedWW
IRS_SetPrefixSuffixFailedWWW
IRS_SetStrokesFailed
IsChild
IsWindow
IsWindowEnabled
IsWindowVisible
Item methodWWW7
IupInkDisplayModeWH&
J|EndInkInputW
jDISPID_SelAlignmentW
JFlattenedBezierPointsWWW`
JhInprocW0
jInkClipboardFormatsW
JInverted
JIRS_SetWordListFailedWWW
jTPMU_Default
k:ppvResultWWW,
k{RemoteOnCloseWWW
KERNEL32.dll
KeyPress
kIInkEdit
KillTimer
KNewStrokeWWW
KRemoveWordWW
kselectionLengthW
KValueWWW
L$ E3
l$ VWAWH
L$(fD
L$0E3
L$0H3
L$8H3
L$8Hc
L$HHc
L$PH3
L$pH3
L$XH3
L$xH3
L$XH3
l;pbstrSelText
L9A0t
L9kPt
L9t$P
L9v0t
LanguagesWWW
LcA<E3
LcEoLcM
LcU0I
lCursorWW
LeaveCriticalSection
LEFT_BUTTONW
LegalCopyright
LGetRunningObjectTableWWW
lindexWW
LineNumberWW
LItdPortNameOffsett
Load methodWWW
LoadCursorW
LoadLibraryExA
LoadLibraryExW
LoadLibraryW
LoadResource
localeWWx
LocalServer32
Locked
LockedWW
lpszFileName
LPtoDP
lpunkObjectWW
lstrcmpiW
lstrcpynW
lstrcpyW
m DistanceFromPacketWW
malloc
MaximumInputRectangleWWWh)
MaximumW
MaxLength
MaxLengthWWW
MDD+M@D+
memcmp
memcpy
memcpy_s
memmove_s
memset
MergeWordListWWW
MessageBeep
method AlternatesFromSelectionG
method ClipWWW
method FindIntersectionsWW 
method GetBoundingBoxW
method GetFlattenedBezierPointsWWW
method GetPacketDataWW 
method GetPacketValuesByPropertyWW 
method GetPointsWW
method GetRectangleIntersectionsWW
method HitTestCircleWW
method HitTestWithLassoWWW
method NearestPointWWW
method SetPacketValuesByPropertyWW
method SetPointsWW
method SplitWW*
MIAG_UpDownWWH&
Microsoft
Microsoft Corporation
Microsoft InkEdit Control 1.0W
Microsoft Tablet PC InkEdit Control
MIDDLE_BUTTONWWWd
MidlineW
mIEM_InsertInkWWW 
MinimumW
'MiscStatus' = s '0'
MKeyUpWWW<(
ModesWWW
ModifyDrawingAttributesW
ModifyTopAlternateWW
Module
MouseButtonW
MouseDownWWW<(
MouseIcon
MouseMoveWWW
MousePointer
MouseUpW
Move methodWWW
MS Sans Serif
msvcrt.dll
MTabletHardwareCapabilitiesWWh)
mtimeWWW
MultiByteToWideChar
MultiLine
MultiLineWWW
N!LockRegionWW
nCreateStrokesWWW
NearestPoint
NewWordW
nIInkRecognizerContextWWW@
NInkCursorButtonState
No drop mouse pointer."
No error.WG
No mouse button was pressed.WW"
No operation; the output remains unchanged.WWWB
No scroll bars.WWW
NoRemove
NoRemove CLSID
NoteChangeTimeWW
nRevertWWX
NScaleTransformWW
ntdll.dll
NumberOfPacketsSetWW
NumberOfPointsSetWWW
O_COAUTHIDENTITYW@
O_InkRecoGuideWWWT$
ObjectTypeWW
Occurs when a key is pressed while the control has focus.Wo
Occurs when a key is released while the control has focus.Q
Occurs when an application-specific gesture is recognized.
Occurs when the contents of the control or a property value have changed.Wf
Occurs when the control is clicked.WWW8
Occurs when the current selection of text in the control has changed or the insertion point has moved.`
Occurs when the InkEdit control gets results manually from a call to the Recognize method or automatically after the recognition timeout has fired.WWW
Occurs when the mouse pointer is moved over the control.WW
Occurs when the mouse pointer is over the control and a mouse button is pressed.WW9
Occurs when the mouse pointer is over the control and a mouse button is released.WP
Occurs when the user draws a new stroke on any tablet.:
Occurs when the user presses (KeyDown) or releases (KeyUp) a key while an object has the focus. WW:
Occurs when the user presses and releases a mouse button and then presses and releases it again over an object.WWW#
OffsetRect
oFlagsWWW
ole32.dll
oleaut32.dll
OLEAUT32.dll
OleRegEnumVerbs
OleRegGetMiscStatus
OleRegGetUserType
OleSelfRegister
Only ink is collected, creating a stroke.W9
OriginalFilename
p AWH
p9ColumnsW
PA^_]
pA^_^[]
PA_A^_^]
PA_A^A\_^[]
PacketCount propertyWW
PacketCountW
PacketDataWW
PacketDescription property
PacketDescriptionWWW
packetPropertyNameWW
PacketSize propertyWWW
PacketSizeWW
PacketValues
pAdvSink
palNumEntriesWWW
palVersionWWD
ParseDisplayName
pAscender
Password@
PatBlt
pAuthIdentityDataWWW
pAuthInfoWWWx
pbindoptsWWW
pBorderStyle
pbstrSelRTFW
pbstrTextRTF
pbstrTextWWW
pBufferW
pcbSizeW
pcbWrittenWW 
pceltFetched
pdwConnectionWWW
pdwHashW
pdwMksysd
pdwRegisterW
peBlueWW
peFlagsWD
Pen color.B
peRedWWW
PersistenceFormatWWW
pfiletimeWWW
pformatetcOutWWW8
pGetTransform`
pIRO_NotW
plCountW
plibNewPositionWX
pListenW
plSelLengthW
plSizeWW
PlugAndPlayIdWWW
pmediumW
pmkNewlyRunningW,
pmkOther
pmkToLeftWWW
pmkWd
PointOnStrokeWWW
PointsWW
PointWWW
Polyline Cusps propertyWWW
PolylineCuspsWWW
PostMessageW
ppenumFormatEtcWd
ppenumMonikerWWW
ppenumWW
ppmk,
ppmkCompositeWWW,
ppmkReducedW,
ppmkRelPathW,
ppmkToLeftWW
pprotWWW
ppstmWWW
ppszDisplayNameW,
ppunkInkCustomStrokesWWWl
ppunkWWWl 
ppvObjWW,
PRecognizerWW
PreferredPacketDescriptionWW
PrefixWW
pReflectW
ProductName
ProductVersion
ProgID = s 'InkEd.InkEdit.1'
PropertiesWW 
property _NewEnumW
property BezierPointsW
property CustomStrokes
property DrawingAttributes
property ExtendedProperties collection
property Strokes collectionWWW&
property StrokesWW#
PropertyName
Property's dataWWWP
PropertyType
Provides the best tradeoff between save-time and storage for the typical application.WS
pSelInkW
pServerInfoW
pstatstg
pStatusW
pstg<
PtInRect
pUnkForReleaseWW
pValX
pvarSelAlignment
pvarSelBoldW
pvarSelColor
pwcsName
PxpStgmedWd
q_MergeWWW
Q{pvarSelFontSizeW
QDISPID_RTSelStartWWW
QHash
QIsStringSupportedWWW
qpszKeyWW
QRecognitionFlags
qTargetRectangleW
QuadPart
QueryGetData
QueryPerformanceCounter
qyExt
R(GetCanonicalFormatEtcWWW
rAddW
RaiseException
RasterOperationW
realloc
RecoContextW
RecognitionResultWWW@
RecognitionStatusWWW
RecognitionTimeoutWW
RecognizerGuideW
'RecognizeWWW
RecoTimeout
Rectangular pen tip.WWH
rectDrawnBoxT$
rectWritingBoxWWT$
ReduceWW
RefreshW<(
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
Register
RegisterClassExW
RegisterClassW
RegisterObjectBoundW
RegisterObjectParamW
REGISTRY
RegOpenKeyExW
RegQueryInfoKeyW
RegSetValueExW
RelativePathToWW
ReleaseCapture
ReleaseDC
ReleaseSRWLockExclusive
RemoteGetBindOptions
RemoteGetDataWWW
RemoteNextWW
RemoteOnDataChangeWW
RemoteOnSaved
RemoteReadWW
RemoteSeekWW
RemoteSetBindOptions
RemoteSetDataWWW
RemoteWriteW
RemoveRecognitionResultW(#
Removes the RecognitionResult associated with the Strokes collection.Wl
RemoveWWL
Represents a 3x3 matrix that, in turn, represents an affine transformation.WWW9
Represents a single ink stroke.WWW
Represents access to a rectangle for Automation users.=
Represents general information about a cursor button, such as the globally unique identifier (GUID) that uniquely identifies the button.WW]
Represents general information about the tablet cursor.WWW$
Represents the ability to add your own data to a variety of objects within the Tablet PC object model.
Represents the ability to perform ink recognition, retrieve the recognition result, and retrieve alternates.WWh
Represents the ability to process ink, or handwriting, and translate the strokes into text or gestures.WWW*
Represents the actions that allow you to collect ink, recognize it, and display it in text form.WW_
Represents the area used by the recognizer in which ink can be drawn.Wf
Represents the collected strokes of ink within an ink space.WW
Represents the digitizer device of the Tablet PC that receives tablet device messages or events.WW3
Represents the objects that are applied to ink when it is drawn.WWY
Represents the result of the recognition.W"
Represents the word list that can be used to improve the recognition result.WW5
reservedX
ResolutionWW
RestoreDC
Returns a bit mask that defines the hardware capabilities of the tablet, such as whether a cursor must be in physical contact with the tablet to report its position.W
Returns a Font object.0
Returns a handle to a control.
Returns a packet description that describes the packet properties of the recognizer.WW
Returns a value that specifies whether the control is idle, collecting ink, or recognizing ink.WWWT
Returns an array of identifiers that describe the properties that the recognizer supports.T
Returns or sets a value indicating the type of mouse pointer to be displayed.WU
Returns or sets a value indicating whether an InkEdit control can accept and display multiple lines of text.WW
Returns or sets a value indicating whether the contents of the control can be edited.Ww
Returns or sets a value indicating whether there is a maximum number of characters an InkEdit control can hold and, if so, specifies the maximum number of characters.l
Returns or sets a value that allows for toggling the display of the selection between ink and text.WWW(
Returns or sets a value that controls the alignment of the paragraphs in an InkEdit control.WWt
Returns or sets a value that determines the appearance of the control - whether it is flat (painted with no visual effects) or 3D (painted with three-dimensional effects).WWW
Returns or sets a value that determines the color of text in the InkEdit control.W
Returns or sets a value that determines whether scroll bars in the control are disabled.WW\
Returns or sets a value that determines whether text in the InkEdit control appears on the baseline (normal as a superscript above the baseline, or as a subscript below the baseline.T
Returns or sets a value that determines whether the control has a border.W
Returns or sets a value that determines whether the InkPicture or InkEdit control can respond to user-generated events.WWW
Returns or sets a value that indicates whether the mouse is used as an input device.WW
Returns or sets a value that specifies how ink is inserted onto the control - either as text or as ink.WWW
Returns or sets a value that specifies whether ink collection is disabled, whether only ink is collected, or whether ink and gestures are being collected.
Returns or sets a value that specifies whether the font style of the currently selected text in the control is bold.WWv
Returns or sets a value that specifies whether the font style of the currently selected text in the control is italic.z
Returns or sets a value that specifies whether the font style of the currently selected text in the control is underlined.Q
Returns or sets access to the rectangle struct.WWWM
Returns or sets access to the XFORM struct (C++ only).
Returns or sets how the pen color interacts with the existing background colors on the display when ink is drawn.W
Returns or sets the array of embedded Ink objects (if displayed as ink) contained in the current selection.WWW2
Returns or sets the background color of the control.WW4
Returns or sets the bottom position of the InkRectangle object.WWW>
Returns or sets the box that is physically drawn on the tablet's screen, in which writing takes place.4
Returns or sets the character Autocomplete mode that determines when characters or words are recognized.WWf
Returns or sets the custom mouse icon.
Returns or sets the drawing attributes to apply to ink as it is drawn.
Returns or sets the element in the first row, first column of the affine transform matrix represented by an InkTransform object.WW
Returns or sets the element in the first row, second column of the affine transform matrix represented by an InkTransform object.W
Returns or sets the element in the second row, first column of the affine transform matrix represented by an InkTransform object.W
Returns or sets the element in the second row, second column of the affine transform matrix represented by an InkTransform object.
Returns or sets the element in the third row, first column of the affine transform matrix represented by an InkTransform object.WW
Returns or sets the element in the third row, second column of the affine transform matrix represented by an InkTransform object.W6
Returns or sets the factoid that a recognizer uses to constrain its search for the recognition result.
Returns or sets the flags that specify how the recognizer interprets the ink and determines the result string.
Returns or sets the font size of the selected text within the control.
Returns or sets the font used to display the currently selected text or the character(s) immediately following the insertion point in the InkEdit control.F
Returns or sets the height of the pen when drawing ink with this DrawingAttributes object.
Returns or sets the left position of the InkRectangle object.W?
Returns or sets the length of time, in milliseconds, between the last ink stroke collected and the beginning of text recognition.W
Returns or sets the midline height, or distance from the baseline to the midline, of the guide box.WWWI
Returns or sets the number of characters selected.
Returns or sets the number of columns in the guide box.WWWc
Returns or sets the number of rows in the guide box.WW7
Returns or sets the pen tip to use, ball or rectangle, when drawing ink with this DrawingAttributes object.WWW 
Returns or sets the recognizer guide structure for Automation developers.W9
Returns or sets the recognizer to use for recognition.k
Returns or sets the RecognizerGuide to use for ink input.Wu
Returns or sets the right position of the InkRectangle object./
Returns or sets the starting point of text selected; indicates the position of the insertion point if no text is selected.2
Returns or sets the string containing the currently selected text; consists of a zero-length string if no characters are selected.Y
Returns or sets the text (in .RTF format) in the current selection of an InkEdit control.W'
Returns or sets the text contained in an object.WW&
Returns or sets the text of the control, including all Rich Text Format (RTF) codes.WWz
Returns or sets the text string that helps improve recognition results by providing a context for newly entered text.Wn
Returns or sets the transparency value of drawn ink.WW
Returns or sets the type of scroll bars, if any, to display in the control.WWWX
Returns or sets the user-defined word list used in the recognition process to improve the recognition results.:
Returns or sets the value that specifies whether Bezier smoothing is used to render ink; this means that ink will be rendered as a series of curves instead of as lines between pen sample points.
Returns or sets the value that specifies whether drawn ink will automatically get wider with increased pressure of the pen tip on the tablet surface.W
Returns or sets the value that specifies whether the foreground and background colors along the edge of the ink are blended to increase the smoothness of an ink stroke.WW4
Returns or sets the width of the pen when drawing ink with this DrawingAttributes object.WZ
Returns the ascender line of a RecognitionAlternate object that exists on a single line.WWY
Returns the baseline of a RecognitionAlternate object that exists on a single line.WWWS
Returns the best alternate of the recognition result.W\
Returns the capabilities of the recognizer, such as whether the recognizer supports character Autocomplete, whether it supports free, lined, or boxed input, etc.WX
Returns the collection of alternates where each alternate in the collection consists of the segments with the same property values.WWW
Returns the collection of alternates where each alternate in the collection is on a separate line.
Returns the collection of application-defined data stored in an object.WWW-
Returns the collection of cursor buttons that are available on a given cursor.6
Returns the descender line of a RecognitionAlternate object that exists on a single line.W?
Returns the identifier of an object.WWS
Returns the Ink object that contains a collection of strokes.W
Returns the level of confidence - strong, intermediate, or poor - of the recognition result.WW
Returns the level of confidence - strong, intermediate, or poor - that a recognizer has in the recognition of a RecognitionAlternate object or of a gesture.WWS
Returns the line number of the ink that makes up the alternate.WWW
Returns the list of language and sub-language combinations that the recognizer supports.WWZ
Returns the maximum input rectangle, in tablet device coordinates, that the tablet supports.WW
Returns the midline for a RecognitionAlternate object that exists on a single line.WWWX
Returns the number of objects or collections contained in a collection.WWWb
Returns the plug-and-play identifier of the tablet.WWW\
Returns the recognition result of the Strokes collection.WE
Returns the recognizer used within the recognizer context.
Returns the result string of the alternate.WWW
Returns the state of a cursor button, such as whether the button is unavailable, up, or down.WN
Returns the strokes that correspond to the smallest RecognitionAlternates collection that contains a specified range of recognized text within the alternate.W
Returns the tablet device to which a cursor belongs, or that an InkCollector object is currently using to collect cursor input.WWW
Returns the value that specifies whether the cursor is the inverted end of the pen.WWW
Returns the vendor name of the recognizer.
RevokeObjectBoundWWW
RevokeObjectParamWWW,
RevokeWW
rGDegreesW`
rgeltWWW
RICHED20.DLL
RichEdit20W
RICHEDIT50W
rIES_CollectingWW
RIGHT_BUTTON
RightWWW4
riidResultWW
rIMoniker
Rotate methodW
RotateWW
Round pen tip.
RSDSV
rtfCenterWWW
rtfLeftWd
rtfNoBorderW
rtfNoneW
rtfRightd
rtfThreeDWWW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
S!tdDriverNameOffsetWWt
Save methodWWW
SaveDC
ScaleToRectangle
ScaleToRectangle methodWWW
ScaleTransform methodW
ScreenToClient
ScrollBars
ScrollBarsConstantsW
ScrollBarsWW
SelAlignment
SelAlignmentConstantsWWWd
SelBoldW
SelChangeWWW<(
SelColor
SelectObject
Self Intersections propertyWWW
SelFontNameW
SelFontSizeW
SelInksDisplayModeWW
SelInksW
SelItalicWWW
SelLengthWWW
SelRTFWW
SendMessageW
SetCapture
SetFocus
SetGestureStatus
SetLastError
SetMapMode
SetPacketValuesByPropertyWWW
SetParent
SetPointsWWW
SetRect
Sets the InkTransform member data.
SetTimer
SetUnhandledExceptionFilter
SetViewportExtEx
SetViewportOrgEx
SetWindowExtEx
SetWindowLongPtrW
SetWindowLongW
SetWindowOrgEx
SetWindowPos
SetWindowRgn
S-GetStrokesFromTextRangeW
Shear methodWW
Shears the stroke or strokes by the specified horizontal and vertical factors.5
ShearWWW`
ShiftKey<(
ShowCursor
ShowWindow
sInkRecognitionStatus
Size all mouse pointer.WWW
Size N S mouse pointer (double arrow pointing north and south.I
Size NE SW mouse pointer (double arrow pointing northeast and southwest).W>
Size NW SE mouse pointer (double arrow pointing northwest and southeast).W=
Size W E mouse pointer (double arrow pointing west and east).W
SizeofResource
Sleep
SleepConditionVariableSRW
SourceStrokesWWW
spalPalEntryW
Specifies (gets) the interest of the object/control in a given gesture.WWWG
Specifies (returns) the elements of the InkRectangle object in a single call.WJ
Specifies (sets) the elements of the InkRectangle object in a single call.
Specifies (sets) the interest of the object/control in a given gesture.WWW4
Specifies another word list to merge into a given word list.WWn
Specifies reflection in either horizontal or vertical directions.WN
Specifies that a collection of strokes should be recognized, and that recognition results are returned from the recognition.WW
Specifies that all custom strokes be cleared from the collection of custom strokes.WWW
Specifies that background recognition be stopped when it was started with a call to BackgroundRecognize or BackgroundRecognizeWithAlternates.W8
Specifies that ink be expected to form words.WA
Specifies that ink be persisted by encoding the ISF as a base64 stream.WWWi
Specifies that ink be persisted by using a base64 encoded fortified GIF.WW1
Specifies that ink be persisted using a GIF file that contains ISF as meta-data embedded within the file.WH
Specifies that ink be persisted using Ink Serialized Format (ISF).G
Specifies that ink be stored as a CopyMask.WWWN
Specifies that ink be stored as a metafile, or a list of commands that can be played back to draw a graphic.WW.
Specifies that ink is not expected to form words, but rather will be interpreted as a picture.-
Specifies that no more ink will be added to the context.WW
Specifies that recognition should occur.WWG
Specifies that the Copy mode be used.W>
Specifies that the recognizer should recognize the associated strokes and fire a recognition event when recognition is complete.WW
Specifies that the recognizer should recognize the associated strokes and fire recognition with alternates event when recognition is complete.X
Specifies that the selection be displayed as text.H
Specifies the amount, measured in degrees, to rotate the ink in the view transform around the specified point, or if no point is specified, the origin.WWWA
Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.W]
Specifies the bitmap to use as the background.R
Specifies the collection of alternates that have the same value as this alternate for the given property type.o
Specifies the collection of strokes to add to a collection of strokes.M
Specifies the collection of strokes to add to the collection of custom strokes.WWW]
Specifies the creation of a duplicate object.WF
Specifies the creation of a new RecognizerContext.6
Specifies the drawing attributes of all of the strokes in a collection of strokes.
Specifies the enhanced metafile to play to create the background.Wl
Specifies the extended properties to clear from the collection.WWWY
Specifies the extended property to add to the collection of extended properties.WW>
Specifies the extended property to remove from the collection.?
Specifies the formats that can be copied to the clipboard through Ink.+
Specifies the formats that can be used for pasting, including tInk, sInk, and ISF.F
Specifies the given Strokes collection to remove from the Strokes collection.WR
Specifies the metrics data for a given property.WW
Specifies the object or collection to return at the given index in a collection.WWP
Specifies the recognition result to be modified with a given alternate.WWW`
Specifies the recognition results to assign to the strokes that were used to create the results.WW9
Specifies the single word to remove from a word list.W<
Specifies the smallest collection of strokes that contains a given input collection of strokes, and for which the recognizer can provide alternates.WW
Specifies the smallest range of recognized text for which the recognizer can return an alternate that contains a given collection of strokes.Wn
Specifies the stroke or collection of strokes to be scaled to fit in the specified rectangle.WE
Specifies the stroke or collection of strokes to remove from the given collection of strokes.WS
Specifies the stroke to add to a collection of strokes.WWWF
Specifies the translation to apply to the view transform.W
Specifies the value of a given property of the alternate, such as the recognizer's confidence in the alternate.WWW5
Specifies the X and Y factors to scale the transform.W"
Specifies whether a property of a tablet device or a collection of tablet devices, identified with a globally unique identifier (GUID), is supported.W0
Specifies whether an extended property exists within a collection of extended properties.WG
Specifies whether the system dictionary, user dictionary, or word list contain a string.WW2
SplitAtW
SrpvarSelFontNameW
StateWWW
stdole2.tlbWWW
StgCreateDocfileOnILockBytes
StgmedWW
sTHWC_IntegratedWh)
StopBackgroundRecognitionWWW
StretchBlt
string too long
StringFileInfo
StringWW
StrokeIdsWWW
SuffixTextWW
SupportedPropertiesW
SupportedWWW
SVWAVH
t$ E3
t$ UWATAVAWH
t$ UWAVH
t$ WAVAWH
t$ WH
t$`fD9t$`t2H
T$hE3
t$XD+
t,fD9`
T_BYTE_BLOBWW\
TabletWW
tagBIND_OPTS2WWW
tagFORMATETCH
tagLOGPALETTEWWWD
tagRECTW
tagSTATDATAW4!
tagSTATSTGWW
tdDataWW
tdExtDevmodeOffsetWWt
tdSizeWWt
TerminateProcess
TextRTFW
tGH9K
The control is collecting ink.
The control is idle (not collecting or recognizing ink).WW
The control is recognizing ink.WWW`
The ink could not be added.WWW.
The ink is copied from the Ink object.#
The ink is cut from the Ink object.WWWQ
The ink recognition process failed.WWW
The left mouse button was pressed.#
The middle mouse button was pressed.WW;
The paragraph is aligned along the left margin.WWW0
The paragraph is aligned along the right margin.WW=
The paragraph is centered between the left and right margins.W
The recognition was interrupted by a call to StopBackgroundRecognition.WWW#
The right mouse button was pressed.WWW$
The union of a NoCurveFit request and a CurveFit request.W<
thH9_
THWC_CursorsHavePhysicalIdsW
THWC_HardProximityWWh)
tJfE9U
tKH9K
TopAlternate
TopConfidenceWWW
TopStringWWW
ToString
TPMU_Centimeters
TPMU_Degrees
TPMU_GramsWW
TPMU_InchesW
TPMU_PoundsW
TPMU_Radians
TPMU_Seconds
Transform methodWW
TransformWWW
TranslateMessage
Translation
Transparency
TrtfVerticalW
TStrokesW
tTH+Y 3
tVI!{
tXH+y 3
tymedWWW
typeL
TYPELIB
'TypeLib' = s '{8405D0DF-9FDD-4829-AEAD-8E2B0A18FEA4}'
u HcA<H
u,HitTestCircleWWW
U]ppenumAdvise
UATAUAVAWH
UAVAWH
uCurrentTransparencyW
UGetPacketValuesByPropertyWWW
u'IntersectsWW
uIRC_LatticeWx
uIRO_XOrPenWW
uLH9_
UnhandledExceptionFilter
UnionRect
UnitsWWW
UnlockRegion
UnregisterClassW
UnRegisterTypeLib
Up arrow mouse pointer.WWW
UpdateWindow
URows
Use delayed rendering to reduce the amount of data stored on the clipboard; the data is rendered when a paste request is made.%
Use only the points of the strokes to calculate the bounding box.W9
Use the Bezier curve fitting line of the strokes (apply Bezier curve fitting to all strokes) to calculate the bounding box; includes the drawing attributes in the calculation.WWWA
Use the definition of each stroke (polyline or Bezier) to calculate the bounding box; includes the drawing attributes, such as pen width, in the calculation.W
Use the polyline of the strokes (ignore Bezier curve fitting requests) to calculate the bounding box; includes the drawing attributes in the calculation.W
Use when minimizing storage space is more important than how fast the ink is saved.WWW
Use when save-time is more important than the amount of storage space used and when compatibility between versions is important.WW\
UseMouseForInput
User@
USER32.dll
UserLengthWW@
USVWATAUAVAWH
USVWAVAWH
UVWATAUAVAWH
UVWATAWH
UVWAUAVH
UVWAVAWH
UWATAVAWH
UWAVH
UWAWH
uZH!U'H
val ThreadingModel = s 'Apartment'
ValidateRect
VarFileInfo
VDirtyWWW
vector<T> too long
VendorWWx
'Version' = s '1.0'
VersionIndependentProgID = s 'InkEd.InkEdit'
Vertical scroll bar only.W)
VerticallyWW`
VerticalMultiplierWW`
VirtualAlloc
VirtualFree
VirtualProtect
VirtualQuery
vMode
VpRecoGuideWW
vpwszName
VRadiusWW
VS_VERSION_INFO
VWATAVAWH
VWAVH
WakeAllConditionVariable
WATAUAVAWH
WAVAWH
wcscat_s
wcscmp
wcscpy_s
White pen color.WW=
WideCharToMultiByte
WindowFromDC
WINKEDLib
wireSTGMEDIUMWWW<
w'IsEqualW
WordList
WritingBoxWW
wsprintfW
x ATAVAWH
x AUAVAWH
x AVH
X H9qxt
x UATAUAVAWH
x\formatetcWWW
x_IInkEditEventsW<(
X_userSTGMEDIUMWW
x2H9]
x2HcD$8H
xA_A\_^[]
xA_NewEnum
xExt0
xICB_CutW
XmaximumAlternatesWWW
XnContextW
xRHcD$8L
Y3SetSizeW
YdwAuthnSvcWW
YfPassOwnershipWW
YGetBoundingBoxWW
yGetPropertyValue
Z__MIDL_IWinTypes_0001WWW
Z__MIDL_IWinTypes_0003WWW
Z__MIDL_IWinTypes_0004WWW\
Z__MIDL_IWinTypes_0005WWW
Z__MIDL_IWinTypes_0006WWW
Z__MIDL_IWinTypes_0007WWW
Z__MIDL_IWinTypes_0008WWWD
ZConfidenceWW
zDISPID_Recognize
ZFEnum
zFittingError
ZfpformatectIn
ZIAG_NoGestureWWWH&
ZIES_Idle
ZIsDirtyWX
zItem
ZLassoPointsW
zlibNewSizeWWX
ZppmkOutW,
ZSelStart
