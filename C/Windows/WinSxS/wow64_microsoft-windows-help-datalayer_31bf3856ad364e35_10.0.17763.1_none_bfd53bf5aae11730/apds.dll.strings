        
                                            SaveExpandState(entryLink)
                                        SaveCollapseState(entryLink)
                                        SetClassName(entryImage,"link_image_collapse");
                                        SetClassName(entryLink,"link_collapse");
                                        setCookie && 
                                    {
                                    }
                                    entryLink = dataItems[1].querySelectorAll("a")[0];
                                    if(currentNodeClass === "link_collapseAll")
                                    SetClassName(entryAnswer,"collapse")
                                    SetClassName(entryImage,"link_image_expand");
                                    SetClassName(entryLink,"link_expand");
                                    setCookie && 
                                {
                                }
                                currentNodeClass === "link_collapseAll" && 
                                else
                                if(currentNodeClass === "link_expandAll")
                                SetClassName(entryAnswer,"expand");
                                var entryImage = dataItems[0].querySelectorAll("a img")[0],
                            {
                            }
                            continue;
                            else
                            entryClassObj = entry.attributes["class"];
                            if(currentNodeClass === "link_expandAll")
                            if(dataItems && dataItems.length === 2)
                            SaveExpandState(currentNode)
                            var dataItems = entry.querySelectorAll(".link_container")[0].childNodes;
                            var entryAnswer = entry;
                        {
                        }
                        if(!entryClassObj)
                        if(entryChildren[j].nodeType !== 1)
                        if(entryClass === "collapse" || entryClass === "expand")
                        if(entryClass === "question" || entryClass === "title_procedure ecTitle" || entryClass === "title_section ecTitle")
                        j = 0; j < entryChildren.length; j++)
                        SaveCollapseState(currentNode)
                        SetClassName(currentNode,"link_collapse");
                        SetClassName(expandoContentNode,"collapse");
                        SetClassName(expandoImage,"link_image_collapse");
                        setCookie && 
                        source.TriggerSearch(0);
                        var entry = entryChildren[j],
                        var entryClass = entryClassObj.value;
                    {
                    }
                    allFirstResultsReturned = false;
                    collapsedCount++;
                    continue;
                    expandedCount++;
                    for(var entryChildren = currentChildNodes[i].childNodes,
                    if (bucketId != Hub.Search.CurrBucket || 0 != Hub.Search.CurrPage[Hub.Search.CurrBucket]) {
                    if(currentNodeClass === "link_expand")
                    linkElement.href = url;
                    oBody.className = oBody.className + ' ' + className;
                    return false
                    return true
                    SaveCollapseState(currentNode)
                    SaveExpandState(currentNode)
                    SetClassName(currentNode,"link_expand");
                    SetClassName(expandoContentNode,"expand");
                    SetClassName(expandoImage,"link_image_expand");
                    SetClassName(jqoExpandAllLink,"link_collapseAll");
                    setCookie && 
                    SetTextValue(jqoExpandAllLink,link_collapseAllText)
                    var linkElement = linkElements[0];
                && typeof (onPostResultDisplayFcn) == 'function') {
                // Remove href to show selected state
                {
                }
                anchorNodes[i].target = "_self";
                bannerSpan.replaceNode(newTileElement);
                break;
                callBackFcn(cachedCallbackObj);
                clickHandlerFunctionMap[currentNodeClass](currentNode,currentNodeClass,true);
                collapsedCount = 0,
                currentNode = currentNode.parentNode
                document.getElementById('ResultsPendingMessage').style.display = 'block';
                document.getElementById('Searching').style.display = 'block';
                else
                eventArg.srcElement.inputBox.focus();
                expandedCount = 0,
                expandoCollectionRootNode = expandoRootNode.parentNode,
                expandoContentNode = expandoRootNode.querySelectorAll("div")[0],
                expandoImage = expandoLinkContainer.querySelectorAll(".link_image_container a img")[0];
                ExpandOrCollapseAllNodes(aCollapseAllElements[i],"link_collapseAll",false);
                ExpandOrCollapseAllNodes(aExpandAllElements[i],"link_expandAll",false);
                ExpandOrCollapseSingleNode(aCollapseElements[i],"link_collapse",false)
                ExpandOrCollapseSingleNode(aExpandElements[i],"link_expand",false);
                expandoRootNode = GetClosest(expandoLinkContainer.parentNode,"div",null),
                expandoRow = expandoLinkContainer,
                Hub.Search.DisplayPageNumberBox(pageSelected - 2, maxPageNum, 0);
                Hub.Search.DisplayPageNumberBox(pageSelected + 2, maxPageNum, 0);
                Hub.SearchBox.LoadSearchTextIfEmpty(eventArg.srcElement, eventArg.srcElement.backgroundBox)
                Hub.SearchBox.UnloadSearchText(eventArg.srcElement);
                Hub.SearchBox.UnloadSearchText(eventArg.srcElement.backgroundBox)
                i = 0; i < jqoExpandoExpandedCollection.length; i++)
                if (document.getElementById(source.BucketName + 'Bucket') != null) {
                if (eventArg.srcElement.inputBox.value != "") {
                if (linkElements.length > 0) {
                if (source.FirstResultsPending) {
                if (typeof (className) != "undefined")
                if(!CancelEvent(e))
                if(!currentChildNodeClass || !currentChildNodeClass || !currentChildNodeClass.value)
                if(currentChildNodeClass.value.indexOf("faqEntry") !== -1 || currentChildNodeClass.value.indexOf("procedure") !== -1 || currentChildNodeClass.value.indexOf("section") !== -1)
                if(currentChildNodes[i].nodeType !== 1)
                if(currentNodeClass === "link_collapse")
                if(IsElementWithinDistance(jqoExpandoCollapsedCollection[i],ecCollectionRootNode,7))
                if(IsElementWithinDistance(jqoExpandoExpandedCollection[i],ecCollectionRootNode,7))
                if(jqoExpandAllLink && collapsedCount === 0)
                jqoCollapseAllLink = ecCollectionRootNode.querySelectorAll(".link_collapseAll")[0],
                jqoExpandoCollapsedCollection = ecCollectionRootNode.querySelectorAll("a.link_collapse"),
                jqoExpandoExpandedCollection = ecCollectionRootNode.querySelectorAll("a.link_expand"),
                oCss.href = OemBrandingCssUrl;
                oCss.rel = 'stylesheet';
                oCss.type = 'text/css';
                oemEscalationElement.removeNode(true);
                oHead.appendChild(oCss);
                onLoadFunction();
                pageNext.className += ' DisabledPage';
                pageNext.removeAttribute('href');
                pagePrev.className += ' DisabledPage';
                pagePrev.removeAttribute('href');
                postProcessFunction();
                results[resultIndex].style.display = 'block';
                return currentNode;
                return distance;
                return false
                return PageData.TopLevelAssetSystemId;
                return source;
                return true;
                return;
                searchSource = source;
                sessionStorage.setItem(Internal._BuildKey(sName,ignoreUniquePageId),sValue)
                SetClassName(currentNode,"link_collapseAll");
                SetClassName(currentNode,"link_expandAll");
                SetClassName(jqoCollapseAllLink,"link_expandAll");
                setCookie && 
                SetTextValue(currentNode,link_collapseAllText);
                SetTextValue(currentNode,link_expandAllText);
                SetTextValue(jqoCollapseAllLink,link_expandAllText)
                status = source.Status[currPage];
                targetNode = row.querySelectorAll("a")[1],
                targetNodeClass = targetNode.attributes["class"].value;
                title +
                UpdateExpandCollapseAllLink(expandoCollectionRootNode)
                url = url.replace(/{query}/gi, Hub.Search.GetSearchQuery(false));
                var className = Hub.TopicPanel.IDToClassMap[id];
                var currentChildNodeClass = currentChildNodes[i].attributes["class"];
                var id = Hub.TopicPanel.GetTopicID(iframe.src);
                var isOemMediumLogoUrlPresent = Hub.External.EvaluateState("IsOEMMediumLogoUrlPresent");
                var linkElements = oemEscalationElement.getElementsByTagName('a');
                var newTileElement = Hub.OemHomeTile.CreateTile(bannerSpan, isOemMediumLogoUrlPresent); 
                var oCss = topicDocument.createElement('link');
                var source = bucket[sourceId];
                window.external.DoSearch(type, Hub.Search.GetSearchQuery(), window.location.href, pageNum, maxPerPage, callBackFcn);
            && Hub.Search.CurrBucket == searchSource.BucketName) {
            // cause the formatting to change, and thus the height.  So do
            // Inject the stylesheet onto the OEM topic page.  This may 
            // Now set the height of the iframe
            // Remove href to show selected state
            // Set target of shell execute links to self
            // this first.
            // Yes
            {
            }
            });
            '</a>' +
            '<a class="ResultTitle" href="' + encodeURI(link) + '">' +
            '<span>' + description + '</span>' +
            alwaysShownResults[resultIndex].style.display = 'block';
            args.push(arguments[j]);
            backgroundBox = backgroundBoxes[0];
            backgroundBoxes = form.querySelectorAll(Hub.SearchBox.BackgroundBoxSelector);
            bucketLink.href = Hub.Search.GetHashHref(id);
            cachedCallbackObj = Hub.Search.GetCachedResults(key);
            catch(e)
            classNameLowerCase = className ? className.toLowerCase() : null;
            contentTypeString +
            currentElement = currentElement.parentNode
            currentElement = targetElement.parentNode;
            currentNode.attributes["class"].value = className
            currentNode.innerHTML = textValue
            currPage = 0;
            currPage.className += ' CurrentPage';
            currPage.removeAttribute('href');
            distance++;
            document.attachEvent("onclick",ClickHandlerBase);
            document.getElementById(Hub.Search.CurrBucket + 'NoResults').style.display = 'block';
            e.preventDefault();
            elements.push(allElements[i]);
            else
            else {
            else if (source.Status[currPage] == Hub.Search.Enum.FoundResults) {
            ExpandOrCollapseSingleNode(targetNode,targetNodeClass,setCookie)
            fcn.apply(elements[i], args);
            for (resultIndex in results) {
            for (var i = 0; i < anchorNodes.length; i++) {
            for (var sourceId in bucket) {
            for(i = 0; i < jqoExpandoCollapsedCollection.length; i++)
            for(var i = 0; i < currentChildNodes.length; i++)
            for(var jqoExpandAllLink = ecCollectionRootNode.querySelectorAll(".link_expandAll")[0],
            GetExpandCollapseCookieState(aCollapseAllElements[i]) === ExpandCollapseCookieValue.collapse && 
            GetExpandCollapseCookieState(aCollapseElements[i]) === ExpandCollapseCookieValue.collapse && 
            GetExpandCollapseCookieState(aExpandAllElements[i]) === ExpandCollapseCookieValue.expand && 
            GetExpandCollapseCookieState(aExpandElements[i]) === ExpandCollapseCookieValue.expand && 
            Hub.Search.AddResults(resultsContainer, callbackObj);
            Hub.Search.CurrBucket = bucketFromHistory;
            Hub.Search.CurrBucket = currBucket;
            Hub.Search.CurrBucket = sessionStorage['currBucket'];
            Hub.Search.CurrPage[currBucket] = 0;
            Hub.Search.CurrPage[Hub.Search.CurrBucket] = parseInt(pageNumFromHistory);
            Hub.Search.DisplayPageNumberBox(pageSelected - 1, maxPageNum, 0);
            Hub.Search.DisplayPageNumberBox(pageSelected + 1, maxPageNum, 0);
            Hub.Search.DisplayPageNumberBox(pageSelected, maxPageNum, 0);
            Hub.Search.ProcessFirstReturnedResults();
            Hub.Search.RemoveSelectedDisabledFromPageControl();
            Hub.Search.ShowPaginationControl();
            Hub.Search.UpdateBucketWithResultTotal(callbackObj.TotalResultCount, searchSource);
            Hub.SearchBox.LoadSearchTextIfEmpty(this, this.backgroundBox)
            Hub.Util.AttachHandlerEach([form], 'onsubmit', function (eventArg) {
            Hub.Util.AttachHandlerEach(backgroundBoxes, 'onfocus', function (eventArg) {
            Hub.Util.AttachHandlerEach(inputBoxes, 'onblur', function (eventArg) {
            Hub.Util.AttachHandlerEach(inputBoxes, 'onfocus', function (eventArg) {
            i = 0; i < aExpandAllElements.length; i++)
            id = id.substr(0, id.indexOf('Bucket'));
            if (cachedCallbackObj != null) {
            if (currStatus && currStatus === Hub.Search.Enum.StillSearching) {
            if (dataToken == OemHomeTileToken)
            if (document.getElementById(source.BucketName + 'Bucket') != null) {
            if (oBody != null)
            if (oHead != null)
            if (pageSelected - 1 < 0) {
            if (pageSelected + 1 >= maxPageNum) {
            if (source.AffectsPagination) {
            if (source.SourceName == sourceName) {
            if (source.Status[currPage] == Hub.Search.Enum.StillSearching) {
            if (typeof (onLoadFunction) == 'function') 
            if (typeof (postProcessFunction) == 'function') {
            if (url == '') {
            if((!tagNameLowerCase || currentNode.tagName.toLowerCase() === tagNameLowerCase) && (!classNameLowerCase || currentClassName && currentClassName.value.toLowerCase() === classNameLowerCase))
            if(clickHandlerFunctionMap.hasOwnProperty(currentNodeClass))
            if(currentElement === ancestorElement)
            if(currentNodeClass === "link_collapseAll")
            if(currentNodeClass === "link_expandAll")
            if(expandoRootNode && expandoContentNode)
            if(jqoCollapseAllLink && collapsedCount > 0)
            if(typeof PageData !== "undefined" && typeof PageData.TopLevelAssetSystemId !== "undefined")
            iframe.height = topicDocument.documentElement.scrollHeight;
            iframe.style.display = "none";
            inputBoxes = form.querySelectorAll(Hub.SearchBox.InputBoxSelector),
            key = Hub.Search.GetSessionStorageKey(type, Hub.Search.GetSearchQuery(), pageNum, maxPerPage);
            Ms.Wol.SessionStorage.SetSessionStorage(ecAttr,ExpandCollapseCookieValue.collapse)
            Ms.Wol.SessionStorage.SetSessionStorage(ecAttr,ExpandCollapseCookieValue.expand)
            newCallbackObj._item[i] = { Title: currItem.Title, ContentType: currItem.ContentType, Description: currItem.Description, Link: currItem.Link, RequiresElevation: currItem.RequiresElevation /*, Icon: currItem.Icon*/ };
            newResultContainer.className = bucket + 'BucketResultsPartial' + pageNum;
            newResultContainer.id = type + 'Results' + pageNum;
            newResultContainer.status = Hub.Search.Enum.StillSearching;
            newResultContainerPage.appendChild(newResultContainer);
            newResultContainerPage.className = 'PageOfResults ' + bucket + pageNum;
            onLoadFunction = Hub.Preload.OnLoadFunctionList[x];
            onPostResultDisplayFcn();
            onPostResultDisplayFcns[sourceId] = onPostResultDisplayFcn;
            onSelectedFcn();
            pageNext.href = Hub.Search.GetHashHref(Hub.Search.CurrBucket, pageSelected + 1);
            pagePrev.href = Hub.Search.GetHashHref(Hub.Search.CurrBucket, pageSelected - 1);
            param = decodeURIComponent(param);
            postProcessFunction = Hub.PostProcessFunctionList[x];
            results = GetElementsByClassName(Hub.Search.CurrBucket + currPage);
            resultsContainer.status = Hub.Search.Enum.FoundResults;
            resultsContainer.status = Hub.Search.Enum.NoResults;
            resultsPages.appendChild(newResultContainerPage);
            return 0;
            return -1;
            return false
            return false;
            return Internal._sSessionStorageNs + uniquePageIdString + sName
            return null
            return null;
            return sessionStorage.getItem(Internal._BuildKey(sName,ignoreUniquePageId));
            return true
            return typeof sessionStorage !== "undefined"
            return;
            searchSource.Status[pageNum] = newResultContainer.status;
            selectedPage = Hub.Search.CurrPage[Hub.Search.CurrBucket] - 1;
            selectedPage = Hub.Search.CurrPage[Hub.Search.CurrBucket] + 1;
            selectedPage = parseInt(page);
            sessionStorage['currBucket'] = bucketName;
            source.TriggerSearch(Hub.Search.CurrPage[Hub.Search.CurrBucket]);
            tagNameLowerCase = tagName ? tagName.toLowerCase() : null,
            textBox.value = TrimLeadingTrailingWhitespace(Hub.Search.GetSearchQuery());
            try
            var anchorNodes = topicDocument.querySelectorAll("a[href^='shortcut:']");
            var bucket = Hub.Search.SearchBuckets[bucketId];
            var currentChildNodes = currentNode.parentNode.childNodes;
            var currentClassName = currentNode.attributes["class"];
            var currentNodeClass = currentNode.attributes["class"].value;
            var currItem = callbackObj.Item(i);
            var currPage = document.getElementById('PageNumBox' + pageSelected)
            var currStatus = results[resultIndex].status;
            var dataToken = bannerSpan.getAttribute("data-token");
            var expandoLinkContainer = GetClosest(currentNode,null,"link_container"),
            var id = bucketContainer.id;
            var newResultContainer = document.createElement('div');
            var newResultContainerPage = document.createElement('div');
            var oBody = topicDocument.querySelector("body");
            var oHead = topicDocument.querySelector('head');
            var pageNext = document.getElementById('PageNext');
            var pagePrev = document.getElementById('PagePrev');
            var results = GetElementsByClassName(Hub.Search.CurrBucket + 'NonEmptyResults');
            var row = GetClosest(currentNode,null,"link_container"),
            var source = bucket[sourceId];
            var source = Hub.Search.SearchBuckets[bucketName][sourceId];
            var topicDocument = iframe.contentWindow.document;
            var uniquePageIdString = ignoreUniquePageId ? "" : Internal._GetUniquePageId() + ".";
            var url = window.external.OemSearchEscalationUrl;
            window.external.AsyncSearchEventBegin(type + pageNum + Hub.Search.GetSearchQuery());
        (typeof this.HasFocus == "undefined" || !this.HasFocus) && typeof this.backgroundBox != "undefined" &&
        // Deep copy is needed because IDispatch cannot be stringified
        // Does the document in the iframe exist?
        // Force vertical scroll bar to prevent content shifting
        // Remove href to show selected state
        // Trigger searches for first page of all sources
        {
        }
        },_BuildKey:function(sName,ignoreUniquePageId)
        },_GetUniquePageId:function()
        },_UniquePageIdAvailable:function()
        }};
        '</div>' +
        '</div>';
        '<div class="ResultText">' +
        '<div class="ResultTitle" >' +
        backgroundBox.inputBox = inputBox;
        backgroundElement.style.display = "inline";
        backgroundElement.style.display = "none";
        bucketContainer.className = bucketContainer.className.split(' ')[0];
        callbackObj = JSON.parse(sessionStorage[key]);
        callbackObj.Item = function (i) { return this._item[i]; };
        contentTypeString = '<span class="ResultContentType">' + GetCharacterEncoding(contentType) + '</span> <span class="lsep"> | </span>';
        currentElement = oemAnchor;
        decode = true;
        divHomeTileContainer.appendChild(oemAnchor);
        document.attachEvent && 
        document.documentElement.style.overflowY= "scroll";
        document.getElementById(currBucket + 'ResultsStatus').style.display = 'block';
        document.getElementById('ErrorStatus').style.display = 'block';
        ecAttr && 
        else
        else {
        else if (page == 'PageNext') {
        else if (status == Hub.Search.Enum.FoundResults) {
        else if (typeof (sessionStorage) != 'undefined' && typeof (sessionStorage['currBucket']) != 'undefined') {
        encodedStr += '&#' + input.charCodeAt(i) + ';';
        expandCollapse_idAttribute = "data-id",
        ExpandCollapseCookieValue = {expand:"e",collapse:"c"};
        firstSearchBox.focus();
        for (i = 0; i < callbackObj.PageSize; i++) {
        for (resultIndex in alwaysShownResults) {
        for (resultIndex in results) {
        for (var bucketId in Hub.Search.SearchBuckets) {
        for (var i = 0; i < elements.length; i++) 
        for (var i = 0; i < elements.length; i++) {
        for (var j = 2; j < arguments.length; j++) 
        for (var j = 2; j < arguments.length; j++) {
        for (var sourceId in bucket) {
        for (var sourceId in Hub.Search.SearchBuckets[bucketName]) {
        for (x in Hub.PostProcessFunctionList) {
        for (x in Hub.Preload.OnLoadFunctionList) 
        for(i = 0; i < aCollapseAllElements.length; i++)
        for(i = 0; i < aCollapseElements.length; i++)
        for(i = 0; i < aExpandElements.length; i++)
        for(var aExpandAllElements = document.querySelectorAll("a.link_expandAll"),
        form.inputBox = inputBox;
        Hub.PostProcessFunctionList.push(x);
        Hub.Preload.OnLoadFunctionList.push(x);
        Hub.Search.AddResult(resultContainer, currItem.Title, currItem.ContentType, currItem.Description, currItem.Link);
        Hub.Search.ClearSelectedBucket();
        Hub.Search.CurrBucket = bucketName;
        Hub.Search.CurrPage[bucketName] = 0;
        Hub.Search.CurrPage[Hub.Search.CurrBucket] = selectedPage;
        Hub.Search.DisplayError(err);
        Hub.Search.ErrorOccured = true;
        Hub.Search.FireSourceEvents();
        Hub.Search.FixEmptyHash();
        Hub.Search.HideBucketContainer();
        Hub.Search.InjectQueryTerm();
        Hub.Search.SearchBuckets = searchBuckets;
        Hub.Search.SelectBucketPageFromHash();
        Hub.Search.SelectResults(bucketFromHistory, pageNumFromHistory);
        Hub.Search.SetCachedResults(callbackObj, key);
        Hub.Search.SetSelectedBucket(bucketName);
        Hub.Search.ShowBucketContainer();
        Hub.Search.Totals[bucketName] += total;
        Hub.Search.Totals[bucketName] = total;
        Hub.Search.Update();
        Hub.Search.UpdateOemEscalationLink();
        Hub.Util.RemoveEach(document.querySelectorAll('#feedbackControlBody'));
        id = result[1].toLowerCase();
        if (bannerSpan != null)
        if (bucketFromHistory != '' && pageNumFromHistory != '') {
        if (bucketLink != null) {
        if (callbackObj.PageSize > 0) {
        if (containsClassname.test(allElements[i].className)) {
        if (decode) {
        if (document.getElementById(source.BucketName + 'Bucket') != null) {
        if (firstResultsForSource) {
        if (Hub.SearchBox.TryAddProperties(inputBoxes, form)) {
        if (maxPageNum >= 2) {
        if (oemEscalationElement != null) {
        if (page == 'PagePrev') {
        if (resultsContainer != null) {
        if (resultsPage == null && resultsPages != null) {
        if (status == Hub.Search.Enum.NoResults) {
        if (textBox != null) {
        if (typeof (currPage) != 'number') {
        if (typeof (Hub.Search.CurrPage[currBucket]) != 'number') {
        if (typeof (iframe.contentWindow.document) == "object")
        if (typeof (onSelectedFcn) == 'function') {
        if (typeof (sessionStorage) != 'undefined') {
        if (typeof (status) != 'undefined' && status != Hub.Search.Enum.StillSearching
        if (typeof onPostResultDisplayFcn == 'function' && Hub.Search.CurrPage[Hub.Search.CurrBucket] == callbackObj.PageNumber
        if(!attrVal)
        if(!currentNode)
        if(!targetElement || !ancestorElement)
        if(currentNode && className)
        if(currentNode && textValue)
        if(currentNode)
        if(currentNode.attributes["class"])
        if(e.preventDefault)
        if(ecCollectionRootNode)
        if(ignoreUniquePageId || Internal._UniquePageIdAvailable() && Internal._SessionStorageAvailable() && sName && sValue)
        if(ignoreUniquePageId || Internal._UniquePageIdAvailable() && Internal._SessionStorageAvailable() && sName)
        if(stepCount < 0 || stepCount > maxDistance)
        if(targetElement === ancestorElement)
        inputBox.backgroundBox = backgroundBox;
        newCallbackObj = { TotalResultCount: callbackObj.TotalResultCount, QueryType: callbackObj.QueryType, Query: callbackObj.Query, Url: callbackObj.Url, PageNumber: callbackObj.PageNumber, PageSize: callbackObj.PageSize };
        newCallbackObj._item = {};
        oemAnchor.href = oemMediumLogoUrl;
        oemAnchor.title = title;
        onPostResultDisplayFcn();
        pageNum = Hub.Search.CurrPage[bucketName];
        pageNumberBox.href = Hub.Search.GetHashHref(Hub.Search.CurrBucket, pageNum);
        pageNumberBox.style.display = 'inline';
        results[resultIndex].className = results[resultIndex].className.split(' ')[0];
        results[resultIndex].innerHTML = Hub.Search.Totals[bucketName];
        results[resultIndex].innerText = trimmed;
        results[resultIndex].style.display = 'none';
        return '';
        return -1
        return false
        return false;
        return Internal._SessionStorageAvailable()
        return Ms.Wol.SessionStorage.GetSessionStorage(attrVal)
        return null
        return param;
        return true
        searchSource.FirstResultsPending = false;
        searchSource.Status[callbackObj.PageNumber] = resultsContainer.status;
        selectedBucketLink.removeAttribute('href');
        sessionStorage.removeItem(Internal._BuildKey(sName,ignoreUniquePageId))
        sessionStorage[key] = JSON.stringify(newCallbackObj);
        state = false;
        state = window.external.EvaluateState(stateName);
        SubmitHighContrastSelector = "a.HHHighContrastSearchQuerySubmit";
        SubmitSelector = 'form.HHSearchQuery input[type="submit"]',
        tag = '*';
        textBox.focus();
        tokenValue = null;
        tokenValue = window.external.TokenValue(tokenName);
        typeof (window.external.NoExplicitFeedback) == 'boolean' && window.external.NoExplicitFeedback) {
        var aCollapseAllElements = document.querySelectorAll("a.link_collapseAll");
        var aCollapseElements = document.querySelectorAll("a.link_collapse");
        var aExpandElements = document.querySelectorAll("a.link_expand");
        var alwaysShownResults = GetElementsByClassName(Hub.Search.CurrBucket + 'AllResults');
        var args = [];
        var attrVal = linkEl.getAttribute(expandCollapse_idAttribute);
        var bannerSpan = document.querySelector(TileSelector);
        var bucket = Hub.Search.SearchBuckets[bucketId];
        var bucket = Hub.Search.SearchBuckets[Hub.Search.CurrBucket];
        var bucketContainer = buckets[i];
        var bucketFromHistory = Hub.Search.GetHashParam('b', false);
        var bucketLink = bucketContainer.querySelector('a');
        var bucketName = Hub.Search.CurrBucket;
        var currBucket = Hub.Search.CurrBucket;
        var currentNode = e.target ? e.target : e.srcElement;
        var currentNode = startNode,
        var currItem = resultsObject.Item(i);
        var currPage = Hub.Search.CurrPage[currBucket];
        var currPage = Hub.Search.CurrPage[Hub.Search.CurrBucket];
        var distance = 1,
        var ecAttr = currentNode.getAttribute(expandCollapse_idAttribute);
        var firstResultsForSource = searchSource.FirstResultsPending;
        var form = this,
        var iframe = this;
        var inputBox = inputBoxes[0],
        var key = Hub.Search.GetSessionStorageKey(type, callbackObj.Query, callbackObj.PageNumber, maxResultPerPage);
        var maxPageNum = searchSource.PossiblePages;
        var maxResultPerPage = searchSource.MaxResultPerPage;
        var oemAnchor = document.createElement("a");
        var oemEscalationElement = oemEscalationElements[i];
        var oemMediumLogoUrl = Hub.External.GetTokenValue("OEMMediumLogoUrl");
        var onPostResultDisplayFcn = onPostResultDisplayFcns[sourceId];
        var onPostResultDisplayFcn = searchSource.OnPostResultDisplay;
        var onPostResultDisplayFcn = source.OnPostResultDisplay;
        var onSelectedFcn = source.OnSelected;
        var pageNumberBox = document.getElementById('PageNumBox' + pageNum);
        var pageNumFromHistory = Hub.Search.GetHashParam('page', false);
        var pageSelected = Hub.Search.CurrPage[bucketName];
        var param = pSplit[1].split('&')[0];
        var results = GetElementsByClassName(currBucket + 'BucketResultsPartial' + currPage);
        var resultsContainer = document.getElementById(type + 'Results' + callbackObj.PageNumber);
        var resultsPage = document.getElementById(type + 'Results' + pageNum);
        var resultsPages = document.getElementById(type + 'Results');
        var searchSource = null;
        var source = Hub.Search.SearchBuckets[Hub.Search.CurrBucket][sourceId];
        var status = Hub.Search.Enum.NoResults;
        var status = source.Status[Hub.Search.CurrPage[Hub.Search.CurrBucket]];
        var stepCount = GetElementDistance(targetElement,ancestorElement);
        var textBox = document.getElementById('HHTextInput');
        var type = searchSource.SourceName;
        while(currentElement && currentElement !== document)
        while(currentNode)
        window.addEventListener("load",InitExpandCollapse,false)
        window.attachEvent('onhashchange', Hub.Search.SelectBucketPageFromHash);
        window.external.AsyncSearchEventEnd(type + callbackObj.PageNumber + Hub.Search.GetSearchQuery());
        window.external.SearchEventBegin(Hub.Search.GetSearchQuery());
        window.external.SearchEventEnd(Hub.Search.GetSearchQuery());
    (function()
    //
    //               <img class="" src="resources/hh_ppeic.png" alt="call-to-action arrow" title="call-to-action arrow"/>
    //             %OEMManufacturerHelpAndSupport%
    //             </div>
    //             <div class="hh_homeTile_glyph">
    //           </div>
    //           <div class="hh_homeTile_titleTextContainer">
    //           <img class="_?embedObject?_" src="%OEMMediumLogo%" alt="_???_" title="_???_" height="86" width="86"/>
    //         ...
    //         </div>
    //         <div class="hh_homeTile_peopleImage hh_homeTile_far">
    //         <div class="hh_homeTile_titleContainer hh_homeTile_titleContainerWidthWithImage">
    //       </div>
    //       <div class="hh_homeTile_coloredTile hh_theme_bund">
    //     </a>
    //     <a href="%OEMMediumLogoUrl%" title="_???_">
    //   </div>
    //   <div id="IDOemHomeTile" class="hh_homeTile_container">
    // Clears the selected state from the bucket
    // Example of a src: "mshelp://oem/?id=EscalationTopic"
    // PS_WIN8(293077): set localized alt and title
    // The objective is to create a tile that looks something like this:
    //check to see if all sources have returned before doing anything
    {
    }
    } catch (err) {
    } catch (err2) { }
    })();
    });
    },DeleteSessionStorage:function(sName,ignoreUniquePageId)
    },GetSessionStorage:function(sName,ignoreUniquePageId)
    },SessionStorageAvailable:function()
    }}
    allElements = document.getElementsByTagName(tag);
    backgroundElement.style.display = "none";
    callbackObj = null;
    catch (e)
    catch (err) {
    containsClassname = new RegExp('\\b' + className + '\\b');
    currentElement.appendChild(divHomeTileColoredTile);
    divHomeTileColoredTile.appendChild(divHomeTilePeopleImage);
    divHomeTileColoredTile.appendChild(divHomeTileTitleContainer);
    divHomeTileColoredTile.className = HomeTileColoredTileClass;
    divHomeTileColoredTile.style.backgroundColor = oemHomeTileColor;
    divHomeTileContainer.className = HomeTileContainerClass;
    divHomeTileContainer.id = "IDOemHomeTile";      // Canonical class name so test code can find it
    divHomeTileGlyph.appendChild(imgCallToAction);
    divHomeTileGlyph.className = HomeTileGlyphClass;
    divHomeTilePeopleImage.appendChild(imgLogo);
    divHomeTilePeopleImage.className = HomeTilePeopleImageClass + " " + HomeTileFarClass;
    divHomeTileTitleContainer.appendChild(divHomeTileTitleTextContainer);
    divHomeTileTitleContainer.className = HomeTileTitleContainerClass + " " + HomeTileTitleContainerWidthWithImageClass;
    divHomeTileTitleTextContainer.appendChild(divHomeTileGlyph);
    divHomeTileTitleTextContainer.appendChild(textNode);
    divHomeTileTitleTextContainer.className = HomeTileTitleTextContainerClass;
    document.getElementById('bucketContainer').style.display = 'inline-block';
    document.getElementById('bucketContainer').style.display = 'none';
    document.getElementById('PagingControl').style.display = 'block';
    document.getElementById('PagingControl').style.display = 'none';
    elements = [];
    else
    else {
    for (i = 0; i < resultsObject.PageSize; i++) {
    for (i in allElements) {
    for (resultIndex in results) {
    for (var bucketId in Hub.Search.SearchBuckets) {
    for (var i = 0; i < buckets.length; i++) {
    for (var i = 0; i < input.length; i++) {
    for (var i = 0; i < oemEscalationElements.length; ++i) {
    for (var sourceId in Hub.Search.SearchBuckets[Hub.Search.CurrBucket]) {
    for (var sourceId in onPostResultDisplayFcns) {
    function CancelEvent(e)
    function ClickHandlerBase(e)
    function ExpandOrCollapseAllNodes(currentNode,currentNodeClass,setCookie)
    function ExpandOrCollapseSingleNode(currentNode,currentNodeClass,setCookie)
    function ExpandOrCollapseSingleNode_Image(currentNode,currentNodeClass,setCookie)
    function GetClosest(startNode,tagName,className)
    function GetElementDistance(targetElement,ancestorElement)
    function GetExpandCollapseCookieState(linkEl)
    function InitExpandCollapse()
    function IsElementWithinDistance(targetElement,ancestorElement,maxDistance)
    function SaveCollapseState(currentNode)
    function SaveExpandState(currentNode)
    function SetClassName(currentNode,className)
    function SetTextValue(currentNode,textValue)
    function UpdateExpandCollapseAllLink(ecCollectionRootNode)
    Hub.AddPostProcessFunction(Hub.Search.SearchResultsPostProcessEvent);
    Hub.PostProcessData();
    Hub.Search.FocusOnSearchBox();
    Hub.Search.HideAllResults();
    Hub.Search.HideAllStatus();
    Hub.Search.HidePaginationControl();
    Hub.Search.Update();
    Hub.Search.UpdatePaginationControl();
    Hub.Search.UpdateResultsWindow();
    Hub.Search.UpdateStatus();
    Hub.SearchBox.OnLoadFunction();
    Hub.SearchBox.OnReadyFunction();
    Hub.Util.RunFunctionOnEach(document.querySelectorAll(FormSelector), function () {
    Hub.Util.RunFunctionOnEach(document.querySelectorAll(Hub.SearchBox.InputBoxSelector), function () {
    Hub.Util.RunFunctionOnEach(document.querySelectorAll(TopicPanelsSelector), function() 
    Hub.Util.RunFunctionOnEach(elements, Hub.Util.AttachHandlerElement, eventName, fcn);
    Hub.Util.RunFunctionOnEach(elements, Hub.Util.RemoveElement);
    Hub.Util.RunFunctionOnEach(elements, Hub.Util.StyleChangeElement, styleName, styleValue);
    Hub.Util.StyleChangeEach(document.querySelectorAll(SubmitHighContrastSelector), 'display', 'inline');
    Hub.Util.StyleChangeEach(document.querySelectorAll(SubmitSelector), 'display', 'none');
    if (!Hub.Search.ErrorOccured) {
    if (allFirstResultsReturned) {
    if (bucketFromHistory != '' && pageNumFromHistory != '') {
    if (inputBoxes.length == 1 && backgroundBoxes.length == 1) {
    if (inputElement.value == "")
    if (isOemHomeTilePresent)
    if (isOemMediumLogoUrlPresent)
    if (pageNum < maxPages) {
    if (pageNum >= min && pageNum < max) {
    if (pSplit.length >= 2) {
    if (result != null)
    if (selectedBucketLink != null) {
    if (textBox) {
    if (typeof (contentType) != 'undefined' && contentType != '') {
    if (typeof (decode) == 'undefined') {
    if (typeof (elements) != 'undefined' && elements != null && typeof (fcn) == 'function') 
    if (typeof (elements) != 'undefined' && elements != null && typeof (fcn) == 'function') {
    if (typeof (firstSearchBox) != 'undefined' && firstSearchBox != null) {
    if (typeof (Hub.PostProcessFunctionList) == 'object') {
    if (typeof (Hub.Preload.OnLoadFunctionList) == 'object') 
    if (typeof (Hub.Search.CurrPage[bucketName]) != 'number' || isNaN(Hub.Search.CurrPage[bucketName])) {
    if (typeof (Hub.Search.Totals[bucketName]) != 'number') {
    if (typeof (pageNum) != 'number' || isNaN(pageNum)) {
    if (typeof (sessionStorage) != 'undefined' && typeof (sessionStorage[key]) != 'undefined') {
    if (typeof (sessionStorage) != 'undefined' && typeof (sessionStorage[key]) == 'undefined') {
    if (typeof (tag) == 'undefined') {
    if (typeof (window) != 'undefined' && typeof (window.external) != 'undefined' &&
    if (typeof (x) == 'function') 
    if (typeof (x) == 'function') {
    if (typeof inputBoxes == "undefined" || typeof form == "undefined")
    imgCallToAction.className = "";
    imgCallToAction.src = MshelpPersistentPageImagesUrl;
    imgLogo.alt = title;
    imgLogo.src = logoUrl;
    imgLogo.title = title;
    leadingTrimmed = input.replace(/^\s*/, '');
    link_collapseAllText = link_collapseAllText ? link_collapseAllText : "";
    Ms = {};
    Ms.Wol = {};
    Ms.Wol.SessionStorage = {};
    resultContainer.appendChild(resultElement);
    resultContainer.innerHTML = '';
    resultElement.className = 'SearchResultItem';
    resultElement.innerHTML = resultString;
    results = GetElementsByClassName('DisabledPage');
    results = GetElementsByClassName('PageOfResults');
    return '#b=' + bucketName + '&page=' + pageNum;
    return {SetSessionStorage:function(sName,sValue,ignoreUniquePageId)
    return callbackObj;
    return divHomeTileContainer;
    return elements;
    return encodedStr;
    return Hub.Search.GetParam(paramName, hashString, decode);
    return Hub.Search.GetParam(paramName, queryString, decode);
    return Hub.Search.GetQueryParam('q', decode);
    return id;
    return leadingTrimmed.replace(/\s*$/, '');
    return null;
    return state;
    return tokenValue;
    return type + query + pageNum + maxPerPage;
    searchSource.PossiblePages = Math.min(Math.ceil(total / searchSource.MaxResultPerPage), searchSource.MaxPages);
    searchSource.ResultCount = total;
    selectedBucket.className += ' SelectedBucket';
    this.attachEvent(eventName, fcn);
    this.parentNode.removeChild(this);
    this.style[styleName] = styleValue;
    total = Math.min(total, searchSource.MaxPages * searchSource.MaxResultPerPage);
    try
    try {
    var allFirstResultsReturned = true;
    var backgroundBoxes = form.querySelectorAll(Hub.SearchBox.BackgroundBoxSelector);
    var bucket = searchSource.BucketName;
    var bucketFromHistory = Hub.Search.GetHashParam('b', false);
    var bucketName = searchSource.BucketName;
    var buckets = document.querySelectorAll('.Bucket');
    var callBackFcn = searchSource.Callback;
    var clickHandlerFunctionMap = {link_expand:ExpandOrCollapseSingleNode,link_collapse:ExpandOrCollapseSingleNode,link_expandAll:ExpandOrCollapseAllNodes,link_collapseAll:ExpandOrCollapseAllNodes,link_image_expand:ExpandOrCollapseSingleNode_Image,link_image_collapse:ExpandOrCollapseSingleNode_Image},
    var contentTypeString = '';
    var currentElement = divHomeTileContainer;
    var divHomeTileColoredTile = document.createElement("div");
    var divHomeTileContainer = document.createElement("div");
    var divHomeTileGlyph = document.createElement("div");
    var divHomeTilePeopleImage = document.createElement("div");
    var divHomeTileTitleContainer = document.createElement("div");
    var divHomeTileTitleTextContainer = document.createElement("div");
    var encodedStr = '';
    var firstSearchBox = document.querySelector(SearchQueryBoxSelector);
    var FormSelector = "form.HHSearchQuery",
    var hashString = window.location.hash.replace(/\+/g, ' ');
    var HomeTileColoredTileClass = "hh_homeTile_coloredTile";
    var HomeTileContainerClass = "hh_homeTile_container";
    var HomeTileFarClass = "hh_homeTile_far";
    var HomeTileGlyphClass = "hh_homeTile_glyph";
    var HomeTilePeopleImageClass = "hh_homeTile_peopleImage";
    var HomeTileTitleContainerClass = "hh_homeTile_titleContainer"
    var HomeTileTitleContainerWidthWithImageClass = "hh_homeTile_titleContainerWidthWithImage";
    var HomeTileTitleTextContainerClass = "hh_homeTile_titleTextContainer";
    var id = null;
    var imgCallToAction = document.createElement("img");
    var imgLogo = document.createElement("img");
    var Internal = {_sSessionStorageNs:"Ms.Wol.",_SessionStorageAvailable:function()
    var isOemHomeTilePresent = Hub.External.EvaluateState("IsOEMHomeTilePresent");
    var logoUrl = "mshelp://help/?id=OEMMediumLogo";
    var maxPages = searchSource.MaxPages;
    var maxPerPage = searchSource.MaxResultPerPage;
    var MshelpPersistentPageImagesUrl = "mshelp://help/?id=Microsoft.Windows.Resources.Images.hh_ppeic";
    var OemBrandingCssUrl = "mshelp://help/?id=Microsoft.Windows.Resources.stylesheets.OemBranding";
    var oemEscalationElements = GetElementsByClassName('OEMEscalation');
    var oemHomeTileColor = Hub.External.GetTokenValue("OEMMediumHomeTileColor");
    var OemHomeTileToken = "OEMHomeTile";
    var onPostResultDisplayFcns = {};
    var pageNumFromHistory = Hub.Search.GetHashParam('page', false);
    var pSplit = paramString.split(paramName + '=');
    var queryString = window.location.search.replace(/\+/g, ' ');
    var reFindID=/(?:mshelp:\/\/oem\/\?id=)(\w*)/
    var result = srcMshelpUrl.match(reFindID);
    var resultElement = document.createElement('div');
    var results = GetElementsByClassName(bucketName + 'ResultTotal');
    var results = GetElementsByClassName('CurrentPage');
    var results = GetElementsByClassName('PageNumBox', 'a');
    var results = GetElementsByClassName('Results');
    var results = GetElementsByClassName('SearchQueryTerm');
    var results = GetElementsByClassName('Status');
    var resultString =
    var SearchQueryBoxSelector = 'div.HHSearchQuery';
    var selectedBucket = document.getElementById(bucketName + 'Bucket');
    var selectedBucketLink = selectedBucket.querySelector('a');
    var state;
    var textBox = document.getElementById('HHTextInput');
    var textNode = document.createTextNode(title);
    var TileSelector = "span.tokenReplace";
    var title = Hub.External.GetTokenValue("OEMManufacturerHelpAndSupport");
    var tokenValue;
    var TopicPanelsSelector = "iframe.deferredReplacementContent";
    var trimmed = TrimLeadingTrailingWhitespace(Hub.Search.GetSearchQuery());
    var type = searchSource.SourceName;
    window.addEventListener("load", Hub.Preload.OnLoadBody, true);
    window.external.OnScriptError(err.toString());
    window.location.replace(window.location + Hub.Search.GetHashHref(Hub.Search.CurrBucket));
 cHRM
 DescriptionW
 Help Data Services Module
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!]qz?q
!This program cannot be run in DOS mode.
"IHxSessionWWd
#1B1S1
#ApplicationErrorWithMessageTemplate
%windir%\system32\sdiagprv.dll
&!&KM
&RemoteCopyTo
&rgrfStatFlagW
(!MSHelpServicesWW
(function()
(IsOnline
(libOffsetWWW
*HxSessionWWWd
,*cbSizeWW
,0004080@0D0H0L0X0\0`0
.?AU_ATL_MODULE70@ATL@@
.?AUICatalogRead@Windows_Help_Runtime@@
.?AUIClassFactory@@
.?AUIContent@@
.?AUIDataSource@@
.?AUIDispatch@@
.?AUIHubSearchResult@@
.?AUIHubSearchResultCollection@@
.?AUIHxSession@@
.?AUINamespace@@
.?AUIObjectWithSite@@
.?AUIRegistrarBase@@
.?AUISearchProvider@@
.?AUISupportErrorInfo@@
.?AUIUnknown@@
.?AV?$CAtlModuleT@VCComModule@ATL@@@ATL@@
.?AV?$CComAggObject@VCHxSession@@@ATL@@
.?AV?$CComCoClass@VCHxSession@@$1?CLSID_HxSession@@3U_GUID@@B@ATL@@
.?AV?$CComContainedObject@VCHxSession@@@ATL@@
.?AV?$CComObject@VCCabDataSource@@@ATL@@
.?AV?$CComObject@VCChainingDataSourceAdapter@@@ATL@@
.?AV?$CComObject@VCDoSearchResult@@@ATL@@
.?AV?$CComObject@VCDoSearchResultCollection@@@ATL@@
.?AV?$CComObject@VCEmbeddedResourceDataSource@@@ATL@@
.?AV?$CComObject@VCHubHelpCatalogRead@@@ATL@@
.?AV?$CComObject@VCHxSession@@@ATL@@
.?AV?$CComObject@VCLocalContentDataSource@@@ATL@@
.?AV?$CComObject@VCLocalContentSearch@@@ATL@@
.?AV?$CComObject@VCNamespace@@@ATL@@
.?AV?$CComObject@VCNamespaceDataSourceAdapter@@@ATL@@
.?AV?$CComObject@VCOemImageDataSource@@@ATL@@
.?AV?$CComObject@VCSimpleContent@@@ATL@@
.?AV?$CComObject@VCWebDataSource@@@ATL@@
.?AV?$CComObject@VCWOTSSearch@@@ATL@@
.?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@
.?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@
.?AV?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@
.?AV?$IDispatchImpl@UIHxSession@@$1?IID_IHxSession@@3U_GUID@@B$1?LIBID_MSHelpServices@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$IObjectWithSiteImpl@VCHxSession@@@ATL@@
.?AVAPException@@
.?AVbad_alloc@std@@
.?AVCAtlException@ATL@@
.?AVCAtlModule@ATL@@
.?AVCCabDataSource@@
.?AVCChainingDataSourceAdapter@@
.?AVCComClassFactory@ATL@@
.?AVCComModule@ATL@@
.?AVCComObjectRootBase@ATL@@
.?AVCDoSearchResult@@
.?AVCDoSearchResultCollection@@
.?AVCEmbeddedResourceDataSource@@
.?AVCFileEnumerator@@
.?AVCGroupPolicy@@
.?AVCHelpUrl@MsHelp@@
.?AVCHtmlHelpModule@@
.?AVCHubHelpCatalogRead@@
.?AVCHxSession@@
.?AVCLocalContentDataSource@@
.?AVCLocalContentSearch@@
.?AVCNamespace@@
.?AVCNamespaceDataSourceAdapter@@
.?AVCOemImageDataSource@@
.?AVCRecursiveFileEnumerator@@
.?AVCRegObject@ATL@@
.?AVCSimpleContent@@
.?AVCWebDataSource@@
.?AVCWOTSSearch@@
.?AVexception@@
.?AVIFileEnumerator@@
.?AVlength_error@std@@
.?AVLEXRuntimeHost@@
.?AVLEXRuntimeHostImpl@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.mshc
.mshi
.rdata
.rdata$brc
.rdata$r$brc
.rdata$sxdata
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$x
.text$yd
.xdata$x
// Display functions
// End Display functions
// End Offline result functions
// End Selector functions
// End Util functions
// Fires the events associated with the sources on the current page in the current bucket
// Offline result functions
// Register the namespaces  
// Selector functions: these are the functions that are triggered
// the results have returned
// Updates the UI after initial events are fired and fires onPostResultDisplay events if
// Util functions
// when the user clicks a bucket or pagination
///////////////////////////////////////////////////////
/?id=
: :$:(:@:D:H:\:`:x:|:
: :@:D:H:L:P:T:X:`:
:!:0:6:R:W:]:a:f:l:
:$:+:::]:t:
:$:D:P:p:|:
:):H:O:p:|:
:,;T;l;w;
:`:n:
:<:E:Z:q:
:<;d;|;
:=:_:
:0;k;
:DataSize
:ppNamespaceW9
:U:k:
; ;$;(;,;0;8;<;@;D;H;P;T;\;t;x;
; ;$;(;,;4;8;<;@;D;L;d;h;
; ;,;4;h;x;
;";<;_;e;
;#;s;
;$<P<
;$<V<b<q<
;&<2<6<;<Q<W<a<g<q<w<
;(;6;
;)<L<g<
;,;d;
;;;`=
;-;E;l;
;-;E;W;
;';P;b;y;
;';T;w;
;[;h;
;-<T<
;0<p<
;0uF9E
;F }%
;H;b;w;
;N,sn
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?`?d?h?l?t?x?|?
? ?@?L?T?
?#?)?5?e?z?
?,?4?<?H?h?t?
?,?7?H?N?
?.?9?K?d?s?
?:?N?x?
?:?U?x?
??0exception@@QAE@ABQBD@Z
??0exception@@QAE@ABV0@@Z
??0exception@@QAE@XZ
??1exception@@UAE@XZ
??1type_info@@UAE@XZ
?+?u?
?=u/W
?0?@?P?`?p?
?97aY
?O?r?
?terminate@@YAXXZ
?what@exception@@UBEPBDXZ
@.didat
@.reloc
\cbWW
\Implemented Categories
\Required Categories
]IDWW
]OX/Y
]ppProviderWWd
^D$.T
^pvWW
^VQhp
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_CxxThrowException
_errno
_except_handler4_common
_FILETIMEWWW
_initterm
_LARGE_INTEGERWW
_lock
_onexit
_purecall
_strtoui64
_ui64toa_s
_ULARGE_INTEGERW
_unlock
_vscwprintf
_wcsicmp
_wcslwr_s
_XcptFilter
`.data
`ZxZ,
})();
}*nPageSizeWWW
~"pbstrMimeTypeWWW
~<<+"
~TitleWWW
+AllowedSiteCountx
+http://www.microsoft.com/Windows/Help/Event
< <0<@<P<`<d<t<x<
< <4<8<P<T<h<l<
<"<9<L<j<
<"=0=M=
<"=8=H=`=~=
<$=W=`=
<(<4<<<p<
<(<L<q<
<(<z<
<)<7<h<y<
<)=D=
<*>y>
<1<K<^<c<i<}<
<9=}=
<F<v<
= =$=(=,=0=4=<=@=D=H=L=T=X=\=`=d=h=p=t=x=|=
= =<=\=|=
= =8=H=X=h=l=p=t=x=|=
= >->r>
=!=+=6=<=B=H=X=x=
=#>6>
='=8=A=|=
=-=a=
='>D>W>
=0=@=d=l=t=|=
=3>R>]>t>
=6>V>
=7=C=e=|=
=F=M=S=^=c=
=L9o<
=o=V>l>
> >0>@>D>T>X>\>d>|>
>!><>g>
>$?[?
>$>0>P>\>|>
>]?v?
><?F?a?
><?G?R?]?
>->F>R>]>
>4>8>P>T>l>p>
>5>b>
>8>H>l>t>|>
>E>b>u>
>J>d>
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0004080<0D0
0 0(0004080<0@0D0L0d0h0
0!0<0X0t0
0$0/040F0Q0V0
0$161M1e1
0(0,0<0@0P0T0d0h0x0|0
0(00080@0L0l0x0
0*0X0m0u0
0,080X0`0l0
0\1e1u1
0|zHxOfflineModeWWW
0=0G0a0w0
040904B0
071B1_1
090Z0_0m0
0IWfH
0L0f0
'0X0l0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1"121>1w1
1$1(141\1`1d1
1$101P1X1`1l1
1%2T2
1(1,1D1H1`1d1|1
1(101d1t1
1,101H1X1h1x1|1
1/1`1
1>2k2
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
111:1O1p1
12191`1
141O1Z1n1{1
162X2
1H2Q2k2
1IDataSourceW
1PhhJ
1Z1g1p1{1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2(2H2X2l2|2
2$2(2@2D2\2`2x2|2
2$232A2J2P2j2
2)2L2q2
2*3h3
2,2`2x2
2/2Y2s2
203K3v3
232>2C2
233M3l3t3
24282P2T2l2|2
242B2k2
262J2V2[2e2q2w2
282D2d2p2
283E3e3
283I3P3`3
2A2J2
2L2t2
2Stat
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3(303<3D3x3
3"3.373<3B3L3V3f3v3|3
3$3,343<3H3h3t3
3(3,303D3T3d3t3
3,30383<3@3D3H3L3P3T3X3d3
3,4A4
3;4@4I4T4[4j4z4
3>3g3
3>3Y3l3|3
303L3h3
323A3V3
373F3g3
374n4
3J]|m
3J3U3
3nTotalResultCountWWW
3VSSSSS
3X4c4y4
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4!464K4`4
4#595a5
4$4,444@4`4h4t4
4&41464;4A4K4U4e4n4
4(4C4^4y4
4)4?4e4
4,404@4D4H4`4d4h4|4
4;4k4
4+5^5
4<YyJ
4=4D4
4=4h4y4
404`4
414@4f4
485A5o5
485L5\5l5x5
4D4T4`4
4F5_5
4X5]5o5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 6M6
5"515N5a5|5
5#585>5R5X5^5d5y5
5$5(5,5054585<5@5D5L5P5T5X5\5`5h5l5t5|5
5$50585X5t5
5%545H5N5m5s5~5
5.565B5H5P5V5a5
5:5U5o5
536k6
555M5
5L5y5
5T5r5
5V6t6
5w6i7
6 6(6,64686@6D6L6P6l6p6
6$6(6,646<6@6D6L6T6X6\6d6l6p6t6|6
6$646D6T6d6t6x6
6%6+6N6U6Z6g6}6
6%6d7
6)6L6
6*686b6
6,6<6L6X6x6
606q6
617X7p7
626@6E6L6X6e6
637m7
6D7~7
6H6l6
6jfRequiresElevationWW
6T6j6
7 7$7,70747<7T7X7p7t7
7 8&8@8
7"7O7k7
7$7,70747<7D7H7L7T7\7`7d7l7t7x7|7
7$787@7H7P7d7l7t7|7
7(787H7T7t7|7
7(7L7l7
7,7h7~7
7;7F7P7g7
7?7]7
70B0n0
797K7
7C7I7O7U7[7p7
7H7f8
7IDATx
7O728C8N8S8
8 8$8(8,84888<8@8D8L8P8T8X8\8`8
8 8.888B8L8V8`8j8t8
8 808@8P8T8d8h8l8p8x8
8 808F8e8
8$8D8`8p8|8
8$8J8
8&9A9P9v9
8/8?8v8~8
8/8[8d8
8/9R9
8@9s9
808B8K8T8]8
809P9o9;:D:J:R:X:p:}:
83GISequentialStreamWWWX
858U8u8
888d8
888H8P8T8\8x8|8
8I8_8
8Q$IStreamWX
8W9d9
9 9,9L9T9`9h9
9!:':1:F:U:
9$9+979=9F9M9f9~9
9&:6:U:~:
9(:d:
9(9,90949H9L9d9h9l9
9)9/9
9,:B:W:&;
9;:L:
9\9v9
9<9\9|9
909<9`9h9p9x9
9'9F9
9C3J3W
9D:`:
9D9Z9
9F9o9
9g9p9v9
9M9X9c9k9
A help content stream and some associated metadata
a!Icon
ActiveHelp
AddResultWWW
Adobe ImageReadyq
advapi32.dll
ADVAPI32.dll
AHXLXN
ALERTSET_WARNING.PNG
AllowedSites
APDS.DLL
apds.pdb
api-ms-win-core-com-l1-1-0.dll
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
AppID
APPID
application/octet-stream
ApplicationErrorCode
ApplicationErrorTemplate
ApplicationShutDown
ApplicationStartup
Assistance Platform Client 1.0 Data Services Type LibraryW
AssocQueryStringW
AsyncSearchDataRetrieval
AsyncSearchNavigation
atimeWWW
ATL$__a
ATL$__z
bad allocation
bstrDescriptionW
bstrDisplayNameW
bstrQueryTypeWWW
bstrQueryWWW
bstrUrlW
BTotalResultCount
Cabinet.dll
calloc
cause
CCrackedUrl::UnEscapeUrlPart()
CertGetNameStringW
Cf;2u
CHANh
CharNextW
CHelpUrl::GetAssetID()
cIContent
cLanguagesWW
CloneWWW
CloseHandle
CLSID
CLSID\
clsidWWW
CoCreateInstance
CoGetMalloc
CommitWW
CompanyName
Component Categories
ContentFilter
ContentOnlineDataRetrieval
ContentSessionDataRetrieval
ContentTransformFailedTemplate
ContentType
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CreateFileW
CreateStreamOnHGlobal
CRYPT32.dll
ctimeWWW
D$ PVVV
D$$Xf
D$<PV
D$8Pj
dataServiceModeW
DelayLoadFailureHook
Delete
DeleteCriticalSection
Description
DisableThreadLibraryCalls
DisplayContent
DisplaySearch
DisplayTOC
dlibMove
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
D'plDataSizeWW
dwHighDateTimeWW
dwLockTypeWW
dwLowDateTimeWWW
dwOrigin
e&NamespaceCountWW
EnterCriticalSection
en-US
ERRORBANNER_LTR.CSS
ERRORBANNER_RTL.CSS
ErrorCode
ErrorMessage
EventRegister
EventUnregister
EventWrite
ExpandCollapse
ExpandEnvironmentStringsW
EXPCOL_IMGS.PNG
ExplicitFeedback
FileDescription
FileType
FileVersion
FindClose
FindFirstFileExW
FindMimeFromData
FindNextFileW
FindResourceExW
FindResourceW
Fj'Xf
ForceRemove
FreeLibrary
FullTextMerge
g6 <CC
GetAllowedSiteWW
GetCharacterEncoding = function (input) {
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetElementsByClassName = function (className, tag) {
GetHGlobalFromStream
GetLastError
GetLocaleInfoEx
GetModuleFileNameW
GetModuleHandleW
GetNamespace
GetProcAddress
GetProcessHeap
GetProductInfo
GetRedirectUrlWW
GetSearchProviderWWW
GetSearchResults
GetSystemTimeAsFileTime
GetTempFileNameW
GetTempPathW
GetTickCount
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetVersionExW
GetWindowsDirectoryW
gIDATx
GlobalAlloc
GlobalLock
GlobalMerge
GlobalSize
GlobalUnlock
g-pcbReadWX
gpqFF
grfCommitFlagsWW
grfLocksSupportedWWW
grfModeW
grfStateBits
GroupPolicyFound
H$22Bx
Hardware
HasLanguageAlternative
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSize
HH_PPEIC.PNG
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HSVW3
HttpAddRequestHeadersW
HttpOpenRequestW
HttpQueryInfoW
https
HttpSendRequestW
Hub.AddPostProcessFunction = function (x) {
Hub.AddPostProcessFunction(FeedbackControlPolicyPostProcessEvent);
Hub.AddPostProcessFunction(SearchBoxPostProcessEvent);
Hub.External.EvaluateState = function (stateName)
Hub.External.GetTokenValue = function (tokenName)
Hub.OemHomeTile.CreateTile = function (bannerSpan, isOemMediumLogoUrlPresent)
Hub.OemHomeTile.OnLoadBody = function () 
Hub.PostProcessData = function () {
Hub.Preload.AddEventHandler = function (x) 
Hub.Preload.AddEventHandler(Hub.OemHomeTile.OnLoadBody);
Hub.Preload.AddEventHandler(Hub.TopicPanel.OnLoadBody);
Hub.Preload.Initialize = function() 
Hub.Preload.Initialize();
Hub.Preload.OnLoadBody = function () 
Hub.Search.AddResult = function (resultContainer, title, contentType, description, link) {
Hub.Search.AddResults = function (resultContainer, resultsObject) {
Hub.Search.ClearSelectedBucket = function () {
Hub.Search.DisplayError = function (err) {
Hub.Search.DisplayPageNumberBox = function (pageNum, max, min) {
Hub.Search.FindSource = function (sourceName) {
Hub.Search.FireSourceEvents = function () {
Hub.Search.FixEmptyHash = function () {
Hub.Search.FocusOnSearchBox = function () {
Hub.Search.GetCachedResults = function (key) {
Hub.Search.GetHashHref = function (bucketName, pageNum) {
Hub.Search.GetHashParam = function (paramName, decode) {
Hub.Search.GetParam = function (paramName, paramString, decode) {
Hub.Search.GetQueryParam = function (paramName, decode) {
Hub.Search.GetSearchQuery = function (decode) {
Hub.Search.GetSessionStorageKey = function (type, query, pageNum, maxPerPage) {
Hub.Search.HideAllResults = function () {
Hub.Search.HideAllStatus = function () {
Hub.Search.HideBucketContainer = function () {
Hub.Search.HidePaginationControl = function () {
Hub.Search.InjectQueryTerm = function () {
Hub.Search.OfflineCallback = function (callbackObj, searchSource) {
Hub.Search.ProcessFirstReturnedResults = function () {
Hub.Search.RemoveSelectedDisabledFromPageControl = function () {
Hub.Search.SearchResultsPostProcessEvent = function () {
Hub.Search.SelectBucketPageFromHash = function () {
Hub.Search.SelectResults = function (bucketName, page) {
Hub.Search.SetCachedResults = function (callbackObj, key) {
Hub.Search.SetSelectedBucket = function (bucketName) {
Hub.Search.ShowBucketContainer = function () {
Hub.Search.ShowPaginationControl = function () {
Hub.Search.TriggerOfflineSearchIfNeeded = function (searchSource, pageNum) {
Hub.Search.Update = function () {
Hub.Search.UpdateBucketWithResultTotal = function (total, searchSource) {
Hub.Search.UpdateOemEscalationLink = function () {
Hub.Search.UpdatePaginationControl = function () {
Hub.Search.UpdateResultsWindow = function () {
Hub.Search.UpdateStatus = function () {
Hub.SearchBox.BackgroundBoxSelector = "div.HHSearchQueryBoxBackgroundLevel1";
Hub.SearchBox.InputBoxSelector = 'input[type="text"]';
Hub.SearchBox.LoadSearchTextIfEmpty = function (inputElement, backgroundElement) {
Hub.SearchBox.OnLoadFunction = function () {
Hub.SearchBox.OnReadyFunction = function () {
Hub.SearchBox.TryAddProperties = function (inputBoxes, form) {
Hub.SearchBox.UnloadSearchText = function (backgroundElement) {
Hub.TopicPanel.GetTopicID = function (srcMshelpUrl)
Hub.TopicPanel.IDToClassMap = new Array();
Hub.TopicPanel.IDToClassMap["browsetopic"]      = "oem-browse-pane";
Hub.TopicPanel.IDToClassMap["escalationtopic"]  = "oem-escalation-pane";
Hub.TopicPanel.IDToClassMap["hometopic"]        = "oem-home-pane";
Hub.TopicPanel.IDToClassMap["resourcestopic"]   = "oem-resources-pane";
Hub.TopicPanel.OnLoadBody = function () 
Hub.Util.AttachHandlerEach = function (elements, eventName, fcn) 
Hub.Util.AttachHandlerEach = function (elements, eventName, fcn) {
Hub.Util.AttachHandlerElement = function (eventName, fcn) 
Hub.Util.AttachHandlerElement = function (eventName, fcn) {
Hub.Util.RemoveEach = function (elements) 
Hub.Util.RemoveEach = function (elements) {
Hub.Util.RemoveElement = function () 
Hub.Util.RemoveElement = function () {
Hub.Util.RunFunctionOnEach = function (elements, fcn) 
Hub.Util.RunFunctionOnEach = function (elements, fcn) {
Hub.Util.StyleChangeEach = function (elements, styleName, styleValue) 
Hub.Util.StyleChangeEach = function (elements, styleName, styleValue) {
Hub.Util.StyleChangeElement = function (styleName, styleValue) 
Hub.Util.StyleChangeElement = function (styleName, styleValue) {
HUBOFFLINE.JS
HUBPRELOAD.JS
hxds.DLL
HxSession ClassWWW
hZbstrType
IDATx
IDATXG
IErrorInfoWithMessageTemplate
if (typeof (Hub) == "undefined") Hub = {};
if (typeof (Hub) == 'undefined') Hub = {};
if (typeof (Hub.AddPostProcessFunction) == 'function') {
if (typeof (Hub.External) == "undefined") Hub.External = {};
if (typeof (Hub.OemHomeTile) == "undefined") Hub.OemHomeTile = {};
if (typeof (Hub.PostProcessFunctionList) == 'undefined') Hub.PostProcessFunctionList = [];
if (typeof (Hub.Preload) == 'undefined') Hub.Preload = {};
if (typeof (Hub.Preload.OnLoadFunctionList) == 'undefined') Hub.Preload.OnLoadFunctionList = new Array();
if (typeof (Hub.Search) != 'undefined' && typeof (Hub.Search.SearchResultsPostProcessEvent) == 'function') {
if (typeof (Hub.Search) == 'undefined') Hub.Search = {};
if (typeof (Hub.Search.CurrPage) == 'undefined') Hub.Search.CurrPage = {};
if (typeof (Hub.Search.Enum) == 'undefined') Hub.Search.Enum = { FoundResults: 0, NoResults: 1, StillSearching: 2 };
if (typeof (Hub.Search.ErrorOccured) == 'undefined') Hub.Search.ErrorOccured = false;
if (typeof (Hub.Search.Totals) == 'undefined') Hub.Search.Totals = {};
if (typeof (Hub.TopicPanel) == "undefined") Hub.TopicPanel = {};
if (typeof (Hub.Util) == 'undefined') Hub.Util = {};
if (typeof Hub == "undefined") Hub = {};
if (typeof Hub.SearchBox == "undefined") Hub.SearchBox = {};
if (typeof(FailedPostProcess) == 'undefined' || (typeof (FailedPostProcess) == 'boolean' && FailedPostProcess)) {
if(typeof Ms === "undefined")
if(typeof Ms.Wol === "undefined")
if(typeof Ms.Wol.SessionStorage === "undefined")
IHubSearchResult
IHubSearchResultCollectionWW
IHxSession InterfaceWW$
image/png
ImplicitFeedback
indexWWW
INFO.PNG
InitializeCriticalSection
Interface
InternalName
InternetCloseHandle
InternetConnectW
InternetCrackUrlW
InternetOpenW
InternetReadFile
invalid map/set<T> iterator
Invalid parameter passed to C runtime function.
invalid string position
IsConnected
ISearchProviderW
IsTrustedWWW
iswspace
J%3LM
j%Yf;
j&Yf;
j/_f9:u
J'\'Gg
j\Zf9
j{Xf;
j{Xf9
j=Xf9
j0Xf9
j0Yf;
J46#D
-J5*>
j'Xf;
KERNEL32.dll
KeywordMerge
kGetDataSourceWWW
L$ QVVV
L$<QVP
L$L^[3
L$L^3
language
LanguageAlternative
LanguageAlternativeFriendlyName
Launch
LaunchShortcut
LeaveCriticalSection
LegalCopyright
LoadLibraryExW
LoadLibraryW
LoadResource
LocalAlloc
LocalFree
LocalOEMContentSearch
LocalWindowsContentSearch
LockResource
lstrcmpiW
malloc
map/set<T> too long
MeDN?y
memcmp
memcpy_s
memmove_s
memset
Message
Microsoft
Microsoft Corporation
Microsoft.Windows.Resources.Images.alertset_warning
Microsoft.Windows.Resources.Images.expcol_imgs
Microsoft.Windows.Resources.Images.hh_ppeic
Microsoft.Windows.Resources.Images.info
Microsoft.Windows.Resources.Images.SearchBox
Microsoft.Windows.Resources.Images.top_of_page_arrow
Microsoft.Windows.Resources.Js.HubOffline
Microsoft.Windows.Resources.Js.HubPreload
Microsoft.Windows.Resources.Js.SearchResults
Microsoft.Windows.Resources.Js.WolCommonOffline
Microsoft.Windows.Resources.NavFailOffline
Microsoft.Windows.Resources.NavFailOnline
Microsoft.Windows.Resources.stylesheets.ErrorBanner
Microsoft.Windows.Resources.stylesheets.NavFail
Microsoft.Windows.Resources.stylesheets.OemBaseAndNav
Microsoft.Windows.Resources.stylesheets.OemBranding
Microsoft.Windows.Resources.stylesheets.ppe
Microsoft.Windows.Resources.stylesheets.SearchResults
Microsoft-Windows-Help
Microsoft-Windows-Help/Operational
MimeType
Module
Module_Raw
Ms.Wol.SessionStorage = function()
mshelp
mshelp://
msvcrt.dll
mtimeWWW
MultiByteToWideChar
N!LockRegionWW
NAVFAIL_LTR.CSS
NAVFAIL_RTL.CSS
NAVFAILOFFLINE.HTML
NAVFAILONLINE.HTML
NavigateBack
Navigation
NInitializeWW
NoActiveHelp
NoExplicitFeedback
NoImplicitFeedback
NonPerfEvent
NonPerfEvents
NoOnlineAssist
NoRemove
nPageNumberW
nRevertWW
OEMBASEANDNAV_LTR.CSS
OEMBASEANDNAV_RTL.CSS
OEMBRANDING_LTR.CSS
OEMBRANDING_RTL.CSS
OEMLogo
OEMMediumLogo
OiCCPPhotoshop ICC profile
OIDAT8Oc`
OLEAUT32.dll
OnlineAssist
OnlineConnectionFailed
OnlineContentUrl
OnlineContentUrlFormatWWx
OriginalFilename
OSafeShortcutListUrlFormatWWWx
OutputDebugStringA
PageCustomization
PageNumber
PageNumberWW
PageSize
PathAppendW
PathCombineW
PathFileExistsW
PathFindExtensionW
pbstrUrl,
pbstrValueWWx
pcbWrittenWW
pCountWWx
PerfEvent
PERSISTENTPAGEELEMENTS_LTR.CSS
PERSISTENTPAGEELEMENTS_RTL.CSS
pFromWWW
pIHubSearchResultWWW
pIsOnlineWWW
pIsTrustedWW
pjGetContentWW
plibNewPositionW
PLNZX0T
policy
Policy
Popup
PossibleCause
ppContentWWWd
ppDataSourceL
PPPPj
PPPPP
ppstmWWW
ppStream
pReturnW
ProductName
ProductNameWx
ProductVersion
Provides content streams given a urlWW2
Provides search resultsWWW
PRVAD
pSearchResultWWWL
PSh4;
PSSSV
PSSWSR
pstatstg
pszHeadersWW
pszIDWWW
pszQuery
pszUrlWW
pToWx
pulCountx
pwcsName
pWWWd
q(9>u
Qj&XP
qj'Xf9
QQQQQQQPQQQ
QQSVW
QSVWj
QuadPart 
Query
QueryPerformanceCounter
QueryType
QueryTypeWWW
QueryWWW
RaiseException
realloc
Reason
redirect
REDIRECT.HTML
RedirectURL
RedirectUrlCount
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegisterTraceGuidsW
REGISTRY
RegOpenKeyExW
RegOpenKeyW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
RemoteReadWW
RemoteSeekWW
RemoteWriteW
Render
RequiresElevation
RequiresElevationWWW
reserved
ResolveDelayLoadedAPI
ReusableText
rgpszLanguagesWW
rINamespaceWWx
RQh [
s2hq1
SafeShortcutListUrl
search
SEARCHBOXIMAGE.PNG
SEARCHRESULTS.HTML
SEARCHRESULTS.JS
SEARCHRESULTS_LTR.CSS
SEARCHRESULTS_RTL.CSS
SearchSessionDataRetrieval
SECURITY
session
Session
sessionid
SetUnhandledExceptionFilter
SHCreateStreamOnFileEx
SHLWAPI.dll
SHRegGetValueW
SizeofResource
Sleep
Software
Software\Microsoft\Assistance\Client\1.0\Namespaces
Software\Microsoft\Assistance\Client\1.0\Settings
Software\Microsoft\Windows\CurrentVersion\HelpAndSupport
Software\Microsoft\Windows\CurrentVersion\OEMInformation
Software\Policies\Microsoft\Assistance\Client\1.0
SourceUrlWWW
SPageSize
SPhxO
SrcText
SSSSP
SSSSQ
SSSSSSSPSSSV
SSSSV
stdole2.tlbWWW
StringFileInfo
StringFromGUID2
SYSTEM
t}SV3
t2QQP
t49q u
t49q$u
t4hD:
tagDataServicesModeW
tagSTATSTGWW
TEMP$
TEMP<
TEMP0
TEMP4
TEMP8
TEMPd
TerminateProcess
text/css
text/html
text/javascript
tEXtSoftware
TextualErrorTemplate
tGhxR
tIh8:
Title
tnj'[f;
TOCMerge
TOCOnlineDataRetrieval
TOCSessionDataRetrieval
TOP_OF_PAGE_ARROW.PNG
TopicNavigation
TopicNavigationFailed
TopicProperties
TotalResultCount
tppSearchResultCollectiond
TraceEvent
Transform
Translation
TrimLeadingTrailingWhitespace = function (input) {
TTBL@
TYPELIB
TypeLib
u*j}Xf9
u_SSSSSSS
ulIndexW
UnhandledExceptionFilter
UnlockRegion
UnregisterClassA
UnregisterTraceGuids
urlmon.dll
UrlUnescapeW
UseLanguageAlternative
USER32.dll
v m2=:
var FeedbackControlPolicyPostProcessEvent = function () {
var link_expandAllText = link_expandAllText ? link_expandAllText : "",
var SearchBoxPostProcessEvent = function () {
VarFileInfo
Vd,-|
VGetContentStream
VS_VERSION_INFO
Vstring too long
vswprintf_s
w(s0V
wcscat_s
wcschr
wcscpy_s
wcsncpy_s
wcsstr
wcstok_s
WEVT_TEMPLATE
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Suspend
win:Warning
Win32ErrorTemplate
Win32LastError
windows
WININET.dll
WINTRUST.dll
WinVerifyTrust
WOL.COMMON.OFFLINE.JS
wolcontentid
wolremainderliteral
wolwindowsproduct
WOTS://
WOTSSearch
WriteCharMap
WriteFile
WTHelperGetProvCertFromChain
WTHelperGetProvSignerFromChain
WTHelperProvDataFromStateData
x#VSh@o
XMLDocLoadErrorTemplate
xmlns
x-wol-lfb
x-wol-lfb-name
Y__^[
Y3SetSizeW
YContentTypeW
YLjM2
ypbstrContentUrlW
zHxOnlineMode,
zItem
zlibNewSizeWW
