    --
        
         
          
           
            
                
                 
                    
                     
                        
                            
                                            where AppID in (select ID from AzMan_AzApplication where StoreID = @ParentID) ) )
                                    @actObjectGuid, 
                                    @actObjectName, 
                                    @actObjectType, 
                                    @event, 
                                    @memberFlag,
                                    @memberName,  
                                    @memberSid, 
                                    @otherInfo
                                    @targetGuid,
                                    @targetName, 
                                    @targetType,  
                                    @UserName, 
                                    @UserSid, 
                                    0, 
                                    6, 
                            -- now call recursively to delete the app's roles
                            @ExistingBizruleID
                            @ParentId ,
                            [BizRuleID]
                            [GroupID] ,
                            [TaskID] ,
                            Break
                            EXEC AzMan_SPD_SQLRole_ForObject @locReturn output, @AppID, 1, 3
                            EXEC AzMan_SPD_SQLRole_ForObject @locReturn output, @ScopeID, 4, 3
                            FETCH NEXT FROM app_cursor INTO @AppID
                            FETCH NEXT FROM scope_cursor INTO @ScopeID
                            WHERE app.ID = @ParentId
                            WHERE dbo.AzMan_AzScope.ID = @ID
                            WHERE scope.ID = @ParentId
                           ( AppID in ( select ID from AzMan_AzApplication where StoreID = @ParentID ) )
                           ( ScopeID in ( select ID from AzMan_AzScope 
                        (
                        (  ( ParentType = 4 ) and   -- Scope
                        )
                        @Name,
                        @ObjectGuid,
                        @parentGuid = app.ObjectGuid 
                        @parentGuid = scope.ObjectGuid 
                        @parentGuid = store.ObjectGuid 
                        @parentGuid,
                        @parentName,
                        @Return,
                        @SidMember,
                        @storeGuid,
                        @storeName,
                        0,  -- 0 for non-member
                        0,  -- 0 for SE_AUDITID_AZ_SQL_OBJECT_CREATE
                        0,  -- 0 for store
                        1,  -- 1 for Application
                        1,  -- 1 for member
                        4,  -- 4 for SE_AUDITID_AZ_SQL_MEMBER_ASSIGN
                        5,  -- 5 for group
                        5,  -- 5 for SE_AUDITID_AZ_SQL_MEMBER_REMOVE
                        BEGIN
                        Break
                        Break   
                        END
                        exec AzMan_SP_Check_Dup_Group_For_Given_Parent @Return output, @ParentStore, 0, @ID, @Name
                        EXEC AzMan_SP_GetRoleMemberCount @SQLRoleName, @RoleMemberCount output
                        Exec AzMan_SPD_AzApplicationGroup_Single_SidMember @Return output, @GroupId, @IsMember ,@SidMember, @SaclIsOn
                        Exec AzMan_SPD_AzRoleAssignment_Single_SidMember @Return output, @RoleId, @Sid, @SaclIsOn
                        Exec AzMan_SPI_AzApplicationGroup_Single_SidMember @Return output, @GroupId, @IsMember, @SidMember, @SaclIsOn
                        Exec AzMan_SPI_AzRoleAssignment_Single_SidMember @Return output, @RoleId, @Sid, @SaclIsOn
                        FROM [dbo].[AzMan_AzApplication] app
                        FROM [dbo].[AzMan_AzApplicationGroup] appGroup WHERE appGroup.ID = @ParentId
                        FROM [dbo].[AzMan_AzAuthorizationStore] store
                        FROM [dbo].[AzMan_AzScope] scope
                        FROM [dbo].[AzMan_AzTask] task WHERE task.ID = @ParentId
                        IF @Return <> 0
                        IF @RoleMemberCount > 0
                        insert [dbo].[AzMan_BizRule_To_Group] 
                        insert [dbo].[AzMan_BizRule_To_Task] 
                        is_member([dbo].[Azman_SQLRole].[SQLRoleName]) = 1 ) 
                        N'' -- no other info
                        N'',
                        SELECT @parentName=app.Name, @parentGuid=app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
                        SELECT @parentName=scope.Name, @parentGuid=scope.ObjectGuid FROM [dbo].[AzMan_AzScope] scope
                        select App.ID FROM AzMan_AzApplication App WHERE App.StoreID = @ID
                        select Scope.ID FROM AzMan_AzScope Scope WHERE Scope.AppID = @ID
                        Set @Return = -1 -- General Error
                        Set [LdapQueryID] = @ID
                        UPDATE dbo.AzMan_AzScope SET dbo.AzMan_AzScope.HasSpecificUsers = 1 
                        Values
                        WHERE app.ID = @ParentId
                        WHERE app.ID = @ParentId 
                        WHERE dbo.AzMan_AzScope.ID = @ID
                        WHERE scope.ID = @ParentId
                        WHERE store.ID = @ParentId
                        WHERE Store.ID = @StoreId
                       ([ID] = @ID)
                      and 
                      LOWER([Name]) = LOWER(@Name)  and 
                     (@ParentID IN ( Select AppID from AzMan_AzScope where AppID = @ParentID and ID <> IsNULL(@ID,0)) ) )
                    -- Find the Parent Store
                    -- generate an audit
                    -- get the store info
                    (
                    ( ParentType = 4 ) -- All Child scope
                    )
                    ) 
                    @childGuid = appGroup.ObjectGuid 
                    @childGuid = role.ObjectGuid 
                    @childGuid = task.ObjectGuid 
                    @childGuid,
                    @childName = appGroup.Name, 
                    @childName = role.Name, 
                    @childName = task.Name, 
                    @childName,
                    @DbName,
                    @groupGuid,
                    @groupName,
                    @ID,
                    @Name,
                    @ObjectGuid,
                    @ObjectName,
                    @ObjectType,
                    @opGuid,
                    @opName,
                    @parentGuid,
                    @parentName,
                    @ParentType,
                    @refGroupGuid,
                    @refGroupName,
                    @refTaskGuid,
                    @refTaskName,
                    @Ret output,
                    @Return,
                    @roleGuid,
                    @roleName,
                    @SidMember,
                    @SQLRoleName,
                    @taskGuid,
                    @taskName,
                    @UserName
                    [dbo].[AzMan_AzApplicationGroup] 
                    [GroupType],
                    [Name],
                    [ObjectGuid] ,
                    0,  -- 0 for SE_AUDITID_AZ_SQL_OBJECT_CREATE
                    0,  -- 0 for store
                    1,  -- 0 for application
                    1,  -- 1 for application
                    1,  -- 1 for member
                    1,  -- 1 for SE_AUDITID_AZ_SQL_OBJECT_DELETE
                    2,  -- 1 for Operation
                    2,  -- 2 for Operation
                    2,  -- 2 for operation
                    2,  -- 2 for Operation
                    2,  -- 2 for SE_AUDITID_AZ_SQL_REFERENCE_ASSIGN
                    3,  -- 3 for SE_AUDITID_AZ_SQL_REFERENCE_REMOVE
                    3,  -- 3 for task
                    4,  -- 0 for scope
                    4,  -- 4 for SE_AUDITID_AZ_SQL_MEMBER_ASSIGN
                    5,  -- 5 for application group
                    5,  -- 5 for group
                    5,  -- 5 for SE_AUDITID_AZ_SQL_MEMBER_REMOVE
                    6,  -- 6 for role
                    BEGIN
                    Begin
                    BEGIN
                    Begin
                    BEGIN
                    Begin
                    BEGIN
                    Begin
                    BEGIN
                    Begin
                    Close app_cursor
                    Close scope_cursor
                    DEALLOCATE app_cursor
                    DEALLOCATE scope_cursor
                    DECLARE @AppID int
                    DECLARE @ScopeID int
                    DECLARE app_cursor CURSOR
                    DECLARE scope_cursor CURSOR
                    else
                    else if @ParentType = 5 -- group
                    End
                    END
                    End
                    END
                    End
                    END
                    End
                    End 
                    EXEC [AzMan_SP_GenerateObjectAudit]
                    Exec [AzMan_SP_GetSQLRole] @Return output, @ID, @ObjectType, 1, @OtherRoleName output  
                    Exec [AzMan_SP_GetSQLRole] @Return output, @ID, @ObjectType, 2, @OtherRoleName output
                    Exec [AzMan_SPD_AzRoleAssignment_Single_Task] @Return output, @RoleId, @iTaskID, @SaclIsOn
                    Exec [AzMan_SPI_AzRoleAssignment_Single_Task] @Return output, @RoleId, @iTaskID, @SaclIsOn
                    EXEC AzMan_SP_GetRoleMemberCount @OtherRoleName, @OtherRoleMemberCount output
                    EXEC AzMan_SP_GetRoleMemberCount @SQLRoleName, @RoleMemberCount output
                    Exec AzMan_SPD_AzApplicationGroup_Single_AppMember @Return output, @GroupId, @iAppMemberID , @IsMember, @SaclIsOn
                    Exec AzMan_SPD_AzRoleAssignment_Single_AppMember @Return output, @RoleId, @iAppMemberID, @SaclIsOn 
                    Exec AzMan_SPD_AzRoleAssignment_Single_Operation @Return output, @RoleID, @iOperationID, @SaclIsOn
                    Exec AzMan_SPD_AzTask_Single_Operation @Return output, @TaskID, @iOperationID, @SaclIsOn
                    Exec AzMan_SPD_AzTask_Single_Task @Return output, @ParentTaskId, @iTaskID, @SaclIsOn
                    Exec AzMan_SPI_AzApplicationGroup_Single_AppMember @Return output, @GroupId, @iAppMemberID , @IsMember, @SaclIsOn
                    Exec AzMan_SPI_AzRoleAssignment_Single_AppMember @Return output, @RoleId, @iAppMemberID, @SaclIsOn
                    Exec AzMan_SPI_AzRoleAssignment_Single_Operation @Return output, @RoleID, @iOperationID, @SaclIsOn
                    Exec AzMan_SPI_AzTask_Single_Operation @Return output, @TaskID, @iOperationID, @SaclIsOn
                    Exec AzMan_SPI_AzTask_Single_Task @Return output, @ParentTaskId, @iTaskID, @SaclIsOn
                    FETCH NEXT FROM app_cursor INTO @AppID
                    FETCH NEXT FROM scope_cursor INTO @ScopeID
                    FOR 
                    FROM [dbo].[AzMan_AzApplicationGroup] appGroup
                    FROM [dbo].[AzMan_AzRoleAssignment] role
                    FROM [dbo].[AzMan_AzTask] task
                    from AzMan_AzApplication
                    goto Done
                    if ( @ParentStore = 0 )
                    if @ParentType = 3 -- task
                    if @Return <> 0
                    if @Return <> 0 
                    IF @RoleMemberCount > 0
                    IsNull([Description], N'')
                    N'' -- no other info
                    N'' -- no other info  
                    N'',
                    N'The bizrule of the object may have been modified'
                    N'The LDAP query of the application may have been modified'
                    N'The shallow properties of the application group may have been modified'
                    N'The shallow properties of the application may have been modified'
                    N'The shallow properties of the operation may have been modified'
                    N'The shallow properties of the role assignment may have been modified'
                    N'The shallow properties of the scope may have been modified'
                    N'The shallow properties of the store may have been modified'
                    N'The shallow properties of the task may have been modified'
                    OPEN app_cursor
                    OPEN scope_cursor
                    or 
                    SELECT @parentName = app.Name, @parentGuid = app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
                    SELECT @parentName = scope.Name, @parentGuid = scope.ObjectGuid FROM [dbo].[AzMan_AzScope] scope
                    SELECT @parentName = store.Name, @parentGuid = store.ObjectGuid FROM [dbo].[AzMan_AzAuthorizationStore] store
                    SELECT @parentName=appGroup.Name, @parentGuid = appGroup.ObjectGuid 
                    SELECT @parentName=task.Name, @parentGuid = task.ObjectGuid 
                    Select @ParentStore = [StoreID] 
                    SELECT @storeName = Store.Name, @storeGuid = Store.ObjectGuid FROM [dbo].[AzMan_AzAuthorizationStore] Store
                    Set @Return = @Error 
                    Set @Return = -1168 -- Record not found
                    Set @Return = -183  -- Same Name exist
                    Set @Return = -5
                    Update [dbo].[AzMan_AzApplicationGroup] 
                    UPDATE dbo.AzMan_AzScope SET dbo.AzMan_AzScope.HasSpecificUsers = 1 
                    When 0 Then IsNull(@Description, [Description]) 
                    When 0 Then IsNull(@GroupType, [GroupType]) 
                    when 0 then StoreID
                    When 1 Then @Description 
                    When 1 Then @GroupType 
                    when 1 then AppID
                    when 4 then ScopeID
                    when 4 then ScopeID 
                    where [ID] = @GroupId                   
                    where [ID] = @ParentAppID
                    WHERE App.ID = @AppId
                    WHERE app.ID = @ID
                    WHERE app.ID = @ParentId 
                    WHERE app.ID=@ID
                    WHERE appGroup.ID = @ID
                    WHERE dbo.AzMan_AzScope.ID = @ID
                    WHERE Op.ID = @ID
                    WHERE Op.ID = @OperationID
                    WHERE role.ID = @ID
                    WHERE Role.ID = @RoleID
                    WHERE scope.ID = @ID
                    WHERE scope.ID = @ParentId
                    WHERE scope.ID=@ID
                    WHERE store.ID = @ID
                    WHERE store.ID = @StoreId
                    WHERE store.ID=@ID
                    WHERE task.ID = @ID
                    WHILE @@FETCH_STATUS = 0
                   (   (   ( ParentType = 1 ) and       -- Application
                   ( [Name] = @Name )      and
                  @GroupId
                  @ObjectGuid
                  @ParentId
                  [GroupID]
                  [ObjectGuid]
                  [ParentId]
                 ( ( ID <> IsNULL(@ID,0) ) and
                 ([ID] = @ID)
                 ([ID] = @ID) 
                 ) 
                 ,@BizRule 
                 ,@BizRuleImportedPath 
                 ,@BizRuleLanguage
                 ,@ParentType
                 [Name] = IsNull(@Name, [Name]) 
                -- and Check for conflict 
                -- Find All the Child scopes of parent and check for conflicts
                -- get info for auditing
                -- if NNNN=0, then it means to delete
                -- if the user is successfully added to a scope's role
                -- Update the AzApplication Groups or Task with the new ID
                -- Update the AzApplication Groups with the new ID
                -- we need to get the other role's name for the scope
                (@ParentID IN ( Select AppID from AzMan_AzScope where AppID = @ParentID and ID <> IsNULL(@ID,0)) ) )
                , @AppId
                , @AppID
                , @ApplicationData
                , @ApplicationVersion
                , @ApplyStoreSacl
                , @AuthzInterfaceClsId
                , @Description
                , @GenerateAudits
                , @IsRoleDefinition
                , @LdapQuery
                , @Name
                , @ParentType
                , @ScopeID
                , @StoreId
                , [AppID]
                , [ApplicationData]
                , [ApplicationVersion]
                , [ApplyStoreSacl]
                , [AuthzInterfaceClsId]
                , [BizRule] 
                , [BizRuleImportedPath] 
                , [BizRuleLanguage]
                , [Description]
                , [GenerateAudits]
                , [IsRoleDefinition]
                , [LdapQuery]
                , [Name]
                , [ParentType]
                , [ScopeID]
                , [StoreID]
                ,[ApplicationData] = Case @ConsiderNull_ApplicationData When 0 Then IsNull(@ApplicationData, [ApplicationData]) When 1 Then @ApplicationData End
                ,[Description] = Case @ConsiderNull_Description When 0 Then IsNull(@Description, [Description]) When 1 Then @Description End
                ,[NameHash] = IsNull(@NameHash, [NameHash]) 
                ,[OperationID] = Case @ConsiderNull_OperationID When 0 Then IsNull(@OperationID, [OperationID]) When 1 Then @OperationID End
                @appGuid,
                @appName,
                @childGuid,
                @childName,
                @ID,
                @MemberType,  -- member type
                @Name,
                @ObjectGuid,
                @ObjectName,
                @ObjectType,
                @parentGuid,
                @parentName,
                @Return,
                @RoleID,
                @RoleType
                @SQLRoleName,
                @UserName,
                @UserSid,
                [ApplicationData]
                [dbo].[AzMan_AzApplicationGroup] 
                [Description],
                [GroupType]  ,
                [GroupType],
                [GroupType], 
                [ID], 
                [IsRoleDefinition],                
                [Name]       ,
                [Name] = IsNull(@Name, [Name]) 
                [Name],
                [ObjectGuid] ,
                [ObjectGuid],
                [ObjectID], 
                [ObjectType],
                [RoleType] 
                [SQLRoleName],
                [uid],      
                0,  -- 0 for SE_AUDITID_AZ_SQL_OBJECT_CREATE
                0,  -- 0 for store
                1,  -- 1 for Application
                1,  -- 1 for application
                1,  -- 1 for Application
                1,  -- 1 for SE_AUDITID_AZ_SQL_OBJECT_DELETE
                2,  -- 2 for operation
                4,  -- 0 for SE_AUDITID_AZ_SQL_MEMBER_ASSIGN
                4,  -- 4 for scope
                5,  -- 0 for SE_AUDITID_AZ_SQL_MEMBER_REMOVE
                and 
                and g.issqlrole = 1
                and g.uid = m.groupuid
                and u.uid = m.memberuid
                BEGIN
                Begin
                begin
                Begin
                BEGIN
                Begin
                BEGIN
                Begin
                BEGIN
                Begin
                BEGIN
                Begin
                BEGIN
                Begin
                BEGIN
                Begin           
                Case @ConsiderNull_GroupDescription 
                Case @ConsiderNull_GroupType 
                case ParentType
                Else
                else
                ELSE
                else
                ELSE
                Else
                ELSE
                ELSE IF @RoleType = 2 -- reader
                End
                end
                End
                END
                End
                END
                End
                END
                End
                END
                End
                END
                End
                END
                End
                End             
                End                 
                end,
                Exec @Ret = sp_addrolemember  @SQLRoleName, @UserName
                EXEC @Ret = sp_grantdbaccess @UserName, @NameInDB output
                EXEC @Ret = sp_grantlogin @UserName
                EXEC [AzMan_SP_GenerateMemberAudit]
                Exec AzMan_SP_Check_Dup_Application @Return output, @StoreId, @ID, @Name
                exec AzMan_SP_Check_Dup_Group_For_Given_Parent @Return output, @ParentAppID, 1, @ID, @Name
                exec AzMan_SP_Check_Dup_Group_For_Given_Parent @Return output, @ParentStore, 0, @ID, @Name
                Exec AzMan_SP_Check_Dup_RoleAssignment @Return output, @ParentId, @ParentType, @ID, @Name
                Exec AzMan_SP_Check_Dup_Task @Return output, @ParentId, @ParentType, @ID, @Name
                exec AzMan_SPD_All_SQLRole_ForObject @Return output , @ID, @ObjectType
                Exec master.dbo.xp_AzManDeleteRole @Return output, @ID, @ObjectType, @DbName 
                From [AzMan_AzApplicationGroup] 
                Goto Exit_AzMan_SP_AccessCheck
                if  @Return = 0 
                if @Error = 0
                if @ExistingBizruleID <> 0
                if @ID <> 0
                IF @isAdd <> 0
                if @isAdd <> 0 
                IF @OtherRoleName IS NOT NULL
                IF @Ret = 0 AND @ObjectType = 4 -- scope
                IF @RoleMemberCount = 0 AND @OtherRoleMemberCount = 0
                IF @RoleType = 1 -- admin
                IF @SaclIsOn = 1
                IF @SQLRoleName IS NOT NULL
                if Exists( Select [Name] from 
                ISNULL ( [Description] , N'' ) 
                LOWER([Name]) = LOWER(@Name)  and 
                N'' -- no other info
                N'Trying to create an AzAuthorizationStore'
                Return
                Select
                SELECT  @parentName = app.Name, 
                SELECT  @parentName = scope.Name, 
                SELECT  @parentName = store.Name, 
                SELECT @ObjectName = app.Name, @ObjectGuid=app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
                SELECT @ObjectName = scope.Name, @ObjectGuid=scope.ObjectGuid FROM [dbo].[AzMan_AzScope] scope
                SELECT @ObjectName = store.Name, @ObjectGuid=store.ObjectGuid FROM [dbo].[AzMan_AzAuthorizationStore] store
                SELECT @parentName = app.Name, @parentGuid = app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
                SELECT @parentName = scope.Name, @parentGuid = scope.ObjectGuid FROM [dbo].[AzMan_AzScope] scope
                select ObjectID from [dbo].[Azman_SQLRole]
                Set @AppId = @ParentId
                Set @CheckSaclOnly = 1
                Set @DbName = db_name()
                Set @ExistingBizruleID = Cast(SCOPE_IDENTITY() As [int])
                Set @ID = Cast(SCOPE_IDENTITY() As [int])
                SET @MemberType = 2
                SET @MemberType = 3
                SET @MemberType = 4
                SET @OtherRoleMemberCount = 0
                SET @OtherRoleName = NULL
                SET @Pos = @DataLength
                SET @Pos = @Pos + @SidLength
                SET @Pos = @Pos + @SidLength        
                Set @Return = @Error
                Set @Return = @Error 
                SET @Return = 0
                Set @Return = 0
                set @Return = 0
                Set @Return = -1
                Set @Return = -1 -- General Error
                Set @Return = -1168 -- Error updating the Record
                Set @Return = -1168 -- Record not found
                Set @Return = -1168 --Record not found
                Set @Return = -183  -- Same Name exist
                Set @Return = -5
                Set @Return = -5 
                SET @RoleMemberCount = 0
                Set @ScopeID = @ID
                Set @ScopeID = @ParentId
                SET @Sid = CAST(SUBSTRING(@SidMembers, @Pos, @SidLength) as varbinary)
                SET @SidMember = CAST(SUBSTRING(@SidMembers, @Pos, @SidLength) AS varbinary)
                SET @UserType = @Return
                SET [ChildUpdateTimeStamp]=@OldChildTS
                SET [ChildUpdateTimeStamp]=@OldChildTS + 1
                UPDATE dbo.AzMan_AzScope SET dbo.AzMan_AzScope.HasSpecificUsers = 0 
                where 
                Where ((@ID Is Null) Or ([ID] = @ID))
                where [dbo].[Azman_SQLRole].[ObjectType] = 1 and 
                where [dbo].[Azman_SQLRole].[ObjectType] = 4 and 
                where [ID] = @ID
                WHERE app.ID = @AppId
                WHERE app.ID = @ID
                WHERE appGroup.ID = @GroupId
                WHERE appGroup.ID = @ID
                WHERE ID = @ObjectID
                WHERE op.ID = @ID
                WHERE Op.ID = @OperationID
                WHERE refGroup.ID = @ChildID
                WHERE refTask.ID = @ChildID
                WHERE refTask.ID = @TaskID
                WHERE role.ID = @ID
                WHERE role.ID = @RoleId
                WHERE Role.ID = @RoleId
                WHERE role.ID = @RoleId
                WHERE Role.ID = @RoleId
                WHERE Role.ID = @RoleID
                WHERE role.ID = @RoleID
                WHERE scope.ID = @ID
                WHERE store.ID = @ID
                WHERE task.ID = @ID
                WHERE Task.ID = @TaskID
               @ParentType = ParentType from [AzMan_AzTask] where ID = @ID
               END
              @ObjectGuid
              @ParentType = ParentType 
              [AppID]
              [ObjectGuid]
            --  and cannot have the same name as any groups that are children of any of the child scopes.
            --  cannot have the same name as groups that are children of the authorization store,
              Desc: %ws
              File: %ws
              Src:  %ws
             @ObjectGuid
             [ID]
             [Name] = IsNull(@Name, [Name]) 
            -- A group that is a child of a scope,
            -- A group that is a child of an application
            -- cannot have the same name as groups that are children of the application or authorization store
            -- Find the Parent App
            -- Find the parent of Application 
            -- for applications or stores, we also need to delete the sub-container's roles
            -- generate an audit
            -- generate an audit if SACL is on
            -- get info for auditing
            -- get info for auditing            
            -- get the info for auditing
            -- get the store info for auditing
            -- no need to know that SACL (Second last parameter)
            -- now move to the pipe separator
            -- remove the left part (the id)
            -- TODO Should we truncate the name for scopes?        
            -- We can't lookup names from SID, but XP can do that
            -- we have proper access, then insert the role
            (
            ( ParentType = @ParentType ) 
            ( ParentType = 4 ) -- All Child scope
            ( Select [LdapQueryID] From [AzMan_AzApplicationGroup] where ID = @GroupID  )
            (@ParentAppID = AppID) )
            ([ID] = @ID)
            )
            , @AppId
            , @AppID            
            , @ApplicationData
            , @ApplyStoreSacl
            , @BizRule 
            , @BizRuleImportedPath 
            , @BizRuleLanguage 
            , @ConsiderNull_BizRule 
            , @ConsiderNull_BizRuleImportedPath 
            , @ConsiderNull_BizRuleLanguage 
            , @Description
            , @DomainTimeout
            , @GenerateAudits
            , @GroupType
            , @MajorVersion
            , @MaxScriptEngines
            , @MinorVersion
            , @Name
            , @NameHash
            , @NameLen
            , @ObjectGuid
            , @OperationID
            , @ParentType
            , @ScopeID                      
            , @ScriptEngineTimeout
            , @StoreID
            , @TargetMachine
            , [AppID]
            , [AppID]           
            , [ApplicationData]
            , [ApplyStoreSacl]
            , [Description]
            , [DomainTimeout]
            , [GenerateAudits]
            , [GroupType]
            , [MajorVersion]
            , [MaxScriptEngines]
            , [MinorVersion]
            , [Name]
            , [NameHash]
            , [NameLen]
            , [ObjectGuid]
            , [OperationID]
            , [ParentType]
            , [ScopeID]                     
            , [ScriptEngineTimeout]
            , [StoreID]
            , [TargetMachine]
            ,[ApplicationData]
            ,[ApplicationData] = Case @ConsiderNull_ApplicationData When 0 Then IsNull(@ApplicationData, [ApplicationData]) When 1 Then @ApplicationData End
            ,[ApplicationData] = Case @ConsiderNull_ApplicationData When 0 Then IsNull(@ApplicationData, [ApplicationData]) When 1 Then @ApplicationData End            
            ,[ApplicationVersion] = Case @ConsiderNull_ApplicationVersion When 0 Then IsNull(@ApplicationVersion, [ApplicationVersion]) When 1 Then @ApplicationVersion End
            ,[ApplyStoreSacl]
            ,[ApplyStoreSacl] = Case @ConsiderNull_ApplyStoreSacl When 0 Then IsNull(@ApplyStoreSacl, [ApplyStoreSacl]) When 1 Then @ApplyStoreSacl End
            ,[AuthzInterfaceClsId] = Case @ConsiderNull_AuthzInterfaceClsId When 0 Then IsNull(@AuthzInterfaceClsId, [AuthzInterfaceClsId]) When 1 Then @AuthzInterfaceClsId End
            --,[ChildUpdateTimeStamp]
            ,[Description]
            ,[Description] = 
            ,[Description] = Case @ConsiderNull_Description When 0 Then IsNull(@Description, [Description]) When 1 Then @Description End
            ,[DomainTimeout]
            ,[GenerateAudits]
            ,[GenerateAudits] = Case @ConsiderNull_GenerateAudits When 0 Then IsNull(@GenerateAudits, [GenerateAudits]) When 1 Then @GenerateAudits End
            ,[GroupType] = 
            ,[IsRoleDefinition] = Case @ConsiderNull_IsRoleDefinition When 0 Then IsNull(@IsRoleDefinition, [IsRoleDefinition]) When 1 Then @IsRoleDefinition End
            ,[MajorVersion]
            ,[MaxScriptEngines]
            ,[MinorVersion]
            ,[ObjectGuid]            
            ,[ScriptEngineTimeout]
            ,[TargetMachine]            
            @AppId
            @ID, 
            @Name,
            @ObjectGuid
            @ObjectGuid,
            @ObjectType, 
            @parentGuid,
            @parentName,
            @ParentType = ParentType 
            @ParentType,  -- parent type
            @Return,
            @RoleType, 
            @SQLRoleName = @SQLRoleName output  
            [ApplicationData]
            [ApplicationVersion],
            [ApplyStoreSacl],
            [AuthzInterfaceClsId], 
            [AzMan_BizRule]
            [AzMan_LDAPQuery]
            [BizRule]
            [BizRuleImportedPath] ,
            [BizRuleLanguage],
            [BizRuleLanguage],         
            --[ChildUpdateTimeStamp] 
            [dbo].[AzMan_AzApplicationGroup] 
            [dbo].[AzMan_AzOperation] 
            [dbo].[AzMan_AzRoleAssignment] 
            [dbo].[AzMan_AzScope] 
            [dbo].[AzMan_AzTask] 
            [Description],
            [GenerateAudits], 
            [ID] = @ExistingBizruleID
            [ID] = @ExistingLdapQueryID
            [ID], 
            [IsRoleDefinition],
            [LdapQuery]
            [Name] = IsNull(@Name, [Name]) 
            [Name],
            [Name],            
            [NameHash]  = @NameHash )
            [NameHash],
            [NameLen],
            [ObjectGuid]
            [ObjectGuid] ,
            [ObjectGuid],
            [StoreID],
            0,  -- 0 for SE_AUDITID_AZ_SQL_OBJECT_CREATE
            3,  -- 3 for task
            5,  -- 5 for group
            and (AppID = @ParentID)
            and (ScopeID = @ParentID)
            and ID <> IsNULL(@ID,0) )
            and LOWER([Name]) = LOWER(@Name) 
            AppID       =   @AppID and
            AppID      = @ParentID   and        
            AppID =   @ParentID and
            Begin
            BEGIN
            Begin
            begin
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            Begin
            BEGIN
            DECLARE @locReturn int -- we have to press on for this action. No rollback
            Delete From [dbo].[AzMan_AzAuthorizationStore]
            Else
            else
            ELSE
            else
            ELSE
            Else
            else
            Else
            ELSE
            else
            Else
            else
            ELSE
            Else
            ELSE
            ELSE IF @ObjectType = 1
            ELSE IF @ParentType = 1  -- app
            else if @ParentType = 4
            ELSE IF @ParentType = 4  -- scope
            ELSE IF @ParentType = 5 -- app group
            End
            END
            End
            END
            End
            END
            End
            END
            End
            END
            End
            END
            End
            END
            End
            END
            End
            END
            End
            END
            End
            End 
            End         
            End             
            EXEC @Return = sp_helprolemember @SQLRoleName
            EXEC [AzMan_SP_GenerateGenericAudit]
            EXEC [AzMan_SP_GenerateMemberAudit]
            EXEC [AzMan_SP_GenerateObjectAudit]
            Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output, @ID, @ObjectType, 1, @SaclIsOn output
            Exec AzMan_SP_Check_Dup_Group @Return output, @ParentId, @ParentType, @ID, @Name
            Exec AzMan_SP_Check_Dup_Operation @Return output, @AppId, @ID, @Name
            Exec AzMan_SP_Check_Dup_RoleAssignment @Return output, @ParentID, @ParentType, @ID, @Name
            Exec AzMan_SP_Check_Dup_Scope @Return output, @AppId, -1, @NameHash
            exec AzMan_SP_Check_Dup_Task_For_Given_Parent @Return output, @ParentAppID, 1, @ID, @Name
            Exec AzMan_SPI_SQLRole @Return output, @ID, @ObjectType, @RoleType, @SQLRoleName = @SQLRoleName output
            Exec AzMan_SPU_SqlRoleUpdated @Ret output, @ID, @ObjectType
            From [AzMan_AzApplicationGroup] 
            From [AzMan_AzRoleAssignment] 
            From [AzMan_AzTask] 
            from AzMan_AzApplication
            from AzMan_AzScope
            goto Done
            Goto Exit_AzMan_SP_AccessCheck
            Goto Exit_AzMan_SP_AccessCheck_For_Container
            ID          <>  IsNULL(@ID,0) and
            ID <> IsNULL(@ID,0) and
            ID in ( 
            if ( @ParentAppID = 0 )
            if ( @ParentStore = 0 )
            if ( @Return = 0 )
            if (@Return >= 2)
            IF @CheckSacl = 0
            if @Error <> 0 
            if @Error = 0
            IF @iAppMemberID > 0
            IF @iOperationID <> 0
            IF @IsMember = 1
            IF @iTaskID <> 0
            IF @ObjectType = 0
            IF @ObjectType = 0 -- store
            IF @ObjectType = 1 -- app
            IF @ObjectType = 4 -- scope
            IF @ParentType = 0  -- store
            if @ParentType = 1
            IF @ParentType = 1  -- app
            IF @ParentType = 3 -- task
            if @Return <> 1
            if @RoleID <> -1
            IF @RoleType = 1  -- admin
            IF @RoleType = 2  -- reader
            IF @RoleType = 3  -- delegated users
            If @RowCount <> 1
            if @RowCount <> 1
            If @RowCount = 0
            If @RowCount = 1
            IF @SaclIsOn = 1
            if Exists( Select ID from 
            If Is_Member('db_owner') = 1 or Is_Member('db_securityadmin') = 1
            Insert Into [dbo].[AzMan_AzApplication]
            Insert Into [dbo].[AzMan_AzRoleAssignment]
            Insert Into [dbo].[AzMan_AzTask]
            Insert Into [dbo].[AzMan_BizRule]
            Insert Into [dbo].[AzMan_LDAPQuery]
            Insert Into [dbo].[Azman_SQLRole]
            IsNull([HasSpecificUsers], 0) AS HasSpecificUsers,
            LOWER([Name]) = LOWER(@Name) )
            LOWER([Name]) = LOWER(@Name) and
            N'' -- no other info
            ParentType = @ParentType and
            --print 'User is member of db_datareader' 
            --print 'User is member of db_datawriter' 
            --print 'User is member of db_Owner'
            ScopeID    = @ParentID   and        
            ScopeID =   @ParentID and
            Select
            SELECT @appName = app.Name, @appGuid = app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
            SELECT @childName = app.Name, @childGuid = app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
            SELECT @childName = Op.Name, @childGuid = Op.ObjectGuid FROM [dbo].[AzMan_AzOperation] Op
            SELECT @childName = scope.Name, @childGuid = scope.ObjectGuid FROM [dbo].[AzMan_AzScope] scope
            SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT
            SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT  
            SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT        
            SELECT @groupName = appGroup.Name, @groupGuid = appGroup.ObjectGuid FROM [dbo].[AzMan_AzApplicationGroup] appGroup
            SELECT @Name=appGroup.Name, @ObjectGuid = appGroup.ObjectGuid FROM [dbo].[AzMan_AzApplicationGroup] appGroup
            SELECT @ObjectGuid = app.ObjectGuid FROM [dbo].[AzMan_AzApplication] app
            SELECT @ObjectGuid = appGroup.ObjectGuid FROM [dbo].[AzMan_AzApplicationGroup] appGroup
            SELECT @ObjectGuid = op.ObjectGuid FROM [dbo].[AzMan_AzOperation] op
            SELECT @ObjectGuid = role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] role
            SELECT @ObjectGuid = scope.ObjectGuid FROM [dbo].[AzMan_AzScope] scope
            SELECT @ObjectGuid = task.ObjectGuid FROM [dbo].[AzMan_AzTask] task
            SELECT @ObjectName=store.Name, @ObjectGuid = store.ObjectGuid FROM [dbo].[AzMan_AzAuthorizationStore] store
            SELECT @OldChildTS = [ChildUpdateTimeStamp] FROM [AzMan_AzApplication] WHERE ID = @ObjectID
            SELECT @OldChildTS = [ChildUpdateTimeStamp] FROM [AzMan_AzAuthorizationStore] WHERE ID = @ObjectID
            SELECT @OldChildTS = [ChildUpdateTimeStamp] FROM [AzMan_AzScope] WHERE ID = @ObjectID
            SELECT @opName = Op.Name, @opGuid = Op.ObjectGuid FROM [dbo].[AzMan_AzOperation] Op
            Select @ParentAppID = [AppID] 
            SELECT @parentName = App.Name, @parentGuid = App.ObjectGuid FROM [dbo].[AzMan_AzApplication] App
            SELECT @parentName = appGroup.Name, @parentGuid = appGroup.ObjectGuid FROM [dbo].[AzMan_AzApplicationGroup] appGroup
            SELECT @parentName = store.Name, @parentGuid = store.ObjectGuid FROM [dbo].[AzMan_AzAuthorizationStore] store
            Select @ParentStore = [StoreID] 
            SELECT @ParentType = appGroup.ParentType, 
            SELECT @ParentType = role.ParentType, 
            SELECT @ParentType = task.ParentType, 
            SELECT @refGroupName = refGroup.Name, @refGroupGuid = refGroup.ObjectGuid FROM [dbo].[AzMan_AzApplicationGroup] refGroup
            SELECT @refTaskName = refTask.Name, @refTaskGuid = refTask.ObjectGuid FROM [dbo].[AzMan_AzTask] refTask
            select @RoleID = uid from sysusers where (name = @SQLRoleName) and (issqlrole = 1)
            SELECT @roleName = Role.Name, @roleGuid = Role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] Role
            SELECT @roleName = role.Name, @roleGuid = role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] role
            SELECT @roleName = Role.Name, @roleGuid = Role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] Role
            SELECT @roleName = role.Name, @roleGuid = role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] role
            SELECT @roleName = Role.Name, @roleGuid = Role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] Role
            SELECT @SaclIsOn = IsNull(ApplyStoreSacl, 0) FROM AzMan_AzApplication App WHERE App.ID = @AppID AND App.StoreID = @StoreID
            SELECT @SaclIsOn = IsNull(ApplyStoreSacl, 0) FROM AzMan_AzAuthorizationStore Store WHERE Store.ID = @StoreID
            Select @StoreID = StoreID From AzMan_AzApplication where ID = @AppID
            Select @StoreID =StoreID From AzMan_AzApplication where ID = @AppID
            SELECT @taskName = Task.Name, @taskGuid = Task.ObjectGuid FROM [dbo].[AzMan_AzTask] Task
            Set
            SET @addOrDelete = LTRIM(RTRIM(LEFT(@AppMemberIDs, @Pos - 1)))
            SET @addOrDelete = LTRIM(RTRIM(LEFT(@OperationIDs, @Pos - 1)))
            SET @addOrDelete = LTRIM(RTRIM(LEFT(@TaskIDs, @Pos - 1)))
            Set @AppId  = null
            Set @AppID = @ID        
            set @AppID = @ParentId 
            SET @AppMember = LTRIM(RTRIM(LEFT(@AppMemberIDs, @Pos - 1)))
            SET @AppMemberIDs = RIGHT(@AppMemberIDs, LEN(@AppMemberIDs) - @Pos)
            set @ConsiderNull_BizRule = 0
            set @ConsiderNull_BizRuleImportedPath = 0 
            set @ConsiderNull_BizRuleLanguage = 0 
            Set @ConsiderNull_LdapQuery = 0
            Set @iAppMemberID = CAST(@AppMember as int)
            Set @ID = @ExistingLdapQueryID
            Set @ID = Cast(SCOPE_IDENTITY() As [int])
            Set @ID = Cast(SCOPE_IDENTITY() As [int])               
            Set @iOperationID = CAST(@OperationID as int)
            Set @isAdd = CAST(@addOrDelete as int)
            Set @iTaskID = CAST(@TaskID as int)
            SET @OperationID = LTRIM(RTRIM(LEFT(@OperationIDs, @Pos - 1)))
            SET @OperationIDs = RIGHT(@OperationIDs, LEN(@OperationIDs) - @Pos)
            set @ParentID = @AppID
            set @ParentID = @ScopeID
            set @ParentID = @StoreID
            SET @Pos = @DataLength
            SET @Pos = CHARINDEX(@equal, @AppMemberIDs, 1)
            SET @Pos = CHARINDEX(@equal, @OperationIDs, 1)
            SET @Pos = CHARINDEX(@equal, @TaskIDs, 1)
            SET @Pos = CHARINDEX(@SepChar, @AppMemberIDs, 1)
            SET @Pos = CHARINDEX(@SepChar, @OperationIDs, 1)
            SET @Pos = CHARINDEX(@SepChar, @TaskIDs, 1)
            Set @Return = @Error
            Set @Return = @Error 
            Set @Return = 0
            set @Return = 1
            Set @Return = -1
            Set @Return = -1 
            Set @Return = 1 -- Admin Access
            Set @Return = -1 -- General Error
            Set @Return = -1 --Generic Error
            Set @Return = -1168 -- Record not found
            Set @Return = -1168 --Record not found
            Set @Return = -1168 --REcord not found
            Set @Return = -1168 --Record not found
            Set @Return = -183  -- Same Name exist
            set @Return = 2
            Set @Return = 2 -- Reader Access
            Set @Return = 3 -- Delegated user Access
            Set @Return = -5
            Set @Return = -5 
            set @ScopeID = @ParentId 
            Set @ScopeID= null 
            set @StoreID = @ParentId
            SET @TaskID = LTRIM(RTRIM(LEFT(@TaskIDs, @Pos - 1)))
            SET @TaskIDs = RIGHT(@TaskIDs, LEN(@TaskIDs) - @Pos)
            SET @userName = ''
            UPDATE [AzMan_AzApplication]
            UPDATE [AzMan_AzAuthorizationStore]
            UPDATE [AzMan_AzScope]
            Update [dbo].[AzMan_AzScope]
            Values
            Where
            where 
            where (AppID = @ParentID  ) and ParentType = @ParentType
            where (ScopeID = @ParentID  ) and ParentType = @ParentType
            where (StoreID = @ParentID  ) and ParentType = @ParentType
            where [ID] = @ParentID
            where AppID = @ParentID  
            where AppID = @ParentID  and ParentType = @ParentType
            where g.name = @SQLRoleName
            where ScopeID = @ParentID  
            where ScopeID = @ParentID  and ParentType = @ParentType
           Begin
           exec UpdateRolesParentTimeStamp @ParentID, @ParentType
           if @ParentType = 1 
          [GroupID] = @GroupId
          [ParentId]   = @ParentId
          ChildID  = @ChildID 
          GroupID = @GroupId
          Member   = @IsMember and
          RoleID    = @RoleId
          RoleID = @RoleId
         ( Select [BizRuleID] From [AzMan_BizRule_To_Group] where [GroupID] = @ID)
         ( Select [BizRuleID] From [AzMan_BizRule_To_Task] where [TaskID] = @ID)
         ([ID] = @ID) 
        -- Check for duplicate name 
        -- Find the Parent App
        -- generate a generic audit
        -- generate an audit
        -- Get all the child app where the current user has access
        -- get info for auditing            
        -- if no such loging yet, then grant the user login
        -- if the delete is successful to a scope role
        -- if the object is deleted we will ignore as we still want to delete all the roles for the object
        -- if the user does not have access to the db
        -- If the user is a data reader he has read control
        -- If the user is a data writer he has full control
        -- Make sure that the name doesn't exist at the same level
        -- make sure that we the SidLength is not lying to us!
        -- Require Admin Access
        -- trigger the parent object's update timestamp
        -- workaround for now sp_grantdbaccess returns 1 when the user already has access
        (
        ( ParentType = @ParentType ) 
        ((@ID Is Null) Or ([ID] = @ID))
        (@ChildID, @IsMember, @GroupId)
        (@ChildID, @RoleId)
        (@RoleID, @OperationID) 
        (@RoleID, @TaskID) 
        (@SidMember, @IsMember, @GroupId)
        (@SidMember,@RoleId)
        (@TaskID, @ChildID) 
        (@TaskID, @OperationID) 
        ([ID] = @ID)
        (ChildID, Member, GroupID) 
        (ChildID, RoleID) 
        (MemberSID,  RoleID) 
        (MemberSID, Member, GroupID) 
        (RoleID, OperationID) 
        (RoleID, TaskID) 
        (TaskID, ChildID) 
        (TaskID, OperationID) 
        )
        , [BizRule] = Case @ConsiderNull_BizRule When 0 Then IsNull(@BizRule, [BizRule]) When 1 Then @BizRule End
        , [BizRuleImportedPath] = Case @ConsiderNull_BizRuleImportedPath When 0 Then IsNull(@BizRuleImportedPath, [BizRuleImportedPath]) When 1 Then @BizRuleImportedPath End
        , [BizRuleLanguage] = Case @ConsiderNull_BizRuleLanguage When 0 Then IsNull(@BizRuleLanguage, [BizRuleLanguage]) When 1 Then @BizRuleLanguage End
        , [ParentType] = @ParentType
        ,[LdapQuery] = Case @ConsiderNull_LdapQuery When 0 Then IsNull(@LdapQuery, [LdapQuery]) When 1 Then @LdapQuery End
        [AppID]
        [AppID],
        [ApplicationData]
        [BizRuleID]
        [BizRuleID],
        [ChildID]
        [ChildID],
        --[ChildUpdateTimeStamp] 
        [dbo].[AzMan_AzApplication] 
        [dbo].[AzMan_AzApplicationGroup] 
        [dbo].[AzMan_AzOperation] 
        [Description],
        [GroupID]
        [GroupID],
        [ID]
        [ID], 
        [Member]
        [MemberSID]
        [MemberSID],
        [Name]       ,
        [Name],
        [NameHash],
        [NameLen],
        [ObjectGuid]
        [ObjectGuid] ,
        [OperationID]
        [OperationID],
        [OperationID],        
        [RoleID]
        [RoleID],
        [ScopeID]
        [StoreID]
        [TaskID]
        [TaskID],
        and    g.issqlrole = 1  
        and    g.name = @SqlRoleName
        and    u.uid = m.memberuid
        and (StoreID = @ParentID)
        and ID <> IsNULL(@ID,0) )
        and LOWER([Name]) = LOWER(@Name) 
        AppID =   @AppID and
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        begin
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        Begin
        BEGIN
        begin
        BEGIN
        Begin
        BEGIN
        Begin
        begin
        BEGIN
        Begin
        BEGIN
        Begin
        Begin 
        Begin   
        DELETE Azman_SQLRole WHERE [ObjectID] = @ID AND [ObjectType] = @ObjectType
        else
        Else
        else
        ELSE
        else
        Else
        else
        ELSE
        else
        ELSE
        else
        ELSE
        else
        Else
        else
        Else
        else
        Else
        ELSE
        Else
        else
        else if @ParentType = 1
        else if @ParentType = 1 
        else if @ParentType = 1     -- Application
        else if @ParentType = 4
        else if @ParentType = 4 
        else if @ParentType = 4     -- Scope
        end
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        end
        END
        End
        end
        End
        END
        End
        end
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        end
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        END
        End
        End 
        END 
        End 
        end    
        End     
        End         
        End else 
        End else if @ParentType = 4
        EXEC @Ret = sp_addrole @SQLRoleName
        Exec @Ret = sp_droprolemember @SQLRoleName, @UserName
        EXEC [AzMan_SP_GenerateGenericAudit]
        EXEC [AzMan_SP_GenerateObjectAudit]
        Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output, @StoreId, 0, 1, @SaclIsOn output
        Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, @ObjectType, 0, @SaclIsOn output
        Exec AzMan_SP_AccessCheck_For_Container @Return output, @AppID, 1
        Exec AzMan_SP_AccessCheck_For_Container @Return output, @ScopeID, 4
        Exec AzMan_SP_AccessCheck_For_Container @Return output, @StoreID, 0
        Exec AzMan_SP_Check_Dup_Application @Return output, @StoreId, @ID, @Name
        Exec AzMan_SP_Check_Dup_Group @Return output, @ParentID, @ParentType, @ID, @Name
        Exec AzMan_SP_Check_Dup_Operation @Return output, @AppId, @ID, @Name
        Exec AzMan_SP_Check_Dup_Scope @Return output, @AppId, @ID, @NameHash
        Exec AzMan_SP_Check_Dup_Task @Return output, @ParentID, @ParentType, @ID, @Name
        Exec AzMan_SP_Get_Object_Path_For_Container @Return output, @ID, @ObjectType , @StoreID output, @AppID output, @ScopeID output
        exec AzMan_SP_Get_Object_Path_For_Container @Return output, @ParentID, @ParentType, @StoreID output, @AppID output, @ScopeID output
        EXEC AzMan_SP_GetRoleMemberCount @SQLRoleName, @RoleMemberCount output
        Exec AzMan_SPD_SQLRole @Return output, @SQLRoleName
        Exec AzMan_SPD_User_From_SQLRole @Return output, @ID, @ObjectType, @RoleType, @SQLRoleName, @UserSid, @UserName, @SaclIsOn
        Exec AzMan_SPI_Add_User_To_SQLRole @Return output, @ID, @ObjectType, @RoleType, @SQLRoleName, @UserSid, @UserName, @SaclIsOn
        exec AzMan_SPI_Add_User_To_SQLRole_From_XP @Return output, @ID, @ObjectType, @RoleType, @UserName
        Exec AzMan_SPI_SQLRole @Return output, @ID, @ObjectType, @RoleType, @SQLRoleName = @SQLRoleName output
        Exec AzMan_SPU_SqlRoleUpdated @Return output, @ID, @ObjectType
        Exec master.dbo.xp_AzManAddRole @Ret output, @ID, @ObjectType, @dbName, @SQLRoleName
        Exec master.dbo.xp_AzManAddUserToRole @Return output, @ID, @ObjectType, @RoleType, @dbName, @UserName
        Exec master.dbo.xp_AzManRemoveUserFromRole 
        exec UpdateGroupsParentTimeStamp @ParentID, @ParentType
        From 
        From [AzMan_AzApplication]
        from [AzMan_AzApplicationGroup] where ID = @ID
        From [AzMan_AzAuthorizationStore]
        From [AzMan_AzOperation]
        From [AzMan_AzRoleAssignment]
        From [AzMan_AzScope]
        From [AzMan_AzTask]
        From [AzMan_Group_SIDMember]
        From [AzMan_Role_SIDMember]
        From [AzMan_Role_To_Operation_Link] 
        From [AzMan_Role_To_Task_Link] INNER JOIN AzMan_AzTask ON [TaskID] = AzMan_AzTask.ID
        From [AzMan_Task_To_Operation_Link] INNER JOIN AzMan_AzOperation ON [AzMan_Task_To_Operation_Link].[OperationID] = AzMan_AzOperation.ID
        From [AzMan_Task_To_Task_Link] INNER JOIN AzMan_AzTask ON [AzMan_Task_To_Task_Link].[ChildID] = AzMan_AzTask.ID
        From AzMan_AzApplicationGroup 
        From AzMan_AzApplicationGroup where 
        from AzMan_AzRoleAssignment where ID = @ID
        from AzMan_AzScope
        goto Done
        Goto Exit_AzMan_SP_AccessCheck
        goto Exit_AzMan_SP_AccessCheck  
        Goto Exit_AzMan_SP_AccessCheck  
        Goto Exit_AzMan_SP_AccessCheck      
        goto Return_Get_ObjPath
        goto Return_Get_ObjPath     
        ID <> IsNULL(@ID,0) and 
        ID IN ( select ChildID from [AzMan_Role_AppMember] where RoleID = @RoleID)
        if ( @ParentAppID = 0 )
        if (@Return >= 2)
        IF @CheckDup = 1
        If @ConsiderNull_BizRule Is Null
        If @ConsiderNull_BizRuleImportedPath Is Null
        If @ConsiderNull_BizRuleLanguage Is Null
        If @ConsiderNull_LdapQuery Is Null
        if @Error <> 0 
        if @Error = 0
        if @ParentType = 0
        if @ParentType = 0 
        if @ParentType = 0      -- Auth Store
        if @ParentType = 1
        IF @Ret= 0 AND NOT EXISTS (SELECT * FROM sysusers WHERE UPPER(Name) = UPPER(@UserName) AND hasdbaccess = 1)
        if @Ret= 0 or len(@NameInDB) > 0
        if @Return <= 2
        if @Return <= 2 
        if @Return <> 1 
        if @Return = 0 
        if @Return = 0  
        IF @Return = 0 AND @ObjectType = 4
        if @Return = -1168
        IF @Return >= 1 AND @Return <= 3
        If @RowCount <> 1
        if @RowCount <> 1
        If @RowCount <> 1
        if @RowCount <> 1
        if @RowCount <> 1 
        If @RowCount = 0
        if @RowCount = 0 
        If @RowCount = 1
        if @RowCount = 1
        If @RowCount = 1
        if @RowCount = 1 
        IF @SaclIsOn = 1
        IF @SidLength >= 12 AND @SidLength < 85 AND @DataLength - @Pos >= @SidLength - 1
        if Exists( Select [Name] from 
        if Exists( Select ID from 
        If Is_Member(@SQLRoleName) = 1
        IF NOT EXISTS (SELECT * FROM master..syslogins WHERE UPPER(loginname) = UPPER(@UserName) AND hasaccess=1)
        INNER JOIN AzMan_AzOperation ON [AzMan_Role_To_Operation_Link].OperationID = AzMan_AzOperation.ID
        Insert Into [dbo].[AzMan_AzApplicationGroup]
        Insert Into [dbo].[AzMan_AzAuthorizationStore]
        Insert Into [dbo].[AzMan_AzOperation]
        Insert Into [dbo].[AzMan_AzScope]
        IsNull([ApplicationVersion], N''),
        IsNull([ApplyStoreSacl], 0),
        IsNull([AuthzInterfaceClsId], 0), 
        IsNull([Description], N''),                
        IsNull([GenerateAudits], 0), 
        IsNull([HasSpecificUsers], 0) AS HasSpecificUsers,
        LOWER([Name]) = LOWER(@Name) )
        Return (@Return)
        Return(@Return)
        RoleID = @RoleID and OperationID =  @OperationID 
        Select
        Select 
        Select @AppID   = AppID From [AzMan_AzScope] where ID = @ID
        Select @AppID=   AppID From [AzMan_AzOperation] where ID = @ID
        SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT
        SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT  
        SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT        
        SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT               
        Select @ParentAppID = [AppID] 
        Select @ParentID = 
        Select @ParentID =  
        Select @StoreID=StoreID From AzMan_AzApplication where ID = @ID
        Select [MemberSID]
        Select [ObjectGuid]
        select u.name from sysusers u, sysusers g, sysmembers m
        Set
        set @AccessAtObjType = 0
        set @AccessAtObjType = 1
        set @AccessAtObjType = 4
        Set @AppID = @ParentId
        Set @ConsiderNull_ApplicationData = 0
        Set @ConsiderNull_Description = 0
        Set @ConsiderNull_IsRoleDefinition = 0
        Set @ConsiderNull_OperationID = 0
        Set @dbName = db_name()
        Set @DbName = db_name()
        Set @dbName = db_name()
        SET @isAdd = CAST(SUBSTRING(@SidMembers, @Pos, 1) AS int)
        set @iScopeNameLen = DATALENGTH(@Name)
        set @NameInDB = null                          
        Set @ParentAppID = @ParentID
        set @ParentID = @AppID
        set @ParentID = @ScopeID
        SET @Pos = @Pos + 1
        SET @Ret = 0
        Set @Return = @Error
        Set @Return = @TempRet
        Set @Return = 0
        Set @Return = 0 
        Set @Return = -1
        Set @Return = -1 
        Set @Return = -183  -- Same Name exist
        Set @Return = -5 
        Set @Return = -87   -- invalid parameter
        Set @ScopeID = @ParentId
        SET @SidLength = CAST(SUBSTRING(@SidMembers, @Pos, 1) AS int)
        Set @StoreAccess = @Return
        Set @StoreID = @ID
        Set @TempRet = @Return
        SET [ChildUpdateTimeStamp]=@@DBTS 
        StoreID =   @StoreID and ID <> IsNULL(@ID,0) and
        TaskID = @TaskID and OperationID =  @OperationID 
        UPDATE [AzMan_AzApplication] SET [ChildUpdateTimeStamp]=@@DBTS WHERE ID=@ParentId 
        UPDATE [AzMan_AzAuthorizationStore] SET [ChildUpdateTimeStamp]=@@DBTS WHERE ID=@ParentId 
        UPDATE [AzMan_AzScope] SET [ChildUpdateTimeStamp]=@@DBTS WHERE ID=@ParentId 
        Update [dbo].[AzMan_AzApplication]
        Update [dbo].[AzMan_AzApplicationGroup]
        Update [dbo].[AzMan_AzOperation]
        Update [dbo].[AzMan_AzRoleAssignment]
        Update [dbo].[AzMan_AzTask]
        Update [dbo].[AzMan_BizRule]
        Update [dbo].[AzMan_LDAPQuery]
        Values
        Where
        where 
        where [AzMan_Task_To_Task_Link].[TaskID] = @TaskID  
        where [ID] = @ParentID
        where [RoleID]  = @RoleID  
        where AppID = @AppID  
        where AppID = @AppID  and 
        where GroupID = @GroupID   and ID  in 
        where GroupID = @GroupID  and [Member] = 0
        where GroupID = @GroupID  and [Member] = 1
        where ID = @ID
        where ID = @ID 
        where ID = @ScopeID 
        where ID in ( Select ChildID from AzMan_Group_AppMember where GroupID = @GroupID and [Member] = 0 )     
        where ID in ( Select ChildID from AzMan_Group_AppMember where GroupID = @GroupID and [Member] = 1 )     
        where Name = @Name 
        WHERE name = 'AzGenerateAudit' and type = 'X')
        WHERE name = 'AzMan_SP_AccessCheck' and type = 'P')
        WHERE name = 'AzMan_SP_AccessCheck_For_Container' and type = 'P')
        WHERE name = 'AzMan_SP_GenerateGenericAudit' and type = 'P')
        WHERE name = 'AzMan_SP_GenerateMemberAudit' and type = 'P')
        WHERE name = 'AzMan_SP_GenerateObjectAudit' and type = 'P')
        WHERE name = 'AzMan_SP_Get_Object_Path' and type = 'P')
        WHERE name = 'AzMan_SP_Get_Object_Path_For_Container' and type = 'P')
        WHERE name = 'AzMan_SP_GetRoleMemberCount' and type = 'P')
        WHERE name = 'AzMan_SP_GetSQLRole' and type = 'P')
        WHERE name = 'AzMan_SP_Grant_Permission' and type = 'P')
        WHERE name = 'AzMan_SPD_User_From_Role' and type = 'P')
        WHERE name = 'AzMan_SPD_User_From_SQLRole' and type = 'P')
        WHERE name = 'AzMan_SPD_User_From_SQLRole_From_XP' and type = 'P')
        WHERE name = 'AzMan_SPI_Add_User_To_Role' and type = 'P')
        WHERE name = 'AzMan_SPI_Add_User_To_SQLRole' and type = 'P')
        WHERE name = 'AzMan_SPI_Add_User_To_SQLRole_From_XP' and type = 'P')
        WHERE name = 'AzMan_SPI_Create_SqlRole_For_Object' and type = 'P')
        WHERE name = 'AzMan_SPI_SQLRole' and type = 'P')
        WHERE name = 'AzMan_SPI_SQLRole_From_XP' and type = 'P')
        WHERE name = 'AzMan_SPIU_AzApplicationGroup_LDAPQuery' and type = 'P')
        WHERE name = 'AzMan_SPS_Get_DBOwners' and type = 'P')
        WHERE name = 'AzMan_SPS_Get_Role_For_Object' and type = 'P')
        WHERE name = 'xp_AzManAddRole' and type = 'X')
        WHERE name = 'xp_AzManAddUserToRole' and type = 'X')
        WHERE name = 'xp_AzManDeleteRole' and type = 'X')
        WHERE name = 'xp_AzManRemoveUserFromRole' and type = 'X')
        where ParentId = @ID  and  ParentType = 3 and ID in 
        where ParentId = @ID  and  ParentType = 5 and ID in 
        WHERE refTask.ID = @TaskID
        WHERE role.ID = @RoleId
        where RoleID = @RoleID
        where StoreID = @StoreID  
        where StoreID = @StoreID  and
        where TaskID = @TaskID  
        WHILE @Pos > 0
       Begin
       else if @ParentType = 4 
       End
       exec UpdateTasksParentTimeStamp @ParentID, @ParentType
      [ObjectID]    = @ID and
      [ObjectType]  = @ObjectType and
      [RoleType]    = @RoleType
      [RoleType]    = 1
      [RoleType]    = 2
      [RoleType]    = 3
    --  cannot have the same name as any groups that are children of any of the child applications, and
    --  cannot have the same name as any groups that are children of any of the grandchild child scopes.
    --  cannot have the same name as any tasks that are children of any of the child scopes.
    --  cannot have the same name as tasks that are children of the application.
      EXEC @Ret = sp_droprolemember @SQLRoleName, @member
      FETCH NEXT FROM roleMember_cursor INTO @member
     @AppID int
     @GroupID int
     @ID int
    -- @ID is not used. But our internal implementation requires non-empty
     @ParentID int
     @Return   int output,
     @Return   int output,  
     @Return [int] output,
     @RoleID int
     @ScopeID int
     @StoreID int
     @TaskID int
    -- 0 for non-members
    -- 0 for SE_AUDITID_AZ_SQL_OBJECT_CREATE
    -- 1 for members
    -- 1 for SE_AUDITID_AZ_SQL_OBJECT_DELETE
    -- 2 for admins
    -- 2 for SE_AUDITID_AZ_SQL_REFERENCE_ASSIGN
    -- 3 for readers
    -- 3 for SE_AUDITID_AZ_SQL_REFERENCE_REMOVE
    -- 4 for delegated users
    -- 4 for SE_AUDITID_AZ_SQL_MEMBER_ASSIGN
    -- 5 for SE_AUDITID_AZ_SQL_MEMBER_REMOVE
    -- 6 for SE_AUDITID_AZ_SQL_OTHER
    -- A group that is a child of the authorization store,
    -- A task that is a child of a scope,
    -- A task that is a child of an application
    -- AzMan_SPD_AzRoleAssignment_Single_AppMember
    -- AzMan_SPI_AzRoleAssignment_Single_AppMember
    -- Behave differently depending on the object type of the parent object
    -- Check access at object 
    -- Check access at the App level
    -- Check access at the Application
    -- Check access at the parent
    -- Check access at the Role 
    -- Check access at the Task
    -- Check access at this object
    -- Check Access from top to bottom
    -- Check Admin
    -- Check MemberShip starting with current node and going up
    -- default to SACL off
    -- Error ? Record not found 
    -- events:
    -- First Check the current Parent
    -- generate an audit
    -- generate an audit if SACL is on
    -- get info for auditing
    -- get the info for auditing
    -- Go all the way up to the store
    -- if check dup
    -- if NNNN=0, then it means to delete
    -- If the user is a DB_Owner, he has full control
    -- If this bit is set we know access check result, but we need to do SACL
    -- if we are instructed to delete sub-container's roles
    -- if we are instructed to delete the self roles
    -- if we are only to check SACL settings (in other words, we already know the answer of access)
    -- Is a member of admin 
    -- Is a member of Delegated Users?
    -- Is a member of Reader?
    -- isn't an operation by this name.
    -- Make sure that the name doesn't exist at the same level
    -- memberFlags:
    -- Only store or app admin can modify property of the scope object
    -- our deletion flag will switch to delete all because we only need
    -- parameter set where @Return is not considered one of them.
    -- parent name and guid is only needed for auditing
    -- Require Admin Access
    -- Require Admin Access at App
    -- So he can see the groups
    -- So he can see the object
    -- So he can see the operation
    -- So he can see the operations
    -- So he can see the Role
    -- So he can see the role
    -- So he can see the Task
    -- So he can see the task
    -- So he can see this object 
    -- so that the user still has access
    -- so we don't care about SACL (second last parameter) here
    -- So we set-and-reset the ChildUpdateTimeStamp for the update of the timestamp column
    -- spDrop_AzMan_Table
    -- such role deletion audit will be generated by the object deletion.
    -- Tasks and operations share a namespace so ensure there 
    -- The user either has admin, reader or delegated user at the App
    -- The user either has admin, reader or delegated user at the Group
    -- The user either has admin, reader or delegated user at the parent
    -- The user either has admin, reader or delegated user at the Role
    -- The user either has admin, reader or delegated uset at the parent
    -- to make sure that the acting container object's roles are not deleted
    -- trigger the parent object's update timestamp
    -- We can't just manually update the row timestamp because it is a timestamp column. 
    -- we don't care about SACL (0 for the second last parameter)
    -- we honor application's SACL setting over the store's
    -- We need to find the parent first
     WHERE name = 'AzMan_SPD_All_SQLRole_ForObject' and type = 'P')
     WHERE name = 'AzMan_SPD_SQLRole' and type = 'P')
     WHERE name = 'AzMan_SPD_SQLRole_ForObject' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzApplicationGroupUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzApplicationUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzAuthorizationStoreUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzOperationUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzRoleAssignmentUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzScopeUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Enum_AzTaskUpdateTimeStamp' and type = 'P')
     WHERE name = 'AzMan_SPS_Get_ObjectSecurityOption' and type = 'P')
     WHERE name = 'AzMan_SPU_SqlRoleUpdated' and type = 'P')
    (
    )
    ) 
    )   
    )  ON [PRIMARY]
    )  ON [PRIMARY] 
    )  ON [PRIMARY] ,
    ) ,
    ) ON DELETE CASCADE  ON UPDATE CASCADE 
    ) ON DELETE CASCADE  ON UPDATE CASCADE ,
    ) ON DELETE CASCADE  ON UPDATE CASCADE,
    ) REFERENCES [dbo].[AzMan_AzApplication] (
    ) REFERENCES [dbo].[AzMan_AzApplicationGroup] (
    ) REFERENCES [dbo].[AzMan_AzAuthorizationStore] (
    ) REFERENCES [dbo].[AzMan_AzOperation] (
    ) REFERENCES [dbo].[AzMan_AzRoleAssignment] (
    ) REFERENCES [dbo].[AzMan_AzScope] (
    ) REFERENCES [dbo].[AzMan_AzTask] (
    ) REFERENCES [dbo].[AzMan_BizRule] (
    ,@ParentType tinyint
    ,[ApplicationData] = Case @ConsiderNull_ApplicationData When 0 Then IsNull(@ApplicationData, [ApplicationData]) When 1 Then @ApplicationData End
    ,[ApplyStoreSacl] = Case @ConsiderNull_ApplyStoreSacl When 0 Then IsNull(@ApplyStoreSacl, [ApplyStoreSacl]) When 1 Then @ApplyStoreSacl End
    ,[DomainTimeout] = Case @ConsiderNull_DomainTimeout When 0 Then IsNull(@DomainTimeout, [DomainTimeout]) When 1 Then @DomainTimeout End
    ,[GenerateAudits] = Case @ConsiderNull_GenerateAudits When 0 Then IsNull(@GenerateAudits, [GenerateAudits]) When 1 Then @GenerateAudits End
    ,[MajorVersion] = Case @ConsiderNull_MajorVersion When 0 Then IsNull(@MajorVersion, [MajorVersion]) When 1 Then @MajorVersion End
    ,[MaxScriptEngines] = Case @ConsiderNull_MaxScriptEngines When 0 Then IsNull(@MaxScriptEngines, [MaxScriptEngines]) When 1 Then @MaxScriptEngines End
    ,[MinorVersion] = Case @ConsiderNull_MinorVersion When 0 Then IsNull(@MinorVersion, [MinorVersion]) When 1 Then @MinorVersion End
    ,[ScriptEngineTimeout] = Case @ConsiderNull_ScriptEngineTimeout When 0 Then IsNull(@ScriptEngineTimeout, [ScriptEngineTimeout]) When 1 Then @ScriptEngineTimeout End
    ,[TargetMachine] = Case @ConsiderNull_TargetMachine When 0 Then IsNull(@TargetMachine, [TargetMachine]) When 1 Then @TargetMachine End
    @AppID  [int],
    @ID [int],
    @ID int OUTPUT,    
    @Name           [nvarchar](64) 
    @Name [nvarchar] (512)
    @Name [nvarchar](512) 
    @Name [nvarchar](64) 
    @Name nvarchar(512)
    @NameHash [binary] (32)
    @ParentID
    @ParentID   [int],
    @ParentType     [tinyint] ,
    @ParentType [tinyint] ,
    @ParentType [tinyint],
    @Return [int] output,
    @StoreID    [int],
    [AppID]         [int] ,     
    [AppID] [int] NOT NULL ,
    [AppID] [int],
    [ApplicationData] [ntext]  ,
    [ApplicationVersion] [nvarchar] (50),
    [ApplyStoreSacl] [bit] NULL ,
    [AuthzInterfaceClsId] [int] NULL ,
    [BizRule] [ntext] ,
    [BizRuleID] [int]   NOT NULL ,
    [BizRuleImportedPath] [nvarchar] (512) ,
    [BizRuleLanguage] [nvarchar] (64), 
    [ChildID]       [int] NOT NULL ,
    [ChildID]   [int]   NOT NULL 
    [ChildUpdateTimeStamp] [binary] (8) NULL 
    [ChildUpdateTimeStamp] [binary] (8) NULL  
    [ChildUpdateTimeStamp] [binary] (8) NULL,
    [Description] [nvarchar] (1024) ,
    [Description] = Case @ConsiderNull_Description When 0 Then IsNull(@Description, [Description]) When 1 Then @Description End
    [DomainTimeout] [int] NULL ,
    [GenerateAudits] [bit] NULL ,
    [GroupID]       [int] NOT NULL ,
    [GroupID]   [int]   NOT NULL 
    [GroupID] [int] NOT NULL ,
    [GroupType] [tinyint] NULL,
    [HasSpecificUsers] [bit] NULL
    [ID] [int] IDENTITY (1, 1) NOT NULL ,
    [IsRoleDefinition] [bit] NULL ,
    [LdapQuery] [ntext] ,
    [LdapQueryID]   [int] NULL,
    [MajorVersion] [int] NULL,
    [MaxScriptEngines] [int] NULL ,
    [Member]        [bit] Not NULL ,
    [Member] [bit] Not NULL ,
    [MemberSID] [varbinary] (85) NOT NULL ,
    [MemberSID] [varbinary] (85) NOT NULL,
    [MinorVersion] [int] NULL,
    [Name] [ntext],
    [Name] [nvarchar] (512) ,
    [Name] [nvarchar] (512) ,   
    [Name] [nvarchar] (64) ,
    [NameHash]  [Binary] (32) NULL,
    [NameLen]   [int]  NOT NULL,
    [ObjectGuid] [uniqueidentifier] NULL ,
    [ObjectGuid] [uniqueidentifier] NULL,
    [ObjectGuid] [uniqueidentifier] NULL,   
    [ObjectGuid] [uniqueidentifier] NULL,       
    [ObjectID] [int] NULL ,
    [ObjectType] [tinyint] NULL ,
    [OperationID]   [int]   NOT NULL ,
    [OperationID]  [int]    NOT NULL ,
    [OperationID] [int] NULL,
    [ParentId] [int] NOT NULL ,
    [ParentType] [tinyint] NOT NULL ,   
    [ParentType] [tinyint] NOT NULL ,       
    [ParentType] [tinyint] not NULL,
    [RoleID]        [int]   NOT NULL 
    [RoleID]        [int] NOT NULL ,
    [RoleID]  [int] NOT NULL 
    [RoleID] [int] NOT NULL ,
    [RoleType] [tinyint] NULL 
    [RowUpdateTimeStamp] [timestamp] NULL 
    [RowUpdateTimeStamp] [timestamp] NULL       
    [RowUpdateTimeStamp] [timestamp] NULL           
    [RowUpdateTimeStamp] [timestamp] NULL , 
    [RowUpdateTimeStamp] [timestamp] NULL ,     
    [RowUpdateTimeStamp] [timestamp] NULL ,         
    [ScopeID]       [int] ,         
    [ScopeID] [int],
    [ScriptEngineTimeout] [int] NULL ,
    [SQLRoleName] [nvarchar] (64) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,   
    [StoreID]       [int] , 
    [StoreID] [int] NOT NULL ,
    [TargetMachine] [nvarchar] (50) ,
    [TaskID]        [int]   NOT NULL 
    [TaskID]    [int] NOT NULL 
    [TaskID]  [int] NOT NULL ,
    [uid]      [int] not null,
    And ((@AppId Is Null) Or ([AppID] = @AppId))
    And ((@StoreId Is Null) Or ([StoreID] = @StoreId))
    --AzMan_SP_AccessCheck
    --AzMan_SP_AccessCheck_For_Container
    --AzMan_SP_Check_Dup_Application
    --AzMan_SP_Check_Dup_Group
    --AzMan_SP_Check_Dup_Group_For_Given_Parent
    --AzMan_SP_Check_Dup_Operation
    --AzMan_SP_Check_Dup_RoleAssignment
    --AzMan_SP_Check_Dup_Scope
    --AzMan_SP_Check_Dup_Task
    --AzMan_SP_Get_Object_Path
    --AzMan_SP_Get_Object_Path_For_Container
    --AzMan_SPD_AzApplicationGroup_Single_AppMember
    --AzMan_SPD_AzApplicationGroup_Single_SidMember
    --AzMan_SPD_AzRoleAssignment_Single_Operation
    --AzMan_SPD_AzRoleAssignment_Single_SidMember
    --AzMan_SPD_AzRoleAssignment_Single_Task
    --AzMan_SPD_AzTask_Single_Operation
    --AzMan_SPD_AzTask_Single_Task
    --AzMan_SPD_User_From_SQLRole
    --AzMan_SPI_Add_User_To_SQLRole
    --AzMan_SPI_AzApplicationGroup_Single_AppMember
    --AzMan_SPI_AzApplicationGroup_Single_SidMember
    --AzMan_SPI_AzRoleAssignment_Single_Operation
    --AzMan_SPI_AzRoleAssignment_Single_SidMember
    --AzMan_SPI_AzRoleAssignment_Single_Task
    --AzMan_SPI_AzTask_Single_Operation
    --AzMan_SPI_AzTask_Single_Task
    --AzMan_SPS_Get_AzApplication_AppData
    --AzMan_SPS_Get_AzAuthorizationStore_AppData
    --AzMan_SPS_Get_AzScope_AppData
    AzpCheckGroupMembershipLdapForLdapUrl:invalid LDAP query syntax
    AzpQueryUserDN failed.
    Begin
    BEGIN
    Begin
    BEGIN
    Begin
    BEGIN
    Begin
    BEGIN
    begin
    Begin
    begin
    Begin
    begin
    Begin
    BEGIN
    Begin
    BEGIN
    Begin
    begin
    Begin
    BEGIN
    Begin
    BEGIN
    Begin
    BEGIN
    Begin
    Begin 
    Begin   
    Begin               
    Close roleMember_cursor
    CONSTRAINT [CK_AzMan_AzApplicationGroup] CHECK (sign(coalesce([StoreID],0)) + sign(coalesce([AppID],0)) + sign(coalesce([ScopeID],0)) = 1)
    CONSTRAINT [CK_AzMan_AzRoleAssignment] CHECK (sign(coalesce([AppID],0)) + sign(coalesce([ScopeID],0)) = 1)
    CONSTRAINT [CK_AzMan_AzTask] CHECK (sign(coalesce([AppID],0)) + sign(coalesce([ScopeID],0)) = 1)
    CONSTRAINT [FK_AzMan_AzAppGroup_AzMan_AzApplication] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzAppGroup_AzMan_AzAuthorizationStore] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzAppGroup_AzMan_AzScope] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzApplication_AzMan_AzAuthorizationStore] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzOperation_AzMan_AzApplication] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzScope_AzMan_AzApplication] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzTask_To_App] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_AzTask_To_Scope] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_BizRule_To_Group_AzMan_AzApplicationGroup] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_BizRule_To_Group_AzManBizrule] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_BizRule_To_Task_AzMan_AzTask] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_BizRule_To_Task_AzManBizrule] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Group_AppMember_AzMan_AzApplicationGroup] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Group_SIDMember_AzMan_AzApplicationGroup] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_LDAPQuery_AzMan_AzApplicationGroup] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_AppMember_AzMan_AzRoleAssignment] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_SIDMember_AzMan_AzRoleAssignment] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_To_App] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_To_Operation_Link_AzMan_AzOperation] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_To_Operation_Link_AzMan_AzRoleAssignment] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_To_Scope] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_To_Task_Link_AzMan_AzRoleAssignment] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Role_To_Task_Link_AzMan_AzTask] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Task_To_Operation_Link_AzMan_AzOperation] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Task_To_Operation_Link_AzMan_AzTask] FOREIGN KEY 
    CONSTRAINT [FK_AzMan_Task_To_Task_Link_AzMan_AzTask] FOREIGN KEY 
    CONSTRAINT [IX_AzMan_AzOperation_OpID] UNIQUE  NONCLUSTERED 
    CONSTRAINT [IX_AzMan_Group_AppMember_member] UNIQUE  NONCLUSTERED 
    CONSTRAINT [IX_AzMan_Group_SIDMember_member] UNIQUE  NONCLUSTERED 
    CONSTRAINT [IX_AzMan_Role_AppMember_member] UNIQUE  NONCLUSTERED 
    CONSTRAINT [IX_AzMan_Role_SIDMember_member] UNIQUE  NONCLUSTERED 
    CONSTRAINT [PK_AzMan_AzApplication] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_AzApplicationGroup] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_AzAuthorizationStore] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_AzOperation] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_AzRoleAssignment] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_AzScope] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_AzTask] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_BizRule] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_BizRule_To_Group] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_BizRule_To_Task] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Group_AppMember] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Group_SIDMember] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_LDAPQuery] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Role_AppMember] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Role_SIDMember] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Role_To_Operation_Link] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Role_To_Task_Link] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Task_To_Operation_Link] PRIMARY KEY  CLUSTERED 
    CONSTRAINT [PK_AzMan_Task_To_Task_Link] PRIMARY KEY  CLUSTERED 
    DEALLOCATE roleMember_cursor
    Declare @AccessAtObjType [tinyint]
    Declare @AccessAtObjType [tinyint]    
    Declare @AccessAtObjType [tinyint]           
    DECLARE @AccessAtObjType tinyint
    Declare @AppID          [int]   
    Declare @CheckSaclOnly  [int]
    DECLARE @childGuid uniqueidentifier
    DECLARE @childName nvarchar(512)
    Declare @DbName [nvarchar] (255)
    Declare @DbName [nvarchar] (255)    
    declare @dbName nvarchar (255)
    DEclare @ID INT
    DECLARE @iScopeNameLen int
    DECLARE @member [nvarchar] (64)
    DECLARE @MemberType int 
    DECLARE @MemberType int    
    DECLARE @myid   uniqueidentifier
    Declare @NameInDB           [nvarchar] (255)
    Declare @NameInDB       [nvarchar] (255)
    Declare @NameInDB [nvarchar] (255)
    DECLARE @ObjectGuid uniqueidentifier
    DECLARE @ObjectName nvarchar(512)
    DECLARE @OtherRoleMemberCount int
    DECLARE @OtherRoleName [nvarchar] (64)
    DECLARE @parentGuid uniqueidentifier
    Declare @ParentID [int]
    DECLARE @parentName nvarchar(512)
    Declare @ParentType [int]
    DECLARE @ParentType tinyint
    DECLARE @Ret                [int]
    DECLARE @Ret            [int]
    DECLARE @Ret    [int]
    DECLARE @RoleID smallint
    DECLARE @RoleMemberCount    [int]
    DECLARE @RoleMemberCount int
    DECLARE @RowCount INT, @Error INT
    DECLARE @RowCount INT, @Error INT   
    DECLARE @SaclIsOn [bit]
    Declare @ScopeID        [int] 
    Declare @SQLRoleName        [nvarchar] (64) 
    Declare @SQLRoleName     [nvarchar](64) 
    DECLARE @SQLRoleName    [nvarchar] (255)
    DECLARE @SQLRoleName    [nvarchar] (64) 
    DECLARE @SQLRoleName [nvarchar] (64)
    Declare @SQLRoleType     [TinyInt]  
    Declare @StoreAccess    [int]
    DECLARE @storeGuid [uniqueidentifier]
    Declare @StoreID        [int] 
    Declare @StoreID int, @AppID int , @ScopeID int
    DECLARE @storeName [nvarchar](512)
    Declare @TempRet [int]
    DECLARE @uid    [int]
    DECLARE @UserName nvarchar(256)
    DECLARE @UserSid varbinary(85)
    DECLARE roleMember_cursor CURSOR
    delete [AzMan_Role_To_Operation_Link] 
    delete [AzMan_Task_To_Operation_Link] 
    Delete From [AzMan_Group_AppMember] 
    Delete From [AzMan_Group_SIDMember] 
    Delete From [AzMan_Role_AppMember] 
    Delete From [AzMan_Role_SIDMember] 
    Delete From [AzMan_Role_To_Task_Link] 
    Delete From [AzMan_Task_To_Task_Link] 
    Delete From [dbo].[AzMan_AzApplication]
    Delete From [dbo].[AzMan_AzApplicationGroup]
    Delete From [dbo].[AzMan_AzOperation]
    Delete From [dbo].[AzMan_AzRoleAssignment]
    Delete From [dbo].[AzMan_AzScope]
    Delete From [dbo].[AzMan_AzTask]
    DROP PROCEDURE [AzMan_SP_GenerateGenericAudit]
    DROP PROCEDURE [AzMan_SP_GenerateMemberAudit]
    DROP PROCEDURE [AzMan_SP_GenerateObjectAudit]
    DROP PROCEDURE AzMan_SP_AccessCheck
    DROP PROCEDURE AzMan_SP_AccessCheck_For_Container
    DROP PROCEDURE AzMan_SP_Get_Object_Path
    DROP PROCEDURE AzMan_SP_Get_Object_Path_For_Container
    DROP PROCEDURE AzMan_SP_GetRoleMemberCount
    DROP PROCEDURE AzMan_SP_GetSQLRole
    DROP PROCEDURE AzMan_SP_Grant_Permission
    DROP PROCEDURE AzMan_SPD_All_SQLRole_ForObject
    DROP PROCEDURE AzMan_SPD_SQLRole
    DROP PROCEDURE AzMan_SPD_SQLRole_ForObject
    DROP PROCEDURE AzMan_SPD_User_From_Role
    DROP PROCEDURE AzMan_SPD_User_From_SQLRole
    DROP PROCEDURE AzMan_SPD_User_From_SQLRole_From_XP
    DROP PROCEDURE AzMan_SPI_Add_User_To_Role
    DROP PROCEDURE AzMan_SPI_Add_User_To_SQLRole
    DROP PROCEDURE AzMan_SPI_Add_User_To_SQLRole_From_XP
    DROP PROCEDURE AzMan_SPI_Create_SqlRole_For_Object
    DROP PROCEDURE AzMan_SPI_SQLRole
    DROP PROCEDURE AzMan_SPI_SQLRole_From_XP
    DROP PROCEDURE AzMan_SPIU_AzApplicationGroup_LDAPQuery
    DROP PROCEDURE AzMan_SPS_Enum_AzApplicationGroupUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Enum_AzApplicationUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Enum_AzAuthorizationStoreUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Enum_AzOperationUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Enum_AzRoleAssignmentUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Enum_AzScopeUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Enum_AzTaskUpdateTimeStamp
    DROP PROCEDURE AzMan_SPS_Get_DBOwners
    DROP PROCEDURE AzMan_SPS_Get_ObjectSecurityOption
    DROP PROCEDURE AzMan_SPS_Get_Role_For_Object
    DROP PROCEDURE AzMan_SPU_SqlRoleUpdated
    drop table [AzMan_AzApplication]
    drop table [AzMan_AzApplicationGroup]
    drop table [AzMan_AzAuthorizationStore]
    drop table [AzMan_AzOperation]
    drop table [AzMan_AzRoleAssignment]
    drop table [AzMan_AzScope]
    drop table [AzMan_AzScope_Name] 
    drop table [AzMan_AzTask]
    drop table [AzMan_BizRule]
    drop table [AzMan_Group_AppMember]
    drop table [AzMan_Group_SIDMember]
    drop table [AzMan_LDAPQuery]
    drop table [AzMan_Role_AppMember]
    drop table [AzMan_Role_SIDMember]
    drop table [AzMan_Role_To_Operation_Link]
    drop table [AzMan_Role_To_Task_Link]
    drop table [AzMan_Task_To_Operation_Link]
    drop table [AzMan_Task_To_Task_Link]
    Else
    else
    Else
    else
    Else
    else
    ELSE
    else
    Else
    else
    Else
    else
    Else
    ELSE
    Else
    ELSE
    else if  Is_Member('db_datareader') = 1
    else if  Is_Member('db_datawriter') = 1
    ELSE IF @CheckSacl = 1 AND @StoreID <> -1
    ELSE IF @ObjectType = 1
    ELSE IF @ObjectType = 4
    else if @ParentType = 1
    else if @ParentType = 1  -- App
    else if @ParentType = 4
    Else if @ParentType = 4
    else if @ParentType = 4  -- Scope
    Else if @Return = 1 or @Return = 2
    Else if @Return = 1 or @Return = 2 or @Return = 3
    Else if @Return = 3 -- Delegated user
    End
    end
    End
    end
    End
    end
    End
    END
    End
    end
    End
    END
    End
    end
    End
    end
    End
    END
    End
    end
    End
    end
    End
    end
    End
    end
    End
    END
    End
    End 
    END 
    End 
    END 
    End 
    END 
    End 
    End     
    End         
    End              
    EXEC @Ret = sp_addrole @SQLRoleName
    Exec @Ret = sp_droprole @SQLRoleName
    Exec @Ret = sp_droprolemember @SQLRoleName, @UserName
    EXEC @Return = sp_helprolemember 'db_owner'
    Exec [AzMan_SP_GetSQLRole] @Return output, @ID, @ObjectType, @RoleType, @SQLRoleName = @SQLRoleName output  
    Exec [AzMan_SP_GetSQLRole] @Return output, @ID, @ObjectType, @SQLRoleType, @SQLRoleName = @SQLRoleName output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output, @AppId, 1, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output, @ID, @ObjectType, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output, @ParentId, @ParentType, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@AppID, 1, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@AppId, 1, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@GroupID, 5, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@GroupId, 5, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, @ObjectType, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 0, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 0, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 1, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 1, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 2, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 2, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 3, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 3, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 4, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 5, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 5, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 6, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ID, 6, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ParentID, @ParentType, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ParentId, @ParentType, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ParentTaskId, 3, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@RoleID, 6, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@RoleID, 6, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@RoleId, 6, 1, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@ScopeID, 4, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@StoreID, 0, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@TaskID, 3, 0, @SaclIsOn output
    Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@TaskID, 3, 1, @SaclIsOn output
    exec AzMan_SP_Check_Dup_Group_For_Given_Parent @Return output, @ParentID, @ParentType, @ID, @Name
    exec AzMan_SP_Check_Dup_Task_For_Given_Parent @Return output, @ParentID, @ParentType, @ID, @Name
    Exec AzMan_SP_Get_Object_Path @Return output, @ID, @ObjectType , @StoreID output, @AppID output, @ScopeID output    
    Exec AzMan_SPI_AzApplicationGroup_Multi_AppMembers_Internal @Return output, @GroupId, @SepChar, 0 , @AppMemberIDs
    Exec AzMan_SPI_AzApplicationGroup_Multi_AppMembers_Internal @Return output, @GroupId, @SepChar, 1 , @AppMemberIDs
    Exec AzMan_SPI_AzApplicationGroup_Multi_SidMembers_Internal @Return output, @GroupId, 0 , @SidMembers
    Exec AzMan_SPI_AzApplicationGroup_Multi_SidMembers_Internal @Return output, @GroupId, 1 , @SidMembers
    exec AzMan_SPIU_Bizrule   @Return output, @GroupId, 5
    exec AzMan_SPIU_Bizrule   @Return output, @TaskId,  3
    Exec dbo.[AzMan_SP_GetSQLRole] @Ret output, 
    Exec master.dbo.AzGenerateAudit @success,
    exec sp_addextendedproc 'AzGenerateAudit',                  'AzSqlExt.dll'
    exec sp_addextendedproc 'xp_AzManAddRole',                  'AzSqlExt.dll'
    exec sp_addextendedproc 'xp_AzManAddUserToRole',            'AzSqlExt.dll'
    exec sp_addextendedproc 'xp_AzManDeleteRole',               'AzSqlExt.dll'
    exec sp_addextendedproc 'xp_AzManRemoveUserFromRole',       'AzSqlExt.dll'
    FETCH NEXT FROM roleMember_cursor INTO @member
    FOR 
    ForceRemove {00e52487-e08d-4514-b62e-877d5645f5ab} = s 'IAzScope interface'
    ForceRemove {03a9a5ee-48c8-4832-9025-aad503c46526} = s 'IAzTask2 interface'
    ForceRemove {086a68af-a249-437c-b18d-d4d86d6a9660} = s 'IAzApplication2 interface'
    ForceRemove {11894fde-1deb-4b4b-8907-6d1cda1f5d4f} = s 'IAzClientContext3 interface'
    ForceRemove {181c845e-7196-4a7d-ac2e-020c0bb7a303} = s 'IAzApplication3 interface'
    ForceRemove {1f5ea01f-44a2-4184-9c48-a75b4dcc8ccc} = s 'IAzOperation2 interface'
    ForceRemove {2b0c92b8-208a-488a-8f81-e4edb22111cd} = s 'IAzClientContext2 interface'
    ForceRemove {3f0613fc-b71a-464e-a11d-5b881a56cefa} = s 'IAzApplicationGroup2 interface'
    ForceRemove {4ce66ad5-9f3c-469d-a911-b99887a7e685} = s 'IAzApplicationGroups interface'
    ForceRemove {504d0f15-73e2-43df-a870-a64f40714f53} = s 'IAzNameResolver interface'
    ForceRemove {55647d31-0d5a-4fa3-b4ac-2b5f9ad5ab76} = s 'IAzRoleAssignment interface'
    ForceRemove {5e56b24f-ea01-4d61-be44-c49b5e4eaf74} = s 'IAzOperation interface'
    ForceRemove {63130a48-699a-42d8-bf01-c62ac3fb79f9} = s 'IAzObjectPicker interface'
    ForceRemove {78e14853-9f5e-406d-9b91-6bdba6973510} = s 'IAzScopes interface'
    ForceRemove {859e0d8d-62d7-41d8-a034-c0cd5d43fdfa} = s 'IAzRole interface'
    ForceRemove {881f25a5-d755-4550-957a-d503a3b34001} = s 'IAzRoleDefinitions interface'
    ForceRemove {90ef9c07-9706-49d9-af80-0438a5f3ec35} = s 'IAzOperations interface'
    ForceRemove {929b11a9-95c5-4a84-a29a-20ad42c2f16c} = s 'IAzApplications interface'
    ForceRemove {95e0f119-13b4-4dae-b65f-2f7d60d822e4} = s 'IAzRoles interface'
    ForceRemove {987bc7c7-b813-4d27-bede-6ba5ae867e95} = s 'IAzApplication interface'
    ForceRemove {9c80b900-fceb-4d73-a0f4-c83b0bbf2481} = s 'IAzRoleAssignments interface'
    ForceRemove {abc08425-0c86-4fa0-9be3-7189956c926e} = s 'IAzAuthorizationStore3 interface'
    ForceRemove {b11e5584-d577-4273-b6c5-0973e0f8e80d} = s 'IAzAuthorizationStore2 interface'
    ForceRemove {b338ccab-4c85-4388-8c0a-c58592bad398} = s 'IAzTasks interface'
    ForceRemove {cb94e592-2e0e-4a6c-a336-b89a6dc1e388} = s 'IAzTask interface'
    ForceRemove {d97fcea1-2599-44f1-9fc3-58e9fbe09466} = s 'IAzRoleDefinition interface'
    ForceRemove {e192f17d-d59f-455e-a152-940316cd77b2} = s 'IAzBizRuleContext interface'
    ForceRemove {e5c3507d-ad6a-4992-9c7f-74ab480b44cc} = s 'IAzPrincipalLocator interface'
    ForceRemove {e94128c7-e9da-44cc-b0bd-53036f3aab3d} = s 'IAzBizRuleInterfaces interface'
    ForceRemove {edbd9ca9-9b82-4f6a-9e8b-98301e450f14} = s 'IAzAuthorizationStore interface'
    ForceRemove {ee9fe8c9-c9f3-40e2-aa12-d1d8599727fd} = s 'IAzScope2 interface'
    ForceRemove {eff1f00b-488a-466d-afd9-a401c5f9eef5} = s 'IAzClientContext interface'
    ForceRemove {f1b744cd-58a6-4e06-9fbf-36f6d779e21e} = s 'IAzApplicationGroup interface'
    ForceRemove {fc17685f-e25d-4dcd-bae1-276ec9533cb5} = s 'IAzBizRuleParameters interface'
    From [dbo].[AzMan_BizRule_To_Group]
    From [dbo].[AzMan_BizRule_To_Task]
    From [dbo].[Azman_SQLRole] 
    from sysusers u, sysusers g, sysmembers m  
    grant execute on AzMan_SP_GenerateGenericAudit                  to public
    grant execute on AzMan_SP_GenerateMemberAudit                   to public
    grant execute on AzMan_SP_GenerateObjectAudit                   to public
    grant execute on AzMan_SP_GetRoleMemberCount                    to public
    grant execute on AzMan_SP_GetSQLRole                to  public
    grant execute on AzMan_SPD_All_SQLRole_ForObject                to dbo
    grant execute on AzMan_SPD_AzApplication                        to public
    grant execute on AzMan_SPD_AzApplicationGroup                   to public
    grant execute on AzMan_SPD_AzAuthorizationStore                 to public
    grant execute on AzMan_SPD_AzOperation                          to public
    grant execute on AzMan_SPD_AzRoleAssignment                     to public
    grant execute on AzMan_SPD_AzScope                              to public
    grant execute on AzMan_SPD_AzTask                               to public
    grant execute on AzMan_SPD_SQLRole_ForObject                    to public
    grant execute on AzMan_SPD_User_From_Role           to public
    grant execute on AzMan_SPD_User_From_SQLRole_From_XP            to dbo
    grant execute on AzMan_SPI_Add_User_To_Role         to public
    grant execute on AzMan_SPI_Add_User_To_SQLRole_From_XP          to dbo
    grant execute on AzMan_SPI_AzApplication            to public
    grant execute on AzMan_SPI_AzApplicationGroup       to public   
    grant execute on AzMan_SPI_AzApplicationGroup_Multi_AppMembers  to public
    grant execute on AzMan_SPI_AzApplicationGroup_Multi_AppNonMembers   to public
    grant execute on AzMan_SPI_AzApplicationGroup_Multi_SidMembers  to public
    grant execute on AzMan_SPI_AzApplicationGroup_Multi_SidNonMembers   to public
    grant execute on AzMan_SPI_AzAuthorizationStore     to public
    grant execute on AzMan_SPI_AzOperation              to public
    grant execute on AzMan_SPI_AzRoleAssignment             to public
    grant execute on AzMan_SPI_AzRoleAssignment_Multi_AppMembers    to public
    grant execute on AzMan_SPI_AzRoleAssignment_Multi_Operations    to public
    grant execute on AzMan_SPI_AzRoleAssignment_Multi_SidMembers    to public
    grant execute on AzMan_SPI_AzRoleAssignment_Multi_Tasks to public
    grant execute on AzMan_SPI_AzScope                  to public
    grant execute on AzMan_SPI_AzTask                   to public
    grant execute on AzMan_SPI_AzTask_Multi_Operations  to public
    grant execute on AzMan_SPI_AzTask_Multi_Tasks       to public
    grant execute on AzMan_SPI_Create_SqlRole_For_Object            to public
    grant execute on AzMan_SPI_SQLRole                  to public
    grant execute on AzMan_SPI_SQLRole_From_XP                      to dbo
    grant execute on AzMan_SPIU_AzApplicationGroup_Bizrule   to public
    grant execute on AzMan_SPIU_AzApplicationGroup_LDAPQuery to public
    grant execute on AzMan_SPIU_AzTask_Bizrule               to public  
    grant execute on AzMan_SPIU_Bizrule                      to public
    grant execute on AzMan_SPS_Enum_AzApplicationGroup              to public
    grant execute on AzMan_SPS_Enum_AzApplicationGroup_AppMembers   to public
    grant execute on AzMan_SPS_Enum_AzApplicationGroup_AppNonMembers    to public
    grant execute on AzMan_SPS_Enum_AzApplicationGroup_SIDMembers   to public
    grant execute on AzMan_SPS_Enum_AzApplicationGroup_SIDNonMembers to public
    grant execute on AzMan_SPS_Enum_AzApplicationGroupUpdateTimeStamp to public
    grant execute on AzMan_SPS_Enum_AzApplications                  to public
    grant execute on AzMan_SPS_Enum_AzApplicationUpdateTimeStamp to public
    grant execute on AzMan_SPS_Enum_AzAuthorizationStoreUpdateTimeStamp to public
    grant execute on AzMan_SPS_Enum_AzOperation                     to public
    grant execute on AzMan_SPS_Enum_AzOperationUpdateTimeStamp to public
    grant execute on AzMan_SPS_Enum_AzRoleAssignment                to public
    grant execute on AzMan_SPS_Enum_AzRoleAssignment_AppMembers     to public
    grant execute on AzMan_SPS_Enum_AzRoleAssignment_Operations     to public
    grant execute on AzMan_SPS_Enum_AzRoleAssignment_SIDMembers     to public
    grant execute on AzMan_SPS_Enum_AzRoleAssignment_Tasks          to public
    grant execute on AzMan_SPS_Enum_AzRoleAssignmentUpdateTimeStamp to public
    grant execute on AzMan_SPS_Enum_AzScope                         to public
    grant execute on AzMan_SPS_Enum_AzScopeUpdateTimeStamp to public
    grant execute on AzMan_SPS_Enum_AzTask                          to public
    grant execute on AzMan_SPS_Enum_AzTask_Operations               to public
    grant execute on AzMan_SPS_Enum_AzTask_Tasks                    to public   
    grant execute on AzMan_SPS_Enum_AzTaskUpdateTimeStamp to public
    grant execute on AzMan_SPS_Get_AzApplication                    to public
    grant execute on AzMan_SPS_Get_AzApplicationGroup               to public
    grant execute on AzMan_SPS_Get_AzApplicationGroup_BizruleInfo   to public
    grant execute on AzMan_SPS_Get_AzApplicationGroup_LDAPQuery     to public
    grant execute on AzMan_SPS_Get_AzAuthorizationStoreByName       to public
    grant execute on AzMan_SPS_Get_AzOperation                      to public
    grant execute on AzMan_SPS_Get_AzRoleAssignment                 to public
    grant execute on AzMan_SPS_Get_AzScope                          to public
    grant execute on AzMan_SPS_Get_AzTask                           to public
    grant execute on AzMan_SPS_Get_AzTask_BizruleInfo               to public   
    grant execute on AzMan_SPS_Get_DBOwners                         to public
    grant execute on AzMan_SPS_Get_ObjectSecurityOption             to public
    grant execute on AzMan_SPS_Get_Role_For_Object                  to public
    grant execute on AzMan_SPS_Get_StoreIDByName              to public
    grant execute on AzMan_SPU_AzApplication            to public
    grant execute on AzMan_SPU_AzApplicationGroup           to public
    grant execute on AzMan_SPU_AzAuthorizationStore         to public
    grant execute on AzMan_SPU_AzOperation                  to public
    grant execute on AzMan_SPU_AzRoleAssignment             to public
    grant execute on AzMan_SPU_AzScope                      to public
    grant execute on AzMan_SPU_AzTask                       to public
    grant execute on AzMan_SPU_SqlRoleUpdated                       to public
    if  @Return <> 0 
    if  @Return = 0 
    if  Is_Member('db_owner') = 1
    if ( (@AccessAtObjType <> 0) and  (@AccessAtObjType <> 1) )
    if (@DeleteFlag & 1) <> 0
    if (@DeleteFlag & 2) <> 0
    if @@RowCount = 1
    if @AppID <> -1
    IF @CheckDup = 1
    IF @CheckSacl = 1 AND @StoreID <> -1 AND @AppID <> -1
    IF @CheckSaclOnly = 1
    If @ConsiderNull_ApplicationData Is Null
    If @ConsiderNull_Description Is Null
    if @ConsiderNull_IsRoleDefinition is NULL
    If @ConsiderNull_OperationID Is Null
    if @Error <> 0 
    IF @Name Is Not NULL
    if @Name Is Not NULL
    IF @Name Is Not NULL
    If @Name Is Not NULL
    if @Name Is NOT NULL 
    if @Name IS NOT NULL    
    IF @ObjectType = 0
    IF @ObjectType = 0 OR @ObjectType = 1 OR @ObjectType = 4
    if @ObjectType = 0 --Store
    if @ObjectType = 1 -- App
    If @ObjectType = 2 -- Operation
    If @ObjectType = 3 -- Task
    If @ObjectType = 4 -- Scope
    If @ObjectType = 5 -- Group
    If @ObjectType = 6 -- Role
    if @ParentType = 0
    if @ParentType = 0 
    if @ParentType = 1
    if @ParentType = 1  -- App
    if @Ret <> 0 
    if @Ret = 0 
    if @Return < 0
    if @Return <= 0
    IF @Return <> 0
    IF @Return <> 1
    if @Return <> 1
    IF @Return <> 1
    if @Return <> 1
    if @Return <> 1 
    if @Return = 0
    IF @Return = 0
    if @Return = 0 
    If @Return = 0 
    if @Return = 0 
    if @Return = 0  
    if @Return = 0      
    if @Return = 1 or @Return = 2 or @Return = 3
    if @Return >= 1 
    If @RowCount <> 1
    if @RowCount <> 1
    If @RowCount <> 1
    If @RowCount = 0
    IF @SaclIsOn = 1
    if @ScopeID <> -1
    if @SQLRoleName  Is NULL
    if @SQLRoleName <> ''
    if @SQLRoleName Is not NULL
    if @SQLRoleName is NOT NULL
    if @SQLRoleName is not NULL 
    if @SQLRoleName Is NULL
    if @StoreID <> -1
    IF @uid <> 0
    if Exists( Select [Name] from 
    If Is_Member('db_owner') = 1
    If is_Member('db_owner') = 1 or is_Member('db_securityadmin')  = 1 or is_member('db_accessyadmin') = 1
    If Is_Member('db_owner') = 1 or Is_Member('db_securityadmin') = 1
    if len(@SQLRoleName) > 0
    IF REPLACE(@AppMemberIDs, @SepChar, '') <> ''
    IF REPLACE(@OperationIDs, @SepChar, '') <> ''
    IF REPLACE(@TaskIDs, @SepChar, '') <> ''
    --IF REPLACE(@TaskIDs, @SepChar, '') <> ''
    INSERT INTO [AzMan_Group_AppMember] 
    INSERT INTO [AzMan_Group_SIDMember] 
    INSERT INTO [AzMan_Role_AppMember] 
    INSERT INTO [AzMan_Role_SIDMember] 
    INSERT INTO [AzMan_Role_To_Operation_Link] 
    INSERT INTO [AzMan_Role_To_Task_Link] 
    INSERT INTO [AzMan_Task_To_Operation_Link] 
    INSERT INTO [AzMan_Task_To_Task_Link] 
    OPEN roleMember_cursor
    Return  @Return
    Return @Return
    RETURN @Return
    Return @Return 
    Return @Return  
    Return(@Return)
    SELECT @AppID=AppID, @ScopeID=ScopeID, @ParentType=ParentType FROM deleted
    SELECT @AppID=AppID, @ScopeID=ScopeID, @ParentType=ParentType FROM inserted
    select @count = count(*)  
    SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT  
    Select @ExistingBizruleID = [BizRuleID] 
    select @ID=ID from [AzMan_AzAuthorizationStore] where Name = @Name
    SELECT @refTaskName = refTask.Name, @refTaskGuid = refTask.ObjectGuid FROM [dbo].[AzMan_AzTask] refTask
    SELECT @roleName = role.Name, @roleGuid = role.ObjectGuid FROM [dbo].[AzMan_AzRoleAssignment] role
    Select @SQLRoleName = SQLRoleName From [dbo].[Azman_SQLRole]
    Select @SQLRoleName = SQLRoleName from Azman_SQLRole
    SELECT @StoreID=StoreID, @AppID=AppID, @ScopeID=ScopeID, @ParentType=ParentType FROM deleted
    SELECT @StoreID=StoreID, @AppID=AppID, @ScopeID=ScopeID, @ParentType=ParentType FROM inserted
    SELECT @uid = 0
    SELECT @uid = 0 
    Select @uid=[uid], @SQLRoleName = [SQLRoleName] 
    SELECT @UserName = User_Name()
    SELECT @UserSid = SUSER_SID()
    SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0) FROM [AzMan_AzApplicationGroup] 
    SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0) FROM [AzMan_AzRoleAssignment] 
    SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0) FROM [AzMan_AzTask] 
    Set @AccessAtObjType = 0
    Set @AppID    = -1
    set @AppID   = 0
    Set @AppID = null
    SET @AppMemberIDs = LTRIM(RTRIM(@AppMemberIDs))+ @SepChar
    Set @CheckSaclOnly = 0
    Set @ConsiderNull_ApplicationData = 0
    Set @ConsiderNull_ApplicationVersion = 0
    Set @ConsiderNull_ApplyStoreSacl = 0
    Set @ConsiderNull_AuthzInterfaceClsId = 0
    Set @ConsiderNull_Description = 0
    Set @ConsiderNull_DomainTimeout = 0
    Set @ConsiderNull_GenerateAudits = 0
    Set @ConsiderNull_GroupType = 0
    Set @ConsiderNull_MajorVersion = 0
    Set @ConsiderNull_MaxScriptEngines = 0
    Set @ConsiderNull_MinorVersion = 0
    Set @ConsiderNull_ScriptEngineTimeout = 0
    Set @ConsiderNull_TargetMachine = 0
    Set @ID     = 0 
    SET @myid = NEWID()
    set @NameInDB = null
    SET @OperationIDs = LTRIM(RTRIM(@OperationIDs))+ @SepChar
    SET @Pos = CHARINDEX(@equal, @AppMemberIDs, 1)
    SET @Pos = CHARINDEX(@equal, @OperationIDs, 1)
    SET @Pos = CHARINDEX(@equal, @TaskIDs, 1)
    Set @Return      = -5
    Set @Return   = 0 
    SET @Return = @@ERROR
    Set @Return = @Ret 
    Set @Return = 0
    Set @Return = 0 
    Set @Return = -1
    Set @Return = -1    
    SET @Return = -5
    Set @Return = -5 
    Set @RoleID = -1
    Set @RoleID = 1 
    Set @SaclIsOn = 0
    Set @ScopeID  = -1
    set @ScopeID = 0
    Set @ScopeID = null
    Set @SQLRoleName = ''
    Set @SQLRoleName = ''   
    Set @SQLRoleName = CONVERT(varchar(64), @myid)
    Set @SQLRoleName = NULL
    Set @SQLRoleType = 1
    Set @SQLRoleType = 2
    Set @SQLRoleType = 3
    Set @StoreAccess = -5   
    Set @StoreID  = -1
    set @StoreID = 0 
    SET @TaskIDs = LTRIM(RTRIM(@TaskIDs))+ @SepChar
    set @uid = 0
    SET @UserType = 0   -- illegal users
    Set NoCount Off
    SET NOCOUNT OFF
    SET NOCOUNT ON
    Set NoCount On
    SET NOCOUNT ON
    Set NoCount On
    SET NOCOUNT ON
    Set NoCount On
    UPDATE [AzMan_AzApplication] 
    UPDATE [AzMan_AzApplicationGroup]
    UPDATE [AzMan_AzAuthorizationStore] 
    UPDATE [AzMan_AzRoleAssignment]
    UPDATE [AzMan_AzTask]
    VALUES 
    Where
    where 
    where   g.uid = m.groupuid
    where  ObjectID = @ID and ObjectType = @ObjectType and RoleType = @RoleType
    Where ([ID] = @ID)
    WHERE [AppID] = @parentID
    Where [GroupID] = @ParentId  
    WHERE [ScopeID] = @parentID
    WHERE [StoreID] = @parentID
    Where [TaskID] = @ParentId  
    where ChildID    = @ChildID and
    WHERE ID in (SELECT AppID FROM deleted)
    WHERE ID in (SELECT AppID FROM inserted)
    WHERE ID in (SELECT GroupID FROM deleted)
    WHERE ID in (SELECT GroupID FROM inserted)
    WHERE ID in (SELECT RoleID FROM deleted)
    WHERE ID in (SELECT RoleID FROM inserted)
    WHERE ID in (SELECT StoreID FROM deleted)
    WHERE ID in (SELECT StoreID FROM inserted)
    WHERE ID in (SELECT TaskID FROM deleted)
    WHERE ID in (SELECT TaskID FROM inserted)
    where MemberSID    = @SidMember and
    where TaskID    = @TaskID and
    where TaskID = @TaskID and
    WHILE @@FETCH_STATUS = 0
--   00010024NNNNNNNNN00000036NNNNNNNNNN00010048NNNNNNNNNNNNNN
--   followed by the actual SID. The over-usage of these pieces of data is for ease of parsing
--   of length 24, 36, and 48 in turn, and the second one is a delete
  -- Parent Group was not found
--   The first 4 bytes is a delete/add flag (0/1); the following 4 bytes is the size of the SID, 
--   Using string to represent such encoding, the following example which encodes 3 SIDs 
  @GroupId [int]            -- ID Of Application Group
  @ParentId [int] 
  @ParentId [int]                   
  @Return       [int]   output  
  @Return       [int]   output      
  @Return [int] output
  @Return [int] output  
  @Return [int] output ,    
  @Return [int] output,
  @RoleID       [int]               -- ID Of Role
  @RoleId [int]             -- ID Of Role
  @RoleId [int]             -- ID Of Role Assignment
  @RoleId [int]             -- ID Of RoleAssignment
  @TaskID       [int]               
  Begin
  End
  if @RowCount = 0
  Return @Error
  Return(1)
  Set @Return = 1
 !"#$%&'()*+
 @ID [int] 
 @ID [int]              
 @ID [int] -- for [AzMan_AzApplication].[ID] column
 @Return                [int]   output
 @Return                [int] output
 @Return             [int] output
 @Return   int output,
 @Return [int] output
 A^_^
 A^A\_
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A]A\_
 A_A^A]A\_^]
-- Access Check Store Procedure
-- Application
 AZ_AZSTORE_DEFAULT_SCRIPT_ENGINE_TIMEOUT
 CloseApplication
 CREATE  INDEX [IX_AzMan_AzOperation_AppID] ON [dbo].[AzMan_AzOperation]([AppID]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_AzOperation_Name] ON [dbo].[AzMan_AzOperation]([Name]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_AzRoleAssignment_Name] ON [dbo].[AzMan_AzRoleAssignment]([Name]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_AzScope_AppID] ON [dbo].[AzMan_AzScope]([AppID]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_AzTask_Name] ON [dbo].[AzMan_AzTask]([Name]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_BizRule_Parent] ON [dbo].[AzMan_BizRule]([ParentId], [ParentType]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_Group_AppMember_GroupID] ON [dbo].[AzMan_Group_AppMember]([GroupID]) ON [PRIMARY]
 CREATE  INDEX [IX_AzMan_LDAPQuery_GroupID] ON [dbo].[AzMan_LDAPQuery]([GroupID]) ON [PRIMARY]
-- Delete a specific record from table 
-- Delete a specific record from table [AzMan_AzApplication]
-- Delete a specific record from table [AzMan_AzApplicationGroup]
-- Delete a specific record from table [AzMan_AzAuthorizationStore]
-- Delete a specific record from table [AzMan_AzOperation]
-- Delete a specific record from table [AzMan_AzScope]
-- Delete a specific record from table [AzMan_AzTask]
-- Delete Queries
 DescriptionW
-- First parse the SidMembers string
-- First parse the string
 H3E H3E
-- Insert each one of them 
-- Inserts a new record in [AzMan_AzApplication] table
-- Inserts a new record in [AzMan_AzApplicationGroup] table
-- Inserts a new record in [AzMan_AzAuthorizationStore] table
-- Inserts a new record in [AzMan_AzOperation] table
-- Inserts a new record in [AzMan_AzScope] table
-- Inserts a new record in [AzMan_AzTask] table
-- Inserts or updates a record in [AzMan_LDAPQuery] table
 Microsoft Corporation. All rights reserved.
 Operating System
-- query the timestamps of a store
-- query the timestamps of application groups
-- query the timestamps of applications
-- query the timestamps of operations
-- query the timestamps of roles
-- query the timestamps of scopes
-- query the timestamps of tasks
-- Require Admin Access
-- Retrieve specific records from the [AzMan_AzAuthorizationStore] table depending on the input parameters you supply.
-- Scope
-- SidMembers are aggregated binary data in the following format:
-- Update an existing record in  table
-- Update an existing record in [AzMan_AzApplication] table
-- Update an existing record in [AzMan_AzApplicationGroup] table
-- Update an existing record in [AzMan_AzAuthorizationStore] table
-- Update an existing record in [AzMan_AzOperation] table
-- Update an existing record in [AzMan_AzScope] table
-- Update an existing record in the table
 Windows
!\$ H
!\$(E3
!\$(H
!\$(L
!\$HE
!\$HL
!|$(H
!|$(M
!|$HH
!}HH!}
!D$(E
!t$(H
!t$HH
!This program cannot be run in DOS mode.
"*/:<>?\|
"0pgAZ_AZSTORE_FORCE_APPLICATION_CLOSEWW
"fE9,
#AplResult
#GAddDelegatedPolicyUserWW
$jAddPolicyAdministratorNameWW
$StckI
$StckM
%0 3AZ_AZSTORE_DEFAULT_MAX_SCRIPT_ENGINESWWW
%02u/%02u %02u:%02u:%02u 
%02u/%02u/%02u %02u:%02u:%02u
%09Iu
%9NamesFromSidsWWW
%AZ_CLIENT_DN%
%ppNameResolverWW
%s calls %s: lPropId=%d pvarProp=%s
%s calls %s: lPropId=%d pvarProp=NULL
%s calls myAzCloseObject bstrObjectName=%s
%s calls myAzCreateObject bstrObjectName=%s
%s calls myAzDeleteObject bstrObjectName=%s
%s calls myAzGetProperty: lPropId=%d
%s calls myAzNewObject enumObject=%d
%s calls myAzNextObject
%s calls myAzOpenObject bstrObjectName=%s
%s calls myGetBoolProperty: lPropId=%d
%s calls myGetBstrProperty: lPropId=%d
%s calls myGetLongProperty: lPropId=%d
%s calls mySetBoolProperty: lPropId=%d fProp=%d
%s calls mySetBstrProperty: lPropId=%d bstrProp=%s
%s calls mySetLongProperty: lPropId=%d lProp=%d
%s error occured: 0x%lx
%s error occured: 0x%lx(%ws)
%s leave myAzOpenObject: return HRESULT value=0x%lx
%s leaves myAzAddOrDeletePropertyItem: return HRESULT value=0x%lx
%s leaves myAzCloseObject: return HRESULT value=0x%lx
%s leaves myAzCreateObject: return HRESULT value=0x%lx
%s leaves myAzDeleteObject: return HRESULT value=0x%lx
%s leaves myAzGetProperty: return HRESULT value=0x%lx pvarProp=%s
%s leaves myAzGetProperty: return HRESULT value=0x%lx pvarProp=NULL
%s leaves myAzNewObject: return HRESULT value=0x%lx
%s leaves myAzNextObject: no more results.
%s leaves myAzNextObject: return HRESULT value=0x%lx
%s leaves myAzSetProperty: return HRESULT value=0x%lx
%s leaves myGetBoolProperty: return HRESULT value=0x%lx *plProp=%d
%s leaves myGetBoolProperty: return HRESULT value=0x%lx plProp=NULL
%s leaves myGetBstrProperty: return HRESULT value=0x%lx *pbstrProp=%s
%s leaves myGetBstrProperty: return HRESULT value=0x%lx pbstrProp=NULL
%s leaves myGetLongProperty: return HRESULT value=0x%lx *plProp=%d
%s leaves myGetLongProperty: return HRESULT value=0x%lx plProp=NULL
%s leaves mySetBoolProperty: return HRESULT value=0x%lx
%s leaves mySetBstrProperty: return HRESULT value=0x%lx
%s leaves mySetLongProperty: return HRESULT value=0x%lx
%s:%d
%s;range=%d-%d
%s;range=%d-*
%s\%s
%u.%u.%u
%ws\%ws
&GetInterfaceValueWWW
(&(objectClass=msds-azapplication)(msds-azapplicationname=%s))
(&(objectClass=msds-azscope)(msds-azscopename=%s))
(_^][
(_GenericObject->DirtyBits & _DirtyBit) = 0
(`GetGroupsWWW
(myXmlSetNodeAttribute)pNode = 0x%lx
(myXmlSubmitObjectAttribute)pNode = 0x%lx
(null)
(objectClass=*)
(objectClass=group)
(objectClass=msDS-AzAdminManager)
(objectClass=msDS-AzApplication)
(objectClass=msDS-AzOperation)
(objectClass=msDS-AzRole)
(objectClass=msDS-AzScope)
(objectClass=msDS-AzTask)
(objectClass=user)
(t$`H
(t$pH
(t$PL
(UpdateCacheW
(Writable
) as 
) ON [PRIMARY]
)0G>AZ_PROP_APPLICATION_AUTHZ_INTERFACE_CLSIDWWW
)IAzRoleAssignmentsWW4
)L$Pf
*L9VHL
,  @ID [int]                                    
, @AppId [int]              
, @AppId [int]                          
, @AppId [int] = Null                       
, @ApplicationData [ntext] = Null
, @ApplicationData [ntext] = Null   
, @ApplicationData [ntext] = Null           
, @ApplicationData [ntext] = Null               
, @ApplicationData [ntext] = Null                   
, @ApplicationData [ntext] = Null                       
, @ApplicationVersion [nvarchar](50) = Null 
, @ApplicationVersion [nvarchar](50) = Null         
, @ApplyStoreSacl [bit] = Null              
, @ApplyStoreSacl [bit] = Null                      
, @ApplyStoreSacl [bit] = Null                          
, @AppMemberIDs [nvarchar] (4000)
, @AuthzInterfaceClsId [int] = Null         
, @AuthzInterfaceClsId [int] = Null                 
, @BizRule [ntext] = Null                       -- for [AzMan_BizRule].[BizRule] column
, @BizRuleImportedPath [nvarchar](512) = Null   -- for [AzMan_BizRule].[BizRuleImportedPath] column
, @BizRuleLanguage [nvarchar](64) = Null        -- for [AzMan_BizRule].[BizRuleLanguage] column
, @CheckDup [bit] = 1
, @ChildID      [int]
, @ChildID [int]
, @ChildID [int] 
, @ConsiderNull_ApplicationData bit = 0
, @ConsiderNull_ApplicationData bit = NULL
, @ConsiderNull_ApplicationVersion bit = 0
, @ConsiderNull_ApplyStoreSacl bit = 0
, @ConsiderNull_AuthzInterfaceClsId bit = 0
, @ConsiderNull_BizRule bit = 0
, @ConsiderNull_BizRuleImportedPath bit = 0
, @ConsiderNull_BizRuleLanguage bit = 0
, @ConsiderNull_Description bit = 0
, @ConsiderNull_DomainTimeout bit = 0
, @ConsiderNull_GenerateAudits bit = 0
, @ConsiderNull_GroupDescription bit = 0
, @ConsiderNull_GroupType bit = 0
, @ConsiderNull_IsRoleDefinition bit = NULL
, @ConsiderNull_LdapQuery bit = 0
, @ConsiderNull_MajorVersion bit = 0
, @ConsiderNull_MaxScriptEngines bit = 0
, @ConsiderNull_MinorVersion bit = 0
, @ConsiderNull_OperationID bit = 0
, @ConsiderNull_ScriptEngineTimeout bit = 0
, @ConsiderNull_TargetMachine bit = 0
, @Description [nvarchar](1024) = Null
, @Description [nvarchar](1024) = Null 
, @Description [nvarchar](1024) = Null  
, @Description [nvarchar](1024) = Null      
, @Description [nvarchar](1024) = Null          
, @Description [nvarchar](1024) = Null              
, @Description [nvarchar](1024) = Null                  
, @DomainTimeout [int] = Null               
, @DomainTimeout [int] = Null                           
, @GenerateAudits [bit] = 0                 
, @GenerateAudits [bit] = Null              
, @GenerateAudits [bit] = Null                      
, @GenerateAudits [bit] = Null                          
, @GroupId [int] 
, @GroupId [int]            -- ID Of Application Group
, @GroupId [int] = Null     -- ID Of Application Group
, @GroupType [tinyint] = Null 
, @GroupType [tinyint] = Null  
, @ID [int]
, @ID [int] 
, @ID [int]     
, @ID [int] = Null      output
, @ID [int] = Null Output 
, @ID [int] = Null Output                   
, @ID [int] = Null Output                       
, @ID [int] OUTPUT                            
, @IsMember [bit]           = 0 
, @IsMember [bit]           = 1 
, @IsMember [bit] = 1
, @IsMember [bit] = 1 
, @IsRoleDefinition [bit] = 0 
, @IsRoleDefinition [bit] = Null 
, @LdapQuery [ntext] = Null -- LDAP Query
, @MajorVersion [int] = 1                   
, @MajorVersion [int] = Null                            
, @MaxScriptEngines [int] = Null            
, @MaxScriptEngines [int] = Null                        
, @MinorVersion [int] = 0                   
, @MinorVersion [int] = Null                            
, @Name [ntext]
, @Name [ntext] = Null             
, @Name [nvarchar] (512)        = NULL
, @Name [nvarchar](512) 
, @Name [nvarchar](512) = Null              
, @Name [nvarchar](64) = Null 
, @Name [nvarchar](64) = Null  
, @Name [nvarchar](64) = Null               
, @Name [nvarchar](64) = Null                   
, @NameHash [Binary] (32) = Null
, @NameHash [Binary] (32) = NULL
, @NameLen [int]         = 0                    
, @ObjectGuid [uniqueidentifier] = Null  
, @ObjectGuid [uniqueidentifier] = Null     
, @ObjectGuid [uniqueidentifier] = Null         
, @OperationID  [int]
, @OperationID [int] = Null                 
, @OperationID [int] = Null                     
, @OperationIDs [nvarchar] (4000)
, @ParentID   [int]
, @ParentId [int] 
, @ParentTaskId [int]               -- ID Of Task
, @ParentType [int]  
, @ParentType [tinyint]
, @ParentType [tinyint] 
, @ParentType [tinyint]  
, @RoleID       [int]               -- ID Of Role
, @RoleID       [int]               -- ID Of Role assignment
, @RoleId [int]             
, @RoleID [int]             -- ID Of Role
, @RoleId [int]             -- ID Of Role Assignment
, @SaclIsOn     [bit]
, @SaclIsOn [bit]
, @ScriptEngineTimeout [int] = Null         
, @ScriptEngineTimeout [int] = Null                     
, @SepChar [char] (1) = "|"
, @SepChar [nchar] (1) = "|"
, @SidMember varbinary (85)
, @SidMember varbinary(85)
, @SidMembers varbinary (4000)
, @StoreId [int]                    
, @TargetMachine [nvarchar](50) = Null      
, @TargetMachine [nvarchar](50) = Null                  
, @TaskID       [int]
, @TaskID       [int]               
, @TaskID       [int]               -- ID Of task
, @TaskID [int]
, @TaskId [int] 
, @TaskID [int]             -- ID Of Task
, @TaskIDs [nvarchar] (4000)
,@AccessAtObjType [tinyint] output 
,@AppID                 [int]   output
,@AppID [int]   output
,@AppId [int] = Null 
,@CheckSacl [bit] = 0
,@ID                    [int]
,@ID                 [int]
,@ID         [int]
,@ID [int]
,@ID [int] 
,@ID int
,@ObjectType            [tinyint]
,@ObjectType         [tinyint]
,@ObjectType        [tinyint]
,@ObjectType [tinyint]
,@ParentId [int] = Null 
,@RoleType              [tinyint]
,@RoleType           [tinyint]
,@RoleType          [tinyint]
,@RoleType          [tinyint]  
,@RoleType   [tinyint]
,@RoleType [tinyint]
,@SaclIsOn           [bit]
,@SaclIsOn          [bit]
,@SaclIsOn [bit] output
,@ScopeID               [int]   output
,@ScopeID [int] output
,@SQLRoleName        [nvarchar] (64)
,@SQLRoleName        [nvarchar] (64) 
,@SQLRoleName [nvarchar] (64) 
,@SQLRoleName [nvarchar] (64) output
,@SQLRoleName [nvarchar] (64) output    
,@StoreID               [int]   output
,@StoreId [int] = Null 
,@StoreID [int] output
,@UserName              [nvarchar] (255)    
,@UserName           [nvarchar] (255)
,@UserName          [nvarchar] (255)
,@UserName          [nvarchar] (255)    
,@UserSid               varbinary(85)
,@UserSid            varbinary(85)
,@UserSid           varbinary(85)
.?AVbad_alloc@std@@
.?AVCAtlException@ATL@@
.?AVexception@@
.?AVlength_error@std@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.data$r$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pbPropWW
.pdata
.rdata
.rdata$brc
.rdata$T$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata
.xdata$x
//%s[.="%s"]
//*/%s[@%s="%s"]
/fD;e
::$data
:H9yxu
:PolicyAdministrators
;AddRoles
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??0exception@@QEAA@XZ
??1exception@@UEAA@XZ
??1type_info@@UEAA@XZ
?{uSH
?=u$L
?pbSupportedW
?terminate@@YAXXZ
?what@exception@@UEBAPEBDXZ
@!\$(H
@.data
@.didat
@.reloc
@`H+BhH=
@8~8t
@8h!t
@8h!u
@8h)t
@8h)u
@8h1t
@8h1u
@8i!u*H
@8j uU@
@8j uV@
@8j!t
@8j!u
@8j(uUD
@8j(uVD
@8j)t
@8j)u
@8j0uUD
@8j0uVD
@8j1t
@8j1u
@8k!t
@8k!u
@8p uTA
@8y(t
@A^_^
@A_A^]
@A_A^_
@A_A^A\
@A_A^A\_^
@A_A^A\_^[]
@A_A^A]
@A_A^A]A\_][
@A_A^A]A\_^[
@A_A^A]A\_^]
@AccessAtObjType [tinyint] output,
@actObjectGuid uniqueidentifier,
@actObjectName nvarchar(512),
@actObjectType tinyint,
@appID int
@count int output
@DeleteFlag [int]       -- bitwise pattern. 0x0001 for deleting only self, 0x0002 for deleting only children
@event int,
@ID         [int],
@ID     [int]
@ID [int]
@ID [int],
@memberFlag int,
@memberName nvarchar(256),
@memberSid varbinary(85),
@ObjectID int,
@ObjectType [tinyint]
@ObjectType [tinyint],
@ObjectType tinyint
@otherInfo nvarchar(1024)
@parentID int,
@parentType tinyint
@Return              [int] output
@Return             [int] output,
@Return      [int] output
@Return     [int] output,
@Return [int] output,
@Return int output,
@ReturnCode int output,
@SQLRoleName        [nvarchar] (64)     
@SqlRoleName nvarchar(64),
@storeID int
@success int,
@SUVWAVH
@SVAVH
@SVWATAUAVAW
@SVWATAUAVAWH
@SVWH
@targetGuid uniqueidentifier,
@targetName nvarchar(512),
@targetType tinyint,
@UATAUAVAWH
@UAVAWH
@UserType [int] output
@USVATAUAVAWH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAVAWH
@USVWAVAWH
@USVWAVH
@UVWATAUAVAWH
@UVWAVAWH
@UVWH
@VWATAVAWH
@VWAVH
[%s] 
[AZROLES] 
[BSTR=%s],
[I2=%d],
[I4=%d],
[int],
[other value]
[other value],
[ulOptionsWWW
\$ @8w1u)H
\$ A;
\$ E3
\$ UH
\$ UVWATAUAVAW
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$(E3
\$(H9_PtGH9_HtAH9_Xt;A
\$@9}
\$0@2
\$09|$@t"H
\$0E3
\$PH;
\AZ_PROP_DESCRIPTIONW
\Implemented Categories
\Microsoft\AzMan\
\Required Categories
\SubmitWWX
]0I;^
]DeleteRoleAssignment
]lOperationWW
]OpenRoleAssignmentWWl
]vpfPropWW
^AzBizRuleContext<
^lPropIdW
__C_specific_handler
__CxxFrameHandler3
__dllonexit
_amsg_exit
_AZ_MAX_ROLE_NAME_LENGTHW
_callnewh
_CxxThrowException
_errno
_initterm
_lock
_onexit
_pSidType
_purecall
_RemotableHandle
_unlock
_vsnprintf
_vsnwprintf
_wcsicmp
_wcsnicmp
_wcsupr
_wtoi64
_wtol
_XcptFilter
` AUAVAWH
` UAVAWH
`.rdata
`A^_^
`A_A^_^]
`A_A^A\_^
`A_A^A\_^[]
`A_A^A]A\_^[
`A_A^A]A\_^]
`AZ_MAX_GROUP_BIZRULE_LENGTHW
`JDeletePolicyReaderWW
{ ATAVAWH
{ AVH
{?=CALL 
{CALL 
|$ AVH
|$ E3
|$ UATAUAVAWH
|$(8^1u)H
|$(A8w1u)I
|$(E3
|$`E3
|$`fD
|$HE3
|$HL!x
|$PE3
|$XE3
|AzAuthorizationStore
|bstrOperationNameWWW
|lOptions
}AZ_PROP_DELEGATED_POLICY_USERSWW
}OD9e
}oL9v
~CAzBizRuleContext
~CScriptEngine
~DomainNameWW
~ppRoleAssignmentsWWW4
~ulTokenHandleHighPartWWW
~VOperationsWW 
~xD8W(t
+BusinessRuleStringWW
</AzAdminManager>
<?xml version="1.0" encoding="utf-8" ?>
<7GetOperationsWWW
<AZ_PROP_POLICY_READERS_NAMEW
<AzAdminManager MajorVersion="%d" MinorVersion="%d" Guid="%s">
<GUID=
<Invalid Sid>
<NULL>
<Sid=
<SID=
<Unknown>
<UserDisplayW
=%d%ws
=AZ_PROP_CLIENT_CONTEXT_USER_DISPLAYW
=L9o<
>AddDelegatedPolicyUserNameWW
>D9gPt8H
0"hAZ_MAX_POLICY_URL_LENGTH
0\|AZ_SUBMIT_FLAG_FLUSH
0]5AZ_PROP_POLICY_ADMINS_NAMEWW
0~bAZ_MAX_APPLICATION_DATA_LENGTHWW
0123456789ABCDEF"
040904B0
09mAZ_MAX_TASK_NAME_LENGTHW
0A^_^
0A_A^_
0A_A^_^[
0A_A^_^]
0A_A^A\
0A_A^A\_[
0A_A^A\_^
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0D8s8tA
0-EAZ_PROP_WRITABLE
0fYAZ_MAX_APPLICATION_NAME_LENGTHWW
0M;AZ_PROP_GROUP_MEMBERS_NAMEWW
0ScopeWWWl
0U}AZ_PROP_APPLICATION_VERSIONW
0vCountWWW
0x%lx %ld (%ld) %ws: %s
0x%lx %ld (%ld): Close Handle
0x%lx %ld (%ld): Open Handle
0x%lx %ld: Handle has no handle reference count.
0x%lx %ld: Handle has no ParentGenericObjectHead.
0x%lx %ld: Handle not in list.
0x%lx %ld: Handle Object type is too large.
0x%lx %ld: Object is deleted.
0x%lx %ld: Object type doesn't match parent.
0x%lx %ld: Object Type not local object type
0x%lx %ld: Sequence number doesn't match parent.
0x%lx %ws (%ld): DC Allocaote
0x%lx %ws (%ld): DC deref
0x%lx %ws (%ld): DC ref
0x%lx %ws (%ld): Domain deref
0x%lx %ws (%ld): Domain ref
0x%lx: 0x%lx: %ld: ObFreeDeltaArray
0x%lx: 0x%lx: %ld: ObRemoveObjectListLinks
0x%lx: 0x%lx: Allocate array
0x%lx: 0x%lx: Free array
0x%lx: 0x%lx: Free old array
0x%lx: 0x%lx: ObFreeObjectList
0x%lx: 0x%lx: ObInitObjectList
0x%lx: AV accessing handle
0x%lx: NULL handle is invalid
0x%lx: NULL handle not allowed.
1.2.840.113556.1.4.1413
1.2.840.113556.1.4.1851
1.2.840.113556.1.4.529
1.2.840.113556.1.4.801
1.2.840.113556.1.4.805
1}dUZ
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
2AAppMembersWWX
2AZ_MAX_DESCRIPTION_LENGTHWWW
2IsUpdateNeededWW
2RoleForAccessCheckWW
2ScopesWW
3AZ_PROP_GROUP_BIZRULEWWW
3bstrPropX
3DelegatedPolicyUsers
4#hParentWndWW
4AddNonMemberX
4bstrRoleDefinitionNameWWl
4IAzNameResolverW
4lInterfaceFlagWW
5AZ_PROP_GROUP_BIZRULE_IMPORTED_PATHW
5pvarProp
6bstrInterfaceNameWWW
7)DomainTimeoutWWW
7fD;>u
7H9sxu
7pbEnabledWWW`
8\$8tXH
8^.IAzRoleW 
8_1u8L
8}mIAzClientContext2WWW@
8~mIAzClientContext3WWW
80gIAzBizRuleContextWWW
8A^_^[
8AZ_CLIENT_CONTEXT_GET_GROUP_RECURSIVEWWW
8C(t1H
8E@t+
8E5IAzAuthorizationStoreWWW
8S!u.H
8ucAzPrincipalLocatorWW
9 t1H
9A98u6A9x
9D9 uSD
9G(u,A
9Heapu
9l$@t
9q8v9H
9T$`A
9u8~|H
9uot E
A new element node, 0x%lx, is added for %s
A;\$8
A;n s;
A;T$ r
A^_^[]
A^_^][
A^A]A\_^
A^A]A\_^[]
A_A]A\
A_A]A\_]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]A\]
A_A^A]A\^[]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_H
A8^1t
A8h!t
A8h!u
A8h)t
A8h)u
A8h1t
A8h1u
A8q u
A9@ t
A9@$u
A9L$8
A9MduNH
a9ppOperationW
A9T$ v@H
A9X8vcD
AAZ_PROP_CLIENT_CONTEXT_USER_CANONICALWWW
ACCESS
AccessCheckW
AcquireSRWLockExclusive
AdCheckSecurityPrivilege: AzpADReadNTSecurityDescriptor failed: %ld
AddAccessAllowedAce
AddAccessAllowedAceEx
AddAccessAllowedAceEx fails.
AddAccessAllowedObjectAce
AddApplicationGroups
AddAppNonMemberWX
AddAuditAccessAceEx
AddInterface
AddInterfacesWWWT
AddMemberNameWWWX
AddNonMemberNameX
AddOperation 
AddParameter
AddParametersWWW
AddPolicyAdministratorWW
AddPolicyReaderNameW
AddPolicyReaderW
AddPropertyItemW
AddRoleDefinitionWWW
AddStringSidsWWW
AdjustTokenPrivileges
AdvanceDataBuffer fails.
ADVAPI32.dll
advapi32.dll
Allocate object
allowedAttributesEffective
allowedChildClassesEffective
alter database [%s] set recovery simple
ALTER TABLE [dbo].[AzMan_AzApplication] ADD 
ALTER TABLE [dbo].[AzMan_AzApplication] WITH NOCHECK ADD 
alter table [dbo].[AzMan_AzApplicationGroup] nocheck constraint [FK_AzMan_AzAppGroup_AzMan_AzApplication]
alter table [dbo].[AzMan_AzApplicationGroup] nocheck constraint [FK_AzMan_AzAppGroup_AzMan_AzAuthorizationStore]
alter table [dbo].[AzMan_AzApplicationGroup] nocheck constraint [FK_AzMan_AzAppGroup_AzMan_AzScope]
ALTER TABLE [dbo].[AzMan_AzApplicationGroup] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_AzAuthorizationStore] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_AzOperation] ADD 
ALTER TABLE [dbo].[AzMan_AzOperation] WITH NOCHECK ADD 
alter table [dbo].[AzMan_AzRoleAssignment] nocheck constraint [FK_AzMan_Role_To_App]
alter table [dbo].[AzMan_AzRoleAssignment] nocheck constraint FK_AzMan_Role_To_Scope
ALTER TABLE [dbo].[AzMan_AzRoleAssignment] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_AzScope] ADD 
ALTER TABLE [dbo].[AzMan_AzScope] WITH NOCHECK ADD 
alter table [dbo].[AzMan_AzTask] nocheck constraint [FK_AzMan_AzTask_To_App]
alter table [dbo].[AzMan_AzTask] nocheck constraint [FK_AzMan_AzTask_To_Scope]
ALTER TABLE [dbo].[AzMan_AzTask] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_BizRule] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_BizRule_To_Group] ADD 
ALTER TABLE [dbo].[AzMan_BizRule_To_Task] ADD 
ALTER TABLE [dbo].[AzMan_Group_AppMember] ADD 
ALTER TABLE [dbo].[AzMan_Group_AppMember] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_Group_SIDMember] ADD 
ALTER TABLE [dbo].[AzMan_Group_SIDMember] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_LDAPQuery] ADD 
ALTER TABLE [dbo].[AzMan_LDAPQuery] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_Role_AppMember] ADD 
ALTER TABLE [dbo].[AzMan_Role_AppMember] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_Role_SIDMember] ADD 
ALTER TABLE [dbo].[AzMan_Role_SIDMember] WITH NOCHECK ADD 
ALTER TABLE [dbo].[AzMan_Role_To_Operation_Link] ADD 
ALTER TABLE [dbo].[AzMan_Role_To_Task_Link] ADD 
ALTER TABLE [dbo].[AzMan_Task_To_Operation_Link] ADD 
ALTER TABLE [dbo].[AzMan_Task_To_Task_Link] ADD 
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
APPDATA
AppID
APPID
ApplicationCLSID
ApplicationData
ApplicationDataW
Applications
ApplicationVersion
AppMemberLink
AppNonMemberLink
AppNonMembersWWWX
ATAUAWH
ATAVAWH
ATL$__a
ATL$__z
AUAVAWH
Audits
Authorization Store Handle deref
Authorization Store Handle ref
AUTHZ.dll
AuthzAccessCheck
AuthzAddSidsToContext
AuthzFreeAuditEvent
AuthzFreeContext
AuthzFreeResourceManager
AuthzGetInformationFromContext
AuthziAllocateAuditParams
AuthziFreeAuditEventType
AuthziFreeAuditParams
AuthziInitializeAuditEvent
AuthziInitializeAuditEventType
AuthziInitializeAuditParamsWithRM
AuthziLogAuditEvent
AuthzInitializeContextFromSid
AuthzInitializeContextFromToken
AuthzInitializeResourceManager
AuthzInterfaceClsidW
Avoided script engine in non-base thread.
AyullTokenHandleWW
AZ_AZSTORE_DEFAULT_DOMAIN_TIMEOUTWWW
AZ_AZSTORE_FLAG_AUDIT_IS_CRITICALWWW
AZ_AZSTORE_FLAG_BATCH_UPDATE
AZ_AZSTORE_FLAG_CREATEWW
AZ_AZSTORE_FLAG_MANAGE_ONLY_PASSIVE_SUBMITWW
AZ_AZSTORE_MIN_DOMAIN_TIMEOUTWWW
AZ_AZSTORE_MIN_SCRIPT_ENGINE_TIMEOUT
AZ_AZSTORE_NT6_FUNCTION_LEVELWWW
AZ_CLIENT_CONTEXT_SKIP_LDAP_QUERYWWW
AZ_GROUPTYPE_BIZRULE
AZ_GROUPTYPE_LDAP_QUERYW
AZ_MAX_GROUP_BIZRULE_IMPORTED_PATH_LENGTHWWW
AZ_MAX_GROUP_BIZRULE_LANGUAGE_LENGTH
AZ_MAX_GROUP_LDAP_QUERY_LENGTHWW
AZ_MAX_GROUP_NAME_LENGTH
AZ_MAX_NAME_LENGTHWW
AZ_MAX_OPERATION_NAME_LENGTH
AZ_MAX_TASK_BIZRULE_IMPORTED_PATH_LENGTH
AZ_MAX_TASK_BIZRULE_LANGUAGE_LENGTHW
AZ_MAX_TASK_BIZRULE_LENGTHWW
AZ_PROP_APPLICATION_BIZRULE_ENABLEDW
AZ_PROP_APPLICATION_DATA
AZ_PROP_APPLICATION_NAME
AZ_PROP_APPLY_STORE_SACL
AZ_PROP_AZSTORE_DOMAIN_TIMEOUTWW
AZ_PROP_AZSTORE_MAJOR_VERSIONWWW
AZ_PROP_AZSTORE_MAX_SCRIPT_ENGINESWW
AZ_PROP_AZSTORE_MINOR_VERSIONWWW
AZ_PROP_AZSTORE_SCRIPT_ENGINE_TIMEOUTWWW
AZ_PROP_AZSTORE_TARGET_MACHINEWW
AZ_PROP_CHILD_CREATE
AZ_PROP_CLIENT_CONTEXT_LDAP_QUERY_DN
AZ_PROP_CLIENT_CONTEXT_ROLE_FOR_ACCESS_CHECK
AZ_PROP_CLIENT_CONTEXT_USER_DNWW
AZ_PROP_CLIENT_CONTEXT_USER_GUID
AZ_PROP_CLIENT_CONTEXT_USER_SAM_COMPATWW
AZ_PROP_CLIENT_CONTEXT_USER_UPNW
AZ_PROP_DELEGATED_POLICY_USERS_NAMEW
AZ_PROP_GENERATE_AUDITSW
AZ_PROP_GROUP_APP_MEMBERSWWW
AZ_PROP_GROUP_APP_NON_MEMBERSWWW
AZ_PROP_GROUP_BIZRULE_LANGUAGEWW
AZ_PROP_GROUP_LDAP_QUERY
AZ_PROP_GROUP_NON_MEMBERSWWW
AZ_PROP_GROUP_TYPEWW
AZ_PROP_NAME
AZ_PROP_OPERATION_ID
AZ_PROP_POLICY_ADMINSWWW
AZ_PROP_POLICY_READERSWW
AZ_PROP_ROLE_APP_MEMBERS
AZ_PROP_ROLE_MEMBERS
AZ_PROP_ROLE_MEMBERS_NAMEWWW
AZ_PROP_ROLE_OPERATIONSW
AZ_PROP_ROLE_TASKS returns bogus task object %s
AZ_PROP_ROLE_TASKSWW
AZ_PROP_SCOPE_BIZRULES_WRITABLEW
AZ_PROP_SCOPE_CAN_BE_DELEGATEDWW
AZ_PROP_TASK_BIZRULE
AZ_PROP_TASK_BIZRULE_LANGUAGEWWW
AZ_PROP_TASK_IS_ROLE_DEFINITIONW
AZ_PROP_TASK_TASKSWW
AZ_SUBMIT_FLAG_ABORT
AzAccessCheck: %ws: %ws: All operations have been processed %ld.
AzAccessCheck: %ws: %ws: All roles have been processed %ld.
AzAccessCheck: %ws: %ws: AzpWalkOpsAndTasks failed %ld
AzAccessCheck: %ws: %ws: CheckGroupMembership extended status %ld
AzAccessCheck: %ws: %ws: CheckGroupMembership failed %ld
AzAccessCheck: %ws: %ws: CheckGroupMembership is %ld
AzAccessCheck: %ws: %ws: CheckGroupMembership of role
AzAccessCheck: %ws: %ws: CheckSidMembership failed %ld
AzAccessCheck: %ws: %ws: CheckSidMembership is %ld
AzAccessCheck: %ws: %ws: CheckSidMembership of role
AzAccessCheck: %ws: %ws: No operations for this role apply
AzAccessCheck: %ws: %ws: No roles have applicable operations %ld.
AzAccessCheck: %ws: %ws: Process role
AzAccessCheck: %ws: %ws: Role finished being processed
AzAccessCheck: %ws: %ws: Role finished being processed due to ACCESS_DENIED
AzAccessCheck: %ws: %ws: There are no roles for this scope
AzAccessCheck: %ws: AzpAccessCheckGenerateAudit failed with %ld
AzAccessCheck: %ws: GroupEvalSerialNumber changed from %ld to %ld
AzAccessCheck: %ws: invalid OperationCount %ld
AzAccessCheck: Failed to load children for %ws: %ld
AzAccessCheck: This role %ws is not the requested role %ws 
AzAddPropertyItem
AzAddPropertyItem: invalid prop id %ld
AzAddPropertyItem: Reserved != 0
AzAdminManager
AzApplication
AzApplicationClose
AzApplicationClose: Cannot reference application %ws: %ld
AzApplicationClose: Cannot reload children on unload failure: %ld
AzApplicationClose: Failed to capture application name: %ld
AzApplicationCreate
AzApplicationDelete
AzApplicationEnum
AzApplicationGetProperty: invalid prop id %ld
AzApplicationGroup
AzApplicationOpen
AzAuthorizationStore Class
AzAuthorizationStore in AzCloseHandle ref
AzAuthorizationStore in ObCloseHandle ref
AzAuthorizationStoreDelete
AzAuthorizationStoreDelete: Reserved != 0
AzBizRuleContext
AzBizRuleContext Class
AzCloseHandle
AzCloseHandle: Reserved != 0
AzContextAccessCheck
AzContextAccessCheck: Starting Access Check loops
AzContextGetAssignedScopesPage
AzContextGetRoles
AzDatabaseSproc::Create failed.
AzDatabaseSproc::Create fails with SqlStatus=%d.
AzDatabaseSproc::Execute (AzMan_SPD_SQLRole_ForObject) fails with SqlStatus=%d.
AzDatabaseSproc::PrepareParameters failed.
AzFreeMemory
AzGetProperty
AzGroupCreate
AzGroupDelete
AzGroupEnum
AzGroupObjectContainer-
AzGroupOpen
AzInitialize
AzInitialize: Failed to Initialize Audit system: %ld
AzInitialize: Invalid flags 0x%lx
AzInitialize: Reserved != 0
AzInitializeContext: Cannot allocate LUID %ld
AzInitializeContext: Cannot AuthzInitializeContext %ld
AzInitializeContext: Cannot initialize context since store is in manage mode %ld
AzInitializeContext: Cannot initialize context with null audit identifying string %ld
AzInitializeContext: Cannot ObCommonCreateObject %ld
AzInitializeContext: ConvertSidStringToSid for null SID failed with %ld
AzInitializeContext: CopySid for null SID failed with %ld
AzInitializeContextFromName
AzInitializeContextFromName: Cannot allocate LUID %ld
AzInitializeContextFromName: Cannot AzInitializeFromToken %ld
AzInitializeContextFromName: Cannot initialize context since store is in manage mode %ld
AzInitializeContextFromName: Cannot ObCommonCreateObject %ld
AzInitializeContextFromName: Invalid user type - expected SIdTypeUser, got %ld
AzInitializeContextFromName: LookupAccoutName failed with %ld
AzInitializeContextFromStringSid: Cannot allocate LUID %ld
AzInitializeContextFromStringSid: Cannot AuthzInitializeContextFromStringSid %ld
AzInitializeContextFromStringSid: Cannot initialize context since store is in manage mode %ld
AzInitializeContextFromStringSid: Cannot ObCommonCreateObject %ld
AzInitializeContextFromStringSid: ConvertSidStringToSid failed with %ld
AzInitializeContextFromStringSid: CopySid failed with %ld
AzInitializeContextFromStringSid: Invalid user type - expected SIdTypeUser, got %ld
AzInitializeContextFromStringSid: LookupAccountSid failed with %ld
AzInitializeContextFromToken
AzInitializeContextFromToken:  GetTokenInformation failed with %ld
AzInitializeContextFromToken: Cannot AuthzInitializeContextFromToken %ld
AzInitializeContextFromToken: Cannot DuplicateTokenEx %ld
AzInitializeContextFromToken: Cannot initialize context since store is in manage mode %ld
AzInitializeContextFromToken: Cannot ObCommonCreateObject %ld
AzInitializeContextFromToken: Cannot OpenProcessToken %ld
AzInitializeContextFromToken: Cannot OpenThreadToken %ld
AzMan log file
AzMan_SP_Grant_Permission
AzMan_SPD_AzApplication
AzMan_SPD_AzApplicationGroup
AzMan_SPD_AzAuthorizationStore
AzMan_SPD_AzOperation
AzMan_SPD_AzRoleAssignment
AzMan_SPD_AzScope
AzMan_SPD_AzTask
AzMan_SPD_SQLRole_ForObject
AzMan_SPD_User_From_Role
AzMan_SPI_Add_User_To_Role
AzMan_SPI_AzApplication
AzMan_SPI_AzApplicationGroup
AzMan_SPI_AzApplicationGroup_Multi_AppMembers
AzMan_SPI_AzApplicationGroup_Multi_AppNonMembers
AzMan_SPI_AzApplicationGroup_Multi_SidMembers
AzMan_SPI_AzApplicationGroup_Multi_SidNonMembers
AzMan_SPI_AzAuthorizationStore
AzMan_SPI_AzOperation
AzMan_SPI_AzRoleAssignment
AzMan_SPI_AzRoleAssignment_Multi_AppMembers
AzMan_SPI_AzRoleAssignment_Multi_Operations
AzMan_SPI_AzRoleAssignment_Multi_SidMembers
AzMan_SPI_AzRoleAssignment_Multi_Tasks
AzMan_SPI_AzScope
AzMan_SPI_AzTask
AzMan_SPI_AzTask_Multi_Operations
AzMan_SPI_AzTask_Multi_Tasks
AzMan_SPI_Create_SqlRole_For_Object
AzMan_SPIU_AzApplicationGroup_Bizrule
AzMan_SPIU_AzApplicationGroup_LDAPQuery
AzMan_SPIU_AzTask_Bizrule
AzMan_SPS_Enum_AzApplicationGroup
AzMan_SPS_Enum_AzApplicationGroup_AppMembers
AzMan_SPS_Enum_AzApplicationGroup_AppNonMembers
AzMan_SPS_Enum_AzApplicationGroup_SIDMembers
AzMan_SPS_Enum_AzApplicationGroup_SIDNonMembers
AzMan_SPS_Enum_AzApplicationGroupUpdateTimeStamp
AzMan_SPS_Enum_AzApplications
AzMan_SPS_Enum_AzApplicationUpdateTimeStamp
AzMan_SPS_Enum_AzAuthorizationStoreUpdateTimeStamp
AzMan_SPS_Enum_AzOperation
AzMan_SPS_Enum_AzOperationUpdateTimeStamp
AzMan_SPS_Enum_AzRoleAssignment
AzMan_SPS_Enum_AzRoleAssignment_AppMembers
AzMan_SPS_Enum_AzRoleAssignment_Operations
AzMan_SPS_Enum_AzRoleAssignment_SIDMembers
AzMan_SPS_Enum_AzRoleAssignment_Tasks
AzMan_SPS_Enum_AzRoleAssignmentUpdateTimeStamp
AzMan_SPS_Enum_AzScope
AzMan_SPS_Enum_AzScopeUpdateTimeStamp
AzMan_SPS_Enum_AzTask
AzMan_SPS_Enum_AzTask_Operations
AzMan_SPS_Enum_AzTask_Tasks
AzMan_SPS_Enum_AzTaskUpdateTimeStamp
AzMan_SPS_Get_AzApplication
AzMan_SPS_Get_AzApplicationGroup
AzMan_SPS_Get_AzApplicationGroup_BizruleInfo
AzMan_SPS_Get_AzApplicationGroup_LDAPQuery
AzMan_SPS_Get_AzAuthorizationStoreByName
AzMan_SPS_Get_AzOperation
AzMan_SPS_Get_AzRoleAssignment
AzMan_SPS_Get_AzScope
AzMan_SPS_Get_AzTask
AzMan_SPS_Get_AzTask_BizruleInfo
AzMan_SPS_Get_DBOwners
AzMan_SPS_Get_ObjectSecurityOption
AzMan_SPS_Get_Role_For_Object
AzMan_SPS_Get_StoreIDByName
AzMan_SPU_AzApplication
AzMan_SPU_AzApplicationGroup
AzMan_SPU_AzAuthorizationStore
AzMan_SPU_AzOperation
AzMan_SPU_AzRoleAssignment
AzMan_SPU_AzScope
AzMan_SPU_AzTask
AzManAPI
AzManDebug_%d.log
AzManSproc does not have AzObjectRecord.
AzManSproc is invalid: No AzObjectRecord object.
AzManSproc::AdvanceDataBuffer called without AzObjectRecord member.
AzManSproc::BindParameters for action=%d and childType=%d.
AzManSproc::Execute failed
AzManSproc::Execute failed with error: %d.
AzManSproc::Execute failed with sqlStatus: %d.
AzManSproc::Execute failed.
AzManSproc::Execute partially succeeded. Check Sproc %ws
AzManSproc::Fetch failed with error: %d.
AzManSproc::GetStoreProcedure receives NULL pSproc parameter.
AzManSproc::Initialize receives NULL objectHandle.
AzmanSQLLayer::Initialize failed.
AzManSQLProvider::Initialize SqlConnection::DriverConnect returns 0x%08X.
AzManSQLProvider::Initialize(): Database::Open() returned 0x%08X.
AzManSQLProvider::Initialize(): FAILED to initialize AES crypto provider Error 0x%08X.
AzManSQLProvider::Initialize(): Not enough memory for db connection.
AzManSQLProvider::Initialize(): SqlConnection::DriverConnect() returned 0x%08X.
AzManSQLProvider::Initialize: Not enough memory for db instance.
AzManSQLProvider::Initialize: NULL pwszConnStr.
AzManSQLProvider::NeedsReconnect(): SqlConnection::NeedsReconnect returned %d.
AzMultiSidBuffer::NextPage is out of memory.
AzMultiValuePropertyBuffer::NextPage is out of memory.
AzObjectRecord::Initialize failed.
AzObjectRecord::NextPage fails.
AzObjectRecord::PopulateObject failed.
AzObjectRecord::PopulateObject receives NULL objectHandle.
AzOperation
AzOperationCreate
AzOperationDelete
AzOperationEnum
AzOperationOpen
AzOpObjectContainer-
AzpADApplyPolicyAcls: AzpeSetSecurityDescriptorIntoCache failed:: %ld
AzpADBuildDN: AzpADBuildChildObjectDN failed for %s: %ld
AzpADBuildDN: AzpADBuildDNForBuiltinObject failed:%ld
AzpADBuildDN: AzpADGetCNForDN failed: %ld
AzpADBuildDN: AzpADObjectContainerRDN failed for %ws: %ld
AzpADBuildDN: AzpADObjectContainerRDN failed:%ld
AzpADBuildDN: AzpGetCNForDN failed: %ld
AzpAddObjectToGuidMap: objects already in map
AzpADGetSpecificProperty: Get Property failed: %ld
AzpADHandleSubmitLinkedAttribute: AzpeGetDeltaArray failed for %ws: %ld
AzpADParseLinkedAttributeValue: Failed to run search for group type for %ws: %ld
AzpADParseLinkedAttributeValue: ldap_set_option LDAP_OPT_REFERRALS failed: %ld
AzpADPersistOpenEx: AzpADSetDefaultLdapOptions failed on %ws: %ld
AzpADPersistOpenEx: AzpADSetLdapEncryptionOption failed on %ws: %ld
AzpADPersistOpenEx: AzpCheckDomainVersion failed on %ws: %ld
AzpADPersistOpenEx: AzpCheckVersions failed with error: %ld
AzpADPersistOpenEx: AzpLdapCrackUrl failed on %ws: %ld
AzpADPersistOpenEx: AzpReadADStore failed: %ld
AzpADPersistOpenEx: ldap_bind failed on %ws: %ld
AzpADPersistOpenEx: ldap_connect failed on %ws: %ld
AzpADPersistOpenEx: ldap_get_option failed : %ld
AzpADPersistOpenEx: ldap_get_option for LDAP_OPT_SSL failed
AzpADPersistOpenEx: ldap_init failed on %ws: %ld: %s
AzpADPersistRefresh: AzpADBuildDN failed: %ld
AzpADPersistRefresh: AzpReadADStoreObject failedfor %s: %ld
AzpADPersistRefresh: Search on object failed:%ld
AzpADPersistSubmit: AzpADBuildDN failed: %ld
AzpADPersistSubmit: AzpADBuildDN failed:%ld
AzpADPersistSubmit: AzpADBuildNameSearchFilter failed:%ld
AzpADPersistSubmit: AzpADStoreHasUpdate failed: %ld
AzpADPersistSubmit: Failed to delete object %ws: %ld
AzpADPersistSubmit: Update failed for object %ws: %ld
AzpADPersistUpdateChildrenCache: AzpADBuildDN failed: %ld
AzpADPersistUpdateChildrenCache: failed to init paged search handle: %ld
AzpADPersistUpdateChildrenCache: failed to read paged results: %ld
AzpADPersistWritable: %ws attribute isn't writable
AzpADPersistWritable: Error calling AzpADPersistChildCreate: %ld
AzpADReadAttributeAndSetProperty:AzpeAddPropertyItemGuid failed on: %ld
AzpADReadAzStoreChildren: AzpADReadPagedResult failed: %ld
AzpADReadAzStoreChildren: Failed to create paged result handle: %ld
AzpADReadAzStoreChildren: Failed to read Application Groups: %ld
AzpADReadHasChildrenObject: Reading of Child container objectfailed: %ld
AzpADReadNTSecurityDescriptor: AzpADBuildDN failed: %ld
AzpADReadNTSecurityDescriptor: Failed to perform search on %ws: %ld
AzpADReadPagedResult: Failed to read paged LDAP result: %ld
AzpADReadPagedResult: Reading of child objectfailed: %ld
AzpADReadPagedResult: Updating children failed: %ld
AzpADSetDefaultLdapOptions: ldap_set_option LDAP_OPT_AREC_EXCLUSIVE failed: %ld
AzpADSetDefaultLdapOptions: ldap_set_option LDAP_OPT_DNSDOMAIN_NAME failed: %ld
AzpADSetDefaultLdapOptions: ldap_set_option LDAP_OPT_REFERRALS failed: %ld
AzpADSetLdapEncryptionOption: ldap_set_option LDAP_OPT_ENCRYPT failed: %ld
AzpADSetObjectOptions failed: %ld
AzpADSetObjectOptions: AzpeSetObjectOptions failed: %ld
AzpADStampSD: Failed to update security descriptor on %ws: %ld ldap Error:%ld Extended Error: %ws
AzpADUpdateCommonAttrs: Failed to rename %ws: %ld
AzpADUpdateCommonAttrs: Get property failed : %ld
AzpADUpdateObjectAcls: AzpADReadNTSecurityDescriptor failed :%ld
AzpADUpdateObjectAcls: AzpADStampSD failed with SACL/DACL: %ld
AzpADUpdateObjectAcls: AzpApplyPolicyAcls failed with DACL: %ld
AzpADUpdateObjectAcls: AzpeGetSecurityDescriptorFromCache failed: %ld
AzpAllocateDc: AzpADSetDefaultLdapOptions failed on %ws: %ld
AzpAllocateDc: AzpADSetLdapEncryptionOption failed on %ws: %ld
AzpAllocateDc: ldap_bind failed on %ws: %ld: %s
AzpAllocateDc: ldap_connect failed on %ws: %ld
AzpAllocateDc: ldap_init failed on %ws: %ld: %s
AzpApplicationSetProperty: cannot convert CLSID %ws %ld
AzpApplicationSetProperty: invalid prop id %ld
AzpApplyPolicyAcls: AzpADReadNTSecurityDescriptor failed :%ld
AzpAuthzCheckSid: hAuthzHandle must not be NULL.
AzpAuthzCheckSid: pbIsGood must not be NULL.
AzpAuthzCheckSid: pSid must not be NULL.
AzpAzStoreGetProperty: invalid prop id %ld
AzpAzStoreManagerSetProperty: domain timeout too small %ld
AzpAzStoreManagerSetProperty: invalid prop id %ld
AzpAzStoreManagerSetProperty: max script engines too small %ld
AzpAzStoreManagerSetProperty: script engine timeout too small %ld
AzpCaptureBizRuleInterfaces: Array bounds don't match %ld %ld %ld %ld %ld %ld
AzpCaptureBizRuleInterfaces: Can't get interfaces lbound 0x%lx
AzpCaptureBizRuleInterfaces: Can't get interfaces ubound 0x%lx
AzpCaptureBizRuleInterfaces: Can't get name lbound 0x%lx
AzpCaptureBizRuleInterfaces: Can't get name ubound 0x%lx
AzpCaptureBizRuleInterfaces: Can't get value lbound 0x%lx
AzpCaptureBizRuleInterfaces: Can't get value ubound 0x%lx
AzpCaptureBizRuleInterfaces: Flags or Interfaces is NULL but Names isn't
AzpCaptureBizRuleInterfaces: Names is NULL but Flags or Interfaces isn't
AzpCaptureBizRuleInterfaces::AddInterfaces: Can't access Flags 0x%lx
AzpCaptureBizRuleInterfaces::AddInterfaces: Can't access Interfaces 0x%lx
AzpCaptureBizRuleInterfaces::AddInterfaces: Can't access ParameterNames 0x%lx
AzpCaptureString: NULL not ok
AzpCaptureString: SID not valid
AzpCaptureString: string too long %ld %ld %ws
AzpCaptureString: zero length not ok
AzpChangeSinglePrivilege failed to reset to original. Error code: %d
AzpCheckGroupMembershipLdap: %ws
AzpCheckGroupMembershipLdap: %ws: AzpGetUserNameEx failed %ld
AzpCheckGroupMembershipLdap: %ws: DsGetDcName failed %ld
AzpCheckGroupMembershipLdap: %ws: ldap_count_entries failed on %ws: %ld: %s
AzpCheckGroupMembershipLdap: %ws: ldap_search failed on %ws: %ld: %s
AzpCheckGroupMembershipLdap: %ws: ldap_search worked on %ws: Membership is %ld
AzpCheckGroupMembershipLdap: %ws: User is in NT 4 domain or local account: Membership is %ld
AzpCheckGroupMembershipLdap: ClientContext is missing LdapQueryDN.
AzpCheckGroupMembershipLdapForLdapUrl: %ws
AzpCheckGroupMembershipLdapForLdapUrl: AzpADSetDefaultLdapOptions failed on %ws: %ld
AzpCheckGroupMembershipLdapForLdapUrl: AzpADSetLdapEncryptionOption failed on %ws: %ld
AzpCheckGroupMembershipLdapForLdapUrl: ldap_bind failed on %ws: %ld: %s
AzpCheckGroupMembershipLdapForLdapUrl: ldap_connect failed on %ws: %ld
AzpCheckGroupMembershipLdapForLdapUrl: ldap_init failed on %ws: %ld: %s
AzpCheckGroupMembershipOne failed.
AzpCheckGroupMembershipOne: %ws
AzpCheckGroupMembershipOne: %ws: %ld: %ld: Answer computed
AzpCheckGroupMembershipOne: %ws: %ld: %ld: Answer found in cache
AzpCheckGroupMembershipOne: %ws: Avoid ldapquery group
AzpCheckGroupMembershipOne: %ws: Cannot AzpCheckGroupMembership (member) %ld
AzpCheckGroupMembershipOne: %ws: Cannot AzpCheckGroupMembership (member) extended status: %ld
AzpCheckGroupMembershipOne: %ws: Cannot AzpCheckGroupMembership (non member) %ld
AzpCheckGroupMembershipOne: %ws: Cannot AzpCheckGroupMembership (non member) extended status: %ld
AzpCheckGroupMembershipOne: %ws: Cannot AzptCheckObjecSidMembership (non member) %ld
AzpCheckGroupMembershipOne: %ws: Create cache entry
AzpCheckGroupMembershipOne: %ws: Is a basic group
AzpCheckGroupMembershipOne: %ws: Is an invalid group type
AzpCheckGroupMembershipOne: %ws: Is an ldapquery group
AzpCheckGroupMembershipOne: %ws: Is non member via app group
AzpCheckGroupMembershipOne: %ws: Is non member via NT Sid
AzpCheckGroupMembershipOne: ClientContext is missing LdapQueryDN
AzpCheckOperationCache: '%ws/%ws' found in operation cache
AzpCheckOperationCache: OpCacheSerialNumber changed from %ld to %ld
AzpCheckOperationCache: Operation cache avoided since interfaces passed in
AzpCheckOperationCache: Parameter changed from previous call
AzpCheckOperationCache: Parameter count changed from previous call %ld %ld
AzpCheckRolesMembersip: %ws: CheckGroupMembership extended status %ld
AzpCheckRolesMembersip: %ws: CheckGroupMembership failed %ld
AzpCheckRolesMembersip: %ws: CheckGroupMembership is %ld
AzpCheckRolesMembersip: %ws: CheckGroupMembership of role
AzpCheckRolesMembersip: %ws: CheckSidMembership failed %ld
AzpCheckRolesMembersip: %ws: CheckSidMembership is %ld
AzpCheckRolesMembersip: %ws: CheckSidMembership of role
AzpCheckRolesMembersip: %ws: Role finished being processed 
AzpClientContextFree:  AzpClientContextGenerateDeleteAudit failed with %ld
AzpClientContextGetProperty: Cannot get token statistics: %ld
AzpClientContextGetProperty: Cannot translate name: %ld
AzpClientContextGetProperty: invalid opcode %ld
AzpClientContextSetProperty: invalid prop id %ld
AzpComputeAccountDn: AuthzGetInformationFromContext failed %ld
AzpComputeAccountDn: AzpAllocateHeap failed %ld
AzpComputeAccountDn: SafeAllocaAllocate failed %ld
AzpCreateADObject: Failed to add object %ws: %ld %ld
AzpeAddPropertyItemGuid: invalid prop id %ld
AzpeAddPropertyItemSid: AzpAllocateHeap failed %ld
AzpeAddPropertyItemSid: called from submit: %ld %ld %ld
AzpeAddPropertyItemSid: duplicate SID
AzpeAddPropertyItemSid: invalid prop id %ld
AzpeAddPropertyItemSid: set::insert failed %ld
AzpeAddPropertyItemSid: set::insert failed.
AzpeAddPropertyItemSid: SID not valid
AzpeClearPropertyItemList failed: propID=%d, ObjectType=%d, ObjectName=%s.
AzpeClearPropertyItemList fails for property (id is %d).
AzpeCreateObject fails.
AzpeCreateObject: Cannot find Object Head: %ld: %ld
AzpeGetDeltaArray: invalid prop id %ld
AzpeGetObjectByGuid failed.
AzpeGetObjectByGuid fails.
AzpeGetObjectByGuid receives NULL parameter pFoundObjectHandle.
AzpeGetProperty failed.
AzpeGetProperty: Property ID for non-scalar: %ld
AzpeGetSecurityDescriptorFromCache failed.
AzPersistProviderInitialize
AzpeSetObjectOptions failed.
AzpeSetObjectOptions: bad options mask 0x%lx
AzpeSetProperty: Property ID for non-scalar: %ld
AzpeSetSecurityDescriptorIntoCache failed %d.
AzpGenerateContextCreateAudit: Cannot ObCommonCreateObject %ld
AzpGetChildGenericHead cannot find the child list head for type=%d.
AzpGetClientContextSids: failed.
AzpGetCNForDN: Failed to quote RDN for object %ws: %ld
AzpGetCurrentUserSid failed: Status = %x
AzpGetScriptEngine failed: 0x%lx, %ld
AzpGetSidsFromUserGroups: null pSidList or pdwListSize
AzpGetSidsFromUserGroups: out of memory.
AzpGetSpecificProperty: AzpADHandleSubmitLinkedAttribute failed for %s: %ld
AzpGetTokenUserGroupsFromAuthzContext: AuthzGetInformationFromContext failed %ld
AzpGetTokenUserGroupsFromAuthzContext: NULL ppTokenUser or NULL ppTokenGroups not allowed %ld
AzpGetTokenUserGroupsFromAuthzContext: SafeAllocaAllocate failed %ld
AzpGetUserNameEx: Cannot get token statistics: %ld
AzpGetUserNameEx: Cannot GetThreadToken %ld
AzpGetUserNameEx: Cannot GetUserNameExW %ld
AzpGetUserNameEx: Cannot SetThreadToken %ld
AzpGetUserNameEx: Cannot SetThreadToken (revert) %ld
AzpGetUserNameEx: no cached token handle
AzpGroupAddPropertyItem: invalid group type %ld
AzpGroupGetProperty: cannot set group type to basic if group has bizrule string.
AzpGroupGetProperty: cannot set group type to basic if group has ldap query string.
AzpGroupGetProperty: cannot set group type to bizrule if group has ldap query string.
AzpGroupGetProperty: cannot set group type to ldap query if group has membership.
AzpGroupGetProperty: invalid grouptype %ld
AzpGroupGetProperty: invalid opcode %ld
AzpGroupGetProperty: This version of the store doesn't support creating bizrule group.
AzpGroupInit: memory allocation failed %ld
AzpGroupSetProperty: can't set Bizrule before group type
AzpGroupSetProperty: can't set Bizrule Path before group type
AzpGroupSetProperty: can't set Bizrule type before group type
AzpGroupSetProperty: can't set ldap query before group type
AzpGroupSetProperty: GroupEvalSerialNumber set to %ld
AzpGroupSetProperty: invalid language %ws
AzpGroupSetProperty: invalid propid %ld
AzpGroupSetProperty: Must set language before bizrule
AzpHandleSubmitLinkedAttribute: AzpeGetDeltaArray failed for %ws: %ld
AzpHandleSubmitLinkedAttribute: ConvertSidToStringSid failed: %ld
AzpHandleSubmitLinkedAttribute: UuidToString failed: %ld
AzpIsSidInList: hObject is not Role or Group.
AzpIsSidInList: pbAnswer must not be NULL.
AzpIsSidInList: Role does not have non-member SID list.
AzpIsSidInList: sidListFlag can only be SID_MEMBER_LIST(1) or SID_NON_MEMBER_LIST(2) .
AzpIsUserAuthzMember: pbAnswer must not be NULL.
AzpOperationGetProperty: invalid prop id %ld
AzpOperationSetProperty: invalid prop id %ld
AzpOperationSetProperty: Operation ID %ld is already used.
AzpOperationSetProperty: Operation Id too small %ld
AzpParseLDAPUrl: Host name missing
AzpParseLDAPUrl: missing Attribute
AzpParseLDAPUrl: missing DN
AzpParseLDAPUrl: NULL Pointer
AzpParseLDAPUrl: url doesn't begin with ldap://
AzpParseLDAPUrl: URL is %ws
AzpPersistDetermineProvider: Cannot load libary '%ws' %ld
AzpPersistDetermineProvider: Cannot open Provider reg key at 'HKLM\%ws' %ld
AzpPersistDetermineProvider: Cannot open Provider reg value at 'HKLM\%ws\%ws' %ld
AzpPersistDetermineProvider: libary '%ws' does not export '%s': %ld
AzpPersistDetermineProvider: Open Provider reg key at 'HKLM\%ws'
AzpPersistReconcile: Cannot reconcile object: %ws %ld
AzpPersistReconcile: Cannot reconcile object: %ws %ld %ld
AzpPersistReconcile: Cannot refresh object: %ws %ld
AzpPersistReconcileOne (by guid): 
AzpPersistReconcileOne: %ws %ld 0x%lx 0x%lx
AzpPersistReconcileOne: ObAddPropertyItem failed %ld
AzpQueryUserDN: ClientContext (AZP_CONTEXT_CREATED_FROM_SID) is missing LdapQueryDN.
AzpQueryUserDN: ClientContext is missing LdapQueryDN from a standalone machine.
AzpReadADObjectContainer: Reading of child objectfailed: %ld
AzpReadADStore: AzpADReadAzStoreChildren failed: %ld
AzpReadADStoreForCommonData: AzpADCreateGuidCN failed for %ws: %ld
AzpReadADStoreForCommonData: AzpeCreateObject failed: %ld
AzpReadADStoreForCommonData: AzpInitializeObjectName failed: %ld
AzpReadADStoreForCommonData: Read description failed: %ld
AzpReadADStoreObject failed: %ld
AzpReadADStoreObject: AzpADPersistWritable failed: %ld
AzpReadADStoreObject: Failed to apply policy ACLs: %ld
AzpReadADStoreObject: Object creation and common data read failed: %ld
AzpReadAttributeAndSetProperty failed: %ld
AzpReadAttributeAndSetProperty: AzpeAddPropertyItem failed: %ld
AzpReadAttributeAndSetProperty:AzpADReadLinkedAttribute failed for attribute %ws of %ws: %ld
AzpReadLinkedAttribute:AzpADParseLinkedAttributeValue failed for %ws: %ld
AzPrincipalLocator ClassWW
AzpRoleGetProperty: invalid prop id %ld
AzpRoleInit: memory allocation failed %ld
AzpSafeArrayPointerFromVariant: Array %lx isn't single dimension array
AzpSafeArrayPointerFromVariant: Array isn't array of VARIANT 0x%lx %lx
AzpSafeArrayPointerFromVariant: parameter is not an array 0x%lx.
AzpSidsImplyObjectMembership: both pbAnswer and pbIsNonMember must not be NULL.
AzpTaskSetProperty: invalid language %ws
AzpTaskSetProperty: invalid prop id %ld
AzpTaskSetProperty: Must set language before bizrule
AzpUnEscapeString: First call to UrlUnescape failed with %x
AzpUnEscapeString: InternetCanonicalizeUrl NULL Param
AzpUnEscapeString: Out of memory
AzpUnEscapeString: UrlUnescape failed with %x
AzpUpdateADCommonAttrs: AzpeGetProperty failed for object name: %ld
AzpUpdateADObject: AzpADUpdateObjectAcls failed for %ws: %ld
AzpUpdateADObject: AzpGetADCommonAttrs failed: %ld
AzpUpdateADObject: AzpGetAttrsForCreateObject failed for %ws: %ld
AzpUpdateADObject: AzpSetGuidAndOptions failed  for %s: %ld
AzpUpdateADObject: Failed to add/modify %ws : %ld %ld
AzpUpdateADObject: Failed to search object %s: %ld
AzpUpdateADObject: Get property failed  for %s: %ld
AzpUpdateADObject: Read writable failed: %ld
AzpUpdateADObject: UuidCreate failed  for %s: %ld
AzpUpdateObjectGuid: Failed to allocate memory
AzpUpdateOperationCache: Added '%ws/%ws' %ld to operation cache
AzpUpdateOperationCache: No operations to cache
AzpWalkOpsAndTasks: %ws: %ws: %ws: Operation extended failure %ld
AzpWalkOpsAndTasks: %ws: %ws: %ws: Operation granted
AzpWalkOpsAndTasks: %ws: %ws: All operations have been processed %ld.
AzRemovePropertyItem
AzRemovePropertyItem: invalid prop id %ld
AzRemovePropertyItem: Reserved != 0 && Reserved != 1
AzRole
AzRoleCreate
AzRoleDelete
AzRoleEnum
AzRoleObjectContainer-
AzRoleOpen
azroles
azroles 1.0 Type LibraryWW
AzRoles H
azroles Module
AzRoles.AzAuthorizationStore = s 'AzAuthorizationStore Class'
AzRoles.AzAuthorizationStore.1 = s 'AzAuthorizationStore Class'
AzRoles.AzBizRuleContext = s 'AzBizRuleContext Class'
AzRoles.AzBizRuleContext.1 = s 'AzBizRuleContext Class'
AzRoles.AzPrincipalLocator = s 'AzPrincipalLocator Class'
AzRoles.AzPrincipalLocator.1 = s 'AzPrincipalLocator Class'
azroles.DLL
azroles.pdb
AZROLESLibWW
AzScope
AzScopeCreate
AzScopeDelete
AzScopeEnum
AzScopeGetProperty: invalid prop id %ld
AzScopeOpen
AzSetProperty
AzSubmit
AzTask
AzTaskCreate
AzTaskDelete
AzTaskEnum
AzTaskGetProperty: invalid prop id %ld
AzTaskGetProperty: scope is delegated - bizrule not allowed %ld
AzTaskObjectContainer-
AzTaskOpen
AzUpdateCache
bad allocation
Bad Param: %d , %d
Basic
BAZ_CLIENT_CONTEXT_GET_GROUPS_STORE_LEVEL_ONLYWWW
BDeleteTaskWW 
Begin
Begin 
BeginTransaction returns: %d.
BizRule
Bizrule
BizRule group not supported, please update the schema
BizruleGroupSupportedWWW
BizRuleImportedPath
BizRuleImportedPathW
BizRuleLanguage
BizRuleLanguageW
BizRuleParametersWWW
BizRulesEnabledW
Both OldSqlContext and sqlUrl being NULL is invalid.
BppOperationCollectionWWW
BpvarCursorWW
bRecursiveWW
bsearch
bstrAdminWWW
bstrApplicationNameW
bstrDelegatedPolicyUserW
bstrGroupNameWWW
bstrObjectNameWW
bstrOpWW
bstrParameterNameWWW
bstrPolicyURLWWW
bstrReaderWW
bstrRoleAssignmentNameWW
bstrRoleName
bstrScopeNameWWW
bstrSidW
bstrTask
bstrTaskName
BusinessRuleResultWW
C 9CDu
c AVH
c"DeleteNonMemberWX
C9\$8u=L
CanBeDelegatedWW
Cannot CloseEngine: 0x%lx
Cannot DeleteTimerQueurTimer: %ld
Can't DS bind. Will just return non-UPN names
CAzApplication constructor called
CAzApplication destructor called
CAzApplication::AddDelegatedPolicyUser
CAzApplication::AddDelegatedPolicyUserName
CAzApplication::AddPolicyAdministrator
CAzApplication::AddPolicyAdministratorName
CAzApplication::AddPolicyReader
CAzApplication::AddPolicyReaderName
CAzApplication::AddPropertyItem
CAzApplication::CreateApplicationGroup
CAzApplication::CreateOperation
CAzApplication::CreateRole
CAzApplication::CreateScope
CAzApplication::CreateTask
CAzApplication::DeleteApplicationGroup
CAzApplication::DeleteDelegatedPolicyUser
CAzApplication::DeleteDelegatedPolicyUserName
CAzApplication::DeleteOperation
CAzApplication::DeletePolicyAdministrator
CAzApplication::DeletePolicyAdministratorName
CAzApplication::DeletePolicyReader
CAzApplication::DeletePolicyReaderName
CAzApplication::DeletePropertyItem
CAzApplication::DeleteRole
CAzApplication::DeleteScope
CAzApplication::DeleteTask
CAzApplication::get_ApplicationData
CAzApplication::get_ApplicationGroups
CAzApplication::get_ApplyStoreSacl
CAzApplication::get_AuthzInterfaceClsid
CAzApplication::get_BizruleEnabled
CAzApplication::get_Description
CAzApplication::get_GenerateAudits
CAzApplication::get_Name
CAzApplication::get_Operations
CAzApplication::get_PolicyAdministrators
CAzApplication::get_PolicyAdministratorsName
CAzApplication::get_PolicyReaders
CAzApplication::get_PolicyReadersName
CAzApplication::get_RoleAssignments
CAzApplication::get_RoleDefinitions
CAzApplication::get_Roles
CAzApplication::get_Scopes
CAzApplication::get_Tasks
CAzApplication::get_Version
CAzApplication::get_Writable
CAzApplication::GetProperty
CAzApplication::InitializeClientContext2
CAzApplication::InitializeClientContextFromName
CAzApplication::InitializeClientContextFromStringSid
CAzApplication::InitializeClientContextFromToken
CAzApplication::OpenApplicationGroup
CAzApplication::OpenOperation
CAzApplication::OpenRole
CAzApplication::OpenScope
CAzApplication::OpenTask
CAzApplication::put_ApplicationData
CAzApplication::put_ApplyStoreSacl
CAzApplication::put_AuthzInterfaceClsid
CAzApplication::put_Description
CAzApplication::put_GenerateAudits
CAzApplication::put_Name
CAzApplication::put_Version
CAzApplication::SetProperty
CAzApplicationGroup constructor called.
CAzApplicationGroup destructor called.
CAzApplicationGroup::AddAppMember
CAzApplicationGroup::AddAppNonMember
CAzApplicationGroup::AddMember
CAzApplicationGroup::AddMemberName
CAzApplicationGroup::AddNonMember
CAzApplicationGroup::AddNonMemberName
CAzApplicationGroup::AddPropertyItem
CAzApplicationGroup::DeleteAppMember
CAzApplicationGroup::DeleteAppNonMember
CAzApplicationGroup::DeleteMember
CAzApplicationGroup::DeleteMemberName
CAzApplicationGroup::DeleteNonMember
CAzApplicationGroup::DeleteNonMemberName
CAzApplicationGroup::DeletePropertyItem
CAzApplicationGroup::get_AppMembers
CAzApplicationGroup::get_AppNonMembers
CAzApplicationGroup::get_BizRule
CAzApplicationGroup::get_BizRuleImportedPath
CAzApplicationGroup::get_BizRuleLanguage
CAzApplicationGroup::get_Description
CAzApplicationGroup::get_LdapQuery
CAzApplicationGroup::get_Members
CAzApplicationGroup::get_MembersName
CAzApplicationGroup::get_Name
CAzApplicationGroup::get_NonMembers
CAzApplicationGroup::get_NonMembersName
CAzApplicationGroup::get_Type
CAzApplicationGroup::get_Writable
CAzApplicationGroup::GetProperty
CAzApplicationGroup::put_BizRule
CAzApplicationGroup::put_BizRuleImportedPath
CAzApplicationGroup::put_BizRuleLanguage
CAzApplicationGroup::put_Description
CAzApplicationGroup::put_LdapQuery
CAzApplicationGroup::put_Name
CAzApplicationGroup::put_Type
CAzApplicationGroup::SetProperty
CAzApplicationGroups::_Init
CAzApplications::_Init
CAzAuthorizationStore constructor called.
CAzAuthorizationStore destructor called.
CAzAuthorizationStore::AddDelegatedPolicyUser
CAzAuthorizationStore::AddDelegatedPolicyUserName
CAzAuthorizationStore::AddPolicyAdministrator
CAzAuthorizationStore::AddPolicyAdministratorName
CAzAuthorizationStore::AddPolicyReader
CAzAuthorizationStore::AddPolicyReaderName
CAzAuthorizationStore::AddPropertyItem
CAzAuthorizationStore::CloseApplication
CAzAuthorizationStore::CreateApplication
CAzAuthorizationStore::CreateApplication2
CAzAuthorizationStore::CreateApplicationGroup
CAzAuthorizationStore::DeleteApplication
CAzAuthorizationStore::DeleteApplicationGroup
CAzAuthorizationStore::DeleteDelegatedPolicyUser
CAzAuthorizationStore::DeleteDelegatedPolicyUserName
CAzAuthorizationStore::DeletePolicyAdministrator
CAzAuthorizationStore::DeletePolicyAdministratorName
CAzAuthorizationStore::DeletePolicyReader
CAzAuthorizationStore::DeletePolicyReaderName
CAzAuthorizationStore::DeletePropertyItem
CAzAuthorizationStore::get_ApplicationData
CAzAuthorizationStore::get_ApplicationGroups
CAzAuthorizationStore::get_Applications
CAzAuthorizationStore::get_ApplyStoreSacl
CAzAuthorizationStore::get_DelegatedPolicyUsers
CAzAuthorizationStore::get_DelegatedPolicyUsersName
CAzAuthorizationStore::get_Description
CAzAuthorizationStore::get_DomainTimeout
CAzAuthorizationStore::get_GenerateAudits
CAzAuthorizationStore::get_MaxScriptEngines
CAzAuthorizationStore::get_PolicyAdministrators
CAzAuthorizationStore::get_PolicyAdministratorsName
CAzAuthorizationStore::get_PolicyReaders
CAzAuthorizationStore::get_PolicyReadersName
CAzAuthorizationStore::get_ScriptEngineTimeout
CAzAuthorizationStore::get_TargetMachine
CAzAuthorizationStore::get_Writable
CAzAuthorizationStore::GetProperty
CAzAuthorizationStore::OpenApplication
CAzAuthorizationStore::OpenApplication2
CAzAuthorizationStore::OpenApplicationGroup
CAzAuthorizationStore::put_ApplicationData
CAzAuthorizationStore::put_ApplyStoreSacl
CAzAuthorizationStore::put_Description
CAzAuthorizationStore::put_DomainTimeout
CAzAuthorizationStore::put_GenerateAudits
CAzAuthorizationStore::put_MaxScriptEngines
CAzAuthorizationStore::put_ScriptEngineTimeout
CAzAuthorizationStore::SetProperty
CAzBizRuleContext
CAzBizRuleContext::get_BusinessRuleString: %ws
CAzBizRuleContext::GetParameter: %ls
CAzBizRuleContext::GetParameter: %ls: Parameter not passed in.
CAzBizRuleContext::put_BusinessRuleResult: %ld
CAzBizRuleContext::put_BusinessRuleString: %ws
CAzBizRuleContext::SetAccessCheckContext
CAzBizRuleParameters::AddParameters: Parameter %ld isn't a VT_BSTR
CAzBizRuleParameters::AddParameters: Parameter %ws should have an interface value
CAzBizRuleParamInternal::AddParameters: Array bounds don't match %ld %ld %ld %ld
CAzBizRuleParamInternal::AddParameters: Can't access ParameterNames 0x%lx
CAzBizRuleParamInternal::AddParameters: Can't access ParameterValues 0x%lx
CAzBizRuleParamInternal::AddParameters: Can't get name lbound 0x%lx
CAzBizRuleParamInternal::AddParameters: Can't get name ubound 0x%lx
CAzBizRuleParamInternal::AddParameters: Can't get value lbound 0x%lx
CAzBizRuleParamInternal::AddParameters: Can't get value ubound 0x%lx
CAzClientContext constructor called.
CAzClientContext destructor called.
CAzClientContext::AccessCheck2 receives NULL plResult parameter.
CAzClientContext::get_LDAPQueryDN
CAzClientContext::get_RoleForAccessCheck
CAzClientContext::get_UserCanonical
CAzClientContext::get_UserDisplay
CAzClientContext::get_UserDn
CAzClientContext::get_UserDnsSamCompat
CAzClientContext::get_UserGuid
CAzClientContext::get_UserSamCompat
CAzClientContext::get_UserUpn
CAzClientContext::GetProperty
CAzClientContext::put_LDAPQueryDN
CAzClientContext::put_RoleForAccessCheck
CAzOperation constructor called.
CAzOperation destructor called.
CAzOperation::get_ApplicationData
CAzOperation::get_Description
CAzOperation::get_Name
CAzOperation::get_OperationID
CAzOperation::get_Writable
CAzOperation::GetProperty
CAzOperation::put_ApplicationData
CAzOperation::put_Description
CAzOperation::put_Name
CAzOperation::put_OperationID
CAzOperation::SetProperty
CAzOperations::_AddOperation
CAzOperations::_Init
CAzPrincipalLocator constructor called.
CAzPrincipalLocator destructor called.
CAzPrincipalLocator::CAzPrincipalLocator RegOpenKeyEx failed.
CAzPrincipalLocator::CAzPrincipalLocator, failed to query value for ObjectPicker CLSID
CAzPrincipalLocator::CAzPrincipalLocator, registered object picker doesn't implement IAzNameResolver
CAzPrincipalLocator::CAzPrincipalLocator, registered object picker doesn't implement IAzObjectPicker
CAzRole constructor called
CAzRole destructor called
CAzRole::AddAppMember
CAzRole::AddMember
CAzRole::AddMemberName
CAzRole::AddOperation
CAzRole::AddPropertyItem
CAzRole::AddRoleDefinition
CAzRole::AddTask
CAzRole::DeleteAppMember
CAzRole::DeleteMember
CAzRole::DeleteMemberName
CAzRole::DeleteOperation
CAzRole::DeletePropertyItem
CAzRole::DeleteRoleDefinition
CAzRole::DeleteTask
CAzRole::get_ApplicationData
CAzRole::get_AppMembers
CAzRole::get_Description
CAzRole::get_Members
CAzRole::get_MembersName
CAzRole::get_Name
CAzRole::get_Operations
CAzRole::get_RoleDefinitions
CAzRole::get_Tasks
CAzRole::get_Writable
CAzRole::GetProperty
CAzRole::put_ApplicationData
CAzRole::put_Description
CAzRole::put_Name
CAzRole::SetProperty
CAzRoleAssignments constructor called.
CAzRoleAssignments::_Init
CAzRoleAssignments::GetRoleAssigmentObj
CAzRoleDefinitions::_Init
CAzRoleDefinitions::CollectTaskAsRoleDefinition
CAzRoles::_Init
CAzScope::AddPolicyAdministrator
CAzScope::AddPolicyAdministratorName
CAzScope::AddPolicyReader
CAzScope::AddPolicyReaderName
CAzScope::AddPropertyItem
CAzScope::CreateApplicationGroup
CAzScope::CreateRole
CAzScope::CreateRoleDefinition: NULL IAzRoleDefinition parameter.
CAzScope::CreateTask
CAzScope::DeleteApplicationGroup
CAzScope::DeletePolicyAdministrator
CAzScope::DeletePolicyAdministratorName
CAzScope::DeletePolicyReader
CAzScope::DeletePolicyReaderName
CAzScope::DeletePropertyItem
CAzScope::DeleteRole
CAzScope::DeleteTask
CAzScope::get_ApplicationData
CAzScope::get_ApplicationGroups
CAzScope::get_BizrulesWritable
CAzScope::get_CanBeDelegated
CAzScope::get_Description
CAzScope::get_Name
CAzScope::get_PolicyAdministrators
CAzScope::get_PolicyAdministratorsName
CAzScope::get_PolicyReaders
CAzScope::get_PolicyReadersName
CAzScope::get_RoleAssignments
CAzScope::get_RoleDefinitions
CAzScope::get_Roles
CAzScope::get_Tasks
CAzScope::get_Writable
CAzScope::GetProperty
CAzScope::OpenApplicationGroup
CAzScope::OpenRole
CAzScope::OpenRoleDefinition: NULL IAzRoleDefinition parameter.
CAzScope::OpenTask
CAzScope::put_ApplicationData
CAzScope::put_Description
CAzScope::put_Name
CAzScope::SetProperty
CAzScopes::_Init
CAzTask constructor called.
CAzTask destructor called.
CAzTask::AddOperation
CAzTask::AddPropertyItem
CAzTask::AddRoleDefinition
CAzTask::AddTask
CAzTask::DeleteOperation
CAzTask::DeletePropertyItem
CAzTask::DeleteRoleDefinition
CAzTask::DeleteTask
CAzTask::get_ApplicationData
CAzTask::get_BizRule
CAzTask::get_BizRuleImportedPath
CAzTask::get_BizRuleLanguage
CAzTask::get_Description
CAzTask::get_IsRoleDefinition
CAzTask::get_Name
CAzTask::get_Operations
CAzTask::get_RoleDefinitions
CAzTask::get_Tasks
CAzTask::GetProperty
CAzTask::put_ApplicationData
CAzTask::put_BizRule
CAzTask::put_BizRuleImportedPath
CAzTask::put_BizRuleLanguage
CAzTask::put_Description
CAzTask::put_IsRoleDefinition
CAzTask::put_Name
CAzTask::SetProperty
CAzTasks::_AddTask
CAzTasks::_Init
CD9C t
cfContext
Changed ThreadId to: 0x%lx 0x%lx
CharNextW
CharUpperW
Child handle deref
Child handle ref
Child object of type %d starts recursive loading.
ClientNameWW
CloseHandle
CLSID
CLSID = s '{483afb5d-70df-4e16-abdc-a1de4d015a3e}'
CLSID = s '{5c2dc96f-8d51-434b-b33c-379bccae77c3}'
CLSID = s '{b2bcff59-a757-4b0b-a1bc-ea69981da69e}'
CLSID\
CLSIDFromProgID
CLSIDFromString
CN=AZGROUPOBJECTCONTAINER-
CN=FOREIGNSECURITYPRINCIPALS,
CoCreateInstance
CoCreating IXMLDOMDocument2 failed. HRESULT = %d
CoInitializeEx
CoInitializeEx failed: 0x%lx, %ld
CollectSids: duplicate SID.
CollectSids: set::insert failed.
CommitTransaction returns: %d.
CompanyName
CompareFileTime
CompareStringW
Component Categories
container
ContainerRecord::Initialize failed.
ConvertSidToStringSidW
ConvertStringSidToSidW
CopySid
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CoUninitialize
Count=%d 
CREATE  INDEX [IX_AzMan_AzApplication_StoreID] ON [dbo].[AzMan_AzApplication]([StoreID]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzApplicationGroup_AppID] ON [dbo].[AzMan_AzApplicationGroup]([AppID]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzApplicationGroup_Name] ON [dbo].[AzMan_AzApplicationGroup]([Name]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzApplicationGroup_ScopeID] ON [dbo].[AzMan_AzApplicationGroup]([ScopeID]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzRoleAssignment_AppID] ON [dbo].[AzMan_AzRoleAssignment]([AppID]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzRoleAssignment_ScopeID] ON [dbo].[AzMan_AzRoleAssignment]([ScopeID]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzTask_AppID] ON [dbo].[AzMan_AzTask]([AppID]) ON [PRIMARY]
CREATE  INDEX [IX_AzMan_AzTask_ScopeID] ON [dbo].[AzMan_AzTask]([ScopeID]) ON [PRIMARY]
CREATE  INDEX [IX_Azman_Scope_Name] ON [dbo].[AzMan_AzScope] ([AppID], [NameHash]) ON [PRIMARY]  
create database [%s]
Create Procedure [AzMan_SP_AccessCheck]
Create Procedure [AzMan_SP_AccessCheck_For_Container]
Create Procedure [AzMan_SP_Check_Dup_Application]
Create Procedure [AzMan_SP_Check_Dup_Group]
Create Procedure [AzMan_SP_Check_Dup_Group_For_Given_Parent]
Create Procedure [AzMan_SP_Check_Dup_Operation]
Create Procedure [AzMan_SP_Check_Dup_RoleAssignment]
Create Procedure [AzMan_SP_Check_Dup_Scope]
Create Procedure [AzMan_SP_Check_Dup_Task]
Create Procedure [AzMan_SP_Check_Dup_Task_For_Given_Parent]
Create Procedure [AzMan_SP_GenerateGenericAudit]  
Create Procedure [AzMan_SP_GenerateMemberAudit]  
Create Procedure [AzMan_SP_GenerateObjectAudit]  
Create Procedure [AzMan_SP_Get_Object_Path]
Create Procedure [AzMan_SP_Get_Object_Path_For_Container]
Create Procedure [AzMan_SP_GetSQLRole]
Create Procedure [AzMan_SPD_AzApplication]
Create Procedure [AzMan_SPD_AzApplicationGroup]
Create Procedure [AzMan_SPD_AzApplicationGroup_Single_AppMember]
Create Procedure [AzMan_SPD_AzApplicationGroup_Single_SidMember]
Create Procedure [AzMan_SPD_AzAuthorizationStore]
Create Procedure [AzMan_SPD_AzOperation]
Create Procedure [AzMan_SPD_AzRoleAssignment]
Create Procedure [AzMan_SPD_AzRoleAssignment_Single_AppMember]
Create Procedure [AzMan_SPD_AzRoleAssignment_Single_Operation]
Create Procedure [AzMan_SPD_AzRoleAssignment_Single_SidMember]
Create Procedure [AzMan_SPD_AzScope]
Create Procedure [AzMan_SPD_AzTask]
Create Procedure [AzMan_SPD_AzTask_Single_Operation]
Create Procedure [AzMan_SPD_AzTask_Single_Task]
Create Procedure [AzMan_SPI_AzApplication]
Create Procedure [AzMan_SPI_AzApplicationGroup]
Create Procedure [AzMan_SPI_AzApplicationGroup_Multi_AppMembers]
Create Procedure [AzMan_SPI_AzApplicationGroup_Multi_AppMembers_Internal]
Create Procedure [AzMan_SPI_AzApplicationGroup_Multi_AppNonMembers]
Create Procedure [AzMan_SPI_AzApplicationGroup_Multi_SidMembers]
Create Procedure [AzMan_SPI_AzApplicationGroup_Multi_SidMembers_Internal]
Create Procedure [AzMan_SPI_AzApplicationGroup_Single_AppMember]
Create Procedure [AzMan_SPI_AzApplicationGroup_Single_SidMember]
Create Procedure [AzMan_SPI_AzAuthorizationStore]
Create Procedure [AzMan_SPI_AzOperation]
Create Procedure [AzMan_SPI_AzRoleAssignment]
Create Procedure [AzMan_SPI_AzRoleAssignment_Multi_AppMembers]
Create Procedure [AzMan_SPI_AzRoleAssignment_Multi_Operations]
Create Procedure [AzMan_SPI_AzRoleAssignment_Multi_SidMembers]
Create Procedure [AzMan_SPI_AzRoleAssignment_Multi_Tasks]
Create Procedure [AzMan_SPI_AzRoleAssignment_Single_AppMember]
Create Procedure [AzMan_SPI_AzRoleAssignment_Single_Operation]
Create Procedure [AzMan_SPI_AzRoleAssignment_Single_SidMember]
Create Procedure [AzMan_SPI_AzRoleAssignment_Single_Task]
Create Procedure [AzMan_SPI_AzScope]
Create Procedure [AzMan_SPI_AzTask]
Create Procedure [AzMan_SPI_AzTask_Multi_Operations]
Create Procedure [AzMan_SPI_AzTask_Multi_Tasks]
Create Procedure [AzMan_SPI_AzTask_Single_Operation]
Create Procedure [AzMan_SPI_AzTask_Single_Task]
Create Procedure [AzMan_SPIU_AzApplicationGroup_LDAPQuery]
Create Procedure [AzMan_SPIU_Bizrule]
Create Procedure [AzMan_SPS_Enum_AzApplicationGroup]
Create Procedure [AzMan_SPS_Enum_AzApplicationGroup_AppMembers]
Create Procedure [AzMan_SPS_Enum_AzApplicationGroup_AppNonMembers]
Create Procedure [AzMan_SPS_Enum_AzApplicationGroup_SIDMembers]
Create Procedure [AzMan_SPS_Enum_AzApplicationGroup_SIDNonMembers]
Create Procedure [AzMan_SPS_Enum_AzApplications]
Create Procedure [AzMan_SPS_Enum_AzOperation]
Create Procedure [AzMan_SPS_Enum_AzRoleAssignment]
Create Procedure [AzMan_SPS_Enum_AzRoleAssignment_AppMembers]
Create Procedure [AzMan_SPS_Enum_AzRoleAssignment_Operations]
Create Procedure [AzMan_SPS_Enum_AzRoleAssignment_SIDMembers]
Create Procedure [AzMan_SPS_Enum_AzRoleAssignment_Tasks]
Create Procedure [AzMan_SPS_Enum_AzScope]
Create Procedure [AzMan_SPS_Enum_AzTask]
Create Procedure [AzMan_SPS_Enum_AzTask_Operations]
Create Procedure [AzMan_SPS_Enum_AzTask_Tasks]
Create Procedure [AzMan_SPS_Get_AzApplication]
Create Procedure [AzMan_SPS_Get_AzApplicationGroup_BizruleInfo]
Create Procedure [AzMan_SPS_Get_AzApplicationGroup_LDAPQuery]
Create Procedure [AzMan_SPS_Get_AzAuthorizationStoreByName]
Create Procedure [AzMan_SPS_Get_AzOperation]
Create Procedure [AzMan_SPS_Get_AzRoleAssignment]
Create Procedure [AzMan_SPS_Get_AzScope]
Create Procedure [AzMan_SPS_Get_AzTask]
Create Procedure [AzMan_SPS_Get_AzTask_BizruleInfo]
Create Procedure [AzMan_SPU_AzApplication]
Create Procedure [AzMan_SPU_AzApplicationGroup]
Create Procedure [AzMan_SPU_AzAuthorizationStore]
Create Procedure [AzMan_SPU_AzOperation]
Create Procedure [AzMan_SPU_AzRoleAssignment]
Create Procedure [AzMan_SPU_AzScope]
Create Procedure [AzMan_SPU_AzTask]
Create Procedure [spDrop_AzMan_Table]
CREATE PROCEDURE AzMan_SP_Grant_Permission
CREATE PROCEDURE AzMan_SPD_All_SQLRole_ForObject
Create Procedure AzMan_SPD_AzRoleAssignment_Single_Task
CREATE PROCEDURE AzMan_SPD_SQLRole
CREATE PROCEDURE AzMan_SPD_SQLRole_ForObject
CREATE PROCEDURE AzMan_SPD_User_From_Role
CREATE PROCEDURE AzMan_SPD_User_From_SQLRole
CREATE PROCEDURE AzMan_SPD_User_From_SQLRole_From_XP
CREATE PROCEDURE AzMan_SPI_Add_User_To_Role
CREATE PROCEDURE AzMan_SPI_Add_User_To_SQLRole
CREATE PROCEDURE AzMan_SPI_Add_User_To_SQLRole_From_XP
Create Procedure AzMan_SPI_AzApplicationGroup_Multi_SidNonMembers
CREATE PROCEDURE AzMan_SPI_Create_SqlRole_For_Object
CREATE PROCEDURE AzMan_SPS_Enum_AzApplicationGroupUpdateTimeStamp
CREATE PROCEDURE AzMan_SPS_Enum_AzApplicationUpdateTimeStamp
CREATE PROCEDURE AzMan_SPS_Enum_AzAuthorizationStoreUpdateTimeStamp
CREATE PROCEDURE AzMan_SPS_Enum_AzOperationUpdateTimeStamp
CREATE PROCEDURE AzMan_SPS_Enum_AzRoleAssignmentUpdateTimeStamp
CREATE PROCEDURE AzMan_SPS_Enum_AzScopeUpdateTimeStamp
CREATE PROCEDURE AzMan_SPS_Enum_AzTaskUpdateTimeStamp
Create Procedure AzMan_SPS_Get_AzApplicationGroup
CREATE PROCEDURE AzMan_SPS_Get_DBOwners
CREATE PROCEDURE AzMan_SPS_Get_ObjectSecurityOption
CREATE PROCEDURE AzMan_SPS_Get_Role_For_Object
Create Procedure dbo.[AzMan_SPIU_AzApplicationGroup_Bizrule]
Create Procedure dbo.[AzMan_SPIU_AzTask_Bizrule]
CREATE PROCEDURE dbo.AzMan_SP_GetRoleMemberCount 
Create PROCEDURE dbo.AzMan_SPI_SQLRole
Create PROCEDURE dbo.AzMan_SPI_SQLRole_From_XP
Create PROCEDURE dbo.AzMan_SPS_Get_StoreIDByName
CREATE PROCEDURE dbo.AzMan_SPU_SqlRoleUpdated 
Create Procedure UpdateGroupsParentTimeStamp
Create Procedure UpdateRolesParentTimeStamp
Create Procedure UpdateTasksParentTimeStamp
CREATE TABLE [dbo].[AzMan_AzApplication] (
CREATE TABLE [dbo].[AzMan_AzApplicationGroup] (
CREATE TABLE [dbo].[AzMan_AzAuthorizationStore] (
CREATE TABLE [dbo].[AzMan_AzOperation] (
CREATE TABLE [dbo].[AzMan_AzRoleAssignment] (
CREATE TABLE [dbo].[AzMan_AzScope] (
CREATE TABLE [dbo].[AzMan_AzTask] (
CREATE TABLE [dbo].[AzMan_BizRule] (
CREATE TABLE [dbo].[AzMan_BizRule_To_Group] (
CREATE TABLE [dbo].[AzMan_BizRule_To_Task] (
CREATE TABLE [dbo].[AzMan_Group_AppMember] (
CREATE TABLE [dbo].[AzMan_Group_SIDMember] (
CREATE TABLE [dbo].[AzMan_LDAPQuery] (
CREATE TABLE [dbo].[AzMan_Role_AppMember] (
CREATE TABLE [dbo].[AzMan_Role_SIDMember] (
CREATE TABLE [dbo].[AzMan_Role_To_Operation_Link] (
CREATE TABLE [dbo].[AzMan_Role_To_Task_Link] (
CREATE TABLE [dbo].[Azman_SQLRole] (
CREATE TABLE [dbo].[AzMan_Task_To_Operation_Link] (
CREATE TABLE [dbo].[AzMan_Task_To_Task_Link] (
CREATE TRIGGER TR_DeleteBizRuleForGroup ON dbo.[AzMan_BizRule_To_Group]
CREATE TRIGGER TR_DeleteBizRuleForTask ON dbo.[AzMan_BizRule_To_Task]
CREATE TRIGGER TR_DeleteGroupForApp ON dbo.[AzMan_AzApplication]
CREATE TRIGGER TR_DeleteGroupForScope ON dbo.[AzMan_AzScope]
CREATE TRIGGER TR_DeleteGroupForStore ON dbo.[AzMan_AzAuthorizationStore]
CREATE TRIGGER TR_DeleteRoleForApp ON dbo.[AzMan_AzApplication]
CREATE TRIGGER TR_DeleteRoleForScope ON dbo.[AzMan_AzScope]
CREATE TRIGGER TR_DeleteTaskForApp ON dbo.[AzMan_AzApplication]
CREATE TRIGGER TR_DeleteTaskForScope ON dbo.[AzMan_AzScope]
CREATE TRIGGER TR_UpdateAppTimeStampOnOpChange ON dbo.[AzMan_AzOperation] 
CREATE TRIGGER TR_UpdateAppTimeStampOnOpDelete ON dbo.[AzMan_AzOperation] 
CREATE TRIGGER TR_updateAppTimeStampOnScopeDelete ON dbo.[AzMan_AzScope] 
CREATE TRIGGER TR_updateAppTimeStampOnScoprModified ON dbo.[AzMan_AzScope] 
CREATE TRIGGER TR_UpdateGroupsTimeStampOnAppdMemberDel ON dbo.[AzMan_Group_AppMember] 
CREATE TRIGGER TR_UpdateGroupsTimeStampOnAppMemberInsOrUpd ON dbo.[AzMan_Group_AppMember] 
CREATE TRIGGER TR_UpdateGroupsTimeStampOnSidMemberDel ON dbo.[AzMan_Group_SIDMember] 
CREATE TRIGGER TR_UpdateGroupsTimeStampOnSidMemberInsOrUpd ON dbo.[AzMan_Group_SIDMember] 
CREATE TRIGGER TR_UpdateParentTimeStampOnGroupDelete ON dbo.[AzMan_AzApplicationGroup] 
CREATE TRIGGER TR_UpdateParentTimeStampOnGroupInsOrUpd ON dbo.[AzMan_AzApplicationGroup] 
CREATE TRIGGER TR_UpdateParentTimeStampOnRoleDelete ON dbo.[AzMan_AzRoleAssignment] 
CREATE TRIGGER TR_UpdateParentTimeStampOnRoleInsOrUpd ON dbo.[AzMan_AzRoleAssignment] 
CREATE TRIGGER TR_UpdateParentTimeStampOnTaskDelete ON dbo.[AzMan_AzTask] 
CREATE TRIGGER TR_UpdateParentTimeStampOnTaskInsOrUpd ON dbo.[AzMan_AzTask] 
CREATE TRIGGER TR_UpdateRolesTimeStampOnAppMemberDel ON dbo.[AzMan_Role_AppMember] 
CREATE TRIGGER TR_UpdateRolesTimeStampOnAppMemberInsOrUpd ON dbo.[AzMan_Role_AppMember] 
CREATE TRIGGER TR_UpdateRolesTimeStampOnOperationDelete ON dbo.AzMan_Role_To_Operation_Link
CREATE TRIGGER TR_UpdateRolesTimeStampOnOperationInsert ON dbo.AzMan_Role_To_Operation_Link
CREATE TRIGGER TR_UpdateRolesTimeStampOnSidMemberDel ON dbo.[AzMan_Role_SIDMember] 
CREATE TRIGGER TR_UpdateRolesTimeStampOnSidMemberInsOrUpd ON dbo.[AzMan_Role_SIDMember] 
CREATE TRIGGER TR_UpdateRolesTimeStampOnTaskDelete ON dbo.AzMan_Role_To_Task_Link
CREATE TRIGGER TR_UpdateRolesTimeStampOnTaskInsert ON dbo.AzMan_Role_To_Task_Link
CREATE TRIGGER TR_updateStoreTimeStampOnAppDelete ON dbo.[AzMan_AzApplication] 
CREATE TRIGGER TR_updateStoreTimeStampOnAppModified ON dbo.[AzMan_AzApplication] 
CREATE TRIGGER TR_UpdateTaskTimeStampOnOperationDelete ON dbo.AzMan_Task_To_Operation_Link
CREATE TRIGGER TR_UpdateTaskTimeStampOnOperationInsert ON dbo.AzMan_Task_To_Operation_Link
CREATE TRIGGER TR_UpdateTaskTimeStampOnTaskDelete ON dbo.AzMan_Task_To_Task_Link
CREATE TRIGGER TR_UpdateTaskTimeStampOnTaskInsert ON dbo.AzMan_Task_To_Task_Link
CreateApplication2WW
CreateApplicationWWW
CreateDirectoryW
CreateFileW
CreateOperationW
CreateRoleAssignment
CreateRoleDefinition
CreateScope2
CreateScopeW
CreateTaskWW
CreateTimerQueue
CreateTimerQueueTimer
CreateWellKnownSid
CRichZ
CRITICAL
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptGetHashParam
CryptGetHashParam FAILED Error 0x%08X.
CryptHashData
CryptHashData FAILED Error 0x%08X.
CryptReleaseContext
CScriptEngine
CScriptEngine::AddRef %ld
CScriptEngine::FinalRelease
CScriptEngine::GetDocVersionString
CScriptEngine::GetItemInfo: %ws
CScriptEngine::GetLCID
CScriptEngine::InitializeScriptEngine
CScriptEngine::InsertHeadList
CScriptEngine::InsertHeadLruList
CScriptEngine::InterruptScript
CScriptEngine::IsBaseThread
CScriptEngine::OnEnterScript
CScriptEngine::OnLeaveScript
CScriptEngine::OnScriptError
CScriptEngine::OnScriptTerminate
CScriptEngine::OnStateChange:
CScriptEngine::QueryInterface->
CScriptEngine::Release %ld
CScriptEngine::RemoveListEntry
CScriptEngine::RemoveLruListEntry
CScriptEngine::ResetToUninitialized
CScriptEngine::ReuseEngine
CScriptEngine::RunScript
Current System Time: 
Current User Name: 
CurVer = s 'AzRoles.AzAuthorizationStore.1'
CurVer = s 'AzRoles.AzBizRuleContext.1'
CurVer = s 'AzRoles.AzPrincipalLocator.1'
D!|$ I
D!ewI
D!m 3
D!m$L
D!t$(E3
D!t$0E
D$ E3
d$ E3
D$ fA
D$ fA#
D$ fE
D$ H+
D$(D!d$ 
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
D$(fA
D$(fD
D$(H;
D$(H;D
D$(L!a
D$@E3
D$`H;
D$`H+
D$0!t$(H
D$0;X
d$0E3
D$0E3
d$0E3
D$0E3
D$0fA
D$0H!\$(H
D$0H+
D$8E3
D$8L!d$0L!d$(D!d$ 
D$DE;
D$DE3
D$HE3
d$HH#
D$L;D$Hu,;D$Du&H
D$P9GptwH
D$PE3
D$pE3
D$PfD
D$pH;
D$pH;F
D$XE3
D$xfD
D$xH;
D$XH;
D$XH;F
D$xH9D$pt
D;|$h
D;}Hr
D;d$h
D;G8r
D;K8r
D;t$$t)D
D;t$Ps
D;U8r
D8@)t
D8@1t
D8A)t
D8A)u
D8A1t
D8A1u
D8B)u
D8B1u
D8kHu
D8P)t
D8Q)u
D8R)u
D8t$Et
D8u1u$H
D8v1t
D8W(t
D8W)u
D8W*tUH
D8w,uhH
D8X u
D8X!u
D8X(u
D8X(uTE
D8X)u
D8X0u
D8X0uTE
D8X1u
D9|$`u
D9}0tQL
D9e_t
D9epu
D9l$@
D9mPv
D9T$`u{E
D9u t2
D9uht#
D9wPt'H
D9wPu
DaOpenScopeWWW
DAZ_AZSTORE_FLAG_MANAGE_STORE_ONLYWWW
DbServer::CreateDatabase(): ::new failed with 0x%08X.
DbServer::CreateDatabase(): ExecStatement(%S) failed with 0x%08X.
Declare @AccessAtObjType [tinyint]
DECLARE @addOrDelete nvarchar(10)
DECLARE @appGuid uniqueidentifier
Declare @AppId [int] , @ScopeID [int]
Declare @AppID [int], @ScopeID [int]
Declare @AppID INT
DECLARE @AppMember varchar(100), @Pos int
DECLARE @appName nvarchar(512)
DECLARE @childGuid uniqueidentifier
DECLARE @childName nvarchar(512)
DECLARE @DataLength int
DECLARE @equal char
Declare @ExistingBizruleID [int]
Declare @ExistingLdapQueryID [int]
DECLARE @groupGuid uniqueidentifier
DECLARE @groupName nvarchar(512)
DECLARE @iAppMemberID int
DECLARE @ID [int] 
Declare @iOperationID int
DECLARE @isAdd int
Declare @iTaskID int
DECLARE @Name nvarchar(512)
DECLARE @ObjectGuid uniqueidentifier
DECLARE @ObjectName nvarchar(512)
DECLARE @OldChildTS timestamp
DECLARE @OperationID nvarchar(100), @Pos int
DECLARE @OperationID varchar(100), @Pos int
DECLARE @opGuid uniqueidentifier
DECLARE @opName nvarchar(512)
Declare @ParentAppID [int]
DECLARE @parentGuid uniqueidentifier
DECLARE @ParentID INT
DECLARE @parentName nvarchar(512)
Declare @ParentStore [int]
DECLARE @ParentType TinyInt
DECLARE @Pos int
DECLARE @refGroupGuid uniqueidentifier
DECLARE @refGroupName nvarchar(512)
DECLARE @refTaskGuid uniqueidentifier
DECLARE @refTaskName nvarchar(512)
DECLARE @roleGuid uniqueidentifier
DECLARE @roleName nvarchar(512)
DECLARE @RowCount INT, @Error INT
DECLARE @SaclIsOn [bit]
Declare @ScopeID INT
DECLARE @Sid varbinary(85)
DECLARE @SidLength int
DECLARE @SidMember varbinary(85)
Declare @StoreID INT
DECLARE @taskGuid uniqueidentifier
DECLARE @TaskID varchar(100), @Pos int
DECLARE @taskName nvarchar(512)
DECLARE @userName nvarchar(512)
default SelectionLanguage=%ws
defaultNamingContext
DelayLoadFailureHook
DelegatedPolicyUsersName
Delete
delete [AzMan_AzApplicationGroup] where AppID in (SELECT ID FROM deleted) 
delete [AzMan_AzApplicationGroup] where ScopeID in (SELECT ID FROM deleted)
delete [AzMan_AzApplicationGroup] where StoreID in (select ID from deleted)  
delete [AzMan_AzRoleAssignment] where AppID in (SELECT ID FROM deleted)
delete [AzMan_AzRoleAssignment] where ScopeID in (SELECT ID FROM deleted)
delete [AzMan_AzTask] where AppID in (SELECT ID FROM deleted)
delete [AzMan_AzTask] where ScopeID in (SELECT ID FROM deleted)
delete [AzMan_BizRule] where [ID] in (SELECT BizRuleID FROM deleted)
DeleteApplicationGroupWW
DeleteApplicationWWW
DeleteCriticalSection
DeleteDelegatedPolicyUserNameWWW
DeleteDelegatedPolicyUserWWW
DeleteFileW
DeleteMemberNameX
DeleteOperationW 
DeletePolicyAdministratorNameWWW
DeletePolicyReaderNameWW
DeletePropertyItemWW
DeleteRoleWW
DeleteScope2
DeleteScopeWL
DeleteTimerQueueEx
DeleteTimerQueueTimer
Deref
Description
description
dfscli.dll
DisableThreadLibraryCalls
DISPATCH
distinguishedName
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
DomainTimeout
DOMREF
Done:
Done:  
Done:        
drop table [dbo].[Azman_SQLRole]
DsBindW
DsCrackNamesW
DsFreeNameResultW
DsGetDcNameW
DSPARSE.dll
DsQuoteRdnValueW
DSROLE.dll
DsRoleFreeMemory
DsRoleGetPrimaryDomainInformation
DsUnBindW
DuplicateTokenEx
e A_A^]
e A_A^_^]
e A_A^A]A\]
E(=csm
E(I;4
E;|$8
E;g8r
e`A_A^A]A\]
E`H!}
e0A_A^A]A\]
e0D9bH
E8/uAL
E8=csm
E8P)t
E8't.D
E8Y(u
E8Y0u
E9aTu^E
E9aTu>A
E9D$8
E9g8vaI
eAZ_MAX_APPLICATION_VERSION_LENGTHWWW
eg;w 
EH!\$ E3
Eh=csm
EH=csm
ehA_A^A]A\_^[]
else if @ParentType = 5 -- group
Engine doesn't support IActiveScriptParse: 0x%lx
Engine doesn't support reset: 0x%lx
Enter CAzApplication::_Init hHandle=0x%lx
Enter CAzApplication::CreateRoleAssignment bstrRoleAssignmentName=%s
Enter CAzApplication::CreateRoleDefinition bstrRoleDefinitionName=%s
Enter CAzApplication::CreateScope2 bstrScopeName=%s
Enter CAzApplication::DeleteRoleAssignment bstrRoleAssignmentName=%s
Enter CAzApplication::DeleteRoleDefinition bstrRoleDefinitionName=%s
Enter CAzApplication::DeleteScope2 bstrScopeName=%s
Enter CAzApplication::get_RoleAssignments
Enter CAzApplication::get_RoleDefinitions
Enter CAzApplication::InitializeClientContext2 IdentifyingString=%s
Enter CAzApplication::InitializeClientContextFromName ClientName=%s DomainName=%s
Enter CAzApplication::InitializeClientContextFromStringSid SidString=%s
Enter CAzApplication::InitializeClientContextFromToken ullTokenHandle=%d
Enter CAzApplication::InitializeClientContextFromToken ullTokenHandle=0x%8lx%8lx
Enter CAzApplication::InitializeClientContextFromToken2 ulTokenHandleLowPart=%d ulTokenHandleHighPart=%d
Enter CAzApplication::OpenRoleAssignment bstrRoleAssignmentName=%s
Enter CAzApplication::OpenRoleDefinition bstrRoleDefinitionName=%s
Enter CAzApplication::OpenScope2 bstrScopeName=%s
Enter CAzApplication::ScopeExists bstrScopeName=%s
Enter CAzApplication::Submit lFlags=%d
Enter CAzApplicationGroup::_Init
Enter CAzApplicationGroup::RoleAssignments: bstrScopeName=%s bRecusive=%d
Enter CAzApplicationGroup::Submit: lFlags=%d
Enter CAzApplicationGroups::_Init
Enter CAzApplications::_Init
Enter CAzAuthorizationStore::Delete
Enter CAzAuthorizationStore::Initialize: lFlag=0x%lx bstrPolicyURL=[%s]
Enter CAzAuthorizationStore::IsUpdateNeeded
Enter CAzAuthorizationStore::Submit lFlags=%d
Enter CAzAuthorizationStore::UpdateCache
Enter CAzClientContext::_Init
Enter CAzClientContext::AccessCheck bstrObjectName=%s, bstrScopeNames=%s varOperations=%s
Enter CAzClientContext::AccessCheck2 bstrObjectName=%s, bstrScopeName=%s lOperation=%d
Enter CAzClientContext::AddApplicationGroups
Enter CAzClientContext::AddRoles bstrScopeName=%s
Enter CAzClientContext::AddStringSids
Enter CAzClientContext::get_Sids.
Enter CAzClientContext::GetAssignedScopesPage lOptions=%d PageSize=%d
Enter CAzClientContext::GetBusinessRuleString
Enter CAzClientContext::GetGroups bstrScopeName=%s
Enter CAzClientContext::GetOperations bstrScopeName=%s
Enter CAzClientContext::GetRoles bstrScopeName=%s
Enter CAzClientContext::GetTasks bstrScopeName=%s
Enter CAzClientContext::IsInRoleAssignment bstrScopeName=%s bstrRoleName=%s
Enter CAzOperation::RoleAssignments bstrScopeName=%s bRecursive=%d
Enter CAzOperation::Submit lFlags=%d
Enter CAzOperations::_AddOperation pOperation=%d
Enter CAzOperations::_AddOperationFromTaskObj hParent=%d
Enter CAzOperations::_Init hOwnerApp=%d
Enter CAzOperations::_Init hOwnerApp=%d hParent=%d
Enter CAzPrincipalLocator::get_NameResolver
Enter CAzPrincipalLocator::get_ObjectPicker
Enter CAzRole::_Init
Enter CAzRole::get_RoleDefinitions
Enter CAzRole::get_Scope
Enter CAzRole::Submit lFlags=%d
Enter CAzRoleAssignments::_Init
Enter CAzRoleAssignments::_InitRolesForGivenObj: bstrScopeName=%s bRecursive=%d
Enter CAzRoleAssignments::GetRoleAssigmentObj bstrScopeName=%s ScopeFlags=%d
Enter CAzRoleDefinitions::_Init
Enter CAzRoleDefinitions::CollectNamedRoleDefinitions
Enter CAzRoleDefinitions::CollectTaskAsRoleDefinition
Enter CAzRoles::_Init
Enter CAzScope constructor called.
Enter CAzScope destructor called.
Enter CAzScope::_Init
Enter CAzScope::CreateRole: bstrRoleName=%s
Enter CAzScope::CreateRoleAssignment bstrRoleAssignmentName=%s
Enter CAzScope::CreateRoleDefinition bstrRoleDefinitionName=%s
Enter CAzScope::DeleteRoleAssignment bstrRoleAssignmentName=%s
Enter CAzScope::DeleteRoleDefinition bstrRoleDefinitionName=%s
Enter CAzScope::get_RoleAssignments
Enter CAzScope::get_RoleDefinitions
Enter CAzScope::get_Roles
Enter CAzScope::OpenRole: bstrRoleName=%s
Enter CAzScope::OpenRoleAssignment bstrRoleAssignmentName=%s
Enter CAzScope::OpenRoleDefinition bstrRoleDefinitionName=%s
Enter CAzScope::Submit: lFlags=%d
Enter CAzScopes::_Init
Enter CAzTask::_Init hOwnerApp=%d hHandle=%d
Enter CAzTask::AddRoleDefinition bstrRoleDefinition=%s
Enter CAzTask::DeleteRoleDefinition bstrRoleDefinition=%s
Enter CAzTask::get_RoleDefinitions
Enter CAzTask::RoleAssignments bstrScopeName=%s
Enter CAzTask::Submit lFlags=%d
Enter CAzTasks::_AddTask
Enter CAzTasks::_AddTaskFrom
Enter CAzTasks::_Init
Enter get_BizRuleInterfaces::_Init
Enter get_BizRuleParameters::_Init
Enter PopulateObjectOptionalValueProperties.
Enter PopulateObjectSingleValueProperties.
Enter: CAzOperation::_Init hOwnerApp=%d hHandle=%d.
EnterCriticalSection
Enumeration completed.
en-US
EP;Ept1
epA_A^]
epA_A^A]A\]
ePA_A^A]A\]
EqualDomainSid
Error allocating memory
Error calling GetCurrentScriptThreadID: 0x%lx
Error calling InitNew: 0x%lx
Error calling SetScriptSite: 0x%lx
Error Message:
Error reading users of type %d
Error setting default options.
Error setting MajorVersion.
Error setting MinorVersion.
Error to create a database %ws that already exists.
Error to open database %ws that does not exist.
Error unescaping DN:<%ws>
Error unescaping host name: %ws
Ex=csm
EX=csm
EX9EHv)H
Exception: %s: 0x%lx
Exec AzMan_SP_AccessCheck @Return output, @AccessAtObjType output,@RoleId, 6, 1, @SaclIsOn output
Exit_AzMan_SP_AccessCheck:
Exit_AzMan_SP_AccessCheck_For_Container:
F 9F@
f;D$@
F4CreateApplicationGroupWW
f9,^u
f9,Gu
f9,pu
f9,Xu
f9:ttA
f9<qu
f94Au
f94Bu
f94yu
fA9?t|
fA9<^u
fA9<Du
fA9<Fu
fA9<nu
fA9<Ou
fA94@u
fA9tM
Failed to AddNamedItem: 0x%lx
Failed to allocate memory for object list.
Failed to create AzBizRuleContext instance: 0x%lx
Failed to create log entry: StringCchVPrintfA failure
Failed to create scripting engine: 0x%lx
Failed to get scripting engine CLSID: 0x%lx
Failed to GetScriptState: 0x%lx
FAILED to initialize SHA256 hash algorithm Error 0x%08X.
Failed to ParseScriptText: 0x%lx
Failed to SetScriptState(INITIALIZED): 0x%lx
Failed to SetScriptState(STARTED): 0x%lx
Failed to SetScriptState(UNINITIALIZED): 0x%lx
Fails to set property (id is %d) to value %d
Fails to set property (id is %d) to value %ws
Fails to set property (id is %d).
False
FALSE
FAZ_PROP_TASK_OPERATIONSW
fB94Bu
fB94qu
fC9D}
fD; t
fD;8ugH
fD9#t
fD9$^u
fD9$Au
fD9$Bu
fD9$Fu
fD9$iu
fD9$Ju
fD9$Ku
fD9$Nu
fD9$pu
fD9$Qu
fD9$Xu
fD9&H
fD9,_u
fD9,Au
fD9,Bu
fD9,Cu
fD9,Fu
fD9,Ju
fD9,Ku
fD9,Xu
fD9,xu
fD9,zu
fD9?u
fD9|]
fD9|E
fD9+t
fD9<_u
fD9<Au
fD9<Bu
fD9<Ju
fD9<Ku
fD9<Pu
fD9<pu
fD9<wu
fD9<xu
fD9<Xu
fD9<xu
fD90u
fD93H
fD94Au
fD94Bu
fD94Cu
fD94Pu
fD94xu
fD94Xu
fD9tN
fE;9u
fE9!u
fE9$Fu
fE9$Hu
fE9,Hu
fE9|}
fE9<Ju
fE94@u
fE9DF
fE9DN
fE9Dv
Fetch fails.
fF9$Fu
fF9,{u
fF94hu
fG9D}
FileDescription
FileType
FileVersion
FindResourceExW
FindResourceW
Flags
FOR delete
FOR DELETE
FOR delete
FOR DELETE
FOR delete
FOR DELETE
FOR delete
FOR DELETE
FOR delete
FOR INSERT
FOR INSERT,UPDATE
ForceRemove
ForceRemove {483afb5d-70df-4e16-abdc-a1de4d015a3e} = s 'AzPrincipalLocator Class'
ForceRemove {5c2dc96f-8d51-434b-b33c-379bccae77c3} = s 'AzBizRuleContext Class'
ForceRemove {b2bcff59-a757-4b0b-a1bc-ea69981da69e} = s 'AzAuthorizationStore Class'
ForceRemove 'Programmable'
FormatMessageW
FreeLibrary
FSqlDatabase::SqlDatabase : Memory Allocation failed.
FUNCALL
G(H;\(
G(L9OHM
-GenerateAuditsWW
get_DelegatedPolicyUsers
get_DelegatedPolicyUsersName
get_Writable
GetAce
GetAclInformation
GetAclInformation failed.
GetAssignedScopesPageWWW
GetBusinessRuleStringWWW
GetComputerNameW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetEnvironmentVariableW
GetFileAttributesExW
GetFileAttributesW
GetFullPathNameW
GetItemInfo took an exception: 0x%lx
GetLastError
GetLengthSid
GetLocalTime
GetModuleFileNameW
GetModuleHandleW
GetNamedSecurityInfoW
GetParameter
GetParameterValueWWW
GetPrincipalsWWW
GetProcAddress
GetPropertyW
GetRoles
GetSchemaVersion
GetSecurityDescriptorDacl
GetSecurityDescriptorDacl failed.
GetSecurityDescriptorLength
GetSecurityDescriptorSacl
GetStoreProcedure fails.
GetSystemInfo
GetSystemTimeAsFileTime
GetTickCount
GetTokenInformation
GetUserNameExW
GetVersionExW
GetVolumeInformationW
goto Done
gpbstrTargetMachineWW
grant execute on AzGenerateAudit                to  public
grant execute on xp_AzManAddRole                to  public
grant execute on xp_AzManAddUserToRole          to  public
grant execute on xp_AzManDeleteRole             to  public
grant execute on xp_AzManRemoveUserFromRole     to  public
group
Group
GroupRecord::Initialize fails to allocate memory for Bizrule language 
GroupRecord::Initialize fails to allocate memory for Bizrule Path 
GroupRecord::Initialize fails to allocate memory for SID.
GroupType
groupType
H UATAUAVAWH
H UVWATAUAVAWH
h VWAVH
H VWAVH
h VWAWH
H WATAUAVAWH
H!\$ 
H!\$ I
H!\$(L
H!\$@H;
H!\$0
H!\$8L
H!\$PH
H!\$xH
H!]HH
H!]XH
H!|$@L
H!|$8H
H!}`E3
H!h H
H!t$ H
H!t$@E3
H!T$8H
H!t$8I
H!t$PH
H!uXL
H!x E
H!X H!X(H
H#EhH
H#G@H;
H;0u$A
H;8u$A
H;9uAH
H;G0t
H+C@x
-H9\$8t5L
H9_ s
H9~8u8I
H98urH
H9C(u
H9GPA
H9KHw
H9l$ t
H9MHw
H9Q r H
H9S(u
H9t$ t
H9UHw"H
H9uwu4H9u
H9wHw
H9x0u
hA^_^[
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^][
HANDLE
Handle deref
Handle ref
Hardware
HDeleteMemberX
HeapH
HeapI
HeapL
HeapM
hIAzRoleDefinitionsWWl
hIbstrRoleDefinitionWW4
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
hr = 0x%lx, pObjectNode(from myXmlGetNamedGuidNode) = 0x%lx
hRemoteW
I9:u)A8h)t
I9:u)A8h1t
I9E A
IActiveScript::AddNamedItem()
IActiveScript::Close()
IActiveScript::GetCurrentScriptThreadID()
IActiveScript::GetScriptState()
IActiveScript::InterruptScriptThread()
IActiveScript::QueryInterface()
IActiveScript::Release()
IActiveScript::SetScriptSite()
IActiveScript::SetScriptState()
IActiveScriptParse::InitNew()
IActiveScriptParse::ParseScriptText()
IActiveScriptParse::Release()
IActiveScriptSite
iAZ_PROP_GROUP_NON_MEMBERS_NAMEWW
IAzApplication InterfaceWW
IAzApplication2 InterfaceW
IAzApplication2W@
IAzApplication3 InterfaceW
IAzApplication3W
IAzApplicationGroup InterfaceW
IAzApplicationGroup2
IAzApplicationGroup2 Interface
IAzApplicationGroups
IAzApplicationGroups Interface
IAzApplications InterfaceW
IAzApplicationsWd
IAzAuthorizationStore InterfaceWWW
IAzAuthorizationStore2 InterfaceWW
IAzAuthorizationStore2WW
IAzAuthorizationStore3 InterfaceWW
IAzAuthorizationStore3WW
IAzBizRuleContext InterfaceWWW
IAzBizRuleInterfaces Interface
IAzBizRuleInterfacesT
IAzBizRuleParameters
IAzBizRuleParameters Interface
IAzClientContext
IAzClientContext Interface 
IAzClientContext2 InterfaceWWW 
IAzClientContext3 InterfaceWWW
IAzNameResolver InterfaceW
IAzObjectPicker InterfaceW
IAzObjectPickerWH
IAzOperation
IAzOperation Interface
IAzOperation2 InterfaceWWW
IAzOperation2WWW
IAzOperations InterfaceWWW
IAzOperationsWWW
IAzPrincipalLocator InterfaceW
IAzPrincipalLocatorW
IAzRole InterfaceW
IAzRoleAssignment InterfaceWWW
IAzRoleAssignments InterfaceWW
IAzRoleAssignmentWWW
IAzRoleDefinition InterfaceWWW
IAzRoleDefinitions InterfaceWW
IAzRoleDefinitionWWW
IAzRoles Interface
IAzScope
IAzScope Interface
IAzScope2 InterfaceWWW
IAzScope2WWW
IAzScopes InterfaceWWW
IAzScopesWWW
IAzTask InterfaceW
IAzTask2 Class
IAzTask2(
IAzTasks
IAzTasks Interface
IdentifyingStringWWWx
IF (@parentType = 0)
IF (@parentType = 1)
IF (@parentType = 4)
if (@Return >= 2)
If @ConsiderNull_ApplicationData Is Null
If @ConsiderNull_ApplicationVersion Is Null
If @ConsiderNull_ApplyStoreSacl Is Null
If @ConsiderNull_AuthzInterfaceClsId Is Null
If @ConsiderNull_Description Is Null
If @ConsiderNull_DomainTimeout Is Null
If @ConsiderNull_GenerateAudits Is Null
If @ConsiderNull_GroupType Is Null
If @ConsiderNull_MajorVersion Is Null
If @ConsiderNull_MaxScriptEngines Is Null
If @ConsiderNull_MinorVersion Is Null
If @ConsiderNull_ScriptEngineTimeout Is Null
If @ConsiderNull_TargetMachine Is Null
if @Error=0 
If @ExistingBizruleID Is Null or @ExistingBizruleID = 0 
If @ExistingLdapQueryID Is Null
if @ParentType = 3 -- task
if @Return <> 1 
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Azman_SQLRole]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
IF EXISTS (SELECT name FROM sysobjects
IF not EXISTS (SELECT name FROM sysobjects
IndexWWW
InitializeAcl
InitializeClientContext2
InitializeClientContextFromNameW
InitializeClientContextFromStringSid
InitializeClientContextFromToken2WWW
InitializeCriticalSection
InitializeSecurityDescriptor
InitializeSecurityDescriptor failed.
InprocServer32 = s '%MODULE%'
Interface
InternalName
invalid LDAP query syntax
Invalid parameter passed to C runtime function.
Invalid Stored Procedure Object: no ObjectRecord.
invalid string position
INVPARM
IsFunctionalLevelUpgradeSupportedWWW
IsInRoleAssignmentWW
IsNormalFlags(_Flags) = TRUE
IsRefreshFlags(_Flags) = TRUE
IsRoleDefinition
IsValidSid
iswspace
iswxdigit
IUnknown
IvarParameterValuesWW
IvarPropW
IXMLDOMDocument2::load failed. HRESULT = %d
IXMLDOMDocument2::load failed. HRESULT = %d. Intepreted as 'file not found'.
jAZ_PROP_TASK_BIZRULE_IMPORTED_PATHWW
JEOpenApplication2x
JhInprocW
JScript
K@!D$ 
KAZ_GROUPTYPE_BASICWW
KDeleteAppNonMemberWWX
KDeleteNonMemberNameWX
Kerberos
KERNEL32.dll
KIAzApplicationGroupWX
KuOpenRoleDefinitionWW
kWApplicationGroupsWWW
L!|$PD!|$XD!|$\L
L!D$0L
L!d$8H
L!d$PH
L!t$ H
L!t$@H
L!t$0D!t$8D!t$<L
L!t$0H
L#EwH
L$ E3
L$ SH
L$ SUVWH
L$ SVWAVH
L$ SVWH
L$ UVWATAUAVAWH
l$ VWAVH
L$(f;H
L$(H3
L$@!t$(D
l$@D9
L$@E3
l$@E3
L$@E3
L$`H3
L$0D9a
L$0E3
L$0H;
L$0H3
L$8E3
L$8H3
L$H9Np
L$hE3
L$HE3
L$hE3
L$HH!\$ E3
L$hH3
L$HH3
L$HH9N 
L$PE3
L$pE3
L$XE;
L$xE3
L$XE3
L$XH3
L$xH3
l$xL9i 
l:varParameterValueWWW
L9e@t
L9l$pu
L9l$xt
L9m(t
L9m(u
L9m@t
L9mXtFA
L9OHA
L9t$0t
L9t$P
lAZ_CLIENT_CONTEXT_SKIP_GROUP
lbstrTitleWWW
LcA<E3
ldap://
LdapQuery
LDAPQueryDNW
LdapQueryWWWX
Leave CAzApplication::_Init: return HRESULT value=0x%lx
Leave CAzApplication::CreateRoleAssignment: return HRESULT value=0x%lx
Leave CAzApplication::CreateRoleDefinition: return HRESULT value=0x%lx
Leave CAzApplication::CreateScope2: return HRESULT value=0x%lx
Leave CAzApplication::DeleteRoleAssignment: return HRESULT value=0x%lx
Leave CAzApplication::DeleteRoleDefinition: return HRESULT value=0x%lx
Leave CAzApplication::DeleteScope2: return HRESULT value=0x%lx
Leave CAzApplication::get_RoleAssignments: return HRESULT value=0x%lx
Leave CAzApplication::get_RoleDefinitions: return HRESULT value=0x%lx
Leave CAzApplication::InitializeClientContext2: return HRESULT value=0x%lx
Leave CAzApplication::InitializeClientContextFromName: return HRESULT value=0x%lx
Leave CAzApplication::InitializeClientContextFromStringSid: return HRESULT value=0x%lx
Leave CAzApplication::InitializeClientContextFromToken: return HRESULT value=0x%lx
Leave CAzApplication::InitializeClientContextFromToken2: return HRESULT value=0x%lx
Leave CAzApplication::OpenRoleAssignment: return HRESULT value=0x%lx
Leave CAzApplication::OpenRoleDefinition: return HRESULT value=0x%lx
Leave CAzApplication::OpenScope2: return HRESULT value=0x%lx
Leave CAzApplication::ScopeExists: return HRESULT value=0x%lx
Leave CAzApplication::Submit: return HRESULT value=0x%lx
Leave CAzApplicationGroup::_Init: return HRESULT value=0x%lx
Leave CAzApplicationGroup::RoleAssignments: return HRESULT value=0x%lx
Leave CAzApplicationGroup::Submit: return HRESULT value=0x%lx
Leave CAzApplicationGroups::_Init: return HRESULT value=0x%lx
Leave CAzApplications::_Init: return HRESULT value=0x%lx
Leave CAzAuthorizationStore::Delete: return HRESULT value=0x%lx
Leave CAzAuthorizationStore::Initialize: return HRESULT value=0x%lx
Leave CAzAuthorizationStore::IsUpdateNeeded: return HRESULT value=0x%lx *pbIsUpdateNeeded=%d
Leave CAzAuthorizationStore::IsUpdateNeeded: return HRESULT value=0x%lx pbIsUpdateNeeded == NULL
Leave CAzAuthorizationStore::Submit: return HRESULT value=0x%lx
Leave CAzAuthorizationStore::UpdateCache: return HRESULT value=0x%lx
Leave CAzClientContext::_Init: return HRESULT value=0x%lx
Leave CAzClientContext::AccessCheck: return HRESULT value=0x%lx *pvarResults=%s
Leave CAzClientContext::AccessCheck: return HRESULT value=0x%lx *pvarResults=NULL
Leave CAzClientContext::AccessCheck2: return HRESULT value=0x%lx *plResult=%d
Leave CAzClientContext::AccessCheck2: return HRESULT value=0x%lx plResult=NULL
Leave CAzClientContext::AddApplicationGroups: return HRESULT value=0x%lx
Leave CAzClientContext::AddRoles: return HRESULT value=0x%lx
Leave CAzClientContext::AddStringSids: return HRESULT value=0x%lx
Leave CAzClientContext::get_BizRuleInterfaces: return HRESULT value=0x%lx
Leave CAzClientContext::get_BizRuleParameters: return HRESULT value=0x%lx
Leave CAzClientContext::get_Sids: return HRESULT value=0x%lx
Leave CAzClientContext::GetAssignedScopesPage: return HRESULT value=0x%lx *pvarScopeNames=%s
Leave CAzClientContext::GetAssignedScopesPage: return HRESULT value=0x%lx pvarScopeNames=NULL
Leave CAzClientContext::GetBusinessRuleString: return HRESULT value=0x%lx *pbstrBusinessRuleString=%s
Leave CAzClientContext::GetBusinessRuleString: return HRESULT value=0x%lx pbstrBusinessRuleString=NULL
Leave CAzClientContext::GetGroups: return HRESULT value=0x%lx
Leave CAzClientContext::GetOperations: return HRESULT value=0x%lx
Leave CAzClientContext::GetRoles: return HRESULT value=0x%lx
Leave CAzClientContext::GetTasks: return HRESULT value=0x%lx
Leave CAzClientContext::IsInRoleAssignment: return HRESULT value=0x%lx *pbIsInRole=%d
Leave CAzClientContext::IsInRoleAssignment: return HRESULT value=0x%lx pbIsInRole=NULL
Leave CAzOperation::_Init: return HRESULT value=0x%lx
Leave CAzOperation::RoleAssignments: return HRESULT value=0x%lx
Leave CAzOperation::Submit: return HRESULT value=0x%lx
Leave CAzOperations::_AddOperation: return HRESULT value=0x%lx
Leave CAzOperations::_AddOperationFromTaskObj: return HRESULT value=0x%lx
Leave CAzOperations::_Init: return HRESULT value=0x%lx
Leave CAzPrincipalLocator::get_NameResolver: return HRESULT value=0x%lx
Leave CAzPrincipalLocator::get_ObjectPicker: return HRESULT value=0x%lx
Leave CAzRole::_Init: return HRESULT value=0x%lx
Leave CAzRole::get_RoleDefinitions: return HRESULT value=0x%lx
Leave CAzRole::get_Scope: return HRESULT value=0x%lx
Leave CAzRole::Submit: return HRESULT value=0x%lx
Leave CAzRoleAssignments::_Init: return HRESULT value=0x%lx
Leave CAzRoleAssignments::_InitRolesForGivenObj: return HRESULT value=0x%lx
Leave CAzRoleAssignments::GetRoleAssigmentObj: return HRESULT value=0x%lx
Leave CAzRoleDefinitions::_Init: return HRESULT value=0x%lx
Leave CAzRoleDefinitions::CollectNamedRoleDefinitions: return HRESULT value=0x%lx
Leave CAzRoleDefinitions::CollectTaskAsRoleDefinition: return HRESULT value=0x%lx
Leave CAzRoles::_Init: return HRESULT value=0x%lx
Leave CAzScope::_Init: return HRESULT value=0x%lx
Leave CAzScope::CreateRole: return HRESULT value=0x%lx
Leave CAzScope::CreateRoleAssignment: return HRESULT value=0x%lx
Leave CAzScope::CreateRoleDefinition: return HRESULT value=0x%lx
Leave CAzScope::DeleteRoleAssignment: return HRESULT value=0x%lx
Leave CAzScope::DeleteRoleDefinition: return HRESULT value=0x%lx
Leave CAzScope::get_RoleAssignments: return HRESULT value=0x%lx
Leave CAzScope::get_RoleDefinitions: return HRESULT value=0x%lx
Leave CAzScope::OpenRole: return HRESULT value=0x%lx
Leave CAzScope::OpenRoleAssignment: return HRESULT value=0x%lx
Leave CAzScope::OpenRoleDefinition: return HRESULT value=0x%lx
Leave CAzScope::Submit: return HRESULT value=0x%lx
Leave CAzScopes::_Init: return HRESULT value=0x%lx
Leave CAzTask::_Init: return HRESULT value=0x%lx
Leave CAzTask::AddRoleDefinition: return HRESULT value=0x%lx
Leave CAzTask::DeleteRoleDefinition: return HRESULT value=0x%lx
Leave CAzTask::get_RoleDefinitions: return HRESULT value=0x%lx
Leave CAzTask::RoleAssignments: return HRESULT value=0x%lx
Leave CAzTask::Submit: return HRESULT value=0x%lx
Leave CAzTasks::_AddTask: return HRESULT value=0x%lx
Leave CAzTasks::_AddTaskFrom: return HRESULT value=0x%lx
Leave CAzTasks::_Init: return HRESULT value=0x%lx
Leave get_Roles: return HRESULT value=0x%lx
Leave PopulateObjectOptionalValueProperties. return value: %d.
Leave PopulateObjectOptionalValueProperties. return value: 0.
Leave PopulateObjectSingleValueProperties. return value: %d.
Leave PopulateObjectSingleValueProperties. return value: 0.
LeaveCriticalSection
LegalCopyright
lFlagsWW
lFunctionalLevel
list<T> too long
LoadLibraryExW
LoadLibraryW
LoadResource
LocalAlloc
LocalFree
LockResource
logoncli.dll
LookupAccountNameW
LookupAccountSidW
LsaClose
LsaConnectUntrusted
LsaDeregisterLogonProcess
LsaFreeMemory
LsaFreeReturnBuffer
LsaLogonUser
LsaLookupAuthenticationPackage
LsaNtStatusToWinError
LsaOpenPolicy
LsaQueryInformationPolicy
lstrcmpiW
LTasksWWW
m8O!t
MajorVersion
MakeSelfRelativeSD
malloc
map/set<T> too long
master
MaxScriptEngines
MaxScripts
mayContain
mDeleteAppMemberWX
member
Member
MembersNameWX
MembersWX
memcmp
memcpy
memcpy_s
memmove
memmove_s
memset
mIAzRoles
Microsoft
Microsoft Corporation
Microsoft SQL Server
MinorVersion
Module
Module_Raw
MPR.dll
msDS-AzAdminManager
msDS-AzApplication
msDS-AzApplicationData
msDS-AzApplicationName
msDS-AzApplicationVersion
msDS-AzBizRule
msDS-AzBizRuleLanguage
msDS-AzClassId
msDS-AzDomainTimeout
msDS-AzGenerateAudits
msDS-AzLastImportedBizRulePath
msDS-AzLDAPQuery
msDS-AzMajorVersion
msDS-AzMinorVersion
msDS-AzOperation
msDS-AzOperationID
msDS-AzRole
msDS-AzScope
msDS-AzScopeName
msDS-AzScriptEngineCacheMax
msDS-AzScriptTimeout
msDS-AzTask
msDS-AzTaskIsRoleDefinition
msDS-Behavior-Version
msDS-MembersForAzRole
msDS-NonMembers
msDS-OperationsForAzRole
msDS-OperationsForAzTask
msDS-TasksForAzRole
msDS-TasksForAzTask
MSLDAP
MSSQL
msvcrt.dll
MSXML
MultiByteToWideChar
myAzAddOrDeletePropertyItem
myAzSetProperty
N H9y0
n#varOperationsWWW
N@L91
N0I!~(
Negative SQL return code 0x%x is interpreted made positive.
NetApiBufferFree
NetDfsGetClientInfo
netutils.dll
new CScriptEngine failed: 0x%lx
NInitializeWW
No object can be found for guid=[%ws] in the visible tree.
No object can be found for the given guid.
NonMember
NonMembersWWX
NoRemove
NoRemove CLSID
NoRemove Interface
Not found %s under tag %ws
NtAllocateLocallyUniqueId
NtClose
NtCreateFile
ntdll.dll
NTDSAPI.dll
NTSecurityDescriptor
O@qOS
O@qOS}P
O@qOSinvalid map/set<T> iterator
o\$PH
O]GetTasks
ObAddPropertyItem (by guid): 
ObAddPropertyItem: Cannot set creator group sid
ObAddPropertyItem: Cannot set creator owner sid
ObAddPropertyItem: GroupEvalSerialNumber set to %ld
ObAddPropertyItem: OpCacheSerialNumber set to %ld
ObClearObjectList PropertyID %d
ObCommonCreateObject: Reserved != 0
ObCommonDeleteObject: Reserved != 0
ObCommonEnumObjects: Reserved != 0
ObCommonGetProperty: No get property routine.
ObCommonGetProperty: Object has no apply-store-sacl data
ObCommonGetProperty: Object has no description
ObCommonGetProperty: Object has no generate-audits data
ObCommonGetProperty: Object has no name
ObCommonGetProperty: Reserved != 0
ObCommonGetProperty:Object has no application data
ObCommonGetProperty:Object has no apply-store-sacl data
ObCommonOpenObject: Reserved != 0
ObCreateObject: %ws 
ObDecrHandleRefCount: Cannot reload children on failure of unload: %ld
Object of type %d does not support the action %d.
Object of type = %d does not support action %d.
Object with the same name exist
objectClass
ObjectClass
objectGUID
ObjectPicker
ObjectTimeStamp allocation failed.
ObjectTimeStamp::GetUpdateInformation failed.
objectVersion
OBJLIST
OBJREF
ObReferenceObjectByName (by guid): 
ObRemoveObjectListLink: OpCacheSerialNumber set to %ld
ObRemovePropertyItem: GroupEvalSerialNumber set to %ld
ObSetProperty: no set property routine: %ld %ld
ObSetProperty: OpCacheSerialNumber set to %ld
oD$ f
odbc code %i, State %S, Message: %S
ODBC32.dll
oL$0f
ole32.dll
OLEAUT32.dll
opbApplyStoreSacl
OpenApplicationGroup
OpenApplicationW
OpenOperationWWW
OpenProcessToken
OpenScope2WW
OpenTask
OpenThreadToken
Operation Cache
OperationHash: objects already in hash
OperationID
OperationIDW
OperationLink
OriginalFilename
OrlFlagWWWx
oT$@f
Out of memory when allocating AzmanSQLLayer.
Out of memory when allocating connection string.
Out of memory when allocating PAZP_SQL_CONTEXT.
OutputDebugStringA
p AVH
p AWH
p WATAUAVAWH
p WAVAWH
PA]A\_^]
PA^_^
pA^A\_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^[]
pA_A^A\_^[]
pA_A^A]A\_[]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
pAccessCheck2
PACL parameter for SqlLoadPolicyUser is NULL.
PathAddBackslashW
PathCreateFromUrlW
PathIsRootW
PathIsUNCW
PathRemoveBackslashW
PathRemoveFileSpecW
pbExistWl
pbIsInRoleWW
pbstrApplicationData
pbstrBusinessRuleStringW
pbstrDescription
pbstrLDAPQueryDN
pbstrNameWWW
pbstrPropWWW
pDoc->loadXML
PerfCreateInstance
PerfSetCounterRefValue
PerfSetCounterSetInfo
PerfStartProvider
PerfStopProvider
PERSIST
pIAzTaskW
pInitializeClientContextFromToken
plCountWd
plMajorVersionWW
plMinorVersionWW
plPropWW
pMBizRuleW
pObjectNode, 0x%lx, is released
Policy user type is not supported %d.
PolicyAdministratorsName
PolicyReadersNameWWW
PolicyReadersWWW
PopulateObjectOptionalValueProperties failed with error: %d.
PopulateObjectOptionalValueProperties: objectHandle = NULL is invalid.
PopulateObjectOptionalValueProperties: pSproc = NULL is invalid.
PopulateObjectSingleValueProperties failed with error: %d.
PopulateObjectSingleValueProperties: objectHandle = NULL is invalid.
PopulateObjectSingleValueProperties: pSproc = NULL is invalid.
ppAppCollectionW
ppApplicationWWW
PpbIsUpdateNeeded
ppBizRuleInterfacesW
ppBizRuleParamWWT
ppClientContextW
ppEnumPtrWWW
ppGroupCollectionWWWX
ppRoleAssignmentl
ppRoleCollection 
ppRoleDefinitionsWWW4
ppRoleWW
ppScope2
ppScopeCollectionWWW
ppScopeW
ppTaskWW
Process Name: 
ProductName
ProductVersion
ProgID = s 'AzRoles.AzAuthorizationStore.1'
ProgID = s 'AzRoles.AzBizRuleContext.1'
ProgID = s 'AzRoles.AzPrincipalLocator.1'
ProviderDll
ProxyStubClsid = s '{00020424-0000-0000-C000-000000000046}'
ProxyStubClsid32 = s '{00020424-0000-0000-C000-000000000046}'
pStringSidArrayW
pvarDelegatedPolicyUsers
pvarObtPtrWWd
pvarParameterValueWW
pvarReadersW
pvarResultsW
pvarRoleNamesWWW
pvarScopeNamesWW@
pvNamesW
pvSidsWW
pvSidTypesWW
QApplyStoreSaclWW,
QBizrulesWritable
qsort
QueryChildrenUpdateTimeStamps failed to allocate memory.
QueryChildrenUpdateTimeStamps failed.
QueryChildrenUpdateTimeStamps fails for action=%d and objectType=%d.
QueryChildrenUpdateTimeStamps has NULL parameter pTSMap.
QueryObjectUpdateTimeStamp failed.
QueryObjectUpdateTimeStamp has NULL parameter pRowTimeStamp.
QueryPerformanceCounter
rAddMemberWWWX
RaiseException
RAZ_PROP_AZTORE_IS_ADAM_INSTANCEW
RDeletePolicyAdministratorWWW
realloc
Ref by Handle
Ref by name
Ref by operation id
Reference from NewName
Reference to self
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteValueW
RegEnumKeyExW
REGISTRY
RegOpenKeyExW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseSRWLockExclusive
Remap error to: 0x%lx
RemoveAllWWW
RemoveWW
ResolveDelayLoadedAPI
RETURN
Return (@Return)
RETURN @@RowCount
Return @Return
RETURN @Return
Return script error to caller: 0x%lx
Return(@@RowCount)
Return(@Return)
Return(0)
Return_Get_ObjPath:
ReuseEngine failed: 0x%lx
Role reference
Role/Group reference
RoleAssignmentsW
RoleDefinition
RoleDefinitionsW
RoleRecord::Initialize fails to allocate memory for SID.
RolesWWW
RollbackTransaction returns: %d.
RPCRT4.dll
RpcStringFreeA
RpcStringFreeW
rpGroupArrayW
RpvarAdminsWW
RSDSE
RtlAcquireResourceExclusive
RtlAcquireResourceShared
RtlCaptureContext
RtlConvertExclusiveToShared
RtlConvertSharedToExclusive
RtlCopySid
RtlDeleteCriticalSection
RtlDeleteElementGenericTableAvl
RtlDeleteResource
RtlDosPathNameToNtPathName_U
RtlEnterCriticalSection
RtlEnumerateGenericTableAvl
RtlEqualSid
RtlFreeHeap
RtlIdentifierAuthoritySid
RtlImageNtHeader
RtlInitializeCriticalSection
RtlInitializeGenericTableAvl
RtlInitializeResource
RtlInitString
RtlInitUnicodeString
RtlInsertElementGenericTableAvl
RtlLeaveCriticalSection
RtlLengthSid
RtlLookupElementGenericTableAvl
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlNumberGenericTableElementsAvl
RtlReleaseResource
RtlValidSecurityDescriptor
RtlValidSid
RtlVirtualUnwind
RunScript failed: 0x%lx, %ld
RunScript took an exception: 0x%lx
rvarInterfacesWWW
s I9>u9H
s WATAUAVAWH
s WAVAWH
S-1-0-0
S-1-3-4
schemaNamingContext
Scope Cache
ScopeExistsW
SCRIPT
Script changed while engine was running
Script Error: Code: 0x%lx %ld
Script Freed from free script list
Script from access check to caller: 0x%lx
Script LRU'ed out: %ld
Script Timed out.
Script took an exception: 0x%lx
ScriptEngine->Init failed: 0x%lx
ScriptEngineTimeoutW
ScriptTimeout
Secur32.dll
SECURITY
SELECT @Error = @@ERROR, @RowCount = @@ROWCOUNT  
Select @ExistingLdapQueryID = [LdapQueryID] From [dbo].[AzMan_AzApplicationGroup] Where [ID] = @GroupId  
SELECT @ID = ID FROM AzMan_AzAuthorizationStore WHERE Name = @Name
SELECT @ReturnCode = 0
SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0) FROM [AzMan_AzOperation] 
SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0), IsNull([ChildUpdateTimeStamp], 0) FROM [AzMan_AzApplication] 
SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0), IsNull([ChildUpdateTimeStamp], 0) FROM [AzMan_AzAuthorizationStore] 
SELECT [ID], [ObjectGuid], IsNull([RowUpdateTimeStamp], 0), IsNull([ChildUpdateTimeStamp], 0) FROM [AzMan_AzScope] 
SELECT count(*) FROM sysobjects WHERE name = 'AzMan_AzAuthorizationStore' and type = 'U'
----------------------------Select queries----------------------------------------------
SelectionLanguage
SET @DataLength = DATALENGTH(@SidMembers)
SET @equal = '='
Set @ExistingBizruleID = Null
Set @ExistingLdapQueryID = Null
Set @ID = -1    -- this means it doesn't exist
Set @ParentAppID = 0
Set @ParentStore = 0
Set @Pos = 1
Set @Return = 0
Set @Return = 0 
Set @Return = 0 -- no error
Set @SaclIsOn = 0
Set NoCount Off
Set NoCount On
Set ThreadId to: 0x%lx 0x%lx
SetLastError
SetNamedSecurityInfoW
SetProperty: Object doesn't support dirty bit 0x%lx
SetPropertyW
SetSecurityDescriptorDacl
SetSecurityDescriptorDacl failed.
SetSecurityDescriptorOwner
SetSecurityDescriptorSacl
SetThreadStackGuarantee
SetThreadToken
SetUnhandledExceptionFilter
SHLWAPI.dll
SidStringWWW
SizeofResource
Sleep
SleepConditionVariableSRW
Software
SOFTWARE\Microsoft\AzMan\BizRuleEnabledApplications
Software\Microsoft\AzMan\Logging
Software\Microsoft\AzMan\ObjectPicker
SOpenRole
SpAddAppMember
SPageSize
SQL provider is invoked without mssql prefix "mssql".
SQL provider URL is missing %ws.
SQL URL does is not valid: it does not contain a database name information.
SqlConnection::NeedsReConnect(): returned 0x%08X.
SqlConnection::Reconnect() : BindParams failed with 0x%08X.
SqlConnection::Reconnect() : BindResult failed with 0x%08X.
SqlConnection::Reconnect() : Connect failed with 0x%08X.
SqlConnection::Reconnect() : Connect succeeded.
SqlConnection::Reconnect() : SQLAllocHandle failed with 0x%08X.
SQLConnection::ReConnect(): Database::SwitchDatabase returned 0x%08X.
SQLConnection::ReConnect(): m_pszDBName is NULL !
SqlCreateChildFromRecord failed.
SqlCreateChildFromRecord receives NULL ppObject or NULL pSproc parameter.
SqlCreateChildListShallow failed with error: %d.
SqlCreateChildListShallow failed.
SqlCreateObject receives NULL sqlPersistContext or NULL ppSproc.
SqlExecuteNonQueryForObject failed with error: %d.
SqlExecuteQueryForObject receives NULL sqlPersistContext or NULL ppSproc.
SqlGetObjectSecurityDescriptor failed %d.
SqlGetObjectSecurityDescriptor failed.
SqlGetObjectSecurityDescriptor has NULL PSECURITY_DESCRIPTOR.
SqlLoadAcls failed.
SqlLoadChild failed.
SqlLoadChildren (Loading type: %d.)
SqlLoadChildren (Type being loaded: %d.)
SqlLoadChildren failed with error: %d.
SqlLoadChildren failed.
SqlLoadMultiValues failed with error: %d.
SqlLoadMultiValues failed.
SqlLoadObjectOptionalData failed with error: %d.
SqlLoadPolicyStore
SqlLoadPolicyStore failed.
SqlLoadPolicyStore receives NULL pSqlPersistContext.
SqlLoadPolicyStore succeeded.
SqlLoadSpecificChildObjectShallow failed with error: %d.
SqlPersistDelete failed.
SqlPersistIsUpdateNeeded called with pbIsUpdateNeeded = NULL or pSqlPersistContext = NULL.
SqlPersistIsUpdateNeeded failed.
SqlPersistSubmit failed.
SqlPersistSubmit receives NULL PersistContext.
SqlPersistUpdateCache failed.
SqlPersistUpdateCache has no updates.
SqlPersistUpdateCache has updates.
SqlPersistUpdateChildrenCache called.
SqlPersistUpdateChildrenCache failed.
SqlProviderInitialize receives lower version number in AzrolesInfo: %d.
SqlProviderInitialize receives NULL parameters: %d.
SqlRefreshObjectsByTimeStamp failed.
SqlRemoveSqlRoles failed.
SqlRemoveSqlRoles receives NULL SqlConnection.
SqlStoreHasUpdate has NULL pPersistContext or pbNeedUpdate parameter.
SqlSubmitMultiValueProperties failed.
SqlSubmitOptionalProperties failed.
SqlSubmitShallowProperties failed.
SqlUpdatePolicyUser failed.
SqlUpdatePolicyUsers failed.
SqlUpdatePolicyUsersByAcl failed to allocate memory.
SqlUpdatePolicyUsersByAcl failed.
SqlUpdateStoreStateInfo failed.
srand
State: Closed.
State: Connected.
State: Disconnected.
State: Initialized.
State: Started.
State: Uninitialized.
StckH
StckI
StckM
stdole2.tlbWWW
Stored Procedure %ws does not support parameter of ID=0x%x.
Stored Procedure %ws does not support result parameter of ID=0x%x.
StoreTimeStamp::GetUpdateInformation failed.
string too long
StringFileInfo
StringFromCLSID
StringFromGUID2
strrchr
Submitting a new object with name that has been submitted by other instances of azstore object
supportedCapabilities
SUVWATAUAVAWH
SUVWAVH
SUWATAUAVAWH
SVWATAUAVAWH
SVWAVAWH
SVWAVH
SWATAVAWH
swscanf
SYSTEM
SYSTEM\CurrentControlSet\Control\LSA\AzRoles
SYSTEM\CurrentControlSet\Control\LSA\AzRoles\Providers
systemMayContain
t#9X u
t$ E3
T$ E3
t$ UWATAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(E3
T$(E3
t$(L!p
T$(L#M
T$`E3
t$`fD9t$`t2H
t$0E3
t$0fD
t$0L!t$@E3
t$8L!p
t$fE9
t$PE3
t$pI!>
t$pM;
t$XfD
t(H!X
t:I9O
t[H!s
t+H9^
t0H9y0t*E
t3H9X
t4fA;
t8I+|$xH
tagAZ_PROP_CONSTANTS
TargetMachineWWW
Task reference
TaskLink
TaskRecord::Initialize fails to allocate memory for Bizrule language 
TaskRecord::Initialize fails to allocate memory for Bizrule Path 
tAZ_MAX_BIZRULE_STRINGWWW
TAZ_PROP_CLIENT_CONTEXT_USER_DNS_SAM_COMPATWW
tcH;>u
tCL9h
TerminateProcess
There are too many policy users for an ACL to hold.
tjL9q0tdD8t$Dt
tkM;u
TNameResolver
tnH;}
towlower
tPD90uKH
TranslateNameW
Translation
--Trigger for updating Timestamps
tvfD9+tpH
TYPELIB
TypeLib
TypeLib = s '{11A8B8EE-BF30-409A-8EF7-3A143EF70332}'
TypeX
u HcA<H
u%A8h!t
u%A8h)t
u%A8h1t
u)@8}
u)A8h!t
u)D9u0t
u.L9m
u;9D$Ht0L
u<9D$Pu
u=D;D$Pu6
u29D$Pt,H
u8H9|$`u%H9|$hu
u99\$puF9\$0u@E
UATAUAVAWH
UAVAWH
uDeleteRoleDefinitionl
ugA96u
uGH!t$(L
uHf9C
uIAzApplicationWW
ulTokenHandleLowPart
uMppTaskCollection
UnhandledExceptionFilter
UNKNOWN
UnregisterClassA
Unsupported Interface: 
uO9T$`vIL
uoD9e
Update [dbo].[AzMan_AzAuthorizationStore]
UpgradeStoresFunctionalLevel
UrlUnescapeW
USER32.dll
UserCanonicalWWW
UserDnsSamCompat
UserDnWW
UserGuid
UserSamCompatWWW
UserUpnW
UseStrongLocking
Using clone of running script engine.
Using free script engine from non-base thread.
Using free script engine.
Using new script engine.
uSNChanged
USVWATAUAVAWH
USVWATAVAWH
USWATAUAVAWH
UuidCreate
UuidCreate failed.
UuidFromStringW
UuidToStringA
UuidToStringW
UVWATAUAVAWH
UVWATAUH
UVWATAVH
UVWAVAWH
UWATAUAWH
UWATAVAWH
UWATAVAWI
UWAUAVAWH
UWAVH
uWfD9?tNH
uWH!L$(H
uzH!\$XE
V@NonMembersNameWW
V3NameFromSidW
val ThreadingModel = s 'Both'
val Version = s '1.0'
varApplicationGroups@
VarFileInfo
varInterfaceFlagsWWW
varInterfaceNamesWWW
varInterfaceT
varParameterName
varParameterNamesWWW
varReservedW
varRoles@
varScopeNamesWWW
varStringSidsWWW@
vAZ_PROP_GROUP_MEMBERSWWW
VBScript
vector<T> too long
VersionIndependentProgID = s 'AzRoles.AzAuthorizationStore'
VersionIndependentProgID = s 'AzRoles.AzBizRuleContext'
VersionIndependentProgID = s 'AzRoles.AzPrincipalLocator'
VersionW
VirtualAlloc
VirtualProtect
VirtualQuery
VppGroupW
VS_VERSION_INFO
vSidsWWW
vt=VT_ARRAY,elementType=[other value]
vt=VT_ARRAY,elementType=VT_BSTR 
vt=VT_ARRAY,elementType=VT_DISPATCH 
vt=VT_ARRAY,elementType=VT_I2 
vt=VT_ARRAY,elementType=VT_I4 
vt=VT_ARRAY,elementType=VT_VARIANT 
vt=VT_BSTR,%s
vt=VT_DISPATCH
vt=VT_EMPTY
vt=VT_I2,%d
vt=VT_I4,%d
VWATAUAVAWH
VWATAUAVH
VWATAVAWH
VWAUAVAWH
VWAVH
w;AddTaskW 
WakeAllConditionVariable
WATAUAVAWH
WATAVH
WAVAWH
WAZ_MAX_SCOPE_NAME_LENGTH
wcscat_s
wcschr
wcscmp
wcscpy_s
wcsncmp
wcsncpy_s
wcspbrk
wcsrchr
wcsstr
wcstol
Where
WHERE [AppID] = @appID
WHERE [ID] = @storeID
WHERE [StoreID] = @storeID
WHILE @DataLength - @Pos > 8
WideCharToMultiByte
WideCharToMultiByte failed
wireHWND
WLDAP32.dll
WNetGetConnectionW
wnsprintfW
WriteFile
x ATAVAWH
x AUAVAWH
x AVH
x UATAUAVAWH
XA^_^[
XA_A^A]A\_^
XA_A^A]A\_^[]
xA_NewEnum
XBizRuleInterfacesWWW
XCreateRoleWW
xDeleteWWd
xml file %ws doesn't exist.
xml file %ws exists.
XmlCheckSecurityPrivilege: invalid full path '%ws'
XmlCheckSecurityPrivilege: path is too long '%ws'
XPath
XPath query(link delete)=%ws
XPath query(refresh)=%ws
xvD9e0tkH
xxD9}0tmH
Y@H9;u%L
y8H9y 
Z$A;Y
Z__MIDL_IWinTypes_0009WWW
zItem
zppObjectPickerWWt
