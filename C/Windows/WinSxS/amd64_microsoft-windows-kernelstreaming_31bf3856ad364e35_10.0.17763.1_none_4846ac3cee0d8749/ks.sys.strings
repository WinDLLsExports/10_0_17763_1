 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 A^_^
 A__^
 A_A\_
 A_A^_
 A_A^A\
 A_A^A]
 A_A^A]_^
 A_A^A]A\_
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!;k s E3
!\$ H
!|$(!|$ 
!l$(A
!l$0H
!t$03
!This program cannot be run in DOS mode.
%s&%s
%s\%s
%s\%s%c
%s\%s\%s
(_^][
(t$@L
,S~%5
.00cfg
.bss$00
.bss$09
.bss$dk00
.bss$dk01
.bss$dk09
.bss$pr00
.bss$pr01
.bss$zz
.data
.data$00
.data$09$brc
.data$dk00
.data$dk01$brc
.data$pr00
.data$zz
.data$zz$brc
.edata
.gfids
.giats
.guids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$00
.rdata$01
.rdata$brc
.rdata$PAGE$lp01ks.sys!30_clientonly
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$lp00ks.sys!30_clientonly
.text$lp01ks.sys!30_clientonly
.text$lp03ks.sys!35_hybridboot
.text$lp08ks.sys!50_coldboot
.text$mn
.text$mn$00
.text$mn$21
.text$np
.text$zy
.text$zz
.xdata
;~ s9L
;C@w+H
;HpuEL
;khuZ3
;X s H
??_FCBaseUnknown@@QEAAXXZ
??0CBaseUnknown@@QEAA@AEBU_GUID@@PEAUIUnknown@@@Z
??0CBaseUnknown@@QEAA@PEAUIUnknown@@@Z
??1CBaseUnknown@@UEAA@XZ
?IndirectedAddRef@CBaseUnknown@@UEAAKXZ
?IndirectedQueryInterface@CBaseUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
?IndirectedRelease@CBaseUnknown@@UEAAKXZ
?NonDelegatedAddRef@CBaseUnknown@@UEAAKXZ
?NonDelegatedQueryInterface@CBaseUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
?NonDelegatedRelease@CBaseUnknown@@UEAAKXZ
@ A+G
@!\$ 3
@0I9@@u
@8{Hu+H
@89(u
@8i)r
@8kPtsH
@8s t<H
@8y)r
@A\_^
@A]A\_
@A^_]
@A^_^
@A^A\]
@A^A\_
@A^A\_^[
@A^A\_^]
@A__]
@A_A^_
@A_A^_^]
@A_A^A]
@A_A^A]A\_^]
@INIT
@PAGECONS
@SUAUH
@SUVWATAUAVAWH
@SUVWAVH
@SVWH
@SWAVAWH
@tNfD
@USVWATAUAVAWH
@USVWATAVAWH
@USWAVAWH
@USWH
@VAVAWH
@WATAUAVAWH
@WATAUAVH
@WAVH
[*\B\
[D9R,t
[E[}[
[T\m\
\!]e]
\$ E3
\$ VWAWH
\$(E3
\$]J]
\*\g\
\']h]?^
\<\N\o\
\0]W]
\A\f\u\
\C^|^
\Device\DxgKrnl
\Device\KSENUM#%08x
\Device\VerifierExt
\DosDevices
\H]p]
\KernelObjects\LowMemoryCondition
\L\r\
\Registry\Machine\SOFTWARE\Microsoft\OEM\Device\Capture
\Registry\Machine\SYSTEM\CurrentControlSet\Control\
\Registry\Machine\SYSTEM\CurrentControlSet\Control\DeviceClasses\{24e552d7-6523-47f7-a647-d3465bf1F5ca}\ReferenceGuids
\Registry\Machine\SYSTEM\CurrentControlSet\Control\DeviceClasses\{e5323777-f976-4f5b-9b55-b94699c46e44}\ReferenceGuids
\Registry\Machine\SYSTEM\CurrentControlSet\Control\MediumCache
\REGISTRY\MACHINE\SYSTEM\CurrentControlSet\Services
\SystemRoot\system32\drivers\
]!^#_K_]_
]%^Z^
],^@^\_
].]k]
]']l]
]1]V]e]
]2]n]
]6^Y^~^
]9^c^
]R]{]
^*^O^{^
^'_7_
^1^V^e^
^6_v_
^D8{a
^I_q_
^L^|^
^x^0_T_
__C_specific_handler
_3_y_
_KsEdit
_L_]_
_vsnwprintf
_wcsicmp
_wcsnicmp
` AUAVAWH
`.edata
`0t6D8{`u0
`A^_^][
`A_A^A]_^
`A_A^A]A\_^]
`PAGEKsVf
{ AUAVAWH
{ AVH
{ UATAUAVAWH
{ UAVAWH
{0621061A-EE75-11D0-B915-00A0C9223196}
{0uy3
{146F1A80-4791-11D0-A5D6-28DB04C10000}
{53172480-4791-11D0-A5D6-28DB04C10000}
{642F5D00-4791-11D0-A5D6-28DB04C10000}
{72CF721C-525A-11D1-9AA1-00A0C9223196}
|$ ATAVAWH
|$ AVH
|$ E3
|$ UATAUAVAWH
|$ UATAVH
|$ UH
|$(A^
|$(E3
|$@A_A^A]A\
|$0I;
|$8D;
|$8H;
|$HE2
|$hI;
|$PI;
}pL9g
+Cx;C|
+l$xH
+L$xI
+l$xL
=;^`s=
000004B0
0A^_^
0A^A\_
0A^A]A\
0A^A]A\^]
0A_A]A\
0A_A^_
0A_A^A\
0A_A^A\_^
0A_A^A]
0A_A^A]_^
0A_A^A]_^][
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0pi3A
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
1st Time
29\$Lu'I
6(LqG
8\$xt
8A^A]A\_
8KSPD
8KSPDt
8KSPDu
8usH;{
9_(u"
9{(u"
9{Lt7H
9D$Pt
9n0}8H
9p v"
9Stt9H
9x v8
A;@ s
A;@@r%
A;@@s
A]A\]
A^_^][
A^A\_^]
A^A\_^][
A^A]_
A^A]A\_]
A_A\_
A_A^]
A_A^_
A_A^_[
A_A^_[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A+E,;
ALLOWED
ApA8AqH
ATAUAVH
ATAVAWH
AVStream\%s
AVStream\%s#%s
AVStrMiniDeviceAdd returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceAdd should not return STATUS_PENDING.
AVStrMiniDeviceCancelRemove returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceCancelStop returns with a different IRQL other than the one it was called with.
AVStrMiniDevicePostStart returns with a different IRQL other than the one it was called with.
AVStrMiniDevicePostStart should not return STATUS_PENDING.
AVStrMiniDeviceQueryCapabilities returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceQueryCapabilities should not return STATUS_PENDING.
AVStrMiniDeviceQueryInterface returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceQueryPower returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceQueryRemove returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceQueryRemove should not return STATUS_PENDING.
AVStrMiniDeviceQueryStop returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceQueryStop should not return STATUS_PENDING.
AVStrMiniDeviceRemove returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceSetPower returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceStart returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceStart should not return STATUS_PENDING.
AVStrMiniDeviceStop returns with a different IRQL other than the one it was called with.
AVStrMiniDeviceSurpriseRemoval returns with a different IRQL other than the one it was called with.
AVStrMiniFilterClose returns with a different IRQL other than the one it was called with.
AVStrMiniFilterCreate returns with a different IRQL other than the one it was called with.
AVStrMiniFilterProcess returns with a different IRQL other than the one it was called with.
AVStrMiniFilterReset returns with a different IRQL other than the one it was called with.
AVStrMiniPinClose returns with a different IRQL other than the one it was called with.
AVStrMiniPinConnect returns with a different IRQL other than the one it was called with.
AVStrMiniPinConnect should not return STATUS_PENDING.
AVStrMiniPinCreate returns with a different IRQL other than the one it was called with.
AVStrMiniPinDisconnect returns with a different IRQL other than the one it was called with.
AVStrMiniPinProcess returns with a different IRQL other than the one it was called with.
AVStrMiniPinReset returns with a different IRQL other than the one it was called with.
AVStrMiniPinSetDataFormat returns with a different IRQL other than the one it was called with.
AVStrMiniPinSetDataFormat should not return STATUS_PENDING.
AVStrMiniPinSetDeviceState returns with a different IRQL other than the one it was called with.
AVStrMiniPinSetDeviceState should not return STATUS_PENDING.
B I9@
B.reloc
B.rsrc
bGFIDS
BpH;X
BufSize
C(H9A(u
C(H9A(u~H
c4HC3
C8H9A8
C8H9A8t
CHANH
ChH98
CLIENT
CompanyName
CrH9}XuR
CRIM 
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ H9D$ t
D$ H9H
D$ KSfdI
D$ KSnd
D$ KSpd
D$ KStc
D$ L9@
D$(E3
d$(E3
D$(E3
D$(KsAcA
D$@E3
d$@E3
D$\Hi
D$`H9Y
D$0E3
D$0M9
D$4Hi
D$DHi
d$h;w0sTL
D$HE3
D$hH;
D$pD;
d$pE3
D$PE3
D$pH;
D$XE3
D$xE3
D$xI;
D$XuW
D){,H
D)s<H
D)w<H
D;^ds
D;^dsVE
D;g,r
D;m0r
D|$pI
D8{@u
D8{|t
D8{at?D9{dt9
D8{pt
D8{st$
D8{stw
D8~st
D8~stXL
D8a)r
D8htt
D8i)r
D8kat
D8kst9H;
D8kuu
D8q)r
D8q@u{H
D8sat5D8srt/H
D8wst
D8wTt
D8y)r
D9f8t
D9g,vC
D9y t
DENIED
DllInitialize
Dt$HD
E(H9A@trH
E;G r
E+},H
E9&ta
E9&teD9
EntryCount
ERich
EtwRegister
EtwRegisterClassicProvider
EtwUnregister
EtwWriteTransfer
EventData
EVo:7
ExAcquireFastMutex
ExAcquireFastMutexUnsafe
ExAcquireResourceExclusiveLite
ExAcquireResourceSharedLite
ExAcquireRundownProtection
ExAcquireSpinLockShared
ExAllocatePoolWithQuotaTag
ExAllocatePoolWithTag
ExDeleteNPagedLookasideList
ExDeletePagedLookasideList
ExDeleteResourceLite
ExEventObjectType
ExFreePoolWithTag
ExGetPreviousMode
ExInitializeNPagedLookasideList
ExInitializePagedLookasideList
ExInitializeResourceLite
ExInitializeRundownProtection
ExInterlockedInsertHeadList
ExInterlockedInsertTailList
ExInterlockedRemoveHeadList
ExpInterlockedPopEntrySList
ExpInterlockedPushEntrySList
ExQueryDepthSList
ExQueueWorkItem
ExRaiseStatus
ExReleaseFastMutex
ExReleaseFastMutexUnsafe
ExReleaseResourceLite
ExReleaseRundownProtection
ExReleaseSpinLockShared
ExSemaphoreObjectType
ExSubscribeWnfStateChange
ExUnsubscribeWnfStateChange
ExWaitForRundownProtectionRelease
F0L9h`uPH
F0L9p@u
f9,Qu
fA9(t>H
FALSE
fD9,Au
fD9,Xu
fD9,yu
fD94Xu
fD9dC
fD9DE
fD9DM
fE9,Du
fE9.L
fE9<Fu
fE94Gu
ffffff
fffffff
FhD8{|t
FileDescription
FileVersion
FilterAddress
FilterData
FilterExt
G(D!{
G8D9x
H H9O
H WATAUAVAWH
H!\$ E3
H!\$ H
H!\$(D
H!\$@L
H!\$`L
H!\$PH
H!\$PL
H!](H
H!]8H9
H!|$8H
H!l$ E
H!l$ L
H!l$0H
H!l$h
H!t$(L
H!t$03
H!t$8!u
H(9h vOA
H(D9@ vLA
H.data
H.guids
H.idata
h.rdata
H;S t
H;S0ugH
H;w(t8H
H+GpH
H8H9A
H9:uLH
H9^ t
H9_ t^
H9_`u
H90uHH
H98uxH
H99u_H
H99uT
H9A(t
H9A(u
H9A@t
H9A`u
H9A0t
H9A8uX
H9AXu
H9Bpu8L
H9BpuA
H9C@u+I
H9CHu!L9c`t
H9K u
H9nXt$H
H9P8t
H9s u
H9Ugu
H9UguOH
H9W8t
H9XPu#
HA_A^_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
HAL.dll
has enumed
HD8~rt
HPAGE
I\$\H
I9ApH
I9Apu>A
I9ApuA3
Image
Information
INIT$lp08ks.sys!50_coldboot
INIT$zz
InterfaceGuid
InternalName
IoAcquireCancelSpinLock
IoAcquireRemoveLockEx
IoAllocateDriverObjectExtension
IoAllocateIrp
IoAllocateMdl
IoAllocateWorkItem
IoAttachDeviceToDeviceStack
IoBuildDeviceIoControlRequest
IoBuildSynchronousFsdRequest
IoCancelIrp
IoCreateDevice
IoCreateFile
IoDeleteDevice
IoDetachDevice
IofCallDriver
IofCompleteRequest
IoFileObjectType
IoFreeIrp
IoFreeMdl
IoFreeWorkItem
IoGetCurrentProcess
IoGetDeviceAttachmentBaseRef
IoGetDeviceInterfaceAlias
IoGetDeviceInterfaces
IoGetDeviceObjectPointer
IoGetDeviceProperty
IoGetDevicePropertyData
IoGetDriverObjectExtension
IoGetFileObjectGenericMapping
IoGetInitiatorProcess
IoGetRelatedDeviceObject
IoInitializeRemoveLockEx
IoInvalidateDeviceRelations
IoIsWdmVersionAvailable
IoOpenDeviceInterfaceRegistryKey
IoOpenDeviceRegistryKey
IoQueueWorkItem
IoRegisterDeviceInterface
IoReleaseCancelSpinLock
IoReleaseRemoveLockAndWaitEx
IoReleaseRemoveLockEx
IoSetDeviceInterfacePropertyData
IoSetDeviceInterfaceState
IoWMIRegistrationControl
K H+O
K(H+O
KeAcquireSpinLockAtDpcLevel
KeAcquireSpinLockRaiseToDpc
KeBugCheckEx
KeCancelTimer
KeClearEvent
KeEnterCriticalRegion
KeFlushIoBuffers
KeFlushQueuedDpcs
KeInitializeDpc
KeInitializeEvent
KeInitializeMutex
KeInitializeSpinLock
KeInitializeTimer
KeInitializeTimerEx
KeInsertQueueDpc
KeLeaveCriticalRegion
KeLowerIrql
KeQueryPerformanceCounter
KeQuerySystemTimePrecise
KeQueryTimeIncrement
KeReadStateEvent
KeReadStateMutex
KeReleaseMutex
KeReleaseSemaphore
KeReleaseSpinLock
KeReleaseSpinLockFromDpcLevel
KeRemoveQueueDpc
KeResetEvent
Kernel CSA Library
KeSetEvent
KeSetImportanceDpc
KeSetTimer
KeSetTimerEx
KeSynchronizeExecution
KeWaitForSingleObject
KfRaiseIrql
KhL;K
KoCreateInstance
KoDeviceInitialize
KoDriverInitialize
KoRelease
ks.pdb
ks.sys
KS_CameraGrab
KS_DisplayOff
KS_IoProbeandLock
KS_PnpAddDevice
KS_QueryInterface
KS_StreamingRequest
KS_WNF
KS_WNFNotification
KS_WNFPinState
Ks64H
KsAcquireCachedMdl
KsAcquireControl
KsAcquireControl should only be called at IRQL == PASSIVE_LEVEL.
KsAcquireDevice
KsAcquireDevice should only be called at IRQL == PASSIVE_LEVEL.
KsAcquireDeviceSecurityLock
KsAcquireResetValue
KsAddDevice
KsAddDevice should only be called at IRQL == PASSIVE_LEVEL.
KsAddEvent
KsAddEvent should only be called at IRQL == PASSIVE_LEVEL.
KsAddIrpToCancelableQueue
KsAddItemToObjectBag
KsAddItemToObjectBag should only be called at IRQL == PASSIVE_LEVEL.
KsAddObjectCreateItemToDeviceHeader
KsAddObjectCreateItemToObjectHeader
KSahH
KSaiH
KsAllocateDefaultClock
KsAllocateDefaultClockEx
KsAllocateDeviceHeader
KsAllocateExtraData
KsAllocateObjectBag
KsAllocateObjectBag should only be called at IRQL == PASSIVE_LEVEL.
KsAllocateObjectCreateItem
KsAllocateObjectHeader
KSatH
KSbdH
KSbeH
KsCacheMedium
KsCancelIo
KsCancelRoutine
KSceA
KSceH
KSciA
KSciH
KScnH
KsCompletePendingRequest
KsCompletePendingRequest should only be called at IRQL <= DISPATCH_LEVEL.
KsCopyObjectBagItems
KsCopyObjectBagItems should only be called at IRQL == PASSIVE_LEVEL.
KScpH
KsCreateAllocator
KsCreateBusEnumObject
KsCreateClock
KsCreateDefaultAllocator
KsCreateDefaultAllocatorEx
KsCreateDefaultClock
KsCreateDefaultSecurity
KsCreateDevice
KsCreateDevice should only be called at IRQL == PASSIVE_LEVEL.
KsCreateFilterFactory
KsCreateFilterFactory should only be called at IRQL == PASSIVE_LEVEL.
KsCreatePin
KsCreateTopologyNode
KScsA
KScsH
KSdaA
KSdaL;
KSdcI
KsDecrementCountedWorker
KsDefaultAddEventHandler
KsDefaultAddEventHandler should only be called at IRQL == PASSIVE_LEVEL.
KsDefaultDeviceIoCompletion
KsDefaultDispatchPnp
KsDefaultDispatchPower
KsDefaultForwardIrp
KSdeH
KsDereferenceBusObject
KsDereferenceSoftwareBusObject
KsDeviceGetBusData
KsDeviceGetBusData should only be called at IRQL <= DISPATCH_LEVEL.
KsDeviceRegisterAdapterObject
KsDeviceRegisterAdapterObject should only be called at IRQL == PASSIVE_LEVEL.
KsDeviceRegisterThermalDispatch
KsDeviceSetBusData
KsDeviceSetBusData should only be called at IRQL <= DISPATCH_LEVEL.
KSdhH
KSdiH
KsDisableEvent
KsDiscardEvent
KsDispatchFastIoDeviceControlFailure
KsDispatchFastReadFailure
KsDispatchInvalidDeviceRequest
KsDispatchIrp
KsDispatchQuerySecurity
KsDispatchSetSecurity
KsDispatchSpecificMethod
KsDispatchSpecificProperty
KSdmH
KSeeH
KsEnableEvent
KsEnableEventWithAllocator
KSewH
KsFastMethodHandler
KsFastPropertyHandler
KSfdH
KSfiH
KsFIH
KsFilterAcquireProcessingMutex
KsFilterAcquireProcessingMutex should only be called at IRQL == PASSIVE_LEVEL.
KsFilterAddTopologyConnections
KsFilterAddTopologyConnections should only be called at IRQL == PASSIVE_LEVEL.
KsFilterAttemptProcessing
KsFilterAttemptProcessing should only be called at IRQL <= DISPATCH_LEVEL.
KsFilterCreateNode
KsFilterCreateNode should only be called at IRQL == PASSIVE_LEVEL.
KsFilterCreatePinFactory
KsFilterCreatePinFactory should only be called at IRQL == PASSIVE_LEVEL.
KsFilterFactoryAddCreateItem
KsFilterFactoryGetSymbolicLink
KsFilterFactoryGetSymbolicLink should only be called at IRQL == PASSIVE_LEVEL.
KsFilterFactorySetDeviceClassesState
KsFilterFactorySetDeviceClassesState should only be called at IRQL == PASSIVE_LEVEL.
KsFilterFactoryUpdateCacheData
KsFilterFactoryUpdateCacheData should only be called at IRQL <= APC_LEVEL.
KsFilterGetAndGate
KsFilterGetChildPinCount
KsFilterGetChildPinCount should only be called at IRQL == PASSIVE_LEVEL.
KsFilterGetFirstChildPin
KsFilterGetFirstChildPin should only be called at IRQL == PASSIVE_LEVEL.
KsFilterRegisterPowerCallbacks
KsFilterRegisterPowerCallbacks should only be called at IRQL == PASSIVE_LEVEL.
KsFilterReleaseProcessingMutex
KsFilterReleaseProcessingMutex should only be called at IRQL == PASSIVE_LEVEL.
KsForwardAndCatchIrp
KsForwardIrp
KsFreeDefaultClock
KsFreeDeviceHeader
KsFreeEventList
KsFreeObjectBag
KsFreeObjectBag should only be called at IRQL == PASSIVE_LEVEL.
KsFreeObjectCreateItem
KsFreeObjectCreateItemsByContext
KsFreeObjectHeader
KsGenerateDataEvent
KsGenerateEvent
KsGenerateEventList
KsGenerateEvents
KsGenerateEvents should only be called at IRQL <= DISPATCH_LEVEL.
KsGenerateThermalEvent
KsGetBusEnumIdentifier
KsGetBusEnumParentFDOFromChildPDO
KsGetBusEnumPnpDeviceObject
KsGetDefaultClockState
KsGetDefaultClockTime
KsGetDevice
KsGetDevice should only be called at IRQL == PASSIVE_LEVEL.
KsGetDeviceForDeviceObject
KsGetFilterFromIrp
KsGetFirstChild
KsGetFirstChild should only be called at IRQL == PASSIVE_LEVEL.
KsGetImageNameAndResourceId
KsGetNextSibling
KsGetNextSibling should only be called at IRQL == PASSIVE_LEVEL.
KsGetNodeIdFromIrp
KsGetObjectFromFileObject
KsGetObjectTypeFromFileObject
KsGetObjectTypeFromIrp
KsGetOuterUnknown
KsGetParent
KsGetParent should only be called at IRQL == PASSIVE_LEVEL.
KsGetPinFromIrp
KsHandleSizedListQuery
KsHkH
KsiDefaultClockAddMarkEvent
KsIncrementCountedWorker
KsInitializeDevice
KsInitializeDevice should only be called at IRQL == PASSIVE_LEVEL.
KsInitializeDeviceProfile
KsInitializeDriver
KsInitializeDriver should only be called at IRQL == PASSIVE_LEVEL.
KsInstallBusEnumInterface
KsiPropertyDefaultClockGetCorrelatedPhysicalTime
KsiPropertyDefaultClockGetCorrelatedTime
KsiPropertyDefaultClockGetFunctionTable
KsiPropertyDefaultClockGetPhysicalTime
KsiPropertyDefaultClockGetResolution
KsiPropertyDefaultClockGetState
KsiPropertyDefaultClockGetTime
KsiQueryObjectCreateItemsPresent
KsIsBusEnumChildDevice
KsIsCurrentProcessFrameServer
KSleA
KSleH
KsLoadResource
KSlwH
KsMapModuleName
KSmcA
KSmcH
KsMergeAutomationTables
KsMergeAutomationTables should only be called at IRQL == PASSIVE_LEVEL.
KsMethodHandler
KsMethodHandlerWithAllocator
KsMoveIrpsOnCancelableQueue
KsNullDriverUnload
KSohA
KSohH
KSohI
KSPDH
KsPersistDeviceProfile
KSpfA
KSpfH
KSpiA
KSpiH
KsPinAcquireProcessingMutex
KsPinAcquireProcessingMutex should only be called at IRQL == PASSIVE_LEVEL.
KsPinAttachAndGate
KsPinAttachAndGate should only be called at IRQL == PASSIVE_LEVEL.
KsPinAttachOrGate
KsPinAttachOrGate should only be called at IRQL == PASSIVE_LEVEL.
KsPinAttemptProcessing
KsPinAttemptProcessing should only be called at IRQL <= DISPATCH_LEVEL.
KsPinDataIntersection
KsPinGetAndGate
KsPinGetAvailableByteCount
KsPinGetConnectedFilterInterface
KsPinGetConnectedFilterInterface should only be called at IRQL == PASSIVE_LEVEL.
KsPinGetConnectedPinDeviceObject
KsPinGetConnectedPinDeviceObject should only be called at IRQL <= APC_LEVEL.
KsPinGetConnectedPinFileObject
KsPinGetConnectedPinFileObject should only be called at IRQL == PASSIVE_LEVEL.
KsPinGetConnectedPinInterface
KsPinGetConnectedPinInterface should only be called at IRQL == PASSIVE_LEVEL.
KsPinGetCopyRelationships
KsPinGetFirstCloneStreamPointer
KsPinGetFirstCloneStreamPointer should only be called at IRQL <= DISPATCH_LEVEL.
KsPinGetLeadingEdgeStreamPointer
KsPinGetLeadingEdgeStreamPointer should only be called at IRQL <= DISPATCH_LEVEL.
KsPinGetNextSiblingPin
KsPinGetNextSiblingPin should only be called at IRQL == PASSIVE_LEVEL.
KsPinGetParentFilter
KsPinGetParentFilter should only be called at IRQL == PASSIVE_LEVEL.
KsPinGetReferenceClockInterface
KsPinGetTrailingEdgeStreamPointer
KsPinGetTrailingEdgeStreamPointer should only be called at IRQL <= DISPATCH_LEVEL.
KsPinHandshake should only be called at IRQL == PASSIVE_LEVEL.
KsPinPropertyHandler
KsPinRegisterFrameReturnCallback
KsPinRegisterFrameReturnCallback should only be called at IRQL == PASSIVE_LEVEL.
KsPinRegisterHandshakeCallback
KsPinRegisterHandshakeCallback should only be called at IRQL == PASSIVE_LEVEL.
KsPinRegisterIrpCompletionCallback
KsPinRegisterIrpCompletionCallback should only be called at IRQL == PASSIVE_LEVEL.
KsPinRegisterPowerCallbacks
KsPinRegisterPowerCallbacks should only be called at IRQL <= APC_LEVEL.
KsPinReleaseProcessingMutex
KsPinReleaseProcessingMutex should only be called at IRQL == PASSIVE_LEVEL.
KsPinSetPinClockTime
KsPinSetPinClockTime should only be called at IRQL <= DISPATCH_LEVEL.
KsPinSubmitFrame
KsPinSubmitFrameMdl
KsPinSubmitFrameMdl should only be called at IRQL <= DISPATCH_LEVEL.
KSpkH
KSppH
KSppI
KsProbeStreamIrp
KsProcessPinUpdate
KsProcessPinUpdate should only be called at IRQL == PASSIVE_LEVEL.
KsPropertyHandler
KsPropertyHandlerWithAllocator
KsPublishDeviceProfile
KSqfH
KsQueryDevicePnpObject
KsQueryInformationFile
KsQueryObjectAccessMask
KsQueryObjectCreateItem
KsQueueWorkItem
KsReadFile
KsRecalculateStackDepth
KsReferenceBusObject
KsReferenceSoftwareBusObject
KsRegisterAggregatedClientUnknown
KsRegisterCountedWorker
KsRegisterFilterWithNoKSPins
KsRegisterFilterWithNoKSPins should only be called at IRQL == PASSIVE_LEVEL.
KsRegisterWorker
KsReleaseCachedMdl
KsReleaseControl
KsReleaseControl should only be called at IRQL == PASSIVE_LEVEL.
KsReleaseDevice
KsReleaseDevice should only be called at IRQL == PASSIVE_LEVEL.
KsReleaseDeviceSecurityLock
KsReleaseIrpOnCancelableQueue
KsRemoveBusEnumInterface
KsRemoveIrpFromCancelableQueue
KsRemoveItemFromObjectBag
KsRemoveItemFromObjectBag should only be called at IRQL == PASSIVE_LEVEL.
KsRemoveSpecificIrpFromCancelableQueue
KSrpH
KsRpH
KSrvH
KSseH
KsServiceBusEnumCreateRequest
KsServiceBusEnumPnpRequest
KsSetDefaultClockState
KsSetDefaultClockTime
KsSetDevicePnpAndBaseObject
KsSetInformationFile
KsSetMajorFunctionHandler
KsSetPowerDispatch
KsSetTargetDeviceObject
KsSetTargetState
KSsfA
KSshH
KSspH
KSstH
KsStreamIo
KsStreamPointerAdvance
KsStreamPointerAdvance should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerAdvanceOffsets
KsStreamPointerAdvanceOffsets should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerAdvanceOffsetsAndUnlock
KsStreamPointerAdvanceOffsetsAndUnlock should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerCancelTimeout
KsStreamPointerCancelTimeout should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerClone
KsStreamPointerClone should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerDelete
KsStreamPointerDelete should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerGetIrp
KsStreamPointerGetIrp should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerGetMdl
KsStreamPointerGetMdl should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerGetNextClone
KsStreamPointerGetNextClone should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerLock
KsStreamPointerLock should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerScheduleTimeout
KsStreamPointerScheduleTimeout should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerSetStatusCode
KsStreamPointerSetStatusCode should only be called at IRQL <= DISPATCH_LEVEL.
KsStreamPointerUnlock
KsStreamPointerUnlock should only be called at IRQL <= DISPATCH_LEVEL.
KsSynchronousIoControlDevice
KStcH
KsTerminateDevice
KsTerminateDevice should only be called at IRQL == PASSIVE_LEVEL.
KsTopologyPropertyHandler
KsUnregisterWorker
KsUnserializeObjectPropertiesFromRegistry
KsUpdateCameraStreamingConsent
KsValidateAllocatorCreateRequest
KsValidateAllocatorFramingEx
KsValidateClockCreateRequest
KsValidateConnectRequest
KsValidateTopologyNodeCreateRequest
KsWriteFile
L$ ;H
l$ E3
L$ E3
L$ SUVWAUAVAWH
L$ SUVWH
L$ UH
L$ UVWATAUAVAWH
L$ VWH
L$ WATAUAVAWH
L$(E3
L$@E9
l$@fA
L$@fD
L$@H3
L$`9J
L$`H3
L$0E3
L$0H;
L$0H3
L$0H9y
L$8H;
L$HL+
l$p@2
L$PE3
L$pE3
L$PE3
L$pE3
L$PE3
L$PH3
L$pH3
L$PH3
L$pH3
l$pI;
L$X9A
L$xE3
L$XH3
L;ntsL
L9{(u
L90u$L
L90uRH
L9c0tkD8
L9g u
L9I u
L9yPt|H
L9yPu
L9zPu
LdrAccessResource
LdrFindResource_U
LegalCopyright
LEVL@
m(9} v3D
M\:MT
M9&uxM
M9H t
MediaCategories\
MHA+AxA;A|v-H
Microsoft
Microsoft Corporation
Microsoft-Windows-KernelStreaming
Mm64BitPhysicalAddress
MmAddVerifierThunks
MmAllocatePagesForMdl
MmFreePagesFromMdl
MmGetSystemRoutineAddress
MmIsDriverVerifying
MmIsVerifierEnabled
MmLockPagableDataSection
MmMapLockedPagesSpecifyCache
MmProbeAndLockPages
MmUnlockPages
MmUnmapLockedPages
Modules\
MSCameraFlags
MXD+K
NoPhysicalCameraLED
Notify
ntoskrnl.exe
o-7@x
ObfDereferenceObject
ObfReferenceObject
ObOpenObjectByPointer
ObReferenceObjectByHandle
OhD8{|t
Op9q 
OPCOx
OriginalFilename
p AWH
p WATAUAVAWH
p WATAVH
p WAVAWH
P#QJQ
P(QPQ
P;PsP
P]QuQ
P<QgQ
P3PyP
P3Q[Q
PA]][
pA^A]_^]
PA_A^^
PA_A^_
PA_A^_^]
pA_A^A]A\_^[
PA_A^A]A\_^]
PAGE$lp00ks.sys!30_clientonly
PAGE$lp01ks.sys!30_clientonly
PAGE$lp03ks.sys!35_hybridboot
PAGE$lp08ks.sys!50_coldboot
PAGE$lp09ks.sys!50_coldboot
PAGE$np
PAGE$zy
PAGE$zz
PAGECONST
PAGEKsVf$lp01ks.sys!30_clientonly
PAGEKsVf$zy
PAGEKsVf$zz
Parameters
PcFhH
PHTBU(W
PinId
PinState
PkQ}Q
pKsDevice
PnpId
PoCallDriver
PoRegisterPowerSettingCallback
PoRegisterSystemState
PoRequestPowerIrp
PoSetPowerState
PoStartNextPowerIrp
PoUnregisterPowerSettingCallback
PoUnregisterSystemState
PQQoQ
ProbeForRead
ProbeForWrite
ProcessId
ProductName
ProductVersion
PRVAX
PsDereferencePrimaryToken
PsGetProcessId
PsGetProcessSessionId
PsGetThreadProcess
PsGetVersion
PsLookupProcessByProcessId
PsReferencePrimaryToken
Q H+V
Q(H+V
Q*R\R
Q,R0SvU
Q.R_R
Q=ReR
Q0H;S0u
Q0R}R
Q7QCQaQ
QfQ~Q`R
QiQfR6T
QKRzR
QMRtR
QSQuQ
QxI!C
QXRpR
r M9y
R"RxR
R$fA;Z*
R$SKS
R&STS
R(SPS
R,RCR
R^S~Sh_
R<R@S
R1R|R
R5RwR
RCS[S
ResourceId
RLSwS
RPSXT
rT@X'Z"[h[{[
RtlAddAccessAllowedAceEx
RtlAppendUnicodeStringToString
RtlAppendUnicodeToString
RtlCheckTokenMembership
RtlCompareMemory
RtlCompareUnicodeString
RtlConvertSidToUnicodeString
RtlCopySid
RtlCopyUnicodeString
RtlEqualSid
RtlFreeUnicodeString
RtlGUIDFromString
RtlInitializeSid
RtlInitUnicodeString
RtlIntegerToUnicodeString
RtlLengthRequiredSid
RtlLengthSid
RtlMapGenericMask
RtlQueryPackageClaims
RtlSelfRelativeToAbsoluteSD
RtlStringFromGUID
RtlSubAuthoritySid
RtlValidSid
RtlWriteRegistryValue
S#S`S
S%TiT
S&S]WPX
S&TnT
S.SLS
S.TrT
-S?V_V
S|T.U>UWUxU
S4T[T
S5T\T
SAT`Y
SBUmY
SeAccessCheck
SeAppendPrivileges
SeAssignSecurity
SeCaptureSubjectContext
SeExports
SeFreePrivileges
SeLockSubjectContext
SeOpenObjectAuditAlarm
SeQueryInformationToken
SeQuerySecurityDescriptorInfo
SeReleaseSubjectContext
SeSetSecurityDescriptorInfo
SeSinglePrivilegeCheck
SeUnlockSubjectContext
sJH9}8t:H
sPH9sptJH
Start
Status
StringFileInfo
STT^Z
SUVWATAUAVAWH
SUVWATAVH
SUVWAUAVAWH
SUVWAVAWH
SVWATAUAVAWH
SVWATAVH
SWdnH
SWdr@
SWdrA
SWdrf
SWioH
SWkiH
SWpdH
SWreH
SWrpH
sxD9|$0t
SZT~T
t D8q)
t!@8h)r
T!TiT
t"@8i)r
t"D8i)r
t"E8b)r
t#@8y)r
t#D8y)r
t$ E3
t$ UWATAUAVH
t$ UWATAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WATAVH
t$ WATAWH
t$ WAVAWH
t$ WH
t$(E3
t$@8i)r
T$`!l$(H
t$0E3
t$0L9s
T$8E3
t$8H;
t$H9A
T$pD;
T$PH9Bpu>
t%D8a)r
t%D8q)r
t%L9y u
T%UMU
t&@8i)r 
t(L9z8u"H
t)H9XPu#
t.D8q)r(
t.H9Y
t/H9A
t/L9A
T/TaU
t:@8i)r
t:D8y)r
T:VjV
t'@8y)r!H
t@H9{
t@H9p
t`H9x
t|8Y)r
t|H9X
t}H9x
t+H9y
t+L9g8u
t<H9y
T<UgU
T<ZZZ|Z
t=D8y)r
t=L9CHt4A
t0D8q)r*
t1@8y)r+L
t1D8i)r+L
t3H9X
t3L9zPt-H
t4H9{
t69^0|1H
t69>t!9
t6D8q)
t88Y)r
t8D8a)r2
T9T^TjT
tA@8i)r
TASKL
tB@8i)r
tbD8q)
tcD8wsH
TEMP,
tH@8y)r
t-H9A
t-H9y
The driver attempts to acquire the filter mutex while holding a processing mutex.
The driver attempts to acquire the filter mutex while holding it. This operation will cause a deadlock.
The driver attempts to acquire the processing mutex while holding it. This operation will cause a deadlock.
The driver attempts to release a filter mutex acquired in a different thread.
The driver attempts to release a filter mutex though it was not acquired yet.
The driver attempts to release a processing mutex before acquring it first.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceAdd.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceCancelRemove.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceCancelStop.
The driver doesn't release the device mutex before exiting AVStrMiniDevicePostStart.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceQueryCapabilities.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceQueryInterface.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceQueryPower.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceQueryRemove.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceQueryStop.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceRemove.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceSetPower.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceStart.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceStop.
The driver doesn't release the device mutex before exiting AVStrMiniDeviceSurpriseRemoval.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceAdd.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceCancelRemove.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceCancelStop.
The driver doesn't release the filter mutex before exiting AVStrMiniDevicePostStart.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceQueryCapabilities.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceQueryInterface.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceQueryPower.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceQueryRemove.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceQueryStop.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceRemove.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceSetPower.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceStart.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceStop.
The driver doesn't release the filter mutex before exiting AVStrMiniDeviceSurpriseRemoval.
The driver doesn't release the filter mutex before exiting AVStrMiniFilterProcess.
The driver doesn't release the filter mutex before exiting AVStrMiniFilterReset.
The driver doesn't release the filter mutex before exiting AVStrMiniPinProcess.
The driver doesn't release the filter mutex before exiting AVStrMiniPinReset.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceAdd.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceCancelRemove.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceCancelStop.
The driver doesn't release the processing mutex before exiting AVStrMiniDevicePostStart.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceQueryCapabilities.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceQueryInterface.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceQueryPower.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceQueryRemove.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceQueryStop.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceRemove.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceSetPower.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceStart.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceStop.
The driver doesn't release the processing mutex before exiting AVStrMiniDeviceSurpriseRemoval.
The driver doesn't release the processing mutex before exiting AVStrMiniFilterClose.
The driver doesn't release the processing mutex before exiting AVStrMiniFilterCreate.
The driver doesn't release the processing mutex before exiting AVStrMiniFilterProcess.
The driver doesn't release the processing mutex before exiting AVStrMiniFilterReset.
The driver doesn't release the processing mutex before exiting AVStrMiniPinClose.
The driver doesn't release the processing mutex before exiting AVStrMiniPinConnect.
The driver doesn't release the processing mutex before exiting AVStrMiniPinCreate.
The driver doesn't release the processing mutex before exiting AVStrMiniPinDisconnect.
The driver doesn't release the processing mutex before exiting AVStrMiniPinProcess.
The driver doesn't release the processing mutex before exiting AVStrMiniPinReset.
The driver doesn't release the processing mutex before exiting AVStrMiniPinSetDataFormat.
The driver doesn't release the processing mutex before exiting AVStrMiniPinSetDeviceState.
The driver should hold the device mutex when calling KsCreateFilterFactory.
The driver should hold the device mutex when calling KsGetFirstChild for Device.
The driver should hold the device mutex when calling KsGetFirstChild for FilterFactory.
The driver should hold the device mutex when calling KsGetNextSibling for Filter.
The driver should hold the device mutex when calling KsGetNextSibling for FilterFactory.
The driver should not acquire the device mutex with a filter mutex hold.
The driver tries to release the device mutex without acquiring it first.
The miniport driver failed to delete cloned stream pointers before device stop.
The miniport driver failed to delete cloned stream pointers before transitioning to KSSTATE_STOP via AVStrMiniPinSetDeviceState.
The miniport driver failed to return from a KS Device callback within 500ms.
The miniport driver failed to return from a KS Filter callback within 500ms.
The miniport driver failed to return from a KS Pin callback within 500ms.
The miniport driver failed to unlock stream pointers before device stop.
The miniport driver failed to unlock stream pointers before transitioning to KSSTATE_STOP via AVStrMiniPinSetDeviceState.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerAdvance.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerAdvanceOffsetsAndUnlock.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerCancelTimeout.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerGetIrp.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerGetMdl.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerGetNextClone.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerLock.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerScheduleTimeout.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerSetStatusCode.
The miniport driver has provided an invalid stream pointer as an argument to KsStreamPointerUnlock.
The miniport driver holds a processing mutex for more than 100 milliseconds.
The miniport driver tries to delete a stream pointer that is not cloned.
The miniport driver tries to lock a stream pointer that is already locked.
The miniport driver tries to unlock a stream pointer that is not locked.
Timeout on state transition by AVStrMiniPinSetDeviceState.
Timeout on state transition from KSSTATE_ACQUIRE to KSSTATE_PAUSE by AVStrMiniPinSetDeviceState.
Timeout on state transition from KSSTATE_ACQUIRE to KSSTATE_STOP by AVStrMiniPinSetDeviceState.
Timeout on state transition from KSSTATE_PAUSE to KSSTATE_ACQUIRE by AVStrMiniPinSetDeviceState.
Timeout on state transition from KSSTATE_PAUSE to KSSTATE_RUN by AVStrMiniPinSetDeviceState.
Timeout on state transition from KSSTATE_RUN to KSSTATE_PAUSE by AVStrMiniPinSetDeviceState.
Timeout on state transition from KSSTATE_STOP to KSSTATE_ACQUIRE by AVStrMiniPinSetDeviceState.
tJ8Y)r
TKUuU
tL@8i)r
tLD8q)
tO;A v
tO@8i)rI
toD8y)rF
tOH9X
Translation
tRD8a)rLH
tTD8a)rN
tVD8a)rPH
tVD8y)r-
txD8q)
tZ8Y)r
U H9Bpu8L
U H9Bpu9L
U H9BpuA
u!9JDt
U#VWVyV
U$U)VbVYY
U(H9Bpu=
U(H9Bpu8L
U(H9BpuA
u(vyL
U,UiU
U:V]^
U|V-^
U+UhU
U+V?VzV
U0H9Bpu<L
U0H9Bpu8L
U0H9Bpu9L
U0H9BpuA
u4H9P
UATAUAVAWH
UAV_VvV
UAVAWH
uFD8{at
ufL9{@u`H
UHH9Bpu8L
UHH9BpuA
uHL;n
uMH9uguxI
USAVI
utH+K
UVATAUAVH
UVWATAUAVAWH
UVWATAVH
UVWAUAVH
UVWAVAWH
UWATAVAWH
UWAUAVAWH
UWAVH
UZVrV
V#W;WxW
V$A9P$s
V%VbV
V(+Q L
V)W=W
V]XZY
V}WeX
V+WxW
V=V|V
V1WRWpW
V8V]V{V
VarFileInfo
VHWuW
VS_VERSION_INFO
VWATAVAWH
VWATH
VWAUAVAWH
VWAVH
V-WEW
V'WMW
w I;v0
W(W7WXW
W*X`X
W:\R\
W@XgX
W<XbX
W>_z_
W0D8zDtPI
W6X{X
WATAUAVAWH
WATAUH
WATAVH
WATAWH
WAUAVH
WAVAWH
WEVT_TEMPLATE
win:Info
win:Informational
win:Start
win:Stop
WINDOWS_KS_CHANNEL
WjXMY
WmiQueryTraceInformation
WmiTraceMessage
WSWgW
WuWzZ
WXW{W
x ATAUAVAWE3
x ATAUAWH
x ATAVAWH
x ATH
x AUAVAWH
x AVE3
x AVH
x AWH
x UATAUH
X$YBYqY
X/XR[
X/YUY
X;Y^Y
X}[D]
X>YkY
x0D8{st'H
X7XoX
XA_A^A]A\_^][
XdvTimedFactor
XfY~Y
XMXuX
XNYqY
XSYxZ
X'YMY
Y#Y^Y
Y#ZbZ
Y&ZUZ
Y*ZSZ
Y@Y^Y
Y<ZfZ
Y3Y"ZjZ~Z
Y7ZKZ
Y8ZiZ
Z!ZXZoZ
Z([Y[
Z)ZA[i[
Z,[J[
Z.[Q[v[
Z[[y[
Z6[~[
Z6[Y\+]
Z8[n[
ZD[\[
ZK\{\
ZKZyZ
ZwClose
ZwCreateKey
ZwDeleteKey
ZwDeleteValueKey
ZwEnumerateKey
ZwEnumerateValueKey
ZwNotifyChangeKey
ZwOpenEvent
ZwOpenKey
ZwQueryKey
ZwQuerySecurityObject
ZwQueryValueKey
ZwSetSecurityObject
ZwSetValueKey
ZwUpdateWnfStateData
