             xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">          
          <disableWindowFiltering xmlns="http://schemas.microsoft.com/SMI/2011/WindowsSettings">true</disableWindowFiltering>
        </asmv3:windowsSettings>
        <asmv3:windowsSettings
    </asmv3:application>
    <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
 A^_^
 A_A^A\
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!\$pL
!fStatus && GetLastError() == 122L
!This program cannot be run in DOS mode.
%d, %I64d, %Id, %s, 
%s(%d) - %s - Assertion failed:  %s (%s)
%s(%d) - %s - Assertion failed:  %s (%s)  hr = 0x%08X
%s\%s_%d_%s_%s.dmp
((HRESULT)0x80070057L)
(_^][
(A_A^A]A\_^][
(prgExcludedProcesses[idx].m_id != 0) || ((*_errno()) == 0)
(prgExcludedProcesses[idx].m_uliCreate.QuadPart!= 0) || ((*_errno()) == 0)
*ppszDest
*pszModuleFileName != L'\0'
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata
::$DATA
?terminate@@YAXXZ
@.data
@.reloc
@.rsrc
@A_A^A\
@A_A^A]_^
@SVWH
@USVWATAUAVAWH
[%I64u] [%u-%02u-%02u %02u:%02u:%02u.%03u] %s [%X.%X.%X] 
\$ UH
\$HI9N
\$PH!|$HH
\\?\Volume
\UNC\
__C_specific_handler
__CxxFrameHandler3
__dllonexit
__EHM_MsiWrite
__set_app_type
__setusermatherr
__wgetmainargs
_amsg_exit
_callnewh
_cexit
_commode
_errno
_exit
_fmode
_initterm
_lock
_onexit
_unlock
_vsnwprintf
_wcmdln
_wcsicmp
_wtoi
_wtoi64
_XcptFilter
`.rdata
{00000000-0000-0000-0000-000000000000}
+fD9.u
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
>.u1I
040904B0
10.0.10011.16384
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
8.t,fD9
A^A]_
A^A]A\_^
A^A]A\_^[]
A_A^_
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A]_^
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
AcquireSRWLockExclusive
AddAccessDeniedAce
AddAce
ADVAPI32.dll
AppendFileNameToModulePath
assert
ASSERT
assert
Assertion failed:  %s(%d) - %s - %s (%s)
Assertion failed:  %s(%d) - %s - %s (%s)  hr = 0x%08X
ATAVAWH
atom != 0
BeginPaint
bstrInvitation
bstrPassword
bstrTitle
cArgs > 2
cArgs > 3
cArgs > cParamBeforeExcludedProcesses
CAutoWriteLock::~CAutoWriteLock
CAutoWriteLock::CAutoWriteLock
cb % sizeof (WCHAR) == 0
cbDecodedInvitation % sizeof (WCHAR) == 0
CBRAEx
cbRead == sizeof (dwTempCookie)
cchFileName != 0
cchTextLength
cchUsedWithoutNull != 0 && cchUsedWithoutNull != (sizeof(*RtlpNumberOf(szModulePathName)))
CloseHandle
CoCreateInstance
CoInitializeEx
CommandLineToArgvW
CompanyName
CopyString
CoUninitialize
CProcessInfoAgent::GetProcessInfo - 
CProcessInfoAgent::Initialize
CProcessInfoAgent::Initialize - prgidExcludedProcesses[%d]=%d
CProcessInfoAgent::Initialize - pszProcessInfoWindowClassName=%s, pszProcessInfoWindowTitle=%s, cExcludedProcesses=%d
CProcessInfoAgent::ReadCookieFromStdin
CProcessInfoAgent::ReadCookieFromStdin - Exiting, returning 0x%08x.
CProcessInfoAgent::s_RunningAppsEnumWindowsProc
CProcessInfoAgent::s_RunningAppsEnumWindowsProc - szTitle="%s" fFrameWindow=%s fShellManaged=%s hwnd=0x%x.
CProcessInfoAgent::s_RunningAppsEnumWindowsProc - szTitle="%s", hwnd=0x%x.
CProcessInfoAgent::SendProcessInfo - pszProcessInfo=%s, cbProcessInfo=%d
CProcessInfoAgent::Uninitialize
CProcessList::m_lockProcesses
CProcessList::RemoveAll
CProcessList::ReturnAndDeleteHead
CProjectionViewer::Initialize
CreateEventW
CreateFileW
CreateWindowExW
CRunningApps::Add
CRunningApps::Grow
CRunningApps::Initialize
CRYPT32.dll
CryptBinaryToStringW
CryptStringToBinaryW
CSharedReaderWriterLock::CSharedReaderWriterLock
CSharedReaderWriterLock::LockWrite
CSharedReaderWriterLock::LockWrite - SRW write lock %s acquired (contention count = %d)
CSharedReaderWriterLock::LockWrite - Waiting for SRW write lock %s, owner = 0x%X (contention count = %d).
CSharedReaderWriterLock::UnlockWrite
CSharedReaderWriterLock::UnlockWrite - SRW write lock %s released (contention count = %d)
CSRCWindow::~CSRCWindow - Closing event m_hWndDestroyed 0x%X
CSRCWindow::CreateEx
CSRCWindow::CreateEx - Created window:  "%s" (0x%08X) 
CSRCWindow::CSRCWindow - obj = 0x%X
CSRCWindow::Destroy
CSRCWindow::Destroy - Called on different thread; posting s_WM_WMS_Destroy message to thread id 0x%X and waiting
CSRCWindow::Destroy - Called on same thread; sending s_WM_WMS_Destroy message
CSRCWindow::Destroy - Wait for m_hWndDestroyed completed
CSRCWindow::Initialize
CSRCWindow::Initialize::s_lock
CSRCWindow::OnNcCreate
CSRCWindow::OnNcDestroy - Removed property from CSRCWindow 0x%08X (m_hWnd 0x%08X) 
CSRCWindow::OnPaint
CSRCWindow::s_CreateWindowHelper
CSRCWindow::s_SharedWindowProc
CSRCWindow::s_SharedWindowProc - Set CSRCWindow (0x%08X) m_hWnd to 0x%08X
CWmsAgentBaseWnd::WndProc - got %s, wParam=%d, lParam=%d
D$ E3
D$$I;
d$@fE
D$@H;
D$HE3
dbghelp.dll
DEBUGMSGV
DefWindowProcW
DestroyWindow
DisableUserTerminatingProcess
DispatchMessageW
dwResult == 0L
EndPaint
EnumWindows
eUse == SidTypeUser
EventRegister
EventSetInformation
EventUnregister
EventWrite
EventWriteTransfer
ExecuteProcessInfoAgent
ExecuteProcessInfoAgent - Exiting, returning 0x%08x.
ExecuteProjectionViewer
ExecuteProjectionViewer - Exiting, returning 0x%08x.
f9H\u
fA9(tsM
fA90t
FALSE
fD9 t
fD9 t%f
fD9#u~A
fD9$nu
fD9,Ku
fD9;H
fD9+u
fD9sbu
fE9$Xu
fF9,fu
FileDescription
fileName
FileVersion
FindWindowW
fStatus
fSuccess
fSuccess == TRUE
function
GenerateDumpFileName
GetAce
GetClassInfoW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDateFormatEx
GetLastError
GetLengthSid
GetLocalTime
GetMessageW
GetModuleFileNameW
GetModuleHandleW
GetModulePath
GetParent
GetProcessCreateTime
GetProcessHeap
GetProcessTimes
GetPropW
GetSecurityInfo
GetStartupInfoW
GetStdHandle
GetSystemTimeAsFileTime
GetTickCount
GetTimeFormatEx
GetUserNameW
GetWindowLongPtrW
GetWindowTextLengthW
GetWindowTextW
GetWindowThreadProcessId
H USVWATAUAVH
h VWATAUAVH
H!\$ H
H!\$ L
H!\$(L
H!\$0H
HA_A^A]A\_^[]
HcA<H
HeapAlloc
HeapFree
HeapReAlloc
HeapSetInformation
hFile != ((HANDLE)(LONG_PTR)-1)
HH-mm-ss
hInst
hProcess
hr == S_OK
hRecord
hresult
hRich#
hStdin != ((HANDLE)(LONG_PTR)-1)
hStdin != 0
idProcess != 0
InitializeAcl
InitializeSRWLock
InternalName
IsDebuggerPresent
IsImmersiveProcess
iswalpha
IsWindow
IsWindowVisible
K32GetModuleBaseNameW
KERNEL32.dll
L$ SUVWH
L$0H3
L$PfD;a
LcA<E3
LegalCopyright
level < (sizeof(*RtlpNumberOf(s_rgEventDescriptor)))
lineNumber
LoadLibraryExW
LoadResourceDLL
LocalAlloc
LocalFree
LookupAccountNameW
lpFilename != NULL
lr == 0L
m_cCurrentThreadWriteLockCount != 0
m_hHeap
m_hInst != NULL
m_hWnd == NULL
m_hWndDestroyed
m_hwndProcessInfoWindow
m_pImmersiveProcessList
m_pszBuf
m_pWriterLock
m_szClassName[0] != 0
m_tidWriteLockOwner == ::GetCurrentThreadId ()
m_tidWriteLockOwner == 0
macro
malloc
memcpy_s
memset
message
Microsoft
Microsoft Corporation
Microsoft.Windows.RemoteDesktop.MultiPoint
MiniDumpWriteDump
msi.dll
msvcrt.dll
ntdll.dll
ole32.dll
OLEAUT32.dll
OpenProcess
OriginalFilename
p AWH
PA_A^A]A\_^]
pbTemp
pbUserSid
pNewDacl
PostMessageW
prgExcludedProcesses
ProcessIdToSessionId
ProductDumpsDir
ProductName
ProductVersion
pszArglist
pszClassName != NULL
pszDomain
pszFullPath
pszInivitation
pszNew
pszTemp
QueryPerformanceCounter
rc == 0L
ReadFile
RegCloseKey
RegGetValueW
RegisterClassW
RegOpenKeyExW
RegUtil::GetStringValue
ReleaseSRWLockExclusive
RemovePropW
RSDSl
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
s ATAVAWH
SendMessageW
SetEvent
SetLastError
SetPropW
SetSecurityInfo
SetUnhandledExceptionFilter
SHELL32.dll
ShowCursor
ShowWindow
ShowWindowAsync
Sleep
SleepConditionVariableSRW
SOFTWARE\Microsoft\Windows MultiPoint Server
SrcRes.dll
SrcWnd:this
StringFileInfo
SUVWATAUAVAWH
t$ UWATAVAWH
t$ WAUAVH
t$@E3
t$HE3
t^L9E
TerminateProcess
termsrv\wms\src\common\ehmlib\ehmlib.cpp
termsrv\wms\src\common\srcutils\registry.cpp
termsrv\wms\src\common\srcutils\srcutils.cpp
termsrv\wms\src\common\srcutils\wmscrypt.cpp
termsrv\wms\src\common\srcwnd\srcwnd.cpp
termsrv\wms\Src\inc\SrcSharedReaderWriterLock.h
termsrv\wms\src\wmsuseragent\main.cpp
termsrv\wms\src\wmsuseragent\processinfoagent.cpp
termsrv\wms\src\wmsuseragent\projectionviewer.cpp
termsrv\wms\src\wmsuseragent\runningapps.cpp
TranslateMessage
Translation
TryAcquireSRWLockExclusive
u HcA<H
u$L97t
u*9Q<|%
u?fD9;u9
UATAUAVAWH
uGfD9s
UnhandledExceptionFilter
USER32.dll
USVWATAUAVAWH
UVWATAUAVAWH
ValidateRect
VarFileInfo
version
VS_VERSION_INFO
VWATAVAWH
VWAUAVAWH
VWAVH
wait == ((((DWORD )0x00000000L) ) + 0 )
wait == WAIT_TIMEOUT
WaitForSingleObject
WakeAllConditionVariable
WATAUAVAWH
WAVAWH
wcschr
wcsrchr
WM_ENDSESSION
WM_QUERYENDSESSION
Wms User Agent
WmsBase64Decode
WmsBase64Encode
WmsProcessInfoAgent Hidden Window
WmsProcessInfoAgentWindowClass
WmsUserAgent.exe
WmsUserAgent.pdb
WriteDumpOnException
WriteDumpOnExceptionCreating dump file:  %s
WriteDumpOnExceptionUnhandled exception 0x%08X
wWinMain
wWinMain - Exiting, returning 0x%08x.
x ATAVAWH
x AVH
x AWH
x UATAUAVAWH
yyyyy-MM-dd
