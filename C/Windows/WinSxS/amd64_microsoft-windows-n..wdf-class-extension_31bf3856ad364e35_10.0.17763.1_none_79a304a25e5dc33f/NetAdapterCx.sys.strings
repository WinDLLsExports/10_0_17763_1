 A_A^_
 A_A^A]
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
! (buffer + length > buffer)
! (hashSecretKey > buffer)
! context.CreatedQueueObject
! m_AddedPacketExtensions.insertSorted( extensionToAdd, sortByAlignment)
! m_affinitizedQueues.resize(m_maxProcessorIndex - m_minProcessorIndex)
! m_extensionName
! m_indirectionTable.resize(capabilities.NumberOfIndirectionTableEntries)
! m_receiveScaling
! m_receiveScalingDatapath
! m_rxQueues.reserve(receiveScaling->GetNumberOfQueues())
! m_rxQueues.resize(1)
! m_SharedPacketExtensions.append(wistd::move(extension))
! Queues.resize(Queues.count() + 1)
! queues.resize(receiveScaling->GetNumberOfQueues() - m_rxQueues.count())
! receiveScaling
! rxQueue
! txQueue
! WI_IsFlagSet(Parameters.Flags, NDIS_RECEIVE_SCALE_PARAM_HASH_INFO_CHANGED)
!addedPacketExtensions.append(extension)
!bufferManager
!checksumOffload
!chunkMdl
!CreationContext->NetAdapterAddedPacketExtensions.append(*storedExtension)
!fragmentRingBuffer
!IS_POWER_OF_TWO(BufferPoolConfig->BufferAlignment)
!lsoOffload
!m_Apps.append(wistd::unique_ptr<INxApp> { static_cast<INxApp *>(client) })
!m_BaseVirtualAddress
!m_Buffers.reserve(newPoolSize)
!m_BuffersInUseFlag.Initialize(newPoolSize)
!m_MdlPool
!m_MemoryChunkAllocator.get()
!m_MemoryChunkBaseAddresses.reserve(m_NumMemoryChunks)
!m_MemoryChunks.reserve(m_NumMemoryChunks)
!m_MemoryConstraints.append(*MemoryConstraints)
!m_NblLookupTable.reserve(m_rxNumNbls)
!m_netBufferListPool
!m_NxOffloadManager
!m_NxOffloads.append(wistd::move(checksumOffload))
!m_NxOffloads.append(wistd::move(lsoOffload))
!m_StitchedMdl
!MemoryChunks.reserve(numMemoryChunks)
!newApp
!offloadFacade
!pool.get()
!QueueCreationContext.NetClientAddedPacketExtensions.append(*storedExtension)
!storedExtension
!temp.resize(m_AddedPacketExtensions.count())
!This program cannot be run in DOS mode.
!WIN_VERIFY(Extension->NonWdfStyleAlignment <= alignof(NET_PACKET))
!WIN_VERIFY(Extension->Size != 0)
!WIN_VERIFY(Extension->Size <= MAXIMUM_ALLOWED_EXTENSION_SIZE)
!WIN_VERIFY(RTL_IS_POWER_OF_TWO(Extension->NonWdfStyleAlignment))
%ws thread #%zu for %ws
(! (hashSecretKeyEnd > hashSecretKey)) || hashSecretKeyEnd > buffer + length
(! (tableEnd > table)) || tableEnd > buffer + length
(_^][
(D$ @
(D$03
(D$0f
(D$0H
* Actual function table count  : %u 
* Driver verifier should be enabled on both client and Cx
* Expected function table count: %u 
* If not, DV may report false violations while verifiying NDIS rules
* NetAdapterCx 1.%u (Preview) client detected.            
* NetAdapterCx detected a function count mismatch. The driver 
* Recompile your source code and target NetAdapterCx 1.%u.
* using this extension will not load until it is re-compiled 
* with the latest version of the extension's header and libs 
************************* 
*************************** 
**********************************************************
*IPChecksumOffloadIPv4
*LsoV1IPv4
*LsoV2IPv4
*LsoV2IPv6
*NumRSSQueues
*RssBaseProcGroup
*RssBaseProcNumber
*RssMaxProcGroup
*RssMaxProcNumber
*TCPChecksumOffloadIPv4
*TCPChecksumOffloadIPv6
*UDPChecksumOffloadIPv4
*UDPChecksumOffloadIPv6
,D8qPt
.00cfg
.data
.data$brc
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.kmdfclassbind$a
.kmdfclassbind$c
.kmdfclassbind$d
.kmdftypeinit$a
.kmdftypeinit$c
.pdata
.rdata
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$mn$21
.xdata
/oDNe
;(ueH
;fD9;t
;NAEIt
;NAISt
@8=8@
@8h0t$H
@A^_^
@A^_^][
@A^A\_
@A_A^_
@A_A^A]
@A_A^A]A\_^]
@PHcH
@SUVWAVH
@USVWH
[!\6\
[|\/]F]
[S[q[
[S\f^@_q_
\$ UVWAVAWH
\$`H;
\$DH;
\/XH;]_tMM
\_]/^
\2]s]$^
\4]b]
\Device\NDMP
\Device\netadaptercx
\Registry\Machine\System\CurrentControlSet\Services\NDIS\Parameters
],^f^
]0^h^
]2]b]
]8YPu
_vsnprintf
_vsnwprintf
` AUAVAWH
`INIT
{([tF3
{Bm[M$T
|$ AVH
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(E3
|$(fD
|$@A;
|$0A_A^
|$8E3
040904B0
0A^_^
0A_A^]
0A_A^_
0A_A^A\
0A_A^A]
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^]
1 != m_bufferPoolDispatch->NetClientAllocateBuffers(m_bufferPool, &data, 1)
10.0.17763.1
10.0.17763.1 (WinBuild.160101.0800)
3!m_Mdl
4I3EXH#
7fD9/t
8\$Pt
8\$Pu
9GNxIt
A^A\]
A^A\_
A^A]A\_]
A_A^]
A_A^_
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A]
A_A^A]A\]
A_A^A]A\^
A_A^A]A\_
A_A^A]A\_^]
A3OXI#
AdapterNetLuid
AdapterStateTransitionEvent
AdapterStateTransitionFrom
AdapterStateTransitionTo
AllowDmaHalBypass
availableFragments.Count() == 0
B(D;B
B.reloc
B.rsrc
bGFIDS
BufferPoolConfig->BufferAlignment > PAGE_SIZE
BufferPoolConfig->Flag & NET_CLIENT_BUFFER_POOL_FLAGS_SERIALIZATION
BZfA+
C\9A w
C`9A$w
chunkOffsetAligned < m_AlignmentOffset
CompanyName
cumulativeNblQueueDepth
cumulativeRingBufferDepth
cxbmH
CxDriverContext
cxrpI
d$ E3
D$(fD
D$@!D$@H
D$@D;
D$@E3
D$@I;G
D$@t#
D$\L9
D$}A:
D$0D;
D$0NAEI
D$8D*
D$JL+
D$PI;
D$xH;
D:P(A;;GA;;;SY)(A;;GRGWGX;;;BA)(A;;GRGW;;;WD)(A;;GR;;;RC)
D8\.`t-H
D8a t H
D8c tMH
DbgPrintEx
DeviceBusAddress
DeviceStateTransitionEvent
DeviceStateTransitionFrom
DeviceStateTransitionTo
DmaBouncePolicy
E(L;xx
ecUpdateIterationCount
EcUpdatePerfCounters
EtwRegister
EtwRegisterClassicProvider
EtwSetInformation
EtwUnregister
EtwWriteTransfer
ExAcquireRundownProtectionEx
ExAllocatePoolWithTag
ExFreePool
ExFreePoolWithTag
ExInitializeRundownProtection
ExReInitializeRundownProtection
ExReleaseRundownProtectionEx
ExWaitForRundownProtectionRelease
f9HHt
f9hHt*@8k t
f9hHt.H
f9iHt#H
f9pHt-H
f9XHt
f9xHt!H
f9xHt#H
f9XHt/H
f9XHt6H
f9yHt
fA9L@
fD9${u
fD9$Cu
fD9/t
fD9:u
fD9;t
fD9`Ht)H
fD9`HtSH
fD9+t
fD9<{u
fD9<Au
fD9<Cu
fD9aHt
fD9pH
fD9xHt
fD9xHt7D8{ t
ffffff
fffffff
FileDescription
FileVersion
G D8{ 
G(wNH
GetIfEntry2Ex
GNxIH
H UVWATAUAVAWH
H!\$ D
H!|$ D
H!l$ 3
H!l$ D
H!O !O(H
H!t$ D
H.data
H.idata
h.rdata
H;_`u
H;Hxv
H;kxs
H+KhI
H+S`H
H0H9Y
H9:uxL
H9~ u
H9~(t
HcC,A
HcC@9
HdlrH
HPAGE
HPHcA
I3OXH
I9~ u
I9~(t
I9N u
imp_WppRecorderLogCreate
imp_WppRecorderLogDelete
imp_WppRecorderReplay
InternalName
IoAcquireRemoveLockEx
IoAllocateMdl
IoAllocateWorkItem
IofCompleteRequest
IoFileObjectType
IoFreeMdl
IoFreeWorkItem
IoInitializeRemoveLockEx
IoQueueWorkItem
IoRegisterPlugPlayNotification
IoReleaseRemoveLockAndWaitEx
IoReleaseRemoveLockEx
IoSetCompletionRoutineEx
IoUnregisterPlugPlayNotificationEx
IoWMIRegistrationControl
K\D9H w'
K\D9I w#
K`9H$w
K`D9I$
K8YPu<A
KArrH
KArrI
KD8c t
KdRefreshDebuggerNotPresent
KeAcquireSpinLockRaiseToDpc
KeCancelTimer
KeFlushIoBuffers
KeFlushQueuedDpcs
KeGetCurrentProcessorNumberEx
KeGetProcessorNumberFromIndex
KeInitializeDpc
KeInitializeEvent
KeInitializeSpinLock
KeInitializeTimer
KeLowerIrql
KeQueryMaximumProcessorCountEx
KeQueryTotalCycleTimeThread
KeReleaseSpinLock
KeSetBasePriorityThread
KeSetEvent
KeSetSystemGroupAffinityThread
KeSetTimerEx
KeWaitForSingleObject
KfRaiseIrql
KmdfLibrary
L!t$ E3
L$ SUVWH
L$ SVWH
L$ VATAUAVAWH
l$(fD
L$`E3
L$0E3
L$0f9O
L$0H3
L$8H3
L$BfD
L$HH3
l$pE3
L$PH3
L$XE3
L$XH3
L+C`I
L9qHt
L9YPu0H
LegalCopyright
length < NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_3
length < NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1
length < NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRIES_REVISION_1
M H;A
m_MemoryConstraints.count() > 1
m_NumBuffersInUse >= m_PopulatedPoolSize
m_NumOfNblsInUse == m_rxNumDataBuffers
m_RequestedTotalSize < requstedTotalSize
m_StrideSize < AllocateSize
Microsoft
Microsoft Corporation
Microsoft.Windows.Ndis.NetAdapterCx
Microsoft.Windows.Ndis.NetAdapterCx.Translator
minio\ndis\cx\sys\nxadapter.cpp
minio\ndis\cx\sys\nxdevice.cpp
minio\ndis\cx\sys\nxrequestqueue.cpp
MmAllocateMappingAddress
MmBuildMdlForNonPagedPool
MmFreeMappingAddress
MmGetPhysicalAddress
MmGetSystemRoutineAddress
MmIsDriverVerifyingByAddress
MmMapLockedPagesSpecifyCache
MmMapLockedPagesWithReservedMapping
MmSizeOfMdl
MmUnmapLockedPages
MmUnmapReservedMapping
ms_PacketChecksum
ms_PacketLargeSendSegmentation
NAInH
NAISD
NdCxH
NDIS.SYS
NDIS_MINIPORT_BLOCK_TYPE
NdisAdvanceNetBufferDataStart
NdisAllocateNetBufferAndNetBufferList
NdisAllocateNetBufferListPool
NdisCloseConfiguration
NdisConvertNdisStatusToNtStatus
NdisConvertNtStatusToNdisStatus
NdisFreeNetBufferList
NdisFreeNetBufferListPool
NdisMDeregisterMiniportDriver
NdisMIndicateReceiveNetBufferLists
NdisMIndicateStatusEx
NdisMOidRequestComplete
NdisMPauseComplete
NdisMRestartComplete
NdisMSendNetBufferListsComplete
NdisMSetMiniportAttributes
NdisOpenConfigurationEx
NdisOpenConfigurationKeyByName
NdisReadConfiguration
NdisReadNetworkAddress
NdisRetreatNetBufferDataStart
NdisWdfAsyncPowerReferenceCompleteNotification
NdisWdfCloseIrpHandler
NdisWdfCreateIrpHandler
NdisWdfDeregisterCx
NdisWdfDeviceControlIrpHandler
NdisWdfDeviceInternalControlIrpHandler
NdisWdfDeviceWmiHandler
NdisWdfGenerateFdoNameIndex
NdisWdfGetAdapterContextFromAdapterHandle
NdisWdfMiniportDataPathPause
NdisWdfMiniportDataPathStart
NdisWdfMiniportStarted
NdisWdfPnPAddDevice
NdisWdfPnpPowerEventHandler
NdisWdfReadConfiguration
NdisWdfRegisterCx
NdisWdfRegisterMiniportDriver
NdisWriteConfiguration
NetAdapterCx
NetAdapterCx.pdb
NetAdapterCx.sys
NETIO.SYS
NetPacketComputeSizeAndUpdateExtensions
NetPacketGetSize
NetPacketReuseMany
NetPacketReuseOne
Network Adapter Class Extension for WDF
nK)45i(s$
NRXlH
NrxRH
ntoskrnl.exe
numberOfCpuCyclesPolledWithNoPackets
numberOfCpuCyclesSleeping
numberOfCpuCyclesSpentProcessingPackets
numberOfEmptyNblQueueSamples
numberOfIterationsPolledWithNoPackets
numberOfIterationsPolledWithPackets
numberOfNblQueueStateSamples
numberOfOccupiedNblQueueSamples
numberOfRingbufferEmptySamples
numberOfRingbufferFullSamples
numberOfRingbufferPartiallyUsedSamples
NumMemoryChunk
numMemoryChunks != MemoryChunks.count()
NX_STOP_IDLE_WORKITEM_CONTEXT
NxAdapter
NxAdapter::InitializeSelfManagedIO
NxAdapterStateTransition
NxApH
nxbmI
nxbpH
NxClient
NxConfiguration
NxDevice
NxDevice::RestartSelfManagedIo::<lambda_d8e64b7e98d8942b20418052bc5c0720>::operator ()
NxDevice::SuspendSelfManagedIo::<lambda_ebaa899edeab431717979e6f49c492ed>::operator ()
NxDeviceStateTransition
NxDmH
NxDmI
NxDriver
nxmcH
nxmrH
NxOf@
NxOfH
NxRBE
NxRBH
NxRequest
NxRequestQueue
NxRxQueue
NxTxH
NxTxQueue
NxWake
O(D;O
ObfDereferenceObject
ObReferenceObjectByHandle
OriginalFilename
p AWH
p WATAUAVAWH
p WAVAWH
P6PTP
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
Parameters.HashInformation != 0
Parameters.HashInformation == 0
PPLcJ
PPR S
ProductName
ProductVersion
PsCreateSystemThread
PsGetThreadId
PsGetVersion
Q"R^R
QQRfR
QSR@T
QueryAndGetNetPacketExtension(ExtensionToAdd) != nullptr
R SNSpT
Receive
ringbufferUpdateIterationCount
RSDSC
RtlAppendUnicodeStringToString
RtlClearAllBitsEx
RtlClearBitEx
RtlCopyUnicodeString
RtlEqualUnicodeString
RtlInitializeBitMapEx
RtlInitUnicodeString
RtlIntegerToUnicodeString
RtlSetBitEx
RtlUnicodeStringToInteger
RxPerfCountersIterationInterval
RxReportPerfCounters
RxThreadAffinity
RxThreadPriority
RxTranslationCounterUpdates
S T[T
s WATAUAVAWH
S6TwT
SetRxThreadAffinity
SetTxThreadAffinity
size != sizeof(m_hashSecretKey)
SmFxH
status
status != STATUS_OBJECT_TYPE_MISMATCH
STATUS_DUPLICATE_NAME
STATUS_INSUFFICIENT_RESOURCES
STATUS_INTEGER_OVERFLOW
STATUS_INVALID_PARAMETER
STATUS_NOT_IMPLEMENTED
STATUS_NOT_SUPPORTED
STATUS_SUCCESS
STATUS_UNSUCCESSFUL
StringFileInfo
SWU,VOVM]
T$ E3
t$ UWATAVAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WAVH
t$ WH
T$(E3
t$0A^_
T$0eH
T$hE3
T$HL;
T$pE3
T%U3V
t/:^(u*H
t;fD9
T7TtT
tE@8i t
threadID
tKD8{ t
TlU3V[VwWbX
totalNumberOfCpuCyclesRecord
totalNumberOfNetpacketsCompletedReceiving
totalNumberOfNetpacketsProducedForReceive
totalNumberOfRingbufferStateSamples
Translation
Transmit
TxPerfCountersIterationInterval
TxReportPerfCounters
TxThreadAffinity
TxThreadPriority
TxTranslationCounterUpdates
u D8`
U5XPXrX
UATAUAVAWH
UAVAWH
UVWATAUAVAWH
UWATAUAVH
UWAVH
UyU*V
V#WDW
V<ViWXX
VarFileInfo
vG@8k t
VLWEXIYuY Z
VOV{V
VS_VERSION_INFO
vswprintf_s
VWATAVAWH
VWAUAVAWH
VWAVH
VxW,Z
V'Xx\
WATAUAVAWH
WATAVH
WAVAWH
wcscmp
wcsstr
WDFLDR.SYS
WdfRegisterClassLibrary
WdfVersionBind
WdfVersionBindClass
WdfVersionUnbind
WdfVersionUnbindClass
WDXw\"_R_
WHXuX
WI_IsFlagSet(Parameters.Flags, NDIS_RECEIVE_SCALE_PARAM_HASH_INFO_CHANGED)
WmiQueryTraceInformation
WmiTraceMessage
WppAutoLogStart
WppAutoLogStop
WppAutoLogTrace
WppRecorder.sys
x ATAVAWH
x ATH
x AUAVAWH
x AVAWD
x AVH
x UATAUAVAWH
x UATAVH
x UAVAWH
X"YKY:Z
X;XhX
XS)^[
Y/ZO[>_
Y+Y6\
yDD8{ t
YHY`Y!Z{Z$[r[-]E_
Yj\x]D^
Z'[f[
ZwClose
ZwOpenFile
ZwOpenKey
ZwQuerySystemInformation
ZwQueryValueKey
ZwSetInformationThread
