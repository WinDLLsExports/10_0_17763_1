      
        
          
              
                
                  
                    <xsd:attribute name="Name" type="cps:NonEmptyString" use="required" />
                  </xsd:extension>
                  <xsd:extension base="xsd:string">
                  Get-MyObject -ExcludeObjectId 123,456
                  Get-MyObject -LiteralName p*,q* 
                  Get-MyObject -MaxWorkingSet 123
                  Get-MyObject -MinWorkingSet 123
                  Get-MyObject -Name p*,q* 
                  Get-MyObject -ObjectId 123,456
                  SELECT * FROM MyObject WHERE ((Name = &quot;p*&quot;) OR (Name = &quot;q*&quot;)) 
                  SELECT * FROM MyObject WHERE ((Name like &quot;p%&quot;) OR (Name like &quot;q%&quot;)) 
                  SELECT * FROM MyObject WHERE ((NOT Name = 123) AND (NOT Name = 456)) 
                  SELECT * FROM MyObject WHERE ((ObjectId = 123) OR (ObjectId = 456)) 
                  SELECT * FROM MyObject WHERE (WorkingSet &gt;= 123)
                  SELECT * FROM MyObject WHERE (WorkingSet =&lt; 123)
                &lt;CmdletParameterMetadata PSName=&quot;LiteralName&quot; /&gt;
                (i.e. "Networking.MyEnum" will become "Microsoft.PowerShell.Cmdletization.GeneratedTypes.Networking.MyEnum").
                (i.e. the name should be "Networking.MyEnum" rather than "MyEnum").
                </xsd:simpleContent>
                <xsd:attribute name="Name" type="cps:EnumValueName" use="required" />
                <xsd:attribute name="Value" type="xsd:integer" use="required" />
                <xsd:element name="Parameter" type="cps:InstanceMethodParameterMetadata" maxOccurs="unbounded" />
                <xsd:element name="Parameter" type="cps:StaticMethodParameterMetadata" maxOccurs="unbounded" />
                <xsd:field xpath="@Aliases" />
                <xsd:field xpath="@CmdletParameterSet" />
                <xsd:field xpath="@DefaultCmdletParameterSet" />
                <xsd:field xpath="@PSName" />
                <xsd:selector xpath=".//cps:CmdletMetadata" />
                <xsd:selector xpath=".//cps:CmdletParameterMetadata" />
                <xsd:selector xpath=".//cps:Method" />
                <xsd:simpleContent>
                BitwiseFlags attribute specifies if the .NET enum will be decorated with a System.FlagsAttribute.                
                byte (System.Byte), 
                C# Language Specification allows (in section 4.1.9 "Enumeration types") only the following
                EnumName attribute specifies the name of a .NET enum.
                int (System.Int32), 
                long (System.Int64),
                sbyte (System.SByte), 
                short (System.Int16), 
                The following cmdlet invocation:
                The name should include a namespace to avoid naming conflicts 
                The system will prefix the name of the enum with the following namespace: "Microsoft.PowerShell.Cmdletization.GeneratedTypes"
                This is the name to use in a PSType attribute.
                uint (System.UInt32), 
                ulong (System.UInt64).
                Underlying type of the enum.
                underlying types: 
                ushort (System.UInt16), 
                When referring to the enum in types.ps1xml and format.ps1xml files, one has to use the full, prefixed name of the enum.
                will be translated into the following WQL query:
              - only objects with a property value *not* equal to the cmdlet parameter argument will be processed.
              - only objects with a property value equal to the cmdlet parameter argument will be processed.
              - only objects with a property value greater than or equal to the cmdlet parameter argument will be processed.
              - only objects with a property value less than or equal to the cmdlet parameter argument will be processed.
              &lt;!-- &quot;LiteralName&quot; is used as the cmdlet parameter name --&gt;
              &lt;!-- &quot;Name&quot; is used as the cmdlet parameter name --&gt;
              &lt;/RegularQuery&gt;
              &lt;RegularQuery AllowGlobbing=&quot;false&quot;&gt;
              &lt;RegularQuery AllowGlobbing=&quot;true&quot; /&gt;
              ...
              </xsd:complexType>
              </xsd:documentation>
              </xsd:keyref>
              </xsd:sequence>
              </xsd:unique>
              <xsd:attribute name="DefaultCmdletParameterSet" type="cps:ParameterSetName" use="optional" />
              <xsd:complexType>
              <xsd:documentation xml:lang="en-us">
              <xsd:field xpath="@ParameterName" />
              <xsd:field xpath="@Position" />
              <xsd:keyref name="DefaultCmdletParameterSetKeyRef" refer="cps:UniqueParameterSetNamesInStaticCmdlet">
              <xsd:selector xpath=".//cps:CmdletParameterMetadata" />
              <xsd:selector xpath=".//cps:Parameter" />
              <xsd:sequence>
              <xsd:unique name="UniqueCmdletParameterAliasesUnderGetCmdletParametersElement_1">
              <xsd:unique name="UniqueCmdletParameterNamesUnderGetCmdletParametersElement_1">
              <xsd:unique name="UniqueParameterSetNamesInStaticCmdlet">
              AllowGlobbing attribute specifies if strings with globbing characters (wildcards) are supported.  
              CmdletParameterSet attribute specifies the name of a cmdlet parameter set associated with the static method.
              CmdletParameterSets attribute is a whitespace-separated list of names of parameter sets,
              Comparison of strings and characters is always case-insensitive.
              Example for &lt;ExcludeQuery&gt; element that is applied to an ObjectId property:
              Example for &lt;MaxValueQuery&gt; element that is applied to an WorkingSet property:
              Example for &lt;MinValueQuery&gt; element that is applied to an WorkingSet property:
              Example for &lt;RegularQuery AllowGlobbing=&quot;false&quot; &gt; element that is applied to a Name property:
              Example for &lt;RegularQuery AllowGlobbing=&quot;true&quot; &gt; element that is applied to a Name property:
              Example for &lt;RegularQuery&gt; element that is applied to an ObjectId property:
              Example of a wildcard: "foo*" (matches all strings beginning with "foo")
              ExcludeQuery element defines a cmdlet parameter that limits which objects will be processed by the cmdlet
              If AllowGlobbing attribute is ommited then its value is based on the type of the filtered property.
              If this parameter is ommited, then the cmdlet parameter belongs to all parameter sets.
              Language-Tag = Primary-tag *( "-" Subtag )
              MaxValueQuery element defines a cmdlet parameter that limits which objects will be processed by the cmdlet
              MinValueQuery element defines a cmdlet parameter that limits which objects will be processed by the cmdlet
              Primary-tag = 1*8ALPHA
              RegularQuery element defines a cmdlet parameter that limits which objects will be processed by the cmdlet
              Subtag = 1*8ALPHA
              that the cmdlet parameter should belong to.
            &lt;/Property&gt;
            &lt;Property PropertyName=&quot;Name&quot;&gt;
            </xsd:annotation>
            </xsd:complexType>
            </xsd:documentation>
            </xsd:element>
            </xsd:extension>
            </xsd:key>
            </xsd:unique>
            <xsd:annotation>
            <xsd:complexType>
            <xsd:documentation xml:lang="en-us">
            <xsd:element name="AllowedValue" type="xsd:string" maxOccurs="unbounded" />
            <xsd:element name="Association" type="cps:Association" maxOccurs="unbounded" />
            <xsd:element name="Cmdlet" type="cps:InstanceCmdletMetadata" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="Cmdlet" type="cps:StaticCmdletMetadata">
            <xsd:element name="CmdletOutputMetadata" type="cps:CmdletOutputMetadata" minOccurs="0" />
            <xsd:element name="CmdletParameterMetadata" type="cps:CmdletParameterMetadataForGetCmdletFilteringParameter" />
            <xsd:element name="Data" maxOccurs="unbounded">
            <xsd:element name="GetCmdlet" type="cps:GetCmdletMetadata" minOccurs="0" />
            <xsd:element name="GetCmdletParameters" type="cps:GetCmdletParameters">
            <xsd:element name="Option" type="cps:QueryOption" maxOccurs="unbounded" />
            <xsd:element name="Property" type="cps:PropertyMetadata" maxOccurs="unbounded" />
            <xsd:element name="Type" type="cps:TypeMetadata" />
            <xsd:element name="Value" maxOccurs="unbounded">
            <xsd:extension base="cps:CommonCmdletMetadata">
            <xsd:key name="UniqueParameterNamesWithinMethod">
            <xsd:key name="UniqueParameterNamesWithinStaticMethod">
            <xsd:unique name="UniquePositionWithinMethodParameters">
            <xsd:unique name="UniquePositionWithinStaticMethodParameters">
            DefaultNoun element specified the default noun for cmdlets defined in this document.
            Version element is semantically equivalent to the ModuleVersion entry in a module manifest (psd1) file.
           If CmdletParameterSet is ommited, then the name of the cmdlet parameter set is auto-generated based on the name of the method.
           RFC-1766 defines the format of a culture identifier as:
          "cim:CreateInstance" is mapped to the WMI's static, intrinsic CreateInstance method.  Names of method parameters have to map to names of properties.
          "cim:DeleteInstance" is mapped to the WMI's instance, intrinsic DeleteInstance method.  All method parameters are ignored.
          "cim:ModifyInstance" is mapped to the WMI's instance, intrinsic ModifyInstance method.  Names of method parameters have to map to names of properties.
          </xsd:annotation>
          </xsd:attribute>
          </xsd:choice>
          </xsd:complexContent>
          </xsd:documentation>
          </xsd:element>
          </xsd:sequence>
          <xsd:annotation>
          <xsd:attribute name="BitwiseFlags" type="xsd:boolean" use="optional">
          <xsd:attribute name="EnumName" type="cps:EnumTypeName" use="required">
          <xsd:attribute name="Max" type="xsd:integer" use="required" />
          <xsd:attribute name="Max" type="xsd:nonNegativeInteger" use="required" />
          <xsd:attribute name="Min" type="xsd:integer" use="required" />
          <xsd:attribute name="Min" type="xsd:nonNegativeInteger" use="required" />
          <xsd:attribute name="UnderlyingType" type="cps:PowerShellTypeIdentifier" use="optional">
          <xsd:choice maxOccurs="unbounded">
          <xsd:complexContent>
          <xsd:documentation xml:lang="en-us">
          <xsd:documentation>
          <xsd:element name="CmdletOutputMetadata" type="cps:CmdletOutputMetadata" minOccurs="0" />
          <xsd:element name="CmdletParameterMetadata" type="cps:CmdletParameterMetadataForInstanceMethodParameter" minOccurs="0" />
          <xsd:element name="CmdletParameterMetadata" type="cps:CmdletParameterMetadataForStaticMethodParameter" minOccurs="0" />
          <xsd:element name="Parameters" minOccurs="0">
          <xsd:field xpath="@Aliases" />
          <xsd:field xpath="@Name" />
          <xsd:field xpath="@PropertyName" />
          <xsd:field xpath="@PSName" />
          <xsd:selector xpath=".//cps:CmdletParameterMetadata" />
          <xsd:selector xpath=".//cps:Data" />
          <xsd:selector xpath=".//cps:Property" />
          <xsd:selector xpath=".//cps:Value" />
          <xsd:sequence>
          Aliases attribute specifies a white-space separated list of aliases for the cmdlet parameter.
          Aliases attribute specifies a white-space separated list of aliases for the cmdlet.
          and provide descriptive error message if it cannot invoke the WMI provider - i.e. if the client attempts to use a non-existant method, property or parameter).
          Association attribute is equivalent to the associationClassName parameter of EnumerateAssociatedInstances method of Microsoft.Management.Infrastructure.CimSession class.
          Association attribute specifies the name of the association between the cmdlet argument and the instances the cmdlet acts against.
          before cmdlet parameters defined under Method element. 
          ClassName attribute specified the class that the cmdlets work against.
          ClassVersion attribute describes the version of the implementation of the class from the ClassName attribute.
          cmdlet invocations into queries and method invocations.  
          CmdletAdapter attribute specifies which .NET class is responsible for translating
          ConfirmImpact attribute determines the default -Confirm and -WhatIf behavior.
          ConfirmImpact attribute is equivalent to the ConfirmImpact property of System.Management.Automation.CmdletAttribute.
          ConfirmImpact attribute specifies the impact of the cmdlet.
          Contents of the ClassVersion attribute are passed without interpretation inside
          ETSType attribute is equivalent to System.Management.Automation.PSTypeNameAttribute.
          ETSType attribute specifies the PowerShell type name of the type of the cmdlet parameter.
          Example:
          Example: "http://go.microsoft.com/fwlink/?LinkID=113309"
          Example: "Microsoft.Management.Infrastructure.CimInstance#Win32_Process"
          Example: "root/cimv2/Win32_Process"
          Example: "System.String"
          HelpUri attribute is equivalent to the HelpUri property of System.Management.Automation.CmdletAttribute
          HelpUri attribute is used for the following help experience: Get-Help -Online &lt;cmdlet name&gt;
          HelpUri attribute specifies the URI with the help content.
          If Position attribute is ommited, then the cmdlet parameter cannot be used positionally - the user always has to explicitly specify the name of the parameter.
          If PSName attribute is ommited then it is based on the contents of PropertyName or ParameterName or OptionName attribute (whichever one is applicable).
          If the Noun attribute is ommited, then contents of the DefaultNoun element are used.
          If this attribute is ommited, then by default the cmdlets are translated into WMI queries and method invocations. 
          If WMI infrastructure can invoke the WMI provider, then the provider is responsible for further versioning decisions.
          MethodName attribute specified the name of the method that the cmdlet invocations are mapped to.
          Noun attribute is equivalent to the nounName parameter of System.Management.Automation.CmdletAttribute constructor.
          Noun attribute specifies the noun of the cmdlet.
          Please refer to Cmdlet Design Guidelines for a list of approved verbs.
          Position attribute specifies position of the cmdlet parameter.
          Presence of the ConfirmImpact attribute is equivalent to setting to true the SupportsShouldProcess property of System.Management.Automation.CmdletAttribute.
          PSName attribute specifies the name of a cmdlet parameter.
          PSType attribute specifies the name of the .NET type of the cmdlet parameter.
          ResultRole attribute is equivalent to the resultRole parameter of EnumerateAssociatedInstances method of Microsoft.Management.Infrastructure.CimSession class.
          ResultRole attribute specifies the role of the cmdlet argument (in the association between the cmdlet argument and the instances the cmdlet acts against).
          ResultRole should be the name of a property on the class specified in the Association attribute.
          Some method names are recognized and handled in a special way. 
          SourceRole attribute is equivalent to the sourceRole parameter of EnumerateAssociatedInstances method of Microsoft.Management.Infrastructure.CimSession class.
          SourceRole attribute specifies the role of the cmdlet argument (in the association between the cmdlet argument and the instances the cmdlet acts against).
          SourceRole should be the name of a property on the class specified in the Association attribute.
          System may change relative parameter positions to guarantee that cmdlet parameters defined by GetCmdletParameters element are always
          The class specified here has to be derived from Microsoft.PowerShell.Cmdletization.CmdletAdapter class.
          Verb attribute is equivalent to the verbName parameter of System.Management.Automation.CmdletAttribute constructor.
          Verb attribute specifies the verb of the cmdlet.
          WMI infrastructure will compare this value against the contents of the [ClassVersion] qualifier of the WMI class
          WMI's custom operation option named "MI_OPERATIONOPTIONS_PROVIDERVERSION".
        - To allow the Get cmdlet to have different GetCmdletParameters than other cmdlets (for example to make all parameters optional for Get cmdlet, but make some parameters mandatory for other cmdlets)
        - To change the verb of the cmdlet (for example to use &quot;Find&quot; where appropriate)
        - To define aliases for the cmdlet
        - To use obsolete attribute for the cmdlet
        </xsd:annotation>
        </xsd:attribute>
        </xsd:complexType>
        </xsd:documentation>
        </xsd:element>
        </xsd:key>
        </xsd:sequence>
        </xsd:unique>
        <xsd:annotation>
        <xsd:attribute name="AllowGlobbing" type="xsd:boolean" use="optional">
        <xsd:attribute name="CmdletParameterSet" type="cps:ParameterSetName" use="optional">
        <xsd:attribute name="CmdletParameterSets" type="cps:NonEmptyListOfParameterSetNames" use="optional">
        <xsd:attribute name="ErrorOnNoMatch" type="xsd:boolean" use="optional" />
        <xsd:attribute name="ValueFromPipeline" type="xsd:boolean" use="optional" />
        <xsd:attribute name="ValueFromPipelineByPropertyName" type="xsd:boolean" use="optional" />
        <xsd:complexType>
        <xsd:documentation xml:lang="en-us">
        <xsd:documentation>
        <xsd:element name="Class" type="cps:ClassMetadata" />
        <xsd:element name="Enums" type="cps:EnumMetadata" minOccurs="0" />
        <xsd:element name="ExcludeQuery" type="cps:WildcardablePropertyQuery">
        <xsd:element name="MaxValueQuery" type="cps:PropertyQuery">
        <xsd:element name="MinValueQuery" type="cps:PropertyQuery">
        <xsd:element name="RegularQuery" type="cps:WildcardablePropertyQuery">
        <xsd:key name="PropertyNameUnderQueryableProperties">
        <xsd:key name="UniqueNamesOfEnumValues">
        <xsd:key name="UniqueNamesOfPrivateDataElements">
        <xsd:list itemType="cps:Alias" />
        <xsd:list itemType="cps:ParameterSetName" />
        <xsd:sequence>
        <xsd:unique name="UniqueCmdletParameterAliasesUnderGetCmdletParametersElement_2">
        <xsd:unique name="UniqueCmdletParameterAliasesUnderGetCmdletParametersElement_3">
        <xsd:unique name="UniqueCmdletParameterNamesUnderGetCmdletParametersElement_2">
        <xsd:unique name="UniqueCmdletParameterNamesUnderGetCmdletParametersElement_3">
        <xsd:unique name="UniqueCmdletParameterNamesUnderMethodElement_1">
        <xsd:unique name="UniqueCmdletParameterNamesUnderMethodElement_2">
        1) cmdlet parameters defined through GetCmdletParameters elements
        2) cmdlet parameters mapped to input parameters of the method defined by Method element
        All defined components MUST be integers greater than or equal to 0.
        Cmdlet element under InstanceCmdlets element defines a cmdlet that wraps an instance method.
        Cmdlet element under StaticCmdlets element defines a cmdlet that wraps one or more static methods.
        Cmdlet parameters of a cmdlet defined this way are a sum of 
        Cmdlet parameters of a cmdlet defined this way are mapped to input parameters of methods defined by Method element
        Each wrapped method corresponds to a parameter set of the cmdlet.
        For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then string representation of the version would be "6.2.1.3".
        GetCmdlet element defines cmdlet metadata for the cmdlet that queries for object instances.
        GetCmdlet element is typically used for one of the following items:
        GetCmdletParameters element defines cmdlet parameters used to select object instances.
        If GetCmdlet element is ommited, then the default verb (&quot;Get&quot;) and noun (based on &lt;DefaultNoun&gt; element) are going to be used.
        Represents a version number that consist of two to four components: major, minor, build, and revision.
        String representation of a version is "major.minor[.build[.revision]]" (optional components are shown in square brackets).
   - ' ' - unspecified in the docs, but apparently allowed (i.e. between NamespaceTypeName and AssemblyNameSpec in the TypeName production
      <!-- ValidatePattern omitted - CDXML does not allow DOS attacks against PS client --> 
      <!-- ValidateScript omitted - CDXML does not allow execution of arbitrary code in PS client --> 
      </xsd:annotation>
      </xsd:choice>
      </xsd:documentation>
      </xsd:element>
      </xsd:extension>
      </xsd:sequence>
      </xsd:simpleType>
      <xsd:annotation>
      <xsd:choice maxOccurs="unbounded">
      <xsd:documentation xml:lang="en-us">
      <xsd:documentation>
      <xsd:element name="AllowEmptyCollection" minOccurs="0" />
      <xsd:element name="AllowEmptyString" minOccurs="0" />
      <xsd:element name="AllowNull" minOccurs="0" />
      <xsd:element name="AssociatedInstance">
      <xsd:element name="CmdletAdapterPrivateData" minOccurs="0">
      <xsd:element name="CmdletMetadata" type="cps:CommonCmdletMetadata" />
      <xsd:element name="CmdletMetadata">
      <xsd:element name="CmdletParameterMetadata" type="cps:CmdletParameterMetadataForGetCmdletFilteringParameter" minOccurs="0" />
      <xsd:element name="CmdletParameterMetadata" type="cps:CmdletParameterMetadataForGetCmdletParameter" minOccurs="0" />
      <xsd:element name="DefaultNoun" type="cps:Noun">
      <xsd:element name="Enum" maxOccurs="unbounded">
      <xsd:element name="ErrorCode" minOccurs="0">
      <xsd:element name="GetCmdletParameters" type="cps:GetCmdletParameters" minOccurs="0">
      <xsd:element name="InstanceCmdlets" minOccurs="0">
      <xsd:element name="Method" type="cps:InstanceMethodMetadata">
      <xsd:element name="Method" type="cps:StaticMethodMetadata" maxOccurs="unbounded">
      <xsd:element name="Obsolete" type="cps:ObsoleteAttributeMetadata" minOccurs="0" />
      <xsd:element name="QueryableAssociations" minOccurs="0">
      <xsd:element name="QueryableProperties" minOccurs="0">
      <xsd:element name="QueryOptions" minOccurs="0">
      <xsd:element name="ReturnValue" minOccurs="0">
      <xsd:element name="StaticCmdlets" minOccurs="0">
      <xsd:element name="Type" type="cps:TypeMetadata" />
      <xsd:element name="ValidateCount" minOccurs="0">
      <xsd:element name="ValidateLength" minOccurs="0">
      <xsd:element name="ValidateNotNull" minOccurs="0" />
      <xsd:element name="ValidateNotNullOrEmpty" minOccurs="0" />
      <xsd:element name="ValidateRange" minOccurs="0">
      <xsd:element name="ValidateSet" minOccurs="0">
      <xsd:element name="Version" type="cps:VersionString">
      <xsd:enumeration value="High" />
      <xsd:enumeration value="Low" />
      <xsd:enumeration value="Medium" />
      <xsd:enumeration value="None" />
      <xsd:extension base="cps:CmdletParameterMetadata">
      <xsd:extension base="cps:CmdletParameterMetadataForGetCmdletParameter">
      <xsd:extension base="cps:CommonMethodMetadata">
      <xsd:extension base="cps:CommonMethodParameterMetadata">
      <xsd:extension base="cps:PropertyQuery">
      <xsd:field xpath="@Aliases" />
      <xsd:field xpath="@EnumName" />
      <xsd:maxLength value="100" />
      <xsd:maxLength value="1000" />
      <xsd:maxLength value="200" />
      <xsd:minLength value="1" />
      <xsd:pattern value="&clrTypeRegex;" />
      <xsd:pattern value="&csharpIdentifierRegex;" />
      <xsd:pattern value="&csharpNamespaceRegex;" />
      <xsd:pattern value="&powerShellAliasRegex;" />
      <xsd:pattern value="&powerShellCmdletParameterRegex;" /> 
      <xsd:pattern value="&powerShellNounRegex;" />
      <xsd:pattern value="&powerShellParameterSetRegex;" /> 
      <xsd:pattern value="&powerShellVerbRegex;" />
      <xsd:pattern value="[12]?[0-9]{1,9}\.[12]?[0-9]{1,9}(\.[12]?[0-9]{1,9}(\.[12]?[0-9]{1,9})?)?" />
      <xsd:selector xpath=".//cps:CmdletMetadata" />
      <xsd:selector xpath=".//cps:Enums/cps:Enum" />
      <xsd:sequence>
      <xsd:simpleType>
      A ".cdxml" file can be imported into a PowerShell session directly by Import-Module cmdlet,
      a module manifest (a ".psd1" file) and then importing the ".psd1" file by Import-Module cmdlet.
      A PowerShell CIM Module defines a set of cmdlets that interact with a CIM class.      
      A PowerShell CIM Module needs to be saved in a file with ".cdxml" extension.
      or by referring to the ".cdxml" file from NestedModules or RootModule entry of
   - '-' - required for Culture property of an Assembly.  
      This schema defines the format of PowerShell CIM Modules.
   - '&amp;' - part of ReferenceTypeSpec production in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
   - '&quot;' - unspecified in the docs, but used in the examples at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx (i.e. Culture="")
   - '*' - part of ReflectionDimension production in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
   - ',' - part of ReflectionDimension and TypeName productions in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
   - '.' - part of ReflectionDimension and NamespaceTypeName productions in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
   - '[' and ']' - part of ArrayTypeSpec production in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
   - '\' - an escape character specified at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
   - '_' (ASCII 95) is the only character in \p{Pc} class out of the first 0..255 characters
   - '+' - part of NestedTypeName production in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
    </xsd:annotation>
    </xsd:attribute>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:documentation>
    </xsd:key>
    </xsd:restriction>
    </xsd:sequence>
    </xsd:unique>
    <xsd:annotation>
    <xsd:attribute name="Aliases" type="cps:NonEmptyListOfAliases" use="optional">
    <xsd:attribute name="Association" type="cps:NonEmptyString" use="required">
    <xsd:attribute name="ClassName" type="cps:NonEmptyString" use="required">
    <xsd:attribute name="ClassVersion" type="cps:NonEmptyString" use="optional">
    <xsd:attribute name="CmdletAdapter" type="cps:PowerShellTypeIdentifier" use="optional">
    <xsd:attribute name="ConfirmImpact" type="cps:ConfirmImpact" use="optional">
    <xsd:attribute name="DefaultCmdletParameterSet" type="cps:ParameterSetName" use="optional" />
    <xsd:attribute name="DefaultValue" type="xsd:string" use="optional" />
    <xsd:attribute name="ETSType" type="cps:NonEmptyString" use="optional">
    <xsd:attribute name="HelpUri" type="xsd:anyURI" use="optional">
    <xsd:attribute name="IsMandatory" type="xsd:boolean" use="optional" />
    <xsd:attribute name="Message" type="cps:ObsoleteMessage" use="optional" />
    <xsd:attribute name="MethodName" type="cps:NonEmptyString" use="required">
    <xsd:attribute name="Noun" type="cps:Noun" use="optional">
    <xsd:attribute name="OptionName" type="cps:NonEmptyString" use="required" />
    <xsd:attribute name="ParameterName" type="cps:NonEmptyString" use="required" />
    <xsd:attribute name="Position" type="xsd:nonNegativeInteger" use="optional">
    <xsd:attribute name="PropertyName" type="cps:NonEmptyString" use="required" />
    <xsd:attribute name="PSName" type="cps:CmdletOutputName" use="optional" />
    <xsd:attribute name="PSName" type="cps:CmdletParameterName" use="optional">
    <xsd:attribute name="PSType" type="cps:PowerShellTypeIdentifier" use="required">
    <xsd:attribute name="ResultRole" type="cps:NonEmptyString" use="required">
    <xsd:attribute name="SourceRole" type="cps:NonEmptyString" use="required">
    <xsd:attribute name="Verb" type="cps:Verb" use="required">
    <xsd:complexContent>
    <xsd:complexType>
    <xsd:documentation xml:lang="en-us">
    <xsd:key name="UniqueNamesOfEnums">
    <xsd:restriction base="xsd:string">
    <xsd:restriction>
    <xsd:sequence>
    <xsd:unique name="UniqueCmdletAliases">
   - '=' - part of AssemblyProperty production in BNF at http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
    elementFormDefault="qualified"
   - No characters in the first 0..255 characters belong to \p{Cf}, \p{Mn}, \p{Mc}
    targetNamespace="http://schemas.microsoft.com/cmdlets-over-objects/2009/11"
    xmlns:cps="http://schemas.microsoft.com/cmdlets-over-objects/2009/11"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   but those characters classes seem risky wrt code injection attacks, so they were
   removed above.  
  <!-- # CLASS #################################################### -->
  <!-- # CMDLETS ################################################## -->
  <!-- # COMMON PROPERTIES/PARAMETERS METADATA##################### -->
  <!-- # ENUM ##################################################### -->
  <!-- # METHODS ################################################## -->
  <!-- # PROPERTIES METADATA ###################################### -->
  <!-- # SIMPLE TYPES ############################################# -->
  <!-- ############################################################ -->
  <!ENTITY clrTypeRegex "[&csharpIdentifierOtherCharacterRegex;&clrTypeSpecialCharacterRegex;]{1,1000}">
  <!ENTITY clrTypeSpecialCharacterRegex "\,\=\ \+\&amp;\*\[\]\.\\\-\&quot;">
  <!ENTITY csharpIdentifierFirstCharacterRegex "&csharpIdentifierLetterCharacterRegex;_">
  <!ENTITY csharpIdentifierLetterCharacterRegex "\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}">
  <!ENTITY csharpIdentifierOtherCharacterRegex "&csharpIdentifierLetterCharacterRegex;\p{Nd}_">
  <!ENTITY csharpIdentifierRegex "[&csharpIdentifierFirstCharacterRegex;][&csharpIdentifierOtherCharacterRegex;]{0,100}">
  <!ENTITY csharpNamespaceRegex "(&csharpIdentifierRegex;)(\.&csharpIdentifierRegex;){0,10}">
  <!ENTITY powerShellAliasCharacterRegex "&powerShellNounCharacterRegex;_-">
  <!ENTITY powerShellAliasRegex "[&powerShellAliasCharacterRegex;]{1,100}">
  <!ENTITY powerShellCmdletParameterCharacterRegex "&powerShellNounCharacterRegex;_">
  <!ENTITY powerShellCmdletParameterRegex "[&powerShellCmdletParameterCharacterRegex;]{1,100}">
  <!ENTITY powerShellNounCharacterRegex "&powerShellVerbCharacterRegex;\p{Nd}">
  <!ENTITY powerShellNounRegex  "[&powerShellNounCharacterRegex;]{1,100}">
  <!ENTITY powerShellParameterSetRegex "[^,;]{1,100}">
  <!ENTITY powerShellVerbCharacterRegex "\p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Lm}">
  <!ENTITY powerShellVerbRegex  "[&powerShellVerbCharacterRegex;]{1,100}">
  </xsd:annotation>
  </xsd:complexType>
  </xsd:element>
  </xsd:simpleType>
  <xsd:annotation>
  <xsd:complexType name="Association">
  <xsd:complexType name="ClassMetadata">
  <xsd:complexType name="CmdletOutputMetadata">
  <xsd:complexType name="CmdletParameterMetadata">
  <xsd:complexType name="CmdletParameterMetadataForGetCmdletFilteringParameter">
  <xsd:complexType name="CmdletParameterMetadataForGetCmdletParameter">
  <xsd:complexType name="CmdletParameterMetadataForInstanceMethodParameter">
  <xsd:complexType name="CmdletParameterMetadataForStaticMethodParameter">
  <xsd:complexType name="CommonCmdletMetadata">
  <xsd:complexType name="CommonMethodMetadata">
  <xsd:complexType name="CommonMethodParameterMetadata">
  <xsd:complexType name="EnumMetadata">
  <xsd:complexType name="GetCmdletMetadata">
  <xsd:complexType name="GetCmdletParameters">
  <xsd:complexType name="InstanceCmdletMetadata">
  <xsd:complexType name="InstanceMethodMetadata">
  <xsd:complexType name="InstanceMethodParameterMetadata">
  <xsd:complexType name="ObsoleteAttributeMetadata">
  <xsd:complexType name="PropertyMetadata">
  <xsd:complexType name="PropertyQuery">
  <xsd:complexType name="QueryOption">
  <xsd:complexType name="StaticCmdletMetadata">
  <xsd:complexType name="StaticMethodMetadata">
  <xsd:complexType name="StaticMethodParameterMetadata">
  <xsd:complexType name="TypeMetadata">
  <xsd:complexType name="WildcardablePropertyQuery">
  <xsd:element name="PowerShellMetadata">
  <xsd:simpleType name="Alias">
  <xsd:simpleType name="CmdletOutputName">
  <xsd:simpleType name="CmdletParameterName">
  <xsd:simpleType name="ConfirmImpact">
  <xsd:simpleType name="EnumTypeName">
  <xsd:simpleType name="EnumValueName">
  <xsd:simpleType name="NonEmptyListOfAliases">
  <xsd:simpleType name="NonEmptyListOfParameterSetNames">
  <xsd:simpleType name="NonEmptyString">
  <xsd:simpleType name="Noun">
  <xsd:simpleType name="ObsoleteMessage">
  <xsd:simpleType name="ParameterSetName">
  <xsd:simpleType name="PowerShellTypeIdentifier">
  <xsd:simpleType name="Verb">
  <xsd:simpleType name="VersionString">
 - the C# spec allows \p{Pc}\p{Cf}\p{Mn}\{Mc} in csharpIdentifierOtherCharacterRegex, 
 clrTypeRegex and clrTypeSpecialCharacterRegex are based on http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx
 clrTypeSpecialCharacterRegex includes the following characters;
 csharpIdentifierRegex based on C# Language Specification 3.0, section 2.4.2 Idenfifiers
 Restarting computer {0}
 Restarting computers...
 Service '{1} ({0})' stop failed.
 Set file '{0}' to the clipboard.
!Cannot connect to CIM server. {0}
!Name: {0} Provider: {1} Root: {2}
!This program cannot be run in DOS mode.
!Waiting for WinRM connectivity...
"Append {0} files to the clipboard.
"Service '{1} ({0})' resume failed.
"Set string '{0}' to the clipboard.
"SystemRestore service is disabled.
"The path specified does not exist.
################################################################### -->
#Append file '{0}' to the clipboard.
#Blob
#Creating a system restore point ...
#GUID
#Loading network adapter information
#Service '{1} ({0})' suspend failed.
#Strings
#Waiting for the restart to begin...
$CIM method {1} on the {0} CIM object
$Failed to start service '{1} ({0})'.
$Loading operating system information
%Append string '{0}' to the clipboard.
%Running the following operation: {0}.
%The specified parameter is not valid.
&All of the contents of the Recycle Bin
&Error adding '{0}' to the network: {1}
&OpenB
(Enable the {0} and restart the computer.
)Do you want to delete the specified item?
)The AsJob Parameter Set is not supported.
*Error removing '{0}' from the network: {1}
*Waiting for service '{1} ({0})' to stop...
,The user does not have sufficient privilege.
,Waiting for service '{1} ({0})' to resume...
.text
.Waiting for Windows PowerShell connectivity...
/Cannot remove drive '{0}' because it is in use.
/The {0} parameter is not supported for CoreCLR.
/The path to the "{1}" computer cannot be found.
:All of the contents of the Recycle Bin for the '{0}' drive
:Cannot move item because the item at '{0}' does not exist.
:Raw can only be combined with Text or FileDropList format.
:The "{2}" source is already registered with the "{0}" log.
;Cannot find any control panel item with the given name {0}.
;Cannot remove computer '{0}' because it is not in a domain.
;The {0} cmdlet is not supported on this version of Windows.
;The user does not have access to the requested information.
?Cannot find any control panel item with the given category {0}.
?Do you want to remove the "{0}" source from the "{1}" computer?
@.reloc
@Parameters "{0}" and "{1}" cannot be specified at the same time.
@The changes will take effect after you restart the computer {1}.
@The system restore infrastructure cannot create a restore point.
@wPG6lRqg
[Parameter WsmanAuthentication should not be specified when the DCOM protocol is in use. {0}
[The parameters Timeout, For, and Delay are valid only when the parameter Wait is specified.
[The secure channel between the local computer and the domain {0} was successfully repaired.
\Are you sure you want to perform the Stop-Process operation on the following item: {0}({1})?
]Cannot find a process with the name "{0}". Verify the process name and call the cmdlet again.
]Skip computer '{0}' with new name '{1}' because the new name is the same as the current name.
_Cannot get domain information about the local computer because of the following exception: {0}.
_CorDllMain
`.rsrc
`Cannot establish the WMI connection to the computer '{0}' with the following error message: {1}.
`Failed to restart the computer {0}. Access rights {1} cannot be enabled for the calling process.
`Parameters DcomAuthentication and Impersonation cannot be specified with the WSMan protocol. {0}
{{|}}~[\]^:;<=>?@!"#$%^`()+/,
{0} ({1})
{0}"{1}"/
{0}: {1}
{The computer {0} is skipped. Fail to retrieve its LastBootUpTime via the WMI service with the following error message: {1}.
|The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.
~The command cannot disable System Restore on the {0} drive. You may not have sufficient permissions to perform this operation.
+Include System Drive in the list of Drives.
+Waiting for service '{1} ({0})' to start...
<!-- ##################################################################
<!DOCTYPE schema [
</xsd:schema>
<?xml version="1.0" encoding="utf-8"?>
<Do you want to remove the "{0}" log from the "{1}" computer?
<Module>
<xsd:schema 
=Cannot find any control panel item that has a canonical name.
=Computer name {0} cannot be resolved with the exception: {1}.
=The "{2}" source is already registered on the "{1}" computer.
=The time zone name '{0}' was not found on the local computer.f
=This functionality is not supported on this operating system.
>The computer has been restored to the specified restore point.
040904b0
0'Cannot access dependent services of '{1} ({0})'
0Cannot find any service with display name '{1}'.
0Cannot find any service with service name '{0}'.
0Html can only be combined with Html Text format.
0Testing connection to computer '{0}' failed: {1}
0The last attempt to restore the computer failed.
1. Verify that the target computer('{0}') is running.
10.0.17763.1
1The specified server name {0} cannot be resolved.
1This command cannot be run due to the error: {0}.
1Verifying that the computer has been restarted...
2. Specify full computer name of the target computer('{0}').
2Cannot enumerate the modules of the "{0}" process.
2Creating a system restore point... {0}% Completed.
3Cannot rename because item at '{0}' does not exist.
5Cannot move item because the item at '{0}' is in use.
5Cannot remove the item at '{0}' because it is in use.
5Cannot rename the item at '{0}' because it is in use.
5TextFormatType can only be combined with Text format.
5The CIM method returned the following error code: {0}
5The combined service types are not supported for now.
6Cannot find a process with the process identifier {1}.
6Cannot use transaction. The transaction has timed out.W
6The command is not supported on this operating system.
7Parameter {0} should be specified to compose the query.
7Specify a valid value for the number of retention days.
7The source name "{2}" does not exist on computer "{1}".
8The flag '{0}' is valid only if flag '{1}' is specified.
8The Log name "{0}" does not exist in the computer "{1}".
9Do you want to clear the "{0}" log on the computer "{1}"?
9The last attempt to restore the computer was interrupted.
9The Win32_OperatingSystem WMI object cannot be retrieved.
A new system restore point cannot be created because one has already been created within the past {0} minutes. The frequency of restore point creation can be changed by creating the DWORD value 'SystemRestorePointCreationFrequency' under the registry key 'HKLM\Software\Microsoft\Windows NT\CurrentVersion\SystemRestore'. The value of this registry key indicates the necessary time interval (in minutes) between two restore point creation. The default value is 1440 minutes (24 hours).
aCannot find any Control Panel item with the given name {0} that satisfies the specified category.
Access is denied. Try running the command again in a session that has been opened with elevated user rights (that is, Run as Administrator).
'Access to the "{1}" computer is denied.
AccessDenied
AccessIsDeniedJ
Add Content
AddComputerActionDomain
AddComputerActionWorkgroup
AddComputerToSameDomain/
AddComputerToSameWorkgroup
AddContentAction
AddContentTarget
After you leave the domain, you will need to know the password of the local Administrator account to log onto this computer. Do you wish to continue?
AppendClipboardContent
AppendMultipleFilesToClipboard'
AppendSingleFileToClipboardK
AThe {2} CIM method exposed by the {0} class on the {1} CIM server
AttachDebuggerReturnCode2
AttachDebuggerReturnCode21=
AttachDebuggerReturnCode3d
AttachDebuggerReturnCode8
AttachDebuggerReturnCode9
b{0}: A CimSession to the CIM server uses the DCOM protocol, which does not support the {1} switch.
bCannot find any Control Panel item that satisfies the specified category and has a canonical name.
BCannot stop service '{1} ({0})' because it has dependent services.
Begin
bThe attempt to repair the secure channel between the local computer and the domain {0} has failed.
bThis command cannot be run completely because the system cannot find all the information required.
Cannot find drive. A drive with the name '{0}' does not exist. Please run the '{1}' cmdlet to see the available Fixed drives in the system.
Cannot find the {0} class on the {1} CIM server.  Verify the value of the ClassName xml attribute in Cmdlet Definition XML and retry. Valid class name example: ROOT\cimv2\Win32_Process.
Cannot find the {2} output parameter of the {1} method of the {0} CIM object.  Verify the value of the ParameterName attribute in Cmdlet Definition XML and retry.
Cannot reset the secure channel password for the account of the local computer. The local computer is not currently part of a domain.
Cannot reset the secure channel password for the computer account in the domain. Operation failed with the following exception: {0}.
Cannot validate the time interval for restore point creation. It failed to retrieve the last restore point with the following error message: {0}.
CannotCreateRestorePointWarning
CannotFindMachineAccountFromDomain
CannotFindMachineAccountFromServer
CannotGetOperatingSystemObject
CannotRenameMultipleComputers
CannotResolveComputerName
CannotResolveServerName
CannotStarttheProcess
CannotWaitLocalComputer
CCannot enumerate the file version information of the "{0}" process.
cCannot find the requested hotfix on the '{0}' computer. Verify the input and run the command again.
CCannot stop process "{0} ({1})" because of the following error: {2}
CCIM query for instances of the {0} class on the {1} CIM server: {2}
CIM intrinsic type
CIM query for enumerating instances of the {0} class on the {1} CIM server, that are associated with the following instance: {2}
CimCmdletAdapter_DebugInquire
CimCmdletAdapter_RemoteDcomDoesntSupportExtendedSemantics
CimCmdletAdapter_WarningInquire
CimCmdletAdapter_WarningStop
CimConversion_CimIntrinsicValue
CimConversion_WqlQuery
CimJob_AssociationDescription
CimJob_BrokenSession
CimJob_ComputerNameConcatenationTemplate
CimJob_ErrorCodeFromMethod
CimJob_GenericCimFailure
CimJob_InvalidClassName
CimJob_InvalidOutputParameterName
CimJob_MethodDescription
CimJob_MismatchedTypeOfPropertyReturnedByQuery
CimJob_NotFound_ComplexCase
CimJob_NotFound_SimpleGranularCase_Equality
CimJob_NotFound_SimpleGranularCase_Wildcard
CimJob_SafeAssociationDescription
CimJob_SafeMethodDescription
CimJob_SafeQueryDescription
CimJob_SleepAndRetryVerboseMessage
CimJob_VerboseExecutionMessage
ClearEventLogWarning
Clearing Recycle Bin
ClearRecycleBinContent
ClearRecycleBinContentForDrive(
ClearRecycleBinProgressActivityd
ClearRecycleBinResources.en.resources
ClearRecycleBinStatusDescriptionByDrivez
ClearRecycleBinStatusDescriptionForAllDrives
ClipboardClearedp
ClipboardResources.en.resources
CmdletizationResources.en.resources
Commit
CommitAction
CompanyName
Completed.
Completed: {0}/{1}.
Computer '{0}' successfully joined the workgroup '{1}', but could not be renamed to '{2}' with the following error message: {3}.
Computer '{0}' was successfully joined to the new domain '{1}', but renaming it to '{2}' failed with the following error message: {3}.
Computer '{0}' was successfully unjoined from domain '{1}', but failed to join the new domain '{2}' with the following error message: {3}.
Computer '{0}' was successfully unjoined from the domain '{1}', but it failed to join the workgroup '{2}' with the following error message: {3}.
ComputerAccessDenied
ComputerInfoResources.en.resources
ComputerNamesAreEqual
ComputerNotInDomain
ComputerResources.en.resources
ConfirmStopProcess
ContradictParametersSpecified
ControlPanelItemCmdletNotSupported
ControlPanelResources.en.resources
Copyright (c) Microsoft Corporation.  All rights reserved.
Copyright (c) Microsoft Corporation. All rights reserved.
CopyToExistingPrompt 
Could not enable drive {0}.
-Could not get objects from namespace {0}. {1}
Could not register for event. The class name is invalid. Valid class names consist of letters, digits and the underscore character.
CouldNotAccessDependentServices
CouldNotDebugProcess
CouldnotEnumerateFileVer
CouldnotEnumerateModuleFileVer
CouldnotEnumerateModules
CouldNotNewService
CouldNotNewServiceDescription
CouldNotResumeService
CouldNotResumeServiceNotRunning
CouldNotResumeServiceNotSupported
CouldNotSetService
CouldNotSetServiceDescription
CouldNotStartService
CouldNotStopProcess
CouldNotStopService
CouldNotSuspendService
CouldNotSuspendServiceNotRunning
CouldNotSuspendServiceNotSupported
CreateAction
Current transaction9
DCannot debug process "{0} ({1})" because of the following error: {2}
DebuggerError
DeleteHasChildrenPrompt
DeletePrompt
Description
dException getting "Modules" or "FileVersion": "This feature is not supported for remote computers.".
DoubleComputerName
DriveNotFound
dThis command stopped operation because process "{0} ({1})" is not stopped in the specified time-out.
DuplicateEntry
ECannot find any Control Panel item with the given canonical name {0}.
eNo {2} objects found with property '{0}' equal to '{1}'.  Verify the value of the property and retry.
eNo {2} objects found with property '{0}' matching '{1}'.  Verify the value of the property and retry.
Error renaming '{0}': {1}
EService '{1} ({0})' cannot be created due to the following error: {2}
EService '{1} ({0})' cannot be resumed due to the following error: {2}
EService '{1} ({0})' cannot be started due to the following error: {2}
EService '{1} ({0})' cannot be stopped due to the following error: {2}
EThe command is not supported in this version of the operating system.
EventlogResources.en.resources
Failed to run {1}.  {0}
FailToConnectToComputer
FailToGetDomainInformation
FailToJoinDomainFromWorkgroup
FailToJoinNewDomainAfterUnjoinOldDomain
FailToJoinWorkGroup
FailToRename
FailToRenameAfterJoinDomain
FailToRenameAfterJoinWorkgroup
FailToResetPasswordOnDomain
FailToResetPasswordOnLocalMachine
FailToRetrieveLastRestorePoint
FailToSwitchFromDomainToWorkgroup
FailToTestSecureChannel
FailToUnjoinDomain
FFailed to stop the computer {0} with the following error message: {1}.
FileDescription
FileVersion
for all drives
for the '{0}' drive
fRetention days is valid only if the overflow action is "OverwriteOlder". Please change  and try again.
fService '{1} ({0})' cannot be resumed because the service does not support being suspended or resumed.
g' Bp
GService '{1} ({0})' cannot be suspended due to the following error: {2}
GThe number of new names is not equal to the number of target computers.
gThis command cannot be run because Redirection parameters cannot be used with UseShellExecute parameter
hCannot rename multiple computers. The NewName parameter is valid only if a single computer is specified.
HNo matching {1} objects found by {0}. Verify query parameters and retry.
HotFixResources.en.resources
HService '{1} ({0})' cannot be configured due to the following error: {2}
hService '{1} ({0})' cannot be suspended because the service does not support being suspended or resumed.
HThe registry key for the log "{0}" for source "{2}" could not be opened.
ICannot parse path because path '{0}' does not have a qualifier specified.
IFailed to restart the computer {0} with the following error message: {1}.
IncludeUserNameRequiresElevation
IncorrectNewNameNumber
InternalName
InvalidApplication
InvalidArgument
InvalidComputerNameFormat
InvalidDomainNameFormat
InvalidDrive
InvalidDriveNameFormat
InvalidDriveType
InvalidHtmlCombine
InvalidInput
InvalidJoinOptions
InvalidNewName
InvalidOverflowAction
InvalidParameterDCOMNotSupported
InvalidParameterForCoreClr
InvalidParameterForDCOM
InvalidParameterForWSMan
InvalidParameterSetAsJob
InvalidRawCombine
InvalidRestorePoint
InvalidStartProcess
InvalidTypeCombine
InvalidUri
InvalidUserError
iService '{1} ({0})' was created, but its description cannot be configured due to the following error: {2}
ItemNotFound
iThe class name {0} is invalid. Valid class names consist of letters, digits, '_', '?', '*', '-' and "[]".
iThis Windows PowerShell Snap-In contains management cmdlets that are used to manage Windows components.  
J@JuMM
JCannot find the computer account for the local computer in the domain {0}.
JCannot stop service '{1} ({0})' because it is dependent on other services.
JInvalid input. The following formats are supported: '{0}', '{1}' or '{2}'.
Join in domain '{0}'
Join in workgroup '{0}'
JoinNetworkFailed
jParameter WsmanAuthentication cannot be specified with DcomAuthentication or Impersonation parameters. {0}
jResetting the secure channel password for the local computer failed with the following error message: {0}.
JService '{1} ({0})' cannot be resumed because it is not currently running.
kCannot find any control panel item with the given canonical name {0} that satisfies the specified category.
KCannot find the Control Panel item based on the given instance of type {0}.
KFail to rename computer '{0}' to '{1}' due to the following exception: {2}.
KThe secure channel between the local computer and the domain {0} is broken.
kThere's no content in Clipboard or the content format is not compatible. Set input object to the Clipboard.
kThis command cannot attach the debugger to the process due to {0} because no default debugger is available.
L"The password of the secure channel between '{0}' and '{1}' has been reset."
lCannot copy because the specified destination already exists. Do you want to overwrite the existing content?
LCannot remove computer(s) from the domain because the local network is down.
lCannot verify the secure channel for the local computer. Operation failed with the following exception: {0}.
LDcomAuthentication is not supported. Please use WsmanAuthentication instead.
LDo you want to change the properties of the "{0}" log on the "{1}" computer?
LegalCopyright
LimitEventLogWarning
Loading BIOS information
Loading Computer information
Loading hot-patch information
Loading motherboard information
Loading processor information
Loading registry information
LoadingBiosInfo
LoadingComputerInfo
LoadingHotPatchInfo8
LoadingMotherboardInfoW
LoadingNetworkAdapterInfox
LoadingOperationSystemInfo
LoadingProcessorInfo
LoadingRegistryInfo
Local shutdown access rights
LocalShutdownPrivilege
Log "{0}" could not be read to completion due to the following error. This may have occurred because the log was cleared while still being read. {1}
LogDoesNotExist
LogReadError
LService '{1} ({0})' cannot be suspended because it is not currently running.
lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
LThe computer did not finish restarting within the specified time-out period.
Management PSSnapIn
ManagementMshSnapInResources.en.resources
Microsoft (R) Windows (R) Operating System
Microsoft Corporation
Microsoft CorporationZ
Microsoft.PowerShell.Commands.Management.resources
Microsoft.PowerShell.Commands.Management.resources.dll
MoveItemDoesntExist
MoveItemInUse
MParameter WsmanAuthentication cannot be specified with the DCOM protocol. {0}
mscoree.dll
MThe registry key for the log "{0}" could not be opened on the computer "{1}".
MultipleMatchingTimeZones
n0z!k
Namek
NavigationResources.en.resources
nComputer '{0}' failed to join domain '{1}' from its current workgroup '{2}' with following error message: {3}.
NeedAdminPrivilegeToResetPassword
NetBIOS name will be truncated.
NetworkDown
NetworkPathNotFound
New drive
NewDriveConfirmAction
NewDriveConfirmResourceTemplate
NewNameIsOldName
No matches found
NoAccess
NoAppendableClipboardContent
NoComputerNameWithFileVersion
NoControlPanelItemFoundForGivenCanonicalName=
NoControlPanelItemFoundForGivenCanonicalNameWithCategory
NoControlPanelItemFoundForGivenCategory
NoControlPanelItemFoundForGivenInstance
NoControlPanelItemFoundForGivenName
NoControlPanelItemFoundForGivenNameWithCategory
NoControlPanelItemFoundWithNullCanonicalName
NoControlPanelItemFoundWithNullCanonicalNameWithCategory
NoDebuggerFound
NoEntriesFound
NoPingResult
NoProcessFoundForGivenId
NoProcessFoundForGivenName
NoResorePoint
NoServiceFoundForGivenDisplayName
NoServiceFoundForGivenName
NoSupportForCombinedServiceType
NoSystemDrive
NotDisabled
NotEnabled
NotSupported
NotSupportedU
NotValidDrive
nParameters DcomAuthentication and Impersonation should not be specified when the WSMan protocol is in use. {0}
nThis command cannot be run because "{0}" and "{1}" are same. Give different inputs and Run your command again.
oAdministrator rights are required to reset the secure channel password on the local computer. Access is denied.
oAn object at the specified path {0} does not exist, or has been filtered by the -Include or -Exclude parameter.
OCannot add computer '{0}' to domain '{1}' because it is already in that domain.
OperationFailed
OriginalFilename
OSWritingError
PADPADP
PADPADP.
PADPADP>
PADPADPa
Parameter WsmanAuthentication cannot be specified with the DCOM protocol. Parameter WSManAuthentication is valid only when the WSMan protocol is used.
Parameter WsmanAuthentication is valid only if the WSMan protocol is used. Parameters DcomAuthentication (Authentication) and Impersonation are valid only if the DCOM protocol is used.
Parameter WsmanAuthentication is valid only when the WSMan protocol is used. Parameters DcomAuthentication and Impersonation are valid only when the DCOM protocol is used.
ParameterConfliction
ParameterNotSupported
ParameterUsage
ParsePathFormatError
Path: {0}
PathDoesNotExist
PermissionDenied
PrivilegeNotEnabled
Process is not terminated
ProcessNameForConfirmation
ProcessNotTerminated
ProcessResources.en.resources
ProductName
ProductVersion
ProgressActivity
ProgressStatusCompleted
ProgressStatusCreatingRestorePoint
Qjy#Rn4
qThe specified path is a container that has child items. Do you want to delete this container and its child items?
rCannot wait for the local computer to restart. The local computer is ignored when the Wait parameter is specified.
RedirectionParams
Remote shutdown access rights
RemoteShutdownPrivilege
Remove Drive
RemoveComputerConfirm
RemoveDriveConfirmAction
RemoveDriveConfirmResourceTemplate
RemoveDriveInUse
RemoveEventLogWarning
RemoveFailed
RemoveItemInUse
RemoveItemWithChildren
RemoveSourceWarning
RenameCommandWsmanAuthParamConflict
RenamedItemInUse
RenameFailed
RenameItemDoesntExist
RepairSecureChannelFail
RepairSecureChannelSucceed
ResetComputerMachinePassword
ResetComputerNotInDomain
Restart is complete
RestartComplete
RestartComputerAction
RestartcomputerFailed
RestartComputerInvalidParameter
RestartComputerSkipped
RestartMultipleComputersActivity
RestartNeeded
RestartSingleComputerActivity
RestoreFailed
RestoreInterrupted
RestorePointNotCreated
RestoreSuceess
ResumeServiceFailed
ResumingService
Rollback
RollbackAction
RThis command stopped operation of "{0} ({1})" because of the following error: {2}.
SCannot enumerate the modules and the file version information of the "{0}" process.
SCannot set the local time zone because the name '{0}' resolves to multiple entries.
sCannot stop service '{1} ({0})' because it has dependent services. It can only be stopped if the Force flag is set.
SecureChannelAlive
SecureChannelBroken
ServiceDisabled
ServiceHasDependentServices
ServiceHasDependentServicesNoForce
ServiceIsDependentOnNoForce
ServiceNameForConfirmation
ServiceResources.en.resources
SessionBasedWrapper_ShouldProcessVsJobConflict
Set {0} files to the clipboard.
Set Content
SetClipboardContent
SetContentAction
SetContentTarget
SetMultipleFilesToClipboard
SetSingleFileToClipboard
Skip computer '{0}' with new name '{1}' because the new name is not valid. The new computer name entered is not properly formatted. Standard names may contain letters (a-z, A-Z), numbers (0-9), and hyphens (-), but no spaces or periods (.). The name may not consist entirely of digits, and may not be longer than 63 characters.
SourceDoesNotExist
SourceExistInComp
SourceExistWithLog
StartingService
StartServiceFailed
SThe Uniform Resource Identifier (URI) cannot be null or empty. Provide a valid URI.
StopCommandAuthProtcolConflict
StopCommandParamMessage
StopCommandParamWSManAuthConflict
StopCommandWSManAuthProtcolConflict
StopcomputerFailed
StoppingService
StopServiceFailed
StringFileInfo
SuspendingService
SuspendServiceFailed
SystemRestoreNotSupported
SystemRestoreServiceDisabled
TCIM query for enumerating associated instance of the {0} class on the {1} CIM server
TestComputerNotInDomain
The {0} command cannot complete, because the {1} server is currently busy.  The command will be automatically resumed in {2:f2} seconds.
The Clipboard has been cleared.
The cmdlet does not fully support the Inquire action for debug messages.  Cmdlet operation will continue during the prompt.  Select a different action preference via -Debug switch or $DebugPreference variable, and try again.
The cmdlet does not fully support the Inquire action for warnings.  Cmdlet operation will continue during the prompt.  Select a different action preference via -WarningAction parameter or $WarningPreference variable, and try again.
The cmdlet does not fully support the Stop action for warnings.  Cmdlet operation will be stopped with a delay.  Select a different action preference via -WarningAction parameter or $WarningPreference variable, and try again.
The command cannot be used to configure the service '{0}' because access to computer '{1}' is denied. Run Windows PowerShell as admin and run your command again.
The command cannot restore the computer because "{0}" has not been set as valid restore point. Enter a valid restore point in the RestorePoint parameter, and then try again.
The command cannot turn off the restore computer infrastructure because the supplied drive is not valid. Enter a valid drive in the Drive parameter, and then try again.
The command cannot turn on the restore computer infrastructure on the specified computer because the supplied drive is not valid. Enter a valid drive in the Drive parameter, and then try again.
The drive with the name '{0}' is not a Fixed drive and does not support the Recyle Bin. Please run the '{1}' cmdlet to see the available Fixed drives in the system.
The following computer name is not valid: {0}. Make sure that the computer name is not longer than 255 characters, that it does not contain two or more consecutive dots, that it does not begin with a dot, that it does not contain only numeric characters, and that it does not contain any of the following characters:  
The 'IncludeUserName' parameter requires elevated user rights. Try running the command again in a session that has been opened with elevated user rights (that is, Run as Administrator).
The item at {0} has children and the Recurse parameter was not specified. If you continue, all children will be removed with the item. Are you sure you want to continue?
The NetBIOS name of the computer is limited to 15 bytes, which is 15 characters in this case. The NetBIOS name will be shortened to "{0}", which may cause conflicts under NetBIOS name resolution. Do you wish to continue?
The operation cannot be performed because the system restore APIs are not supported on the Advanced RISC Machine (ARM) platform.
The value specified for the NewComputerName parameter is the same as the value of the ComputerName parameter. Provide a different value for the NewComputerName parameter.
The value supplied for MaximumSize parameter has to be in the range of 64 KB to 4GB with an increment of 64 KB. Please enter a proper value and then retry.
This command cannot be run because either the parameter "{0}" has a value that is not valid or cannot be used with this command. Give a valid input and Run your command again.
This command cannot be run because the debugger cannot be attached to the process "{0} ({1})". Specify another process and Run your command.
This command cannot be run because the input "{0}" is not a valid Application.  Give a valid application and run your command again.
This command cannot be run due to error 1783. The possible cause of this error can be using of a non-existing user "{0}". Please give a valid user and run your command again.
This command cannot be run due to the following error: the service cannot be started because it is disabled or does not have enabled devices associated with it.
This command stopped operation because it cannot wait on 'System Idle' process. Specify another process and Run your command again.
TimeoutError
TimeZoneNameNotFoundU
TimeZoneResources.en.resources
TransactionResource
TransactionResources.en.resources
TransactionTimedOut
Translation
TruncateNetBIOSName
TruncateNetBIOSNameCaption
Try below options and Run the command again.
TService '{1} ({0})' description cannot be configured due to the following error: {2}
tThe command cannot locate the "{0}" restore point. Verify the "{0}" sequence number, and then try the command again.
TThis command cannot be run on target computer('{1}') due to following error: {0}.{2}
tThis command stopped operation because it cannot wait on itself. Specify another process and Run your command again.
UCannot add computer '{0}' to workgroup '{1}' because it is already in that workgroup.
Unknown failure.
uParameter WsmanAuthentication should not be specified with DcomAuthentication and Impersonation at the same time. {0}
UseShell
UThe parameter '{0}' is not supported for the cmdlet '{1}' on this edition of Windows.
v4.0.30319
ValueOutofRange
VarFileInfo
Vendor
VerbActionOpen
VerifyRebootStage
VFailed to join computer '{0}' to workgroup '{1}' with the following error message: {2}
Vp%%[
VS_VERSION_INFO
VThe secure channel between the local computer and the domain {0} is in good condition.
WaitForMultipleComputers
WaitForPowerShell
WaitForRestartToBegin
WaitForWinRM
WaitForWMI
-Waiting for service '{1} ({0})' to suspend...
Waiting for WMI connectivity...
WaitOnIdleProcess
WaitOnItself
WCannot find the computer account for the local computer from the domain controller {0}.
wCannot verify the secure channel password for the local computer. The local computer is not currently part of a domain.
WebServiceResources.en.resources
WmiFilterInvalidClass
WmiInvalidClassk
WmiMethodNameForConfirmation
WmiNamespaceConnect
WmiParameterMissing
WmiQueryFailure
WmiResources.en.resources
WQL literal
wType of {0} property ({1}) doesn't match the CIM type ({2}) associated with the type declared in Cmdlet Definition XML.
XFailed to unjoin computer '{0}' from domain '{1}' with the following error message: {2}.
Xml_cmdletsOverObjectsXsd
XThe specified path is not a valid win32 application. Try again with the UseShellExecute.
zCIM cmdlets do not support the {0} parameter together with the AsJob parameter.  Remove one of these parameters and retry.
zThe domain in computer name '{0}' is not valid. Make sure that the domain exists and that the name is a valid domain name.
